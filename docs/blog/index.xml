<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Trent Nelson</title>
<link>https://trent.me/blog/</link>
<atom:link href="https://trent.me/blog/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.6.40</generator>
<lastBuildDate>Fri, 07 Feb 2025 06:27:03 GMT</lastBuildDate>
<item>
  <title>DRAFT: PyTorch and Python Free-Threading</title>
  <dc:creator>Trent Nelson</dc:creator>
  <link>https://trent.me/blog/posts/2025-xx-xx-pytorch-and-python-free-threading/</link>
  <description><![CDATA[ 




<p>This blog post is sponsored in part by <a href="https://meta.com">Meta</a> in collaboration with <a href="https://quansight.com">Quansight</a> and <a href="https://openteams.com">OpenTeams</a>.</p>
<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Python 3.13, released in October 2024, is the first version of Python to introduce support for a “no-GIL” <em>free-threaded</em> mode, per <a href="https://peps.python.org/pep-0703/">PEP-703 Making the Global Interpreter Lock Optional in CPython</a>, unlocking the ability for multiple Python threads to run simultaneously.</p>
<p>This allows, for the first time since the language’s inception in December 1989, a single Python process to saturate all CPU cores in parallel with pure Python code (i.e.&nbsp;not farming out to extension modules written in C, C++, or, more recently, Rust).</p>
<p>A handful of the <a href="https://peps.python.org/pep-0703/#motivation">motivations</a> captured in that PEP opine on how the GIL impedes Python AI workflows, particularly as it relates to GPU programming.</p>
<p>This blog post explores what can be done with <a href="https://pytorch.org">PyTorch</a> now with the new free-threaded version of Python, specifically focusing on run-time inference on transformer-based generative models.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>I didn’t focus on how <em>training</em> PyTorch models might look in the new free-threaded Python world for a couple of reasons.</p>
<p>Primarily, training is a lot more complex if you’re involving multiple nodes—as gradients need to be carefully synchronized at critical points, for example—and is well outside the scope of a simple blog post.</p>
<p>Additionally, there’s already a huge body of existing work tackling multi-node training in PyTorch by way of the <a href="https://pytorch.org/tutorials/intermediate/ddp_tutorial.html">Distributed Data Parallel</a>, <code>multiprocessing</code>-based facilities exposed by <a href="https://pytorch.org/tutorials/intermediate/dist_tuto.html"><code>torch.distributed</code></a>.</p>
<p>Whereas, on the flip side, no one has really explored what parallel inference might look like in a single-threaded Python because the GIL has prevented that from even being an option until now.</p>
</div>
</div>
</section>
<section id="getting-started" class="level1">
<h1>Getting Started</h1>
<p>All of this work was done on Linux (Ubuntu 22.04) with Python 3.13t, PyTorch 2.6, and CUDA 12.6.</p>
<p>Full source code is provided to everything captured in this post. It is worth noting that in a few cases, I am rolling my own solutions for things that have existing solutions in the broader Python ecosystem. For example, in the tail end of the post, I leverage a multi-threaded <code>asyncio</code>-based HTTP server I wrote instead of using existing solutions like <a href="https://fastapi.tiangolo.com/">FastAPI</a>.</p>
<p>The reason for this is that, as free-threaded Python is still in its infancy, a lot of packages do not work with it yet, especially those that rely on Cython, C or C++ code, or Rust.</p>
<p>In fact, Rust dependencies are particularly problematic due to the proliferation of Python projects leveraging <a href="https://github.com/PyO3/pyo3">PyO3</a> (Rust bindings for Python), especially prominent projects such as <a href="https://github.com/openai/tiktoken">TikToken</a> and <a href="https://docs.pydantic.dev/latest/">Pydantic</a>, upon which a lot of the Python AI ecosystem is built. PyO3 only recently grew support for free-threaded Python in their 0.23.3 release, which came out in December, 2025, and many dependent projects are yet to update to it.</p>
<p>Thus, this post and its supporting code should not be considered the state of the art for production deployments—its primary goal is exploratory in nature, and minimizing the number of moving pieces in the stack helps achieve this goal.</p>
<section id="environments" class="level2">
<h2 class="anchored" data-anchor-id="environments">Environments</h2>
<p>It is fiddly getting the environments set up in support of this post. Again, this is due to the infancy of free-threaded Python. So I apologize in advance for how long this environment setup section is.</p>
<p>I reference two <code>conda</code> environments in this post: a Python 3.13 free-threaded one named <code>py313t</code>, and a normal, not-free-threaded Python 3.13 one named <code>py313</code>.</p>
<p>The primary motivation behind the second <code>py313</code> environment is it allows us to install Jupyter Lab, which, at the time of writing, still isn’t compatible with a Python free-threaded installation. However, we can still register a free-threaded Python kernel with Jupyter, which is all we really care about when running the code in this post in a free-threaded environment.</p>
<p>Details on creating the <code>conda</code> environments follow.</p>
<section id="free-threaded-3.13-env-py313t" class="level3">
<h3 class="anchored" data-anchor-id="free-threaded-3.13-env-py313t">Free-Threaded 3.13 Env (py313t)</h3>
<p>I use <code>conda</code> to create the Python 3.13 free-threaded environment plus initial dependencies, activate it, then install the remaining dependencies via pip, as follows:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> py313t python=3.13 python-freethreading <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-2">    nodejs pip tqdm flake8 rust requests <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-3">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> conda-forge</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate py313t</span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install numpy setuptools_rust regex safetensors</span></code></pre></div>
<p><code>nodejs</code> is required for the UI component we’ll introduce later. <code>regex</code>, <code>rust</code>, and <code>setuptools_rust</code> are needed for <code>tiktoken</code>, described next. Finally, <code>numpy</code> is for <code>torch</code>, which we install later, too.</p>
<section id="tiktoken" class="level4">
<h4 class="anchored" data-anchor-id="tiktoken">TikToken</h4>
<p><a href="https://github.com/openai/tiktoken">TikToken</a> is a fast BPE tokenizer from OpenAI that is used extensively in the emerging Python LLM landscape. At the time of writing, the latest TikToken release was <a href="https://github.com/openai/tiktoken/releases/tag/0.8.0">0.8.0</a>, which was built against PyO3 0.22.2, which isn’t compatible with free-threaded Python.</p>
<p>Thankfully, it was trivial to get a local installation of <code>tiktoken</code> working by cloning the Github repo, bumping the PyO3 version in <code>Cargo.toml</code>, then rebuilding and installing.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>This is a perfect example of the type of fiddling around I wanted to avoid by not depending on any external packages other than the bare necessities, such as PyTorch. I made an exception for <code>tiktoken</code> because a) it’s arguably an equally-important part of the LLM stack as <code>torch</code>, and b) it thankfully wasn’t <em>too</em> difficult getting a compatible version of <code>tiktoken</code> installed locally.</p>
</div>
</div>
<p>Clone the tiktoken git repo and cd into it as follows:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/openai/tiktoken</span>
<span id="cb2-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> tiktoken</span></code></pre></div>
<p>Edit the <code>Cargo.toml</code> file and change the <code>pyo3</code> dependency version to at least 0.23.3<sup>1</sup>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">diff --git a/Cargo.toml b/Cargo.toml</span></span>
<span id="cb3-2">index 2eed0c1..6be5f63 100644</span>
<span id="cb3-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">--- a/Cargo.toml</span></span>
<span id="cb3-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ b/Cargo.toml</span></span>
<span id="cb3-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -9,7 +9,7 @@ name = "_tiktoken"</span></span>
<span id="cb3-6"> crate-type = ["cdylib"]</span>
<span id="cb3-7"> </span>
<span id="cb3-8"> [dependencies]</span>
<span id="cb3-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-pyo3 = { version = "0.22.2", default-features = false, features = ["extension-module", "macros"] }</span></span>
<span id="cb3-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+pyo3 = { version = "0.23.3", default-features = false, features = ["extension-module", "macros"] }</span></span>
<span id="cb3-11"> </span>
<span id="cb3-12"> # tiktoken dependencies</span>
<span id="cb3-13"> fancy-regex = "0.13.0"</span></code></pre></div>
<p>With this patch applied, and the <code>py313t</code> conda environment active (with <code>rust</code> and <code>setuptools_rust</code> installed):</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> setup.py build</span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> setup.py install</span></code></pre></div>
<div class="callout callout-style-simple callout-note no-icon callout-titled" title="Show Build &amp; Install Output">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Show Build &amp; Install Output
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py313t</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">{pytorch}</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">12.6</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> [trent@dgx/ttypts/3<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~s/tiktoken</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%]</span> python setup.py build</span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">running</span> build</span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">running</span> build_py</span>
<span id="cb5-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken/_educational.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken</span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken/__init__.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken</span>
<span id="cb5-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken/registry.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken</span>
<span id="cb5-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken/model.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken</span>
<span id="cb5-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken/load.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken</span>
<span id="cb5-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken/core.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken</span>
<span id="cb5-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken_ext/openai_public.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken_ext</span>
<span id="cb5-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">running</span> egg_info</span>
<span id="cb5-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">writing</span> tiktoken.egg-info/PKG-INFO</span>
<span id="cb5-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">writing</span> dependency_links to tiktoken.egg-info/dependency_links.txt</span>
<span id="cb5-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">writing</span> requirements to tiktoken.egg-info/requires.txt</span>
<span id="cb5-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">writing</span> top-level names to tiktoken.egg-info/top_level.txt</span>
<span id="cb5-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">reading</span> manifest file <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tiktoken.egg-info/SOURCES.txt'</span></span>
<span id="cb5-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">reading</span> manifest template <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MANIFEST.in'</span></span>
<span id="cb5-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> no files found matching <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Makefile'</span></span>
<span id="cb5-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">adding</span> license file <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'LICENSE'</span></span>
<span id="cb5-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">writing</span> manifest file <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tiktoken.egg-info/SOURCES.txt'</span></span>
<span id="cb5-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken/py.typed <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken</span>
<span id="cb5-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">running</span> build_ext</span>
<span id="cb5-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">running</span> build_rust</span>
<span id="cb5-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cargo</span> rustc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--lib</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--message-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json-render-diagnostics <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--manifest-path</span> Cargo.toml <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--release</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--features</span> pyo3/extension-module <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> cdylib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--</span></span>
<span id="cb5-25">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> target-lexicon v0.12.16</span>
<span id="cb5-26">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> once_cell v1.20.2</span>
<span id="cb5-27">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> proc-macro2 v1.0.92</span>
<span id="cb5-28">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> unicode-ident v1.0.14</span>
<span id="cb5-29">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> memchr v2.7.4</span>
<span id="cb5-30">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> regex-syntax v0.8.5</span>
<span id="cb5-31">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> libc v0.2.169</span>
<span id="cb5-32">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> autocfg v1.4.0</span>
<span id="cb5-33">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> heck v0.5.0</span>
<span id="cb5-34">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> bit-vec v0.6.3</span>
<span id="cb5-35">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> unindent v0.2.3</span>
<span id="cb5-36">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> indoc v2.0.5</span>
<span id="cb5-37">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> cfg-if v1.0.0</span>
<span id="cb5-38">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> rustc-hash v1.1.0</span>
<span id="cb5-39">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> build_script_build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2018 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/target-lexicon-0.12.16/build.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> bin <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("arch_zkasm", "default", "serde", "serde_support", "std"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=826df8be4fa9ef21 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-826df8be4fa9ef21 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/build/target-lexicon-826df8be4fa9ef21 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-40">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> once_cell <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="alloc"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="race"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="std"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("alloc", "atomic-polyfill", "critical-section", "default", "parking_lot", "portable-atomic", "race", "std", "unstable"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=6870d82906744d65 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-6870d82906744d65 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-41">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> build_script_build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.92/build.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> bin <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="proc-macro"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("default", "nightly", "proc-macro", "span-locations"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=4463b02a2f05d75c <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-4463b02a2f05d75c <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/build/proc-macro2-4463b02a2f05d75c <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-42">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> unicode_ident <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2018 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-ident-1.0.14/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values())'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=17278dafa5f26de9 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-17278dafa5f26de9 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-43">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> memchr <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.7.4/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="alloc"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="std"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("alloc", "compiler_builtins", "core", "default", "libc", "logging", "rustc-dep-of-std", "std", "use_std"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=25fa9792dd9399b0 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-25fa9792dd9399b0 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-44">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> regex_syntax <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-syntax-0.8.5/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="std"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-age"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-bool"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-case"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-gencat"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-perl"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-script"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-segment"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("arbitrary", "default", "std", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=66f570e05dbe3825 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-66f570e05dbe3825 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-45">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> build_script_build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.169/build.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> bin <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="std"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("align", "const-extern-fn", "default", "extra_traits", "rustc-dep-of-std", "rustc-std-workspace-core", "std", "use_std"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=42fd5088387abf7a <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-42fd5088387abf7a <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/build/libc-42fd5088387abf7a <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-46">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> autocfg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2015 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.4.0/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values())'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=b8e4c5d316ce5bfb <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-b8e4c5d316ce5bfb <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-47">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> bit_vec <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2015 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bit-vec-0.6.3/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="std"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("default", "serde", "serde_no_std", "serde_std", "std"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=de2a0d1e2ef2490a <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-de2a0d1e2ef2490a <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-48">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> heck <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/heck-0.5.0/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values())'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=5e22b1dffa7f4255 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-5e22b1dffa7f4255 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-49">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> once_cell <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="alloc"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="race"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="std"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("alloc", "atomic-polyfill", "critical-section", "default", "parking_lot", "portable-atomic", "race", "std", "unstable"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=05003007543cfa87 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-05003007543cfa87 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-50">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> unindent <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unindent-0.2.3/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values())'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=d53e2a0385a47a80 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-d53e2a0385a47a80 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-51">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> indoc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/indoc-2.0.5/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> proc-macro <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> prefer-dynamic <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values())'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=b4e94d9ecbd21a39 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-b4e94d9ecbd21a39 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> proc_macro <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-52">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> cfg_if <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2018 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cfg-if-1.0.0/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("compiler_builtins", "core", "rustc-dep-of-std"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=e4ded2c19830fbdd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-e4ded2c19830fbdd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-53">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> rustc_hash <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2015 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustc-hash-1.1.0/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="std"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("default", "std"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=b006f4d81e95dfaf <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-b006f4d81e95dfaf <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-54">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> bit-set v0.5.3</span>
<span id="cb5-55">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> bit_set <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2015 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bit-set-0.5.3/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="std"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("default", "std"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=40d90f83eb5bab57 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-40d90f83eb5bab57 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> bit_vec=/home/trent/src/tiktoken/target/release/deps/libbit_vec-de2a0d1e2ef2490a.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-56">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/home/trent/src/tiktoken/target/release/build/libc-42fd5088387abf7a/build-script-build</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-57">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/home/trent/src/tiktoken/target/release/build/proc-macro2-4463b02a2f05d75c/build-script-build</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-58">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> memoffset v0.9.1</span>
<span id="cb5-59">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> build_script_build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2015 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memoffset-0.9.1/build.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> bin <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("default", "unstable_const", "unstable_offset_of"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=679ebbc3261d6845 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-679ebbc3261d6845 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/build/memoffset-679ebbc3261d6845 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> autocfg=/home/trent/src/tiktoken/target/release/deps/libautocfg-b8e4c5d316ce5bfb.rlib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-60">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> libc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.169/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="std"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("align", "const-extern-fn", "default", "extra_traits", "rustc-dep-of-std", "rustc-std-workspace-core", "std", "use_std"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=6b0fbe5bd5ba9d30 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-6b0fbe5bd5ba9d30 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> freebsd11 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> libc_const_extern_fn <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(emscripten_new_stat_abi)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(espidf_time32)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(freebsd10)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(freebsd11)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(freebsd12)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(freebsd13)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(freebsd14)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(freebsd15)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(libc_const_extern_fn)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(libc_deny_warnings)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(libc_thread_local)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(libc_ctest)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(target_os,values("switch","aix","ohos","hurd","rtems","visionos","nuttx"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(target_env,values("illumos","wasi","aix","ohos"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(target_arch,values("loongarch64","mips32r6","mips64r6","csky"))'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-61">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> proc_macro2 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.92/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="proc-macro"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("default", "nightly", "proc-macro", "span-locations"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=4c69c42d9df03375 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-4c69c42d9df03375 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> unicode_ident=/home/trent/src/tiktoken/target/release/deps/libunicode_ident-17278dafa5f26de9.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> wrap_proc_macro <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(fuzzing)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(no_is_available)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(no_literal_byte_character)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(no_literal_c_string)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(no_source_text)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(proc_macro_span)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(procmacro2_backtrace)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(procmacro2_nightly_testing)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(procmacro2_semver_exempt)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(randomize_layout)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(span_locations)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(super_unstable)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(wrap_proc_macro)'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-62">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/home/trent/src/tiktoken/target/release/build/target-lexicon-826df8be4fa9ef21/build-script-build</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-63">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> target_lexicon <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2018 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/target-lexicon-0.12.16/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("arch_zkasm", "default", "serde", "serde_support", "std"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=a879275207ec599a <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-a879275207ec599a <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="rust_1_40"'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-64">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/home/trent/src/tiktoken/target/release/build/memoffset-679ebbc3261d6845/build-script-build</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-65">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> memoffset <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2015 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memoffset-0.9.1/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("default", "unstable_const", "unstable_offset_of"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=65fe1a8a113b3005 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-65fe1a8a113b3005 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> tuple_ty <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> allow_clippy <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> maybe_uninit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> doctests <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> raw_ref_macros <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> stable_const <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> stable_offset_of<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-66">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> aho-corasick v1.1.3</span>
<span id="cb5-67">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> aho_corasick <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aho-corasick-1.1.3/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="perf-literal"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="std"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("default", "logging", "perf-literal", "std"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=6668c9f838fb89b3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-6668c9f838fb89b3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> memchr=/home/trent/src/tiktoken/target/release/deps/libmemchr-25fa9792dd9399b0.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-68">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> pyo3-build-config v0.23.3</span>
<span id="cb5-69">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> build_script_build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pyo3-build-config-0.23.3/build.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> bin <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="extension-module"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="resolve-config"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("abi3", "abi3-py310", "abi3-py311", "abi3-py312", "abi3-py37", "abi3-py38", "abi3-py39", "default", "extension-module", "python3-dll-a", "resolve-config"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=d8ab86bb094cf645 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-d8ab86bb094cf645 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/build/pyo3-build-config-d8ab86bb094cf645 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> target_lexicon=/home/trent/src/tiktoken/target/release/deps/libtarget_lexicon-a879275207ec599a.rlib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-70">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> quote v1.0.38</span>
<span id="cb5-71">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> quote <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2018 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.38/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="proc-macro"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("default", "proc-macro"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=169332b6fe3d21d6 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-169332b6fe3d21d6 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> proc_macro2=/home/trent/src/tiktoken/target/release/deps/libproc_macro2-4c69c42d9df03375.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-72">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> syn v2.0.95</span>
<span id="cb5-73">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> syn <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-2.0.95/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="clone-impls"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="derive"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="extra-traits"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="full"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="parsing"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="printing"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="proc-macro"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("clone-impls", "default", "derive", "extra-traits", "fold", "full", "parsing", "printing", "proc-macro", "test", "visit", "visit-mut"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=29d4a0ddbd98f61f <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-29d4a0ddbd98f61f <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> proc_macro2=/home/trent/src/tiktoken/target/release/deps/libproc_macro2-4c69c42d9df03375.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> quote=/home/trent/src/tiktoken/target/release/deps/libquote-169332b6fe3d21d6.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> unicode_ident=/home/trent/src/tiktoken/target/release/deps/libunicode_ident-17278dafa5f26de9.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-74">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/home/trent/src/tiktoken/target/release/build/pyo3-build-config-d8ab86bb094cf645/build-script-build</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-75">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> pyo3_build_config <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pyo3-build-config-0.23.3/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="extension-module"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="resolve-config"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("abi3", "abi3-py310", "abi3-py311", "abi3-py312", "abi3-py37", "abi3-py38", "abi3-py39", "default", "extension-module", "python3-dll-a", "resolve-config"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=b884267014f5753b <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-b884267014f5753b <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> once_cell=/home/trent/src/tiktoken/target/release/deps/libonce_cell-6870d82906744d65.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> target_lexicon=/home/trent/src/tiktoken/target/release/deps/libtarget_lexicon-a879275207ec599a.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-76">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> pyo3-ffi v0.23.3</span>
<span id="cb5-77">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> pyo3-macros-backend v0.23.3</span>
<span id="cb5-78">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> pyo3 v0.23.3</span>
<span id="cb5-79">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> build_script_build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pyo3-ffi-0.23.3/build.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> bin <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rust_2018_idioms <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::useless_transmute'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::used_underscore_binding'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>unused_lifetimes <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::unnecessary_wraps'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::todo'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rust_2021_prelude_collisions <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::manual_ok_or'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::manual_assert'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::let_unit_value'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>invalid_doc_attributes <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::flat_map_option'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::filter_map_next'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::explicit_iter_loop'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::explicit_into_iter_loop'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>elided_lifetimes_in_paths <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::dbg_macro'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::checked_conversions'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=rustdoc::broken_intra_doc_links'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=rustdoc::bare_urls'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="extension-module"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("abi3", "abi3-py310", "abi3-py311", "abi3-py312", "abi3-py37", "abi3-py38", "abi3-py39", "default", "extension-module", "generate-import-lib"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=5c5f8f108a22b6ae <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-5c5f8f108a22b6ae <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/build/pyo3-ffi-5c5f8f108a22b6ae <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> pyo3_build_config=/home/trent/src/tiktoken/target/release/deps/libpyo3_build_config-b884267014f5753b.rlib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-80">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> build_script_build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pyo3-macros-backend-0.23.3/build.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> bin <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rust_2018_idioms <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::useless_transmute'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::used_underscore_binding'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>unused_lifetimes <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::unnecessary_wraps'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::todo'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rust_2021_prelude_collisions <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::manual_ok_or'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::manual_assert'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::let_unit_value'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>invalid_doc_attributes <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::flat_map_option'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::filter_map_next'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::explicit_iter_loop'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::explicit_into_iter_loop'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>elided_lifetimes_in_paths <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::dbg_macro'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::checked_conversions'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=rustdoc::broken_intra_doc_links'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=rustdoc::bare_urls'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("experimental-async"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=bb4a4b3911c85e51 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-bb4a4b3911c85e51 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/build/pyo3-macros-backend-bb4a4b3911c85e51 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> pyo3_build_config=/home/trent/src/tiktoken/target/release/deps/libpyo3_build_config-b884267014f5753b.rlib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-81">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> build_script_build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pyo3-0.23.3/build.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> bin <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rust_2018_idioms <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::useless_transmute'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::used_underscore_binding'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>unused_lifetimes <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::unnecessary_wraps'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::todo'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rust_2021_prelude_collisions <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::manual_ok_or'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::manual_assert'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::let_unit_value'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>invalid_doc_attributes <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::flat_map_option'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::filter_map_next'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::explicit_iter_loop'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::explicit_into_iter_loop'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>elided_lifetimes_in_paths <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::dbg_macro'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::checked_conversions'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=rustdoc::broken_intra_doc_links'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=rustdoc::bare_urls'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="extension-module"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="indoc"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="macros"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="pyo3-macros"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unindent"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("abi3", "abi3-py310", "abi3-py311", "abi3-py312", "abi3-py37", "abi3-py38", "abi3-py39", "anyhow", "auto-initialize", "chrono", "chrono-tz", "default", "either", "experimental-async", "experimental-inspect", "extension-module", "eyre", "full", "generate-import-lib", "hashbrown", "indexmap", "indoc", "inventory", "macros", "multiple-pymethods", "nightly", "num-bigint", "num-complex", "num-rational", "py-clone", "pyo3-macros", "rust_decimal", "serde", "smallvec", "unindent"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=65f0dbfaaf67ed5a <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-65f0dbfaaf67ed5a <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/build/pyo3-65f0dbfaaf67ed5a <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> pyo3_build_config=/home/trent/src/tiktoken/target/release/deps/libpyo3_build_config-b884267014f5753b.rlib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-82">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> regex-automata v0.4.9</span>
<span id="cb5-83">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> regex_automata <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="alloc"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="dfa"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="dfa-build"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="dfa-onepass"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="dfa-search"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="hybrid"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="meta"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="nfa"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="nfa-backtrack"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="nfa-pikevm"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="nfa-thompson"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="perf"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="perf-inline"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="perf-literal"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="perf-literal-multisubstring"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="perf-literal-substring"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="std"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="syntax"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-age"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-bool"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-case"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-gencat"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-perl"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-script"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-segment"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-word-boundary"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("alloc", "default", "dfa", "dfa-build", "dfa-onepass", "dfa-search", "hybrid", "internal-instrument", "internal-instrument-pikevm", "logging", "meta", "nfa", "nfa-backtrack", "nfa-pikevm", "nfa-thompson", "perf", "perf-inline", "perf-literal", "perf-literal-multisubstring", "perf-literal-substring", "std", "syntax", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment", "unicode-word-boundary"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=01135b6ed6d4413e <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-01135b6ed6d4413e <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> aho_corasick=/home/trent/src/tiktoken/target/release/deps/libaho_corasick-6668c9f838fb89b3.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> memchr=/home/trent/src/tiktoken/target/release/deps/libmemchr-25fa9792dd9399b0.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> regex_syntax=/home/trent/src/tiktoken/target/release/deps/libregex_syntax-66f570e05dbe3825.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-84">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/home/trent/src/tiktoken/target/release/build/pyo3-macros-backend-bb4a4b3911c85e51/build-script-build</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-85">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/home/trent/src/tiktoken/target/release/build/pyo3-ffi-5c5f8f108a22b6ae/build-script-build</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-86">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/home/trent/src/tiktoken/target/release/build/pyo3-65f0dbfaaf67ed5a/build-script-build</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-87">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> pyo3_ffi <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pyo3-ffi-0.23.3/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rust_2018_idioms <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::useless_transmute'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::used_underscore_binding'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>unused_lifetimes <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::unnecessary_wraps'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::todo'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rust_2021_prelude_collisions <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::manual_ok_or'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::manual_assert'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::let_unit_value'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>invalid_doc_attributes <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::flat_map_option'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::filter_map_next'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::explicit_iter_loop'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::explicit_into_iter_loop'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>elided_lifetimes_in_paths <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::dbg_macro'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::checked_conversions'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=rustdoc::broken_intra_doc_links'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=rustdoc::bare_urls'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="extension-module"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("abi3", "abi3-py310", "abi3-py311", "abi3-py312", "abi3-py37", "abi3-py38", "abi3-py39", "default", "extension-module", "generate-import-lib"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=9ad2a4f2678f35bd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-9ad2a4f2678f35bd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> libc=/home/trent/src/tiktoken/target/release/deps/liblibc-6b0fbe5bd5ba9d30.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_3_7 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_3_8 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_3_9 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_3_10 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_3_11 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_3_12 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_3_13 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_GIL_DISABLED <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> rustc_has_once_lock <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> invalid_from_utf8_lint <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> c_str_lit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> diagnostic_namespace <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_LIMITED_API)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_GIL_DISABLED)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(PyPy)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(GraalPy)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(py_sys_config, values("Py_DEBUG", "Py_REF_DEBUG", "Py_TRACE_REFS", "COUNT_ALLOCS"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(invalid_from_utf8_lint)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(pyo3_disable_reference_pool)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(pyo3_leak_on_drop_without_reference_pool)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(diagnostic_namespace)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(c_str_lit)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(rustc_has_once_lock)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_7)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_8)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_9)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_10)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_11)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_12)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_13)'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-88">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> pyo3_macros_backend <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pyo3-macros-backend-0.23.3/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rust_2018_idioms <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::useless_transmute'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::used_underscore_binding'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>unused_lifetimes <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::unnecessary_wraps'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::todo'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rust_2021_prelude_collisions <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::manual_ok_or'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::manual_assert'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::let_unit_value'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>invalid_doc_attributes <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::flat_map_option'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::filter_map_next'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::explicit_iter_loop'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::explicit_into_iter_loop'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>elided_lifetimes_in_paths <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::dbg_macro'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::checked_conversions'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=rustdoc::broken_intra_doc_links'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=rustdoc::bare_urls'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("experimental-async"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=c7424188824c71f8 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-c7424188824c71f8 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> heck=/home/trent/src/tiktoken/target/release/deps/libheck-5e22b1dffa7f4255.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> proc_macro2=/home/trent/src/tiktoken/target/release/deps/libproc_macro2-4c69c42d9df03375.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> pyo3_build_config=/home/trent/src/tiktoken/target/release/deps/libpyo3_build_config-b884267014f5753b.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> quote=/home/trent/src/tiktoken/target/release/deps/libquote-169332b6fe3d21d6.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> syn=/home/trent/src/tiktoken/target/release/deps/libsyn-29d4a0ddbd98f61f.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> rustc_has_once_lock <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> invalid_from_utf8_lint <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> c_str_lit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> diagnostic_namespace <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_LIMITED_API)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_GIL_DISABLED)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(PyPy)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(GraalPy)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(py_sys_config, values("Py_DEBUG", "Py_REF_DEBUG", "Py_TRACE_REFS", "COUNT_ALLOCS"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(invalid_from_utf8_lint)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(pyo3_disable_reference_pool)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(pyo3_leak_on_drop_without_reference_pool)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(diagnostic_namespace)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(c_str_lit)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(rustc_has_once_lock)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_7)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_8)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_9)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_10)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_11)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_12)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_13)'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-89">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> fancy-regex v0.13.0</span>
<span id="cb5-90">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> regex v1.11.1</span>
<span id="cb5-91">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> bstr v1.11.3</span>
<span id="cb5-92">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> regex <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-1.11.1/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="perf"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="perf-backtrack"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="perf-cache"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="perf-dfa"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="perf-inline"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="perf-literal"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="perf-onepass"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="std"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-age"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-bool"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-case"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-gencat"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-perl"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-script"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode-segment"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("default", "logging", "pattern", "perf", "perf-backtrack", "perf-cache", "perf-dfa", "perf-dfa-full", "perf-inline", "perf-literal", "perf-onepass", "std", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment", "unstable", "use_std"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=9ab83d1dbb2872e1 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-9ab83d1dbb2872e1 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> aho_corasick=/home/trent/src/tiktoken/target/release/deps/libaho_corasick-6668c9f838fb89b3.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> memchr=/home/trent/src/tiktoken/target/release/deps/libmemchr-25fa9792dd9399b0.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> regex_automata=/home/trent/src/tiktoken/target/release/deps/libregex_automata-01135b6ed6d4413e.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> regex_syntax=/home/trent/src/tiktoken/target/release/deps/libregex_syntax-66f570e05dbe3825.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-93">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> fancy_regex <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2018 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/fancy-regex-0.13.0/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="perf"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="std"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("default", "perf", "std", "track_caller", "unicode"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=2bd42caf041ad10c <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-2bd42caf041ad10c <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> bit_set=/home/trent/src/tiktoken/target/release/deps/libbit_set-40d90f83eb5bab57.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> regex_automata=/home/trent/src/tiktoken/target/release/deps/libregex_automata-01135b6ed6d4413e.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> regex_syntax=/home/trent/src/tiktoken/target/release/deps/libregex_syntax-66f570e05dbe3825.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-94">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> bstr <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bstr-1.11.3/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="alloc"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="default"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="std"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unicode"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("alloc", "default", "serde", "std", "unicode"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=cc96e78f4e9fd97f <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-cc96e78f4e9fd97f <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> memchr=/home/trent/src/tiktoken/target/release/deps/libmemchr-25fa9792dd9399b0.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> regex_automata=/home/trent/src/tiktoken/target/release/deps/libregex_automata-01135b6ed6d4413e.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-95">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> pyo3-macros v0.23.3</span>
<span id="cb5-96">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> pyo3_macros <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pyo3-macros-0.23.3/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> proc-macro <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> prefer-dynamic <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rust_2018_idioms <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::useless_transmute'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::used_underscore_binding'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>unused_lifetimes <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::unnecessary_wraps'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::todo'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rust_2021_prelude_collisions <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::manual_ok_or'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::manual_assert'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::let_unit_value'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>invalid_doc_attributes <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::flat_map_option'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::filter_map_next'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::explicit_iter_loop'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::explicit_into_iter_loop'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>elided_lifetimes_in_paths <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::dbg_macro'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::checked_conversions'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=rustdoc::broken_intra_doc_links'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=rustdoc::bare_urls'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> debug-assertions=off <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("experimental-async", "multiple-pymethods"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=97a13ca0f34dda72 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-97a13ca0f34dda72 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> proc_macro2=/home/trent/src/tiktoken/target/release/deps/libproc_macro2-4c69c42d9df03375.rlib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> pyo3_macros_backend=/home/trent/src/tiktoken/target/release/deps/libpyo3_macros_backend-c7424188824c71f8.rlib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> quote=/home/trent/src/tiktoken/target/release/deps/libquote-169332b6fe3d21d6.rlib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> syn=/home/trent/src/tiktoken/target/release/deps/libsyn-29d4a0ddbd98f61f.rlib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> proc_macro <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-97">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> pyo3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 /home/trent/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pyo3-0.23.3/src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> lib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,metadata,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rust_2018_idioms <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::useless_transmute'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::used_underscore_binding'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>unused_lifetimes <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::unnecessary_wraps'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::todo'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rust_2021_prelude_collisions <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::manual_ok_or'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::manual_assert'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::let_unit_value'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>invalid_doc_attributes <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::flat_map_option'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::filter_map_next'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::explicit_iter_loop'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::explicit_into_iter_loop'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>elided_lifetimes_in_paths <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::dbg_macro'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=clippy::checked_conversions'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=rustdoc::broken_intra_doc_links'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--warn=rustdoc::bare_urls'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="extension-module"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="indoc"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="macros"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="pyo3-macros"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'feature="unindent"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values("abi3", "abi3-py310", "abi3-py311", "abi3-py312", "abi3-py37", "abi3-py38", "abi3-py39", "anyhow", "auto-initialize", "chrono", "chrono-tz", "default", "either", "experimental-async", "experimental-inspect", "extension-module", "eyre", "full", "generate-import-lib", "hashbrown", "indexmap", "indoc", "inventory", "macros", "multiple-pymethods", "nightly", "num-bigint", "num-complex", "num-rational", "py-clone", "pyo3-macros", "rust_decimal", "serde", "smallvec", "unindent"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=99d0b007138eadf4 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> extra-filename=-99d0b007138eadf4 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> cfg_if=/home/trent/src/tiktoken/target/release/deps/libcfg_if-e4ded2c19830fbdd.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> indoc=/home/trent/src/tiktoken/target/release/deps/libindoc-b4e94d9ecbd21a39.so <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> libc=/home/trent/src/tiktoken/target/release/deps/liblibc-6b0fbe5bd5ba9d30.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> memoffset=/home/trent/src/tiktoken/target/release/deps/libmemoffset-65fe1a8a113b3005.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> once_cell=/home/trent/src/tiktoken/target/release/deps/libonce_cell-05003007543cfa87.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> pyo3_ffi=/home/trent/src/tiktoken/target/release/deps/libpyo3_ffi-9ad2a4f2678f35bd.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> pyo3_macros=/home/trent/src/tiktoken/target/release/deps/libpyo3_macros-97a13ca0f34dda72.so <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> unindent=/home/trent/src/tiktoken/target/release/deps/libunindent-d53e2a0385a47a80.rmeta <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cap-lints</span> allow <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_3_7 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_3_8 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_3_9 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_3_10 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_3_11 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_3_12 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_3_13 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> Py_GIL_DISABLED <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> rustc_has_once_lock <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> invalid_from_utf8_lint <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> c_str_lit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cfg</span> diagnostic_namespace <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_LIMITED_API)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_GIL_DISABLED)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(PyPy)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(GraalPy)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(py_sys_config, values("Py_DEBUG", "Py_REF_DEBUG", "Py_TRACE_REFS", "COUNT_ALLOCS"))'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(invalid_from_utf8_lint)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(pyo3_disable_reference_pool)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(pyo3_leak_on_drop_without_reference_pool)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(diagnostic_namespace)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(c_str_lit)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(rustc_has_once_lock)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_7)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_8)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_9)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_10)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_11)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_12)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(Py_3_13)'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-98">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Dirty</span> tiktoken v0.8.0 <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/home/trent/src/tiktoken</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span> the toolchain changed</span>
<span id="cb5-99">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Compiling</span> tiktoken v0.8.0 <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/home/trent/src/tiktoken</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-100">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Running</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-name</span> _tiktoken <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--edition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2021 src/lib.rs <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--error-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--json</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>diagnostic-rendered-ansi,artifacts,future-incompat <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--diagnostic-width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>254 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> cdylib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--emit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dep-info,link <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> opt-level=3 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> embed-bitcode=no <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(docsrs)'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--check-cfg</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfg(feature, values())'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> metadata=2d15c1d1b98ec97b <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> /home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> linker=/home/trent/mambaforge/envs/py313t/bin/x86_64-conda-linux-gnu-cc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> strip=debuginfo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> dependency=/home/trent/src/tiktoken/target/release/deps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> bstr=/home/trent/src/tiktoken/target/release/deps/libbstr-cc96e78f4e9fd97f.rlib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> fancy_regex=/home/trent/src/tiktoken/target/release/deps/libfancy_regex-2bd42caf041ad10c.rlib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> pyo3=/home/trent/src/tiktoken/target/release/deps/libpyo3-99d0b007138eadf4.rlib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> regex=/home/trent/src/tiktoken/target/release/deps/libregex-9ab83d1dbb2872e1.rlib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extern</span> rustc_hash=/home/trent/src/tiktoken/target/release/deps/librustc_hash-b006f4d81e95dfaf.rlib<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-101"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated method <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::IntoPy::into_py</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IntoPy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> is going to be replaced by <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IntoPyObject</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>. See the migration guide <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://pyo3.rs/v0.23.0/migration</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> more <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">information.</span></span>
<span id="cb5-102">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:508:16</span>
<span id="cb5-103">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-104"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">508</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>         <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">buffer.into_py</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-105">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^</span></span>
<span id="cb5-106">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-107">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">=</span> note: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#[warn(deprecated)]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> on by default</span>
<span id="cb5-108"></span>
<span id="cb5-109"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated associated function <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::types::PyList::new_bound</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: renamed to <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyList::new</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-110">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:555:38</span>
<span id="cb5-111">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-112"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">555</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>         <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">let</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py_completions</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PyList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">new_bound</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb5-113">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                                      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^^^</span></span>
<span id="cb5-114"></span>
<span id="cb5-115"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated associated function <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::types::PyList::new_bound</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: renamed to <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyList::new</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-116">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:559:36</span>
<span id="cb5-117">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-118"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">559</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                 <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyList::new_bound</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">seq</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>..<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-119">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                                    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^^^</span></span>
<span id="cb5-120"></span>
<span id="cb5-121"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated method <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::IntoPy::into_py</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IntoPy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> is going to be replaced by <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IntoPyObject</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>. See the migration guide <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://pyo3.rs/v0.23.0/migration</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> more <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">information.</span></span>
<span id="cb5-122">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:561:34</span>
<span id="cb5-123">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-124"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">561</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tokens,</span> py_completions<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.into_py</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-125">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                                  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^</span></span>
<span id="cb5-126"></span>
<span id="cb5-127"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated associated function <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::types::PyBytes::new_bound</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: renamed to <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-128">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:589:38</span>
<span id="cb5-129">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-130"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">589</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>             <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Ok</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bytes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">=</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Ok<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new_bound</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bytes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.into()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-131">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                                      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^^^</span></span>
<span id="cb5-132"></span>
<span id="cb5-133"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated associated function <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::types::PyBytes::new_bound</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: renamed to <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-134">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:596:32</span>
<span id="cb5-135">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-136"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">596</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>             <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Ok</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new_bound</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py,</span> bytes<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.into()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">);</span></span>
<span id="cb5-137">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^^^</span></span>
<span id="cb5-138"></span>
<span id="cb5-139"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated associated function <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::types::PyBytes::new_bound</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: renamed to <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-140">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:599:32</span>
<span id="cb5-141">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-142"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">599</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>             <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Ok</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new_bound</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py,</span> bytes<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.into()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">);</span></span>
<span id="cb5-143">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^^^</span></span>
<span id="cb5-144"></span>
<span id="cb5-145"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated associated function <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::types::PyBytes::new_bound</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: renamed to <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-146">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:611:31</span>
<span id="cb5-147">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-148"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">611</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>             <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new_bound</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py,</span> x<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.into()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-149">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                               <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^^^</span></span>
<span id="cb5-150"></span>
<span id="cb5-151"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tiktoken</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lib</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">generated</span> 8 warnings</span>
<span id="cb5-152">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Finished</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">release</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> profile <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">optimized</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> target<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">in</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">13.17s</span></span>
<span id="cb5-153"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Copying</span> rust artifact from target/release/lib_tiktoken.so to build/lib.linux-x86_64-cpython-313t/tiktoken/_tiktoken.cpython-313t-x86_64-linux-gnu.so</span>
<span id="cb5-154"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py313t</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">{pytorch}</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">12.6</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> [trent@dgx/ttypts/3<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~s/tiktoken</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%]</span> python setup.py install</span>
<span id="cb5-155"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">running</span> install</span>
<span id="cb5-156"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/setuptools/_distutils/cmd.py:79:</span> SetuptoolsDeprecationWarning: setup.py install is deprecated.</span>
<span id="cb5-157"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!!</span></span>
<span id="cb5-158"></span>
<span id="cb5-159">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">********************************************************************************</span></span>
<span id="cb5-160">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Please</span> avoid running <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">``</span>setup.py<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">``</span> directly.</span>
<span id="cb5-161">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Instead,</span> use pypa/build, pypa/installer or other</span>
<span id="cb5-162">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">standards-based</span> tools.</span>
<span id="cb5-163"></span>
<span id="cb5-164">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">See</span> https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html for details.</span>
<span id="cb5-165">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">********************************************************************************</span></span>
<span id="cb5-166"></span>
<span id="cb5-167"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!!</span></span>
<span id="cb5-168">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">self.initialize_options()</span></span>
<span id="cb5-169"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">running</span> build</span>
<span id="cb5-170"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">running</span> build_py</span>
<span id="cb5-171"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken/_educational.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken</span>
<span id="cb5-172"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken/__init__.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken</span>
<span id="cb5-173"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken/registry.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken</span>
<span id="cb5-174"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken/model.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken</span>
<span id="cb5-175"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken/load.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken</span>
<span id="cb5-176"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken/core.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken</span>
<span id="cb5-177"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken_ext/openai_public.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken_ext</span>
<span id="cb5-178"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">running</span> egg_info</span>
<span id="cb5-179"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">writing</span> tiktoken.egg-info/PKG-INFO</span>
<span id="cb5-180"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">writing</span> dependency_links to tiktoken.egg-info/dependency_links.txt</span>
<span id="cb5-181"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">writing</span> requirements to tiktoken.egg-info/requires.txt</span>
<span id="cb5-182"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">writing</span> top-level names to tiktoken.egg-info/top_level.txt</span>
<span id="cb5-183"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">reading</span> manifest file <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tiktoken.egg-info/SOURCES.txt'</span></span>
<span id="cb5-184"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">reading</span> manifest template <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MANIFEST.in'</span></span>
<span id="cb5-185"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> no files found matching <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Makefile'</span></span>
<span id="cb5-186"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">adding</span> license file <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'LICENSE'</span></span>
<span id="cb5-187"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">writing</span> manifest file <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tiktoken.egg-info/SOURCES.txt'</span></span>
<span id="cb5-188"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> tiktoken/py.typed <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> build/lib.linux-x86_64-cpython-313t/tiktoken</span>
<span id="cb5-189"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">running</span> build_ext</span>
<span id="cb5-190"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">running</span> build_rust</span>
<span id="cb5-191"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cargo</span> rustc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--lib</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--message-format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>json-render-diagnostics <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--manifest-path</span> Cargo.toml <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--release</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--features</span> pyo3/extension-module <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--crate-type</span> cdylib <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--</span></span>
<span id="cb5-192">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> target-lexicon v0.12.16</span>
<span id="cb5-193">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> unicode-ident v1.0.14</span>
<span id="cb5-194">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> memchr v2.7.4</span>
<span id="cb5-195">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> regex-syntax v0.8.5</span>
<span id="cb5-196">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> autocfg v1.4.0</span>
<span id="cb5-197">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> aho-corasick v1.1.3</span>
<span id="cb5-198">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> heck v0.5.0</span>
<span id="cb5-199">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> bit-vec v0.6.3</span>
<span id="cb5-200">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> indoc v2.0.5</span>
<span id="cb5-201">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> cfg-if v1.0.0</span>
<span id="cb5-202">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> once_cell v1.20.2</span>
<span id="cb5-203">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> unindent v0.2.3</span>
<span id="cb5-204">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> rustc-hash v1.1.0</span>
<span id="cb5-205">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> proc-macro2 v1.0.92</span>
<span id="cb5-206">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> regex-automata v0.4.9</span>
<span id="cb5-207">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> libc v0.2.169</span>
<span id="cb5-208">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> bit-set v0.5.3</span>
<span id="cb5-209">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> pyo3-build-config v0.23.3</span>
<span id="cb5-210">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> quote v1.0.38</span>
<span id="cb5-211">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> memoffset v0.9.1</span>
<span id="cb5-212">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> bstr v1.11.3</span>
<span id="cb5-213">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> fancy-regex v0.13.0</span>
<span id="cb5-214">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> regex v1.11.1</span>
<span id="cb5-215">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> syn v2.0.95</span>
<span id="cb5-216">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> pyo3-macros-backend v0.23.3</span>
<span id="cb5-217">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> pyo3-ffi v0.23.3</span>
<span id="cb5-218">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> pyo3-macros v0.23.3</span>
<span id="cb5-219">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> pyo3 v0.23.3</span>
<span id="cb5-220">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fresh</span> tiktoken v0.8.0 <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/home/trent/src/tiktoken</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-221"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated method <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::IntoPy::into_py</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IntoPy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> is going to be replaced by <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IntoPyObject</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>. See the migration guide <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://pyo3.rs/v0.23.0/migration</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> more <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">information.</span></span>
<span id="cb5-222">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:508:16</span>
<span id="cb5-223">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-224"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">508</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>         <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">buffer.into_py</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-225">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^</span></span>
<span id="cb5-226">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-227">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">=</span> note: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#[warn(deprecated)]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> on by default</span>
<span id="cb5-228"></span>
<span id="cb5-229"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated associated function <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::types::PyList::new_bound</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: renamed to <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyList::new</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-230">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:555:38</span>
<span id="cb5-231">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-232"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">555</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>         <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">let</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py_completions</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PyList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">new_bound</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb5-233">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                                      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^^^</span></span>
<span id="cb5-234"></span>
<span id="cb5-235"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated associated function <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::types::PyList::new_bound</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: renamed to <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyList::new</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-236">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:559:36</span>
<span id="cb5-237">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-238"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">559</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                 <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyList::new_bound</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">seq</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>..<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-239">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                                    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^^^</span></span>
<span id="cb5-240"></span>
<span id="cb5-241"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated method <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::IntoPy::into_py</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IntoPy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> is going to be replaced by <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IntoPyObject</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>. See the migration guide <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://pyo3.rs/v0.23.0/migration</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> more <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">information.</span></span>
<span id="cb5-242">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:561:34</span>
<span id="cb5-243">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-244"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">561</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tokens,</span> py_completions<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.into_py</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-245">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                                  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^</span></span>
<span id="cb5-246"></span>
<span id="cb5-247"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated associated function <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::types::PyBytes::new_bound</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: renamed to <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-248">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:589:38</span>
<span id="cb5-249">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-250"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">589</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>             <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Ok</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bytes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">=</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Ok<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new_bound</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bytes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.into()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-251">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                                      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^^^</span></span>
<span id="cb5-252"></span>
<span id="cb5-253"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated associated function <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::types::PyBytes::new_bound</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: renamed to <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-254">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:596:32</span>
<span id="cb5-255">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-256"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">596</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>             <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Ok</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new_bound</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py,</span> bytes<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.into()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">);</span></span>
<span id="cb5-257">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^^^</span></span>
<span id="cb5-258"></span>
<span id="cb5-259"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated associated function <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::types::PyBytes::new_bound</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: renamed to <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-260">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:599:32</span>
<span id="cb5-261">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-262"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">599</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>             <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Ok</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new_bound</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py,</span> bytes<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.into()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">);</span></span>
<span id="cb5-263">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^^^</span></span>
<span id="cb5-264"></span>
<span id="cb5-265"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> use of deprecated associated function <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyo3::types::PyBytes::new_bound</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>: renamed to <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb5-266">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> src/lib.rs:611:31</span>
<span id="cb5-267">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb5-268"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">611</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>             <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PyBytes::new_bound</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py,</span> x<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.into()</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-269">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                               <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^^^</span></span>
<span id="cb5-270"></span>
<span id="cb5-271"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tiktoken</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lib</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">generated</span> 8 warnings</span>
<span id="cb5-272">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Finished</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">release</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> profile <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">optimized</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> target<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">s</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">in</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">0.03s</span></span>
<span id="cb5-273"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Copying</span> rust artifact from target/release/lib_tiktoken.so to build/lib.linux-x86_64-cpython-313t/tiktoken/_tiktoken.cpython-313t-x86_64-linux-gnu.so</span>
<span id="cb5-274"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">running</span> install_lib</span>
<span id="cb5-275"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">creating</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken_ext</span>
<span id="cb5-276"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> build/lib.linux-x86_64-cpython-313t/tiktoken_ext/openai_public.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken_ext</span>
<span id="cb5-277"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">creating</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken</span>
<span id="cb5-278"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> build/lib.linux-x86_64-cpython-313t/tiktoken/_educational.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken</span>
<span id="cb5-279"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> build/lib.linux-x86_64-cpython-313t/tiktoken/__init__.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken</span>
<span id="cb5-280"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> build/lib.linux-x86_64-cpython-313t/tiktoken/py.typed <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken</span>
<span id="cb5-281"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> build/lib.linux-x86_64-cpython-313t/tiktoken/registry.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken</span>
<span id="cb5-282"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> build/lib.linux-x86_64-cpython-313t/tiktoken/model.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken</span>
<span id="cb5-283"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> build/lib.linux-x86_64-cpython-313t/tiktoken/load.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken</span>
<span id="cb5-284"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> build/lib.linux-x86_64-cpython-313t/tiktoken/_tiktoken.cpython-313t-x86_64-linux-gnu.so <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken</span>
<span id="cb5-285"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copying</span> build/lib.linux-x86_64-cpython-313t/tiktoken/core.py <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken</span>
<span id="cb5-286"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">byte-compiling</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken_ext/openai_public.py to openai_public.cpython-313.pyc</span>
<span id="cb5-287"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">byte-compiling</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken/_educational.py to _educational.cpython-313.pyc</span>
<span id="cb5-288"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">byte-compiling</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken/__init__.py to __init__.cpython-313.pyc</span>
<span id="cb5-289"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">byte-compiling</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken/registry.py to registry.cpython-313.pyc</span>
<span id="cb5-290"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">byte-compiling</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken/model.py to model.cpython-313.pyc</span>
<span id="cb5-291"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">byte-compiling</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken/load.py to load.cpython-313.pyc</span>
<span id="cb5-292"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">byte-compiling</span> /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken/core.py to core.cpython-313.pyc</span>
<span id="cb5-293"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">running</span> install_egg_info</span>
<span id="cb5-294"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Copying</span> tiktoken.egg-info to /home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/tiktoken-0.8.0-py3.13.egg-info</span>
<span id="cb5-295"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">running</span> install_scripts</span></code></pre></div>
</div>
</div>
</div>
<p>After this, you should be able to import the <code>tiktoken</code> module in Python:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> cd ..</span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-Xgil</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>0</span>
<span id="cb6-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Python</span> 3.13.1 experimental free-threading build <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">packaged</span> by conda-forge <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">main,</span> Jan 13 2025, 09:59:40<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[GCC</span> 13.3.0] on linux</span>
<span id="cb6-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Type</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"help"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"copyright"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"credits"</span> or <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"license"</span> for more information.</span>
<span id="cb6-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> import <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tiktoken</span></span>
<span id="cb6-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span></span></code></pre></div>
</section>
<section id="torch" class="level4">
<h4 class="anchored" data-anchor-id="torch">Torch</h4>
<p>Install PyTorch 2.6 via <code>pip</code> with the conda <code>py313t</code> environment active:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> conda activate py313t</span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> pip install torch==2.6 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--index-url</span> https://download.pytorch.org/whl/cu126</span></code></pre></div>
<p>If you have trouble installing PyTorch, consult their <a href="https://pytorch.org/get-started/locally/">Getting Started</a> guide.</p>
<p>You can verify torch installed correctly as follows:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-Xgil</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>0</span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Python</span> 3.13.1 experimental free-threading build <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">packaged</span> by conda-forge <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">main,</span> Jan 13 2025, 09:59:40<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[GCC</span> 13.3.0] on linux</span>
<span id="cb8-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Type</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"help"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"copyright"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"credits"</span> or <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"license"</span> for more information.</span>
<span id="cb8-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> import <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">torch</span></span>
<span id="cb8-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> torch.cuda.is_available<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">()</span></span>
<span id="cb8-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
</section>
<section id="ipython-kernel" class="level4">
<h4 class="anchored" data-anchor-id="ipython-kernel">IPython Kernel</h4>
<p>Installing IPython Kernel allows us to use our free-threaded Python installation via the Jupyter Lab instance we install in the <code>py313</code> environment.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate py313t</span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install ipykernel</span></code></pre></div>
<p>Once <code>ipykernel</code> is installed, run the following:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> python3.13t <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> ipykernel <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--install</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> py313t <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--user</span></span>
<span id="cb10-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Installed</span> kernelspec py313t in /home/trent/.local/share/jupyter/kernels/py313t</span></code></pre></div>
<p>This will install a kernel configuration file, <code>kernel.json</code>, which we need to tweak by adding the <code>-Xgil=0</code> startup flag to the Python interpreter:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> cd ~/.local/jupyter/share/kernels/py313t</span>
<span id="cb11-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> cp kernel.json kernel.json.orig</span>
<span id="cb11-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> vi kernel.json</span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Edit kernel.json to make it look like the diff below.</span></span>
<span id="cb11-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> diff <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> kernel.json.orig kernel.json</span></code></pre></div>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- kernel.json.orig    2025-02-04 15:02:21.814112004 -0800</span></span>
<span id="cb12-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ kernel.json 2025-02-04 15:02:36.553806199 -0800</span></span>
<span id="cb12-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -1,6 +1,7 @@</span></span>
<span id="cb12-4"> {</span>
<span id="cb12-5">  "argv": [</span>
<span id="cb12-6">   "/home/trent/mambaforge/envs/py313t/bin/python3.13t",</span>
<span id="cb12-7"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+  "-Xgil=0",</span></span>
<span id="cb12-8">   "-Xfrozen_modules=off",</span>
<span id="cb12-9">   "-m",</span>
<span id="cb12-10">   "ipykernel_launcher",</span>
<span id="cb12-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -12,4 +13,4 @@</span></span>
<span id="cb12-12">  "metadata": {</span>
<span id="cb12-13">   "debugger": true</span>
<span id="cb12-14">  }</span></code></pre></div>
</section>
<section id="datrie-and-cython" class="level4">
<h4 class="anchored" data-anchor-id="datrie-and-cython">Datrie and Cython</h4>
<p><a href="https://github.com/pytries/datrie">datrie</a> is a Python library that provides a <em>trie</em> (or <em>digital search tree</em>) data structure by way of the <a href="https://linux.thai.net/~thep/datrie/datrie.html">libdatrie</a> C library. The Python <code>datrie</code> library isn’t strictly necessary to run <code>parallelopedia.gpt2</code>, but other components rely on it, so it’s handy to get installed now, if possible.</p>
<p>It relies upon Cython, and thus, for now, you need to install a free-threaded compatible version of Cython first, as follows:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate py313t</span>
<span id="cb13-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install git+https://github.com/cython/cython</span></code></pre></div>
<p>Then, clone the <code>datrie</code> repo and install as follows:</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate py313t</span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/pytries/datrie <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--recursive</span></span>
<span id="cb14-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> datrie</span>
<span id="cb14-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> setup.py build</span>
<span id="cb14-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> setup.py install</span></code></pre></div>
<p>If everything goes well, you should see something like this when you launch Python and import <code>datrie</code>:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> python</span>
<span id="cb15-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Python</span> 3.13.1 experimental free-threading build <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">packaged</span> by conda-forge <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">main,</span> Jan 13 2025, 09:59:40<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[GCC</span> 13.3.0] on linux</span>
<span id="cb15-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Type</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"help"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"copyright"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"credits"</span> or <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"license"</span> for more information.</span>
<span id="cb15-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> import <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">datrie</span></span>
<span id="cb15-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span></span></code></pre></div>
</section>
</section>
<section id="normal-3.13-env-py313" class="level3">
<h3 class="anchored" data-anchor-id="normal-3.13-env-py313">Normal 3.13 Env (py313)</h3>
<p>The second <code>py313</code> environment is almost identical to <code>py313t</code>, except it is not a <code>python-freethreading</code> installation, and, additionally, we install Jupyter Lab. We can install <code>tiktoken</code> directly via <code>pip</code>, so we don’t need the supporting Rust cruft. Likewise for <code>datrie</code>, we don’t need to first install Cython and then build <code>datrie</code> from git.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> py313 python=3.13 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb16-2">    nodejs pip tqdm flake8 jupyterlab requests <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb16-3">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> conda-forge</span>
<span id="cb16-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate py313</span>
<span id="cb16-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install numpy datrie tiktoken safetensors</span>
<span id="cb16-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install torch==2.6 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--index-url</span> https://download.pytorch.org/whl/cu126</span></code></pre></div>
</section>
</section>
<section id="parallelopedia" class="level2">
<h2 class="anchored" data-anchor-id="parallelopedia">Parallelopedia</h2>
<p>All of the code in this article is available in the <a href="https://github.com/tpn/parallelopedia">Parallelopedia</a> repository on Github. The code we’ll be focusing on in this post lives in the <a href="https://github.com/tpn/parallelopedia/blob/main/src/parallelopedia/gpt2.py">parallelopedia.gpt2</a> module.</p>
<p>There is also a web user interface component named <a href="https://github.com/tpn/parallelopedia-ui">Parallelopedia-UI</a>, which we will use later in the post.</p>
<p>Clone the repositories as follows:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> git clone https://github.com/tpn/parallelopedia</span>
<span id="cb17-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> git clone https://github.com/tpn/parallelopedia-ui</span></code></pre></div>
<div class="env-vars callout callout-style-default callout-important callout-titled" title="Important Environment Variables">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important Environment Variables
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<p>The code and command examples in this post will assume you’ve added the <code>src</code> directory to your <code>PYTHONPATH</code>, the <code>bin</code> directory to your <code>PATH</code>, and set the <code>PARALLELOPEDIA_ROOT</code> environment variable to the root of the repository. You can do this as follows:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> parallelopedia</span>
<span id="cb18-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PYTHONPATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span>/src:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PYTHONPATH</span></span>
<span id="cb18-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span>/bin:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span></span>
<span id="cb18-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PARALLELOPEDIA_ROOT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb18-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ..</span>
<span id="cb18-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> parallelopedia-ui</span>
<span id="cb18-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PARALLELOPEDIA_UI</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<p>It is recommended that you add these to your shell. For me, using zsh, I use the following:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb19-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PARALLELOPEDIA_ROOT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">~</span>s1/parallelopedia</span>
<span id="cb19-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PARALLELOPEDIA_UI</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">~</span>s1/parallelopedia-ui</span>
<span id="cb19-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PYTHONPATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PARALLELOPEDIA_ROOT</span>/src:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PYTHONPATH</span></span>
<span id="cb19-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PARALLELOPEDIA_ROOT</span>/bin:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span></span></code></pre></div>
</div>
</div>
</div>
<p>You can perform a quick sanity check that things are working as follows:</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-Xgil</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>0 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> parallelopedia.http.server <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span></span>
<span id="cb20-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">usage:</span> server.py <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[-</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">h</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> [--ip IP] [--port PORT] <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[--</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">debug</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> [--log-level <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{DEBUG</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">INFO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">WARNING</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ERROR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">CRITICAL}</span>] [--threads THREADS] [--protocol-class PROTOCOL_CLASS] [--app-classes APP_CLASSES [APP_CLASSES ...]] [--listen-backlog LISTEN_BACKLOG]</span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Run</span> the HTTP server.</span>
<span id="cb20-5"></span>
<span id="cb20-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">options:</span></span>
<span id="cb20-7">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-h,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span>            show this help message and exit</span>
<span id="cb20-8">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--ip</span> IP               IP address to bind the server to.</span>
<span id="cb20-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--port</span> PORT           Port number to bind the server to.</span>
<span id="cb20-10">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--debug</span>               Enable debug mode for asyncio.</span>
<span id="cb20-11">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--log-level</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{DEBUG</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">INFO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">WARNING</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ERROR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">CRITICAL}</span></span>
<span id="cb20-12">                        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Set</span> the logging level.</span>
<span id="cb20-13">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--threads</span> THREADS     Number of threads to use.</span>
<span id="cb20-14">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--protocol-class</span> PROTOCOL_CLASS</span>
<span id="cb20-15">                        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">The</span> protocol class to use for the server.</span>
<span id="cb20-16">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--app-classes</span> APP_CLASSES [APP_CLASSES ...]</span>
<span id="cb20-17">                        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Space-separated</span> list of HTTP application classes.</span>
<span id="cb20-18">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--listen-backlog</span> LISTEN_BACKLOG</span>
<span id="cb20-19">                        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">The</span> listen backlog for the server.</span></code></pre></div>
</section>
</section>
<section id="pytorch-and-llm-crash-course" class="level1">
<h1>PyTorch and LLM Crash Course</h1>
<p>My involvement with PyTorch and Large Language Models (LLMs) started around late November last year, 2024. Going in, I knew nothing about PyTorch, nor deep neural networks, nor LLMs—other than having enjoyed using LLMs thoroughly the past couple of years. I had never trained an AI model of any kind. I did have a bit of NumPy and data science exposure up my sleeve, plus general familiarity with Python.</p>
<p>Thanks to <a href="https://karpathy.ai/">Andrej Karpathy</a>’s phenomenal YouTube series on deep neural networks and LLMs titled <a href="https://www.youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ">Neural Networks: From Zero to Hero</a>, over the course of about 3 weeks or so I went from zero to… well I wouldn’t necessarily say <em>hero</em>—perhaps zero to <em>not-completley-clueless</em> is more apropos.</p>
<p>Andrej’s content is a fantastic resource to learn everything you need to know to understand how modern LLMs work from the ground-up. It’s not a short series—there are 19 hours, 21 minutes and two seconds of content across ten videos—and you’ll probably spend double that if you <em>really</em> want to properly absorb the content.</p>
<p>None of the work presented in this post would have been possible had I not invested the time in Andrej’s series. If you’re reading this Andrej, thanks, and keep up the brilliant work!</p>
<section id="training-gpt-2-124m-locally" class="level2">
<h2 class="anchored" data-anchor-id="training-gpt-2-124m-locally">Training GPT-2 (124M) Locally</h2>
<p>Equipped with my new knowledge about LLMs, PyTorch, and, thanks to Andrej’s final video in the series titled <a href="https://www.youtube.com/watch?v=l8pRSuU81PU&amp;list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ&amp;index=10&amp;t=1286s&amp;pp=iAQB">Let’s reproduce GPT-2 (124M)</a> and the accompanying <a href="https://github.com/karpathy/build-nanogpt">build-nanogpt</a> Github repo, I was able to train a local GPT-2 model via PyTorch, from scratch, using the <a href="https://huggingface.co/rhysjones/gpt2-124M-edu-fineweb-10B">edu_fineweb10B</a> dataset.</p>
<p>I only had to make one change in order to run locally: <a href="https://github.com/tpn/build-nanogpt/commit/0069c4a35d1a362c1fd50f9f5bce00a170e15904">Use 8 for micro batch size instead of 64</a>. With that change in place, I was able to train GPT-2 from scratch as follows:</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb21-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> conda activate py313</span>
<span id="cb21-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> git clone gh:tpn/build-nanogpt</span>
<span id="cb21-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> cd build-nanogpt</span>
<span id="cb21-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the fineweb dataset.</span></span>
<span id="cb21-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> python fineweb.py</span>
<span id="cb21-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Train!</span></span>
<span id="cb21-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> torchrun <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--standalone</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--nproc_per_node</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>4 train_gpt2.py</span></code></pre></div>
<p>This was run on an NVIDIA DGX workstation from 2017, which has an Intel Xeon(R) CPU E5-2698 v4 @ 2.20GHz (20 cores, 40 threads), and four Tesla V100-DGXS-32GB GPUs.</p>
<p>Training in parallel across all four GPUs yielded around 36,000 tokens/sec, with an average time of about 14.5 seconds per loop iteration. Training took about 3 days and 5 hours for 19,072 steps. All four GPUs were pegged close to their 300W power limit for those three days.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Amusingly, well after the fact, I decided to see what kind of training performance I’d get on my Windows 11 gaming box (via WSL2 and Ubuntu 22.04), which has an AMD Ryzen 9 7950X3D (16 cores, 32 threads) and NVIDIA RTX 4090. Training via <code>python train_gpt2.py</code> (<code>torchrun</code> wasn’t needed as I wasn’t using multiple GPUs) yielded about 45,000 tokens/sec, which is a nice bump, but what was most impressive was the reduction to the loop iteration duration, which averaged out to about 180ms!</p>
<p>So, I could have completed the same training process in about an hour or so, at a vastly reduced impact on my electricity bill that month :-)</p>
</div>
</div>
<p>Once training completes, a <code>log/model_19072.pt</code> file is produced, which is the checkpoint of the model at that final step, obtained via a call to <code>torch.save()</code>. The model has 124M parameters—which is tiny by modern standards—and is just under 500MB on disk.</p>
<p>You can download that very model I trained via the HuggingFace dataset I set up here: <a href="https://huggingface.co/datasets/trentnelson/parallelopedia-data-gpt2/blob/main/model_19072.pt">model_19072.pt</a>. Once downloaded, place the file in <code>$PARALLELOPEDIA_ROOT/data</code>; alternatively, if you run the Jupyter Notebook below, it’ll automatically download the model from HuggingFace on first run.</p>
</section>
</section>
<section id="pytorch-gpt-2-implementation" class="level1">
<h1>PyTorch GPT-2 Implementation</h1>
<p>Let’s introduce the first version of the Python code we’re going to use. Again, all of this has been made possible thanks to Andrej Karpathy’s work with his <a href="https://www.youtube.com/watch?v=l8pRSuU81PU&amp;list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ&amp;index=10&amp;t=1286s&amp;pp=iAQB">YouTube series</a> and <a href="https://github.com/karpathy/build-nanogpt">build-nanogpt</a> repo, so any and all code you see in this post can typically be traced back to something equivalent that appears in <a href="https://github.com/karpathy/build-nanogpt/blob/master/train_gpt2.py">train_gpt2.py</a>. None of this code would have made any sense to me a month or two ago—but I can promise you that if you devote sufficient time to watching and understanding the entire series, you’ll have a comprehensive understanding of all of the pieces present in this post.</p>
<p>You can follow along in a Jupyter Lab notebook if you activate the <code>py313</code> environment and launch <code>jupyter lab</code>. If you correctly registered your <code>py313t</code> kernel per the instructions earlier, you should see an option when creating a new notebook to use the <code>py313t</code> Python kernel, which will be the free-threaded version. On the right of this page you should see all of the notebooks referenced.</p>
<section id="first-version" class="level2">
<h2 class="anchored" data-anchor-id="first-version">First Version</h2>
<p>The code below roughly corresponds to my first version of the code in the commit <a href="https://github.com/tpn/parallelopedia/blob/3ed4fe60a767a12b31fca183fed00fef43c65827/src/parallelopedia/gpt2.py">3ed4fe6: Add gpt2.py</a>, with some formatting and style tweaks to ensure the code is viewable on mobile devices without requiring horizontal scrolling.</p>
<p>There are a number of deficiencies in this code, which we’ll address in subsequent versions. For now, it’s a good starting point to get a feel for how we can use PyTorch to load a GPT-2 model checkpoint, tokenize some input text, and generate some output text.</p>
<div class="quarto-embed-nb-cell">
<div id="gpt2-v1-setup" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gpt2_v1.ipynb</span></span>
<span id="cb22-2"></span>
<span id="cb22-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Imports</span></span>
<span id="cb22-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> dataclasses</span>
<span id="cb22-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dataclasses <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> dataclass</span>
<span id="cb22-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> logging</span>
<span id="cb22-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb22-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> os.path <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> join, exists</span>
<span id="cb22-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> subprocess</span>
<span id="cb22-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb22-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> textwrap <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> wrap</span>
<span id="cb22-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb22-15"></span>
<span id="cb22-16"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tiktoken</span>
<span id="cb22-17"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb22-18"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch.nn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nn</span>
<span id="cb22-19"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.nn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> functional <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> F</span>
<span id="cb22-20"></span>
<span id="cb22-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Helper Timer Class</span></span>
<span id="cb22-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> ElapsedTimer:</span>
<span id="cb22-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb22-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Context manager and reusable timer to measure elapsed time.</span></span>
<span id="cb22-27"></span>
<span id="cb22-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Example:</span></span>
<span id="cb22-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        timer = elapsed_timer()</span></span>
<span id="cb22-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        with timer:</span></span>
<span id="cb22-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            do_something()</span></span>
<span id="cb22-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        print(f'Elapsed: {timer.elapsed:.3f}')</span></span>
<span id="cb22-33"></span>
<span id="cb22-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        # Re-enterable:</span></span>
<span id="cb22-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        with timer:</span></span>
<span id="cb22-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            do_something_else()</span></span>
<span id="cb22-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        print(f'Elapsed: {timer.elapsed:.3f}')</span></span>
<span id="cb22-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb22-39"></span>
<span id="cb22-40">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb22-41">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb22-42">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._elapsed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb22-43"></span>
<span id="cb22-44">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__enter__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb22-45">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.perf_counter()</span>
<span id="cb22-46">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span></span>
<span id="cb22-47"></span>
<span id="cb22-48">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__exit__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, exc_type, exc_value, traceback):</span>
<span id="cb22-49">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._elapsed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.perf_counter() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.start</span>
<span id="cb22-50"></span>
<span id="cb22-51">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@property</span></span>
<span id="cb22-52">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> elapsed(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb22-53">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb22-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Return the elapsed time for the most recent context.</span></span>
<span id="cb22-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb22-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._elapsed <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb22-57">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ValueError</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Timer has not been used in a context yet."</span>)</span>
<span id="cb22-58">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._elapsed</span>
<span id="cb22-59"></span>
<span id="cb22-60"></span>
<span id="cb22-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Globals</span></span>
<span id="cb22-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-64"></span>
<span id="cb22-65">LOG_LEVEL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DEBUG'</span></span>
<span id="cb22-66">PARALLELOPEDIA_ROOT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PARALLELOPEDIA_ROOT'</span>]</span>
<span id="cb22-67">PARALLELOPEDIA_DATA_DIR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> join(PARALLELOPEDIA_ROOT, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>)</span>
<span id="cb22-68">MODEL_CHECKPOINT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> join(</span>
<span id="cb22-69">    PARALLELOPEDIA_DATA_DIR,</span>
<span id="cb22-70">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'model_19072.pt'</span>,</span>
<span id="cb22-71">)</span>
<span id="cb22-72">MODEL_DOWNLOAD_URL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb22-73">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://huggingface.co/datasets/trentnelson/"</span></span>
<span id="cb22-74">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parallelopedia-data-gpt2/resolve/main/model_19072.pt"</span></span>
<span id="cb22-75">)</span>
<span id="cb22-76"></span>
<span id="cb22-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the model from huggingface if necessary.</span></span>
<span id="cb22-78">os.makedirs(PARALLELOPEDIA_DATA_DIR, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb22-79"></span>
<span id="cb22-80"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> exists(MODEL_CHECKPOINT):</span>
<span id="cb22-81">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Downloading </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>MODEL_DOWNLOAD_URL<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> via wget '</span></span>
<span id="cb22-82">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'this might take a while...'</span>)</span>
<span id="cb22-83">    args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb22-84">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wget"</span>,</span>
<span id="cb22-85">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--quiet"</span>,</span>
<span id="cb22-86">        MODEL_DOWNLOAD_URL,</span>
<span id="cb22-87">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-P"</span>,</span>
<span id="cb22-88">        PARALLELOPEDIA_DATA_DIR,</span>
<span id="cb22-89">    ]</span>
<span id="cb22-90">    timer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ElapsedTimer()</span>
<span id="cb22-91">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> timer:</span>
<span id="cb22-92">        subprocess.run(args, check<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb22-93">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Downloaded model in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>timer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>elapsed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds.'</span>)</span>
<span id="cb22-94">    </span>
<span id="cb22-95"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> exists(MODEL_CHECKPOINT), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Missing checkpoint."</span></span>
<span id="cb22-96"></span>
<span id="cb22-97"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-98"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Logging</span></span>
<span id="cb22-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-100"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># N.B. We redirect logs to sys.stdout in order for Quarto to pick</span></span>
<span id="cb22-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      them up and include them in rendering the output.</span></span>
<span id="cb22-102">logging.basicConfig(</span>
<span id="cb22-103">    level<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">getattr</span>(logging, LOG_LEVEL),</span>
<span id="cb22-104">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(asctime)s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(levelname)s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(message)s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb22-105">    stream<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sys.stdout</span>
<span id="cb22-106">)</span>
<span id="cb22-107"></span>
<span id="cb22-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-109"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Setup</span></span>
<span id="cb22-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-111"></span>
<span id="cb22-112"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use bfloat16 for matmul precision where possible.</span></span>
<span id="cb22-113">torch.set_float32_matmul_precision(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'high'</span>)</span>
<span id="cb22-114"></span>
<span id="cb22-115"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPT2 PyTorch Model Components</span></span>
<span id="cb22-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-118"></span>
<span id="cb22-119"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Now define the classes making up our GPT2 implementation.</span></span>
<span id="cb22-120"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># These map directly to the components introduced by the</span></span>
<span id="cb22-121"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># now-seminal 2017 "Attention Is All You Need" paper.</span></span>
<span id="cb22-122"></span>
<span id="cb22-123"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> CausalSelfAttention(nn.Module):</span>
<span id="cb22-124">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb22-125"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Causal self-attention for the GPT2 model.</span></span>
<span id="cb22-126"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb22-127"></span>
<span id="cb22-128">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, config):</span>
<span id="cb22-129">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb22-130">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> config.n_embd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> config.n_head <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb22-131">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Key, query, value projections for all heads, but in a batch.</span></span>
<span id="cb22-132">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.c_attn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(config.n_embd, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> config.n_embd)</span>
<span id="cb22-133"></span>
<span id="cb22-134">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output projection.</span></span>
<span id="cb22-135">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.c_proj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(config.n_embd, config.n_embd)</span>
<span id="cb22-136">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.c_proj.NANOGPT_SCALE_INIT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb22-137"></span>
<span id="cb22-138">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Regularization.</span></span>
<span id="cb22-139">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.n_head <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> config.n_head</span>
<span id="cb22-140">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.n_embd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> config.n_embd</span>
<span id="cb22-141"></span>
<span id="cb22-142">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb22-143">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Batch size, sequence length, embedding dimensionality.</span></span>
<span id="cb22-144">        B, T, C <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x.size())</span>
<span id="cb22-145"></span>
<span id="cb22-146">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate query, key, values for all heads in</span></span>
<span id="cb22-147">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># batch and move head forward to be the batch dim.</span></span>
<span id="cb22-148">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb22-149">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># N.B. nh is "number of heads", hs is "head size",</span></span>
<span id="cb22-150">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      and C (number of channels) is nh * hs.</span></span>
<span id="cb22-151">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      E.g. in GPT-2 (124M), n_head=12, hs=64, so</span></span>
<span id="cb22-152">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      nh*hs=C=768 channels in the Transformer.</span></span>
<span id="cb22-153">        qkv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.c_attn(x)</span>
<span id="cb22-154">        q, k, v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> qkv.split(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.n_embd, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb22-155"></span>
<span id="cb22-156">        head_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> C <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.n_head</span>
<span id="cb22-157"></span>
<span id="cb22-158">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (B, nh, T, hs)</span></span>
<span id="cb22-159">        k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> k.view(B, T, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.n_head, head_dim).transpose(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb22-160"></span>
<span id="cb22-161">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (B, nh, T, hs)</span></span>
<span id="cb22-162">        q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> q.view(B, T, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.n_head, head_dim).transpose(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb22-163"></span>
<span id="cb22-164">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (B, nh, T, hs)</span></span>
<span id="cb22-165">        v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v.view(B, T, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.n_head, head_dim).transpose(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb22-166"></span>
<span id="cb22-167">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Flash attention.</span></span>
<span id="cb22-168">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> F.scaled_dot_product_attention(q, k, v, is_causal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb22-169"></span>
<span id="cb22-170">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Re-assemble all head outputs side by side.</span></span>
<span id="cb22-171">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (y.transpose(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).contiguous().view(B, T, C))</span>
<span id="cb22-172"></span>
<span id="cb22-173">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output projection.</span></span>
<span id="cb22-174">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.c_proj(y)</span>
<span id="cb22-175">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> y</span>
<span id="cb22-176"></span>
<span id="cb22-177"></span>
<span id="cb22-178"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> MLP(nn.Module):</span>
<span id="cb22-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb22-180"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Multi-layer perceptron for the GPT2 model.</span></span>
<span id="cb22-181"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb22-182"></span>
<span id="cb22-183">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, config):</span>
<span id="cb22-184">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb22-185">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.c_fc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(config.n_embd, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> config.n_embd)</span>
<span id="cb22-186">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.gelu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.GELU(approximate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tanh'</span>)</span>
<span id="cb22-187">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.c_proj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> config.n_embd, config.n_embd)</span>
<span id="cb22-188">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.c_proj.NANOGPT_SCALE_INIT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb22-189"></span>
<span id="cb22-190">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb22-191">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.c_fc(x)</span>
<span id="cb22-192">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.gelu(x)</span>
<span id="cb22-193">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.c_proj(x)</span>
<span id="cb22-194">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x</span>
<span id="cb22-195"></span>
<span id="cb22-196"></span>
<span id="cb22-197"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Block(nn.Module):</span>
<span id="cb22-198">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb22-199"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Transformer block for the GPT2 model.</span></span>
<span id="cb22-200"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb22-201"></span>
<span id="cb22-202">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, config):</span>
<span id="cb22-203">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb22-204">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.ln_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.LayerNorm(config.n_embd)</span>
<span id="cb22-205">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.attn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CausalSelfAttention(config)</span>
<span id="cb22-206">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.ln_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.LayerNorm(config.n_embd)</span>
<span id="cb22-207">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mlp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MLP(config)</span>
<span id="cb22-208"></span>
<span id="cb22-209">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb22-210">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.attn(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.ln_1(x))</span>
<span id="cb22-211">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mlp(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.ln_2(x))</span>
<span id="cb22-212">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x</span>
<span id="cb22-213"></span>
<span id="cb22-214"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-215"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPT2 Supporting Classes</span></span>
<span id="cb22-216"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-217"></span>
<span id="cb22-218"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># N.B. These differ slightly from Andrej's classes in</span></span>
<span id="cb22-219"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      `train_gpt2.py`.  `GPTCheckpoint` is a helper</span></span>
<span id="cb22-220"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      class I wrote that has no analog in the former.</span></span>
<span id="cb22-221"></span>
<span id="cb22-222"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@dataclass</span></span>
<span id="cb22-223"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GPTConfig:</span>
<span id="cb22-224">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb22-225"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Configuration class for GPT model.</span></span>
<span id="cb22-226"></span>
<span id="cb22-227"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Attributes:</span></span>
<span id="cb22-228"></span>
<span id="cb22-229"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        block_size (int): Maximum sequence length.</span></span>
<span id="cb22-230"></span>
<span id="cb22-231"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        vocab_size (int): Number of tokens.  GPT2 from</span></span>
<span id="cb22-232"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            huggingface has a vocab size of 50257, which</span></span>
<span id="cb22-233"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            includes 50,000 BPE merges, 256 byte tokens,</span></span>
<span id="cb22-234"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            and 1 &lt;|endoftext|&gt; token.  However, Andrej</span></span>
<span id="cb22-235"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            Karpathy's `build-nanogpt/train_gpt2.py`</span></span>
<span id="cb22-236"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            uses a vocab size of 50304.  I vaguely recall</span></span>
<span id="cb22-237"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            the explanation for this discrepancy as a local</span></span>
<span id="cb22-238"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            optimization to yield better alignment sizes,</span></span>
<span id="cb22-239"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            but I'm not 100% certain.</span></span>
<span id="cb22-240"></span>
<span id="cb22-241"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            The local GPT2 training that we did on</span></span>
<span id="cb22-242"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            edu_fineweb10b used 50304, so we will use</span></span>
<span id="cb22-243"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            that here.</span></span>
<span id="cb22-244"></span>
<span id="cb22-245"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        n_layer (int): Number of layers.</span></span>
<span id="cb22-246"></span>
<span id="cb22-247"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        n_head (int): Number of attention heads.</span></span>
<span id="cb22-248"></span>
<span id="cb22-249"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        n_embd (int): Embedding dimension.</span></span>
<span id="cb22-250"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb22-251">    block_size: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span></span>
<span id="cb22-252">    vocab_size: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50304</span></span>
<span id="cb22-253">    n_layer: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb22-254">    n_head: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb22-255">    n_embd: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">768</span></span>
<span id="cb22-256"></span>
<span id="cb22-257"></span>
<span id="cb22-258"></span>
<span id="cb22-259"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-260"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPT2 Model Implementation</span></span>
<span id="cb22-261"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===================================================================</span></span>
<span id="cb22-262"></span>
<span id="cb22-263"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GPT(nn.Module):</span>
<span id="cb22-264"></span>
<span id="cb22-265">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, config, device):</span>
<span id="cb22-266">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb22-267">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> config</span>
<span id="cb22-268">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> device</span>
<span id="cb22-269">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.manual_seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb22-270"></span>
<span id="cb22-271">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.transformer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.ModuleDict(</span>
<span id="cb22-272">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(</span>
<span id="cb22-273">                wte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>nn.Embedding(config.vocab_size, config.n_embd),</span>
<span id="cb22-274">                wpe<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>nn.Embedding(config.block_size, config.n_embd),</span>
<span id="cb22-275">                h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>nn.ModuleList(</span>
<span id="cb22-276">                    [Block(config) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(config.n_layer)]</span>
<span id="cb22-277">                ),</span>
<span id="cb22-278">                ln_f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>nn.LayerNorm(config.n_embd),</span>
<span id="cb22-279">            )</span>
<span id="cb22-280">        )</span>
<span id="cb22-281">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lm_head <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Linear(</span>
<span id="cb22-282">            config.n_embd, config.vocab_size, bias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb22-283">        )</span>
<span id="cb22-284"></span>
<span id="cb22-285">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.transformer.wte.weight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lm_head.weight</span>
<span id="cb22-286">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._init_weights)</span>
<span id="cb22-287"></span>
<span id="cb22-288">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> _init_weights(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, module):</span>
<span id="cb22-289">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(module, nn.Linear):</span>
<span id="cb22-290">            std <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span></span>
<span id="cb22-291">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hasattr</span>(module, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NANOGPT_SCALE_INIT"</span>):</span>
<span id="cb22-292">                std <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.config.n_layer) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb22-293">            torch.nn.init.normal_(module.weight, mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>std)</span>
<span id="cb22-294">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> module.bias <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb22-295">                torch.nn.init.zeros_(module.bias)</span>
<span id="cb22-296">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(module, nn.Embedding):</span>
<span id="cb22-297">            torch.nn.init.normal_(module.weight, mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>)</span>
<span id="cb22-298"></span>
<span id="cb22-299">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, idx, targets<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb22-300">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb22-301"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Forward pass of the GPT model.</span></span>
<span id="cb22-302"></span>
<span id="cb22-303"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Args:</span></span>
<span id="cb22-304"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            idx (torch.Tensor): Supplies the input tensor of shape</span></span>
<span id="cb22-305"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                (B, T).</span></span>
<span id="cb22-306"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            targets (torch.Tensor): Optionally supplies the target</span></span>
<span id="cb22-307"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                tensor of shape (B, T) for computing the loss.</span></span>
<span id="cb22-308"></span>
<span id="cb22-309"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb22-310">        (B, T) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> idx.size()</span>
<span id="cb22-311"></span>
<span id="cb22-312">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forward the token and position embeddings.</span></span>
<span id="cb22-313"></span>
<span id="cb22-314">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Shape (T)</span></span>
<span id="cb22-315">        pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, T, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">long</span>, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>idx.device)</span>
<span id="cb22-316"></span>
<span id="cb22-317">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Position embeddings of shape (T, n_embd).</span></span>
<span id="cb22-318">        pos_emb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.transformer.wpe(pos)</span>
<span id="cb22-319"></span>
<span id="cb22-320">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Token embeddings of shape (B, T, n_embd).</span></span>
<span id="cb22-321">        tok_emb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.transformer.wte(idx)</span>
<span id="cb22-322"></span>
<span id="cb22-323">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tok_emb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pos_emb</span>
<span id="cb22-324"></span>
<span id="cb22-325">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forward the blocks of the transformer.</span></span>
<span id="cb22-326">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> block <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.transformer.h:</span>
<span id="cb22-327">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> block(x)</span>
<span id="cb22-328"></span>
<span id="cb22-329">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forward the final layernorm and the classifier.</span></span>
<span id="cb22-330">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.transformer.ln_f(x)</span>
<span id="cb22-331"></span>
<span id="cb22-332">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (B, T, vocab_size)</span></span>
<span id="cb22-333">        logits <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lm_head(x)</span>
<span id="cb22-334"></span>
<span id="cb22-335">        loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb22-336">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> targets <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb22-337">            loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> F.cross_entropy(</span>
<span id="cb22-338">                logits.view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, logits.size(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)), targets.view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb22-339">            )</span>
<span id="cb22-340"></span>
<span id="cb22-341">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (logits, loss)</span>
<span id="cb22-342"></span>
<span id="cb22-343">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@classmethod</span></span>
<span id="cb22-344">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> from_local_pretrained(</span>
<span id="cb22-345">        cls, model_path: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, map_location: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span></span>
<span id="cb22-346">    ):</span>
<span id="cb22-347">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb22-348"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Load a model from a local checkpoint.</span></span>
<span id="cb22-349"></span>
<span id="cb22-350"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        N.B. This is a new method based off GPT.from_pretrained</span></span>
<span id="cb22-351"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">             in Andrej Karpathy's train_gpt2.py.</span></span>
<span id="cb22-352"></span>
<span id="cb22-353"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Args:</span></span>
<span id="cb22-354"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            cls (type): Supplies the class type.</span></span>
<span id="cb22-355"></span>
<span id="cb22-356"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            model_path (str): Supplies the path to the model</span></span>
<span id="cb22-357"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                checkpoint.</span></span>
<span id="cb22-358"></span>
<span id="cb22-359"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            map_location (str): Supplies the device to which</span></span>
<span id="cb22-360"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                the model will be mapped.</span></span>
<span id="cb22-361"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb22-362">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> torch.serialization.safe_globals([GPTConfig]):</span>
<span id="cb22-363">            checkpoint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.load(</span>
<span id="cb22-364">                model_path,</span>
<span id="cb22-365">                map_location<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>map_location,</span>
<span id="cb22-366">            )</span>
<span id="cb22-367"></span>
<span id="cb22-368">        config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"config"</span>]</span>
<span id="cb22-369">        config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GPTConfig(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"config"</span>])</span>
<span id="cb22-370">        model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cls(config, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>map_location)</span>
<span id="cb22-371">        model.load_state_dict(checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model"</span>])</span>
<span id="cb22-372">        model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()</span>
<span id="cb22-373"></span>
<span id="cb22-374">        msg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb22-375">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Loaded model from step </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'step'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, "</span></span>
<span id="cb22-376">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"val_loss </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'val_loss'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-377">        )</span>
<span id="cb22-378">        logging.info(msg)</span>
<span id="cb22-379">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> model</span>
<span id="cb22-380"></span>
<span id="cb22-381">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate(</span>
<span id="cb22-382">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, text: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, max_length: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>, top_k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb22-383">        seed: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb22-384">    ) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb22-385">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb22-386"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Generate text from the model.</span></span>
<span id="cb22-387"></span>
<span id="cb22-388"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        N.B. This is a new method based off the generation code</span></span>
<span id="cb22-389"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">             present in Andrej Karpathy's train_gpt2.py.</span></span>
<span id="cb22-390"></span>
<span id="cb22-391"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Args:</span></span>
<span id="cb22-392"></span>
<span id="cb22-393"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            text (str): Supplies the prompt.</span></span>
<span id="cb22-394"></span>
<span id="cb22-395"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            max_length (int): Supplies the maximum total length,</span></span>
<span id="cb22-396"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                including prompt.</span></span>
<span id="cb22-397"></span>
<span id="cb22-398"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            top_k (int): Supplies the number of tokens to consider</span></span>
<span id="cb22-399"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                at each generation step.</span></span>
<span id="cb22-400"></span>
<span id="cb22-401"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            seed (int): Optionally supplies the manual seed to use</span></span>
<span id="cb22-402"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                for the generator.  If None, the model's manual</span></span>
<span id="cb22-403"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                seed will be used.</span></span>
<span id="cb22-404"></span>
<span id="cb22-405"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Returns:</span></span>
<span id="cb22-406"></span>
<span id="cb22-407"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            str: The generated text (including the initial prompt).</span></span>
<span id="cb22-408"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb22-409">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()</span>
<span id="cb22-410">        device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.device</span>
<span id="cb22-411">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Obtain our GPT2 tokenizer, and resolve the stop token.</span></span>
<span id="cb22-412">        enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tiktoken.get_encoding(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt2"</span>)</span>
<span id="cb22-413">        stop_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;|endoftext|&gt;'</span></span>
<span id="cb22-414">        stop_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> enc.n_vocab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb22-415">        actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> enc.decode([stop_token])</span>
<span id="cb22-416">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> stop_string, (</span>
<span id="cb22-417">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"expected </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>stop_string<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, got </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>actual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-418">        )</span>
<span id="cb22-419"></span>
<span id="cb22-420">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Encode the prompt.</span></span>
<span id="cb22-421">        tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> enc.encode(text)</span>
<span id="cb22-422">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor(</span>
<span id="cb22-423">            tokens, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">long</span>, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>device</span>
<span id="cb22-424">        ).unsqueeze(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb22-425"></span>
<span id="cb22-426">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a random generator for reproducibility.</span></span>
<span id="cb22-427">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> seed <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb22-428">            seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.manual_seed</span>
<span id="cb22-429">        sample_rng <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.Generator(device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>device)</span>
<span id="cb22-430">        sample_rng.manual_seed(seed)</span>
<span id="cb22-431"></span>
<span id="cb22-432">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate tokens up to our max length, or until we hit the</span></span>
<span id="cb22-433">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># stop token.</span></span>
<span id="cb22-434">        start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.perf_counter()</span>
<span id="cb22-435">        count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb22-436">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> x.size(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> max_length:</span>
<span id="cb22-437">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb22-438">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb22-439">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forward pass, ignoring the returned loss.</span></span>
<span id="cb22-440">                (logits, _) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>(x)</span>
<span id="cb22-441"></span>
<span id="cb22-442">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Take the logits at the last time-step (shape:</span></span>
<span id="cb22-443">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (1, vocab_size)).</span></span>
<span id="cb22-444">            logits <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> logits[:, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :]</span>
<span id="cb22-445"></span>
<span id="cb22-446">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to probabilities.</span></span>
<span id="cb22-447">            probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> F.softmax(logits, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb22-448"></span>
<span id="cb22-449">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Top-k sampling.</span></span>
<span id="cb22-450">            topk_probs, topk_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.topk(</span>
<span id="cb22-451">                probs, k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>top_k, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb22-452">            )</span>
<span id="cb22-453"></span>
<span id="cb22-454">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample the next token.</span></span>
<span id="cb22-455">            next_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.multinomial(</span>
<span id="cb22-456">                topk_probs, num_samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, generator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sample_rng</span>
<span id="cb22-457">            )</span>
<span id="cb22-458">            next_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.gather(topk_indices, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, next_idx)</span>
<span id="cb22-459"></span>
<span id="cb22-460">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If the next token is the stop token, we're done.</span></span>
<span id="cb22-461">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> next_token.item() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> stop_token:</span>
<span id="cb22-462">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb22-463"></span>
<span id="cb22-464">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Otherwise, append the token to the current sequence</span></span>
<span id="cb22-465">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># and continue generation.</span></span>
<span id="cb22-466">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cat((x, next_token), dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb22-467"></span>
<span id="cb22-468">        end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.perf_counter()</span>
<span id="cb22-469">        elapsed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start</span>
<span id="cb22-470">        tokens_per_sec <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(count) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> elapsed</span>
<span id="cb22-471"></span>
<span id="cb22-472">        msg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb22-473">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Generated </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>count<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> tokens in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>elapsed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds '</span></span>
<span id="cb22-474">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tokens_per_sec<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> tokens/sec)'</span></span>
<span id="cb22-475">        )</span>
<span id="cb22-476">        logging.debug(msg)</span>
<span id="cb22-477"></span>
<span id="cb22-478">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Decode the output tokens and return the generated text,</span></span>
<span id="cb22-479">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># including the initial prompt.</span></span>
<span id="cb22-480">        output_tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].tolist()</span>
<span id="cb22-481">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> enc.decode(output_tokens)</span>
<span id="cb22-482"></span></code></pre></div>
</details>
</div>
<a class="quarto-notebook-link" id="nblink-1" href="gpt2_v1-preview.html#cell-gpt2-v1-setup">Source: gpt2_v1.ipynb</a></div>
</section>
<section id="loading-the-model" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-model">Loading the Model</h2>
<p>With the code above executed in a preceding Jupyter Notebook cell, we can load the model as follows:</p>
<div class="quarto-embed-nb-cell">
<div id="cell-gpt2-v1-load-model" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GPT.from_local_pretrained(</span>
<span id="cb23-2">    MODEL_CHECKPOINT,</span>
<span id="cb23-3">    map_location<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>,</span>
<span id="cb23-4">)</span>
<span id="cb23-5">model.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2025-02-06 15:12:03,802 - INFO - Loaded model from step 19072, val_loss 3.0519702434539795</code></pre>
</div>
<div id="gpt2-v1-load-model" class="cell-output cell-output-display" data-execution_count="2">
<pre><code>GPT(
  (transformer): ModuleDict(
    (wte): Embedding(50304, 768)
    (wpe): Embedding(1024, 768)
    (h): ModuleList(
      (0-11): 12 x Block(
        (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (attn): CausalSelfAttention(
          (c_attn): Linear(in_features=768, out_features=2304, bias=True)
          (c_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (mlp): MLP(
          (c_fc): Linear(in_features=768, out_features=3072, bias=True)
          (gelu): GELU(approximate='tanh')
          (c_proj): Linear(in_features=3072, out_features=768, bias=True)
        )
      )
    )
    (ln_f): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
  )
  (lm_head): Linear(in_features=768, out_features=50304, bias=False)
)</code></pre>
</div>
</div>
</div>
</section>
<section id="generating-text" class="level2">
<h2 class="anchored" data-anchor-id="generating-text">Generating Text</h2>
<p>Once we’ve got a model instance, text can be generated by simply calling the model’s <code>generate()</code> function with a prompt, and, optionally, some additional parameters like seed and max length. This is also referred to as inference—the two terms are interchangeable, and mean the same thing: the act of providing some input tokens—your encoded prompt—to your trained model, and having it generate tokens in response.</p>
<p>Note that this isn’t a <em>chat</em> or <em>instruction</em> model, nor has it been fine-tuned to remotely resemble something actually usable. So you can’t ask it questions or have it write code for you.</p>
<p>What you can do, though, is provide it with a half written sentence, and then laugh at the ridiculous content it generates in response. Although note that its syntax is pretty good—the model has clearly learned enough during training about how the English language is structured, which words make sense when placed together, that sort of thing. It just has no clue about underlying semantics.</p>
<div class="desktop-only">
<div class="quarto-embed-nb-cell">
<div id="gpt2-v1-generate-1-desktop" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Albert Einstein's Theory of Relativity stated that"</span></span>
<span id="cb26-2">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(prompt, seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb26-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join(wrap(result, width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">105</span>)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2025-02-06 15:12:05,068 - DEBUG - Generated 79 tokens in 0.77 seconds (102.55 tokens/sec)
Albert Einstein's Theory of Relativity stated that the speed of light was approximately 10 000 of
parsecs, whereas quantum physicists have suggested that, as we move further into the universe, the
universe might grow older. The new experiment, conducted by researchers at the University of New Jersey,
New York, and the University of California, Berkeley shows that photons travelling at the speed of light
will be around 30 to 65 kilometres per second.</code></pre>
</div>
</div>
</div>
</div>
<div class="tablet-only">
<div class="quarto-embed-nb-cell">
<div id="gpt2-v1-generate-1-tablet" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Albert Einstein's Theory of Relativity stated that"</span></span>
<span id="cb28-2">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(prompt, seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb28-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join(wrap(result, width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">58</span>)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2025-02-06 15:12:05,620 - DEBUG - Generated 79 tokens in 0.55 seconds (144.83 tokens/sec)
Albert Einstein's Theory of Relativity stated that the
speed of light was approximately 10 000 of parsecs,
whereas quantum physicists have suggested that, as we move
further into the universe, the universe might grow older.
The new experiment, conducted by researchers at the
University of New Jersey, New York, and the University of
California, Berkeley shows that photons travelling at the
speed of light will be around 30 to 65 kilometres per
second.</code></pre>
</div>
</div>
</div>
</div>
<div class="phone-only">
<div class="quarto-embed-nb-cell">
<div id="gpt2-v1-generate-1-phone" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Albert Einstein's Theory of Relativity stated that"</span></span>
<span id="cb30-2">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(prompt, seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb30-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join(wrap(result, width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2025-02-06 15:12:06,179 - DEBUG - Generated 79 tokens in 0.55 seconds (143.23 tokens/sec)
Albert Einstein's Theory of Relativity stated
that the speed of light was approximately 10
000 of parsecs, whereas quantum physicists
have suggested that, as we move further into
the universe, the universe might grow older.
The new experiment, conducted by researchers
at the University of New Jersey, New York,
and the University of California, Berkeley
shows that photons travelling at the speed of
light will be around 30 to 65 kilometres per
second.</code></pre>
</div>
</div>
</div>
</div>
<p>Now, it’s worth noting at this point that a 124 million parameter GPT2 model, trained from scratch for 19,072 iterations on the <code>edu_fineweb10b</code> data set, with a final loss score of 3.052, is, quite frankly, hot garbage :-)</p>
<p>Do not be expecting output from this model to rival anything close to what you’d expect from a contemporary LLM. In fact, we can’t even rely on it to even remotely generate content that is factual in nature. It spews hot probabilisitic garbage that mostly conforms to the structure of the English language.</p>
<p>But at least it’s <em>our</em> hot garbage that we trained from nothing, and it’s all we need to start playing around with generating text in parallel.</p>
<div class="callout callout-style-simple callout-note no-icon callout-titled" title="Hot Garbage Example">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-6-contents" aria-controls="callout-6" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Hot Garbage Example
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-6" class="callout-6-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>Provide a slightly different seed to the prompt above and you’ll precisely see some hot garbage generation in action. In the following example, with an identical prompt as the one prior, it just streams nonsense until hitting its max token limit, nary a stop token in sight.</p>
<div class="desktop-only">
<div class="quarto-embed-nb-cell">
<div id="gpt2-v1-generate-2-desktop" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(prompt, seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20190903</span>)</span>
<span id="cb32-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join(wrap(result, width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2025-02-06 15:12:22,030 - DEBUG - Generated 1015 tokens in 15.84 seconds (64.07 tokens/sec)
Albert Einstein's Theory of Relativity stated that the speed of light is the same as it is in two
places, which means that a given speed can either be described by two different speed equations
directly or they may be both equations. It is then assumed that the speed of light is the speed of
the universe or the universe's existence relative to Earth. In relativity, a measure of the speed of
light is the absolute speed of the light. As long as the speed of light is less than its speed in
two different places, the absolute speed can be calculated. For example, the absolute speed is
1/2990000000 (2,299,792,458) km/hr with an absolute speed about 10 times as fast as it is in two
different places. Now we can use the following equation to describe the speed of light: E = C/C2 The
speed of light, as a function of C, is a constant. By Einstein's definition of relativity, the speed
of light is a constant. This is because light travels at its maximum speed along the direction (if
it's travelling above the speed of light, the point where light must be observed is called
"aperture" of the speed of light). The speed of light is about half as fast as the speed of light
because the speed of light has a smaller varying velocity for each direction of radiation. The speed
of light, as a function of C, is a constant. The speed of a wave is the constant measured along the
direction of the wave relative to its location in space. E = C/C2 where E is the speed of light
along the direction of the wave. Because the speed of the wave is the speed of the particle in the
wave, and c the speed of the particle, E's is also given by the speed of light. For example, a light
particle is moving from its place of greatest velocity to its location of greatest velocity. E.g. C
= F/d, C = d/d For most materials and most other objects, the speed of light is the same for all
wavelengths. The speed of light is, on the other hand, the speed of the energy form of a photon.
E.g. c = C/d, C = e/d For most particles, light travels over one degree of separation and this is
how photons interact with other particles. We can compare a particle's velocity to an object's
velocity. The speed of light is measured by the distance between the particle's nose and the surface
of the object. For example, a photon of light emits the energy of a single photon. If a photon of
another type is fired at the same speed as the first, it will get out of the light, but a photon of
the other type will not get back to the ground. The fractional energy will be reduced. The distance
between two photons of the same type will be reduced to the square of their energies. E.g. C = C/C2,
C = -D/d., D = 9/6 A photon of color does not have sufficient energy to be emitted by that color and
is therefore subject to The speed of light is the change in velocity over time. This is a constant,
but sometimes it is possible to express it like this: E = c2/e In relativity, the length of the
distance is the length of time the length of wave is divided by the speed of light. E.g. a beam of
light travelling at about 9.2 miles per second must travel at around 7.3 miles per second to get
E.g. a beam moving at 3.2 miles per second must travel at around 8 miles per second to get E.g. a
beam moving at 1.8 miles per second must travel at 9.0 miles per second to get E.g. an object going
at 2.3 miles per second must travel at 1.8 miles per second to get E.g. a beam moving at 2.3 miles
per second must travel at 3.4 miles per second to get E.g.. a beam traveling at 3.4 miles per second
to get E.g.. a beam moving at 2.3 miles per second must travel at 3.8 miles per second to get E.g..
a beam traveling at 3.8 miles per second to get E.g.. a beam moving at about 4.4 miles per second
must travel at about 3.9 miles per second to get E.g.. a beam moving at 5.5 miles per second to get
a beam moving at 5.9 miles per S.G.D.. is the same thing as a mass. The distance is a unit in terms
of the speed of light. Determining the speed of light is an additional measure of the energy. For
most things</code></pre>
</div>
</div>
</div>
</div>
<div class="tablet-only">
<div class="quarto-embed-nb-cell">
<div id="gpt2-v1-generate-2-tablet" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(prompt, seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20190903</span>)</span>
<span id="cb34-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join(wrap(result, width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">54</span>)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2025-02-06 15:12:37,853 - DEBUG - Generated 1015 tokens in 15.82 seconds (64.18 tokens/sec)
Albert Einstein's Theory of Relativity stated that the
speed of light is the same as it is in two places,
which means that a given speed can either be described
by two different speed equations directly or they may
be both equations. It is then assumed that the speed
of light is the speed of the universe or the
universe's existence relative to Earth. In relativity,
a measure of the speed of light is the absolute speed
of the light. As long as the speed of light is less
than its speed in two different places, the absolute
speed can be calculated. For example, the absolute
speed is 1/2990000000 (2,299,792,458) km/hr with an
absolute speed about 10 times as fast as it is in two
different places. Now we can use the following
equation to describe the speed of light: E = C/C2 The
speed of light, as a function of C, is a constant. By
Einstein's definition of relativity, the speed of
light is a constant. This is because light travels at
its maximum speed along the direction (if it's
travelling above the speed of light, the point where
light must be observed is called "aperture" of the
speed of light). The speed of light is about half as
fast as the speed of light because the speed of light
has a smaller varying velocity for each direction of
radiation. The speed of light, as a function of C, is
a constant. The speed of a wave is the constant
measured along the direction of the wave relative to
its location in space. E = C/C2 where E is the speed
of light along the direction of the wave. Because the
speed of the wave is the speed of the particle in the
wave, and c the speed of the particle, E's is also
given by the speed of light. For example, a light
particle is moving from its place of greatest velocity
to its location of greatest velocity. E.g. C = F/d, C
= d/d For most materials and most other objects, the
speed of light is the same for all wavelengths. The
speed of light is, on the other hand, the speed of the
energy form of a photon. E.g. c = C/d, C = e/d For
most particles, light travels over one degree of
separation and this is how photons interact with other
particles. We can compare a particle's velocity to an
object's velocity. The speed of light is measured by
the distance between the particle's nose and the
surface of the object. For example, a photon of light
emits the energy of a single photon. If a photon of
another type is fired at the same speed as the first,
it will get out of the light, but a photon of the
other type will not get back to the ground. The
fractional energy will be reduced. The distance
between two photons of the same type will be reduced
to the square of their energies. E.g. C = C/C2, C =
-D/d., D = 9/6 A photon of color does not have
sufficient energy to be emitted by that color and is
therefore subject to The speed of light is the change
in velocity over time. This is a constant, but
sometimes it is possible to express it like this: E =
c2/e In relativity, the length of the distance is the
length of time the length of wave is divided by the
speed of light. E.g. a beam of light travelling at
about 9.2 miles per second must travel at around 7.3
miles per second to get E.g. a beam moving at 3.2
miles per second must travel at around 8 miles per
second to get E.g. a beam moving at 1.8 miles per
second must travel at 9.0 miles per second to get E.g.
an object going at 2.3 miles per second must travel at
1.8 miles per second to get E.g. a beam moving at 2.3
miles per second must travel at 3.4 miles per second
to get E.g.. a beam traveling at 3.4 miles per second
to get E.g.. a beam moving at 2.3 miles per second
must travel at 3.8 miles per second to get E.g.. a
beam traveling at 3.8 miles per second to get E.g.. a
beam moving at about 4.4 miles per second must travel
at about 3.9 miles per second to get E.g.. a beam
moving at 5.5 miles per second to get a beam moving at
5.9 miles per S.G.D.. is the same thing as a mass. The
distance is a unit in terms of the speed of light.
Determining the speed of light is an additional
measure of the energy. For most things</code></pre>
</div>
</div>
</div>
</div>
<div class="phone-only">
<div class="quarto-embed-nb-cell">
<div id="gpt2-v1-generate-2-phone" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(prompt, seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20190903</span>)</span>
<span id="cb36-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join(wrap(result, width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2025-02-06 15:12:53,952 - DEBUG - Generated 1015 tokens in 16.09 seconds (63.08 tokens/sec)
Albert Einstein's Theory of Relativity
stated that the speed of light is the
same as it is in two places, which means
that a given speed can either be
described by two different speed
equations directly or they may be both
equations. It is then assumed that the
speed of light is the speed of the
universe or the universe's existence
relative to Earth. In relativity, a
measure of the speed of light is the
absolute speed of the light. As long as
the speed of light is less than its
speed in two different places, the
absolute speed can be calculated. For
example, the absolute speed is
1/2990000000 (2,299,792,458) km/hr with
an absolute speed about 10 times as fast
as it is in two different places. Now we
can use the following equation to
describe the speed of light: E = C/C2
The speed of light, as a function of C,
is a constant. By Einstein's definition
of relativity, the speed of light is a
constant. This is because light travels
at its maximum speed along the direction
(if it's travelling above the speed of
light, the point where light must be
observed is called "aperture" of the
speed of light). The speed of light is
about half as fast as the speed of light
because the speed of light has a smaller
varying velocity for each direction of
radiation. The speed of light, as a
function of C, is a constant. The speed
of a wave is the constant measured along
the direction of the wave relative to
its location in space. E = C/C2 where E
is the speed of light along the
direction of the wave. Because the speed
of the wave is the speed of the particle
in the wave, and c the speed of the
particle, E's is also given by the speed
of light. For example, a light particle
is moving from its place of greatest
velocity to its location of greatest
velocity. E.g. C = F/d, C = d/d For most
materials and most other objects, the
speed of light is the same for all
wavelengths. The speed of light is, on
the other hand, the speed of the energy
form of a photon. E.g. c = C/d, C = e/d
For most particles, light travels over
one degree of separation and this is how
photons interact with other particles.
We can compare a particle's velocity to
an object's velocity. The speed of light
is measured by the distance between the
particle's nose and the surface of the
object. For example, a photon of light
emits the energy of a single photon. If
a photon of another type is fired at the
same speed as the first, it will get out
of the light, but a photon of the other
type will not get back to the ground.
The fractional energy will be reduced.
The distance between two photons of the
same type will be reduced to the square
of their energies. E.g. C = C/C2, C =
-D/d., D = 9/6 A photon of color does
not have sufficient energy to be emitted
by that color and is therefore subject
to The speed of light is the change in
velocity over time. This is a constant,
but sometimes it is possible to express
it like this: E = c2/e In relativity,
the length of the distance is the length
of time the length of wave is divided by
the speed of light. E.g. a beam of light
travelling at about 9.2 miles per second
must travel at around 7.3 miles per
second to get E.g. a beam moving at 3.2
miles per second must travel at around 8
miles per second to get E.g. a beam
moving at 1.8 miles per second must
travel at 9.0 miles per second to get
E.g. an object going at 2.3 miles per
second must travel at 1.8 miles per
second to get E.g. a beam moving at 2.3
miles per second must travel at 3.4
miles per second to get E.g.. a beam
traveling at 3.4 miles per second to get
E.g.. a beam moving at 2.3 miles per
second must travel at 3.8 miles per
second to get E.g.. a beam traveling at
3.8 miles per second to get E.g.. a beam
moving at about 4.4 miles per second
must travel at about 3.9 miles per
second to get E.g.. a beam moving at 5.5
miles per second to get a beam moving at
5.9 miles per S.G.D.. is the same thing
as a mass. The distance is a unit in
terms of the speed of light. Determining
the speed of light is an additional
measure of the energy. For most things</code></pre>
</div>
</div>
</div>
</div>
<p>lolwat.</p>
</div>
</div>
</div>
</section>
<section id="tweaked-version" class="level2">
<h2 class="anchored" data-anchor-id="tweaked-version">Tweaked Version</h2>
<p>TODO.</p>
</section>
</section>
<section id="parallel-pytorch-inference" class="level1">
<h1>Parallel PyTorch Inference</h1>
<p>Now we finally get to the fun part: let’s investigate whether or not PyTorch model inference can be done simultaneously, in parallel, by multiple threads, running on multiple cores at the same time, in a single free-threaded Python process. And ideally, we should only need one GPU, with all of these threads <em>sharing</em> it as fairly as possible. Although if we have multiple GPUs, we should be able to distribute the incoming work evenly across those too, if we want.</p>
<p>This is novel, uncharted territory we’re able to now explore thanks to the free-threaded version of Python.</p>
<div class="callout callout-style-default callout-note callout-titled" title="Simultaneous vs Parallel vs Concurrent">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Simultaneous vs Parallel vs Concurrent
</div>
</div>
<div class="callout-body-container callout-body">
<p>The phrasing I’ve used above—<em>“simultaneously, in parallel”</em>—is a bit redundant. They both imply the same thing. When I use either word in this post, I’m explicitly referring to the new ability unlocked by free-threaded Python, where multiple threads can be running Python code on different CPU cores at the same time—i.e.&nbsp;<em>simultaneously</em>. And thus, you’re performing work in <em>parallel</em>.</p>
<p>When I use the term <em>concurrent</em> or <em>concurrency</em>, I’m using it in the traditional sense within the context of Python: making progress on multiple things at a time. This term is well suited to describe things like web servers, where a single Python process, with a single thread, running on a single CPU core, can service multiple clients at any given time (by way of <a href="https://speakerdeck.com/trent/pyparallel-how-we-removed-the-gil-and-exploited-all-cores?slide=27">non-blocking socket I/O and event multiplexing</a>), but it’s not servicing any of those clients <em>simultaneously</em> on different cores, because that would require multiple threads running in <em>parallel</em>.</p>
<p>Some more details regarding <em>parallelism</em> vs <em>concurrency</em> can be found on <a href="https://speakerdeck.com/trent/parallelism-and-concurrency-with-python?slide=8">slide 8</a> of a deck I put together many years ago titled <a href="https://speakerdeck.com/trent/parallelism-and-concurrency-with-python">Parallelism and Concurrency in Python</a>.</p>
</div>
</div>
<p>So how do we try this out? I guess we could spin up some threads and have them all call <code>model.generate()</code>, but that’s a little boring.</p>
<p>Why not try implement a pure Python, multi-threaded <code>asyncio</code>-based HTTP server, expose a <code>/generate</code>-esque style <code>GET</code> endpoint, and wire that up to the model generation code we saw above, allowing us to serve web requests for generation in parallel, ideally in an <code>asyncio</code>-friendly manner, where we can stream individual tokens back one-by-one via HTTP’s chunked-encoding transfer protocol, giving each thread’s event loop the ability to service multiple clients <em>concurrently</em> in a reasonably fair manner, whilst also servicing many clients in <em>parallel</em> across all threads, and for kicks, get AI to whip up a janky little React Bootstrap UI that we can slap in front of it all to test it?</p>
<section id="pure-python-multi-threaded-http-server" class="level2">
<h2 class="anchored" data-anchor-id="pure-python-multi-threaded-http-server">Pure Python Multi-threaded HTTP Server</h2>
<p>First thing we need is a nice and simple <code>asyncio</code>-based HTTP server, that also happens to work with multi-threading now that we have a free-threaded Python at our disposal.</p>
<p>Luckily, I have one of those laying around already! In support of another article I’m actively working on (which was meant to get published before this post), I ported the <a href="https://github.com/pyparallel/pyparallel/blob/branches/3.3-px/Lib/async/http/server.py">HTTP Server</a> I wrote many years ago for <a href="https://pyparallel.org">PyParallel</a><sup>2</sup> to use the new <code>asyncio</code> facilities available with Python, and then slapped multiple threads on it, where each thread gets its own <code>asyncio</code> event loop.</p>
<p>Turns out, thankfully, that this Just Works, at least on Linux<sup>3</sup>—we can now have a pure Python HTTP server, running in a single Python process, that’ll happily saturate every CPU core under load.</p>
<p>The server code lives in <a href="https://github.com/tpn/parallelopedia/blob/main/src/parallelopedia/http/server.py"><code>parallelopedia.http.server</code></a>, and it includes a super janky little notion of <em>“HTTP Apps”</em>, the purpose of which can be best demonstrated with a simple example:</p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> PlaintextApp(HttpApp):</span>
<span id="cb38-2">    routes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_routes()</span>
<span id="cb38-3">    route <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> router(routes)</span>
<span id="cb38-4"></span>
<span id="cb38-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@route</span></span>
<span id="cb38-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plaintext(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, request):</span>
<span id="cb38-7">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text_response(request, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Hello, World!'</span>)</span>
<span id="cb38-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.server.send_response(response)</span>
<span id="cb38-9"></span>
<span id="cb38-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> SleeperApp(HttpApp):</span>
<span id="cb38-11">    routes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_routes()</span>
<span id="cb38-12">    route <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> router(routes)</span>
<span id="cb38-13"></span>
<span id="cb38-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@route</span></span>
<span id="cb38-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> sleep(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, request, seconds):</span>
<span id="cb38-16">        time.sleep(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(seconds))</span>
<span id="cb38-17">        msg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Slept for </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>seconds<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds.'</span>)</span>
<span id="cb38-18">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text_response(request, msg)</span>
<span id="cb38-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.server.send_response(response)</span>
<span id="cb38-20"></span>
<span id="cb38-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a server with the two apps.</span></span>
<span id="cb38-22">app_classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[PlaintextApp, SleeperApp]</span>
<span id="cb38-23">server <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HttpServer(app_classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>app_classes)</span></code></pre></div>
<p>In the above example, the HTTP server will route requests for the <code>/plaintext</code> endpoint to an instance of the <code>PlaintextApp</code>’s <code>plaintext()</code> routine, and <code>/sleep</code> requests get routed to the <code>SleeperApp</code>’s <code>sleep()</code> routine.</p>
<p>The <em>“slapped multiple threads on it”</em> activity I refered to earlier is handled by some new <a href="https://github.com/tpn/parallelopedia/blob/main/src/parallelopedia/http/server.py#L1344">async and threading scaffolding</a> added to the bottom of that module, with the pertinent pieces reproduced below:</p>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"></span>
<span id="cb39-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> main_async(</span>
<span id="cb39-3">    args: argparse.Namespace,</span>
<span id="cb39-4">    protocol_class: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>,</span>
<span id="cb39-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>protocol_args: Tuple</span>
<span id="cb39-6">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb39-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb39-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This is the main function for the server when it is running in</span></span>
<span id="cb39-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    asynchronous mode.  It will create a server instance and then</span></span>
<span id="cb39-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    call serve_forever() on it.</span></span>
<span id="cb39-11"></span>
<span id="cb39-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Arguments:</span></span>
<span id="cb39-13"></span>
<span id="cb39-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        args (argparse.Namespace): Supplies the command-line arguments.</span></span>
<span id="cb39-15"></span>
<span id="cb39-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        protocol_class (type): Supplies the protocol class to use.</span></span>
<span id="cb39-17"></span>
<span id="cb39-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        protocol_args (tuple): Supplies the arguments to pass to the</span></span>
<span id="cb39-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            protocol class constructor.</span></span>
<span id="cb39-20"></span>
<span id="cb39-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb39-22">    loop <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> asyncio.get_running_loop()</span>
<span id="cb39-23"></span>
<span id="cb39-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nt'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cygwin'</span>):</span>
<span id="cb39-25">        reuse_port <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb39-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb39-27">        reuse_port <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb39-28"></span>
<span id="cb39-29">    reuse_address <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb39-30"></span>
<span id="cb39-31">    server <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> loop.create_server(</span>
<span id="cb39-32">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: protocol_class(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>protocol_args),</span>
<span id="cb39-33">        args.ip,</span>
<span id="cb39-34">        args.port,</span>
<span id="cb39-35">        backlog<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args.listen_backlog,</span>
<span id="cb39-36">        reuse_address<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>reuse_address,</span>
<span id="cb39-37">        reuse_port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>reuse_port,</span>
<span id="cb39-38">    )</span>
<span id="cb39-39"></span>
<span id="cb39-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> server:</span>
<span id="cb39-41">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> server.serve_forever()</span>
<span id="cb39-42"></span>
<span id="cb39-43"></span>
<span id="cb39-44"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> start_event_loop(</span>
<span id="cb39-45">    args: argparse.Namespace,</span>
<span id="cb39-46">    protocol_class: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>,</span>
<span id="cb39-47">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>protocol_args: Tuple</span>
<span id="cb39-48">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb39-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb39-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This function will start the asyncio event loop and run</span></span>
<span id="cb39-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the main_async() function.  It is intended to be the</span></span>
<span id="cb39-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    target of a threading.Thread.</span></span>
<span id="cb39-53"></span>
<span id="cb39-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Arguments:</span></span>
<span id="cb39-55"></span>
<span id="cb39-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        args (argparse.Namespace): Supplies the command-line arguments.</span></span>
<span id="cb39-57"></span>
<span id="cb39-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        protocol_class (type): Supplies the protocol class to use.</span></span>
<span id="cb39-59"></span>
<span id="cb39-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        protocol_args (tuple): Supplies the arguments to pass to the</span></span>
<span id="cb39-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            protocol class constructor.</span></span>
<span id="cb39-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb39-63">    asyncio.run(</span>
<span id="cb39-64">        main_async(</span>
<span id="cb39-65">            args,</span>
<span id="cb39-66">            protocol_class,</span>
<span id="cb39-67">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>protocol_args,</span>
<span id="cb39-68">        ),</span>
<span id="cb39-69">        debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args.debug,</span>
<span id="cb39-70">    )</span>
<span id="cb39-71"></span>
<span id="cb39-72"></span>
<span id="cb39-73"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> main_threaded_multi_accept(</span>
<span id="cb39-74">    args: argparse.Namespace,</span>
<span id="cb39-75">    protocol_class: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>,</span>
<span id="cb39-76">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>protocol_args: Tuple</span>
<span id="cb39-77">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb39-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb39-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This is the main function for the server when it is running in</span></span>
<span id="cb39-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    multi-threaded mode with multiple accept sockets.  Each thread</span></span>
<span id="cb39-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    will have its own asyncio loop issue a create_server() call for</span></span>
<span id="cb39-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the given host/port and protocol.</span></span>
<span id="cb39-83"></span>
<span id="cb39-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Arguments:</span></span>
<span id="cb39-85"></span>
<span id="cb39-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        args (argparse.Namespace): Supplies the command-line arguments.</span></span>
<span id="cb39-87"></span>
<span id="cb39-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        protocol_class (type): Supplies the protocol class to use.</span></span>
<span id="cb39-89"></span>
<span id="cb39-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        protocol_args (tuple): Supplies the arguments to pass to the</span></span>
<span id="cb39-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            protocol class constructor.</span></span>
<span id="cb39-92"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb39-93">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> threading</span>
<span id="cb39-94"></span>
<span id="cb39-95">    threads <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb39-96">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(args.threads):</span>
<span id="cb39-97">        thread <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> threading.Thread(</span>
<span id="cb39-98">            target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>start_event_loop,</span>
<span id="cb39-99">            args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(args, protocol_class, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>protocol_args),</span>
<span id="cb39-100">        )</span>
<span id="cb39-101">        threads.append(thread)</span>
<span id="cb39-102">        thread.start()</span>
<span id="cb39-103"></span>
<span id="cb39-104">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> thread <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> threads:</span>
<span id="cb39-105">        thread.join()</span>
<span id="cb39-106"></span>
<span id="cb39-107"></span>
<span id="cb39-108"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> main(args: Optional[argparse.Namespace] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb39-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb39-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Main entry point for parallelopedia.http.server module.</span></span>
<span id="cb39-111"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb39-112">    args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parse_arguments()</span>
<span id="cb39-113"></span>
<span id="cb39-114">    logging.basicConfig(</span>
<span id="cb39-115">        level<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">getattr</span>(logging, args.log_level),</span>
<span id="cb39-116">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(asctime)s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(levelname)s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(message)s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb39-117">    )</span>
<span id="cb39-118"></span>
<span id="cb39-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use multiple threads to load the application classes.</span></span>
<span id="cb39-120">    app_classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_classes_from_strings_parallel(</span>
<span id="cb39-121">        args.app_classes,</span>
<span id="cb39-122">    )</span>
<span id="cb39-123"></span>
<span id="cb39-124">    protocol_class <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_class_from_string(args.protocol_class)</span>
<span id="cb39-125">    protocol_args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (app_classes,)</span>
<span id="cb39-126"></span>
<span id="cb39-127">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> args.threads <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb39-128">        asyncio.run(</span>
<span id="cb39-129">            main_async(</span>
<span id="cb39-130">                args,</span>
<span id="cb39-131">                protocol_class,</span>
<span id="cb39-132">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>protocol_args,</span>
<span id="cb39-133">            ),</span>
<span id="cb39-134">            debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args.debug,</span>
<span id="cb39-135">        )</span>
<span id="cb39-136">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb39-137">        main_threaded_multi_accept(</span>
<span id="cb39-138">            args,</span>
<span id="cb39-139">            protocol_class,</span>
<span id="cb39-140">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>protocol_args,</span>
<span id="cb39-141">        )</span>
<span id="cb39-142"></span>
<span id="cb39-143"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'__main__'</span>:</span>
<span id="cb39-144">    main()</span></code></pre></div>
</section>
<section id="gpt2-http-app" class="level2">
<h2 class="anchored" data-anchor-id="gpt2-http-app">GPT2 HTTP App</h2>
<p>With the HTTP server scaffolding in place, we can now whip up a little <code>Gpt2App</code> class that has a <code>generate()</code> method. Incoming requests to the <code>/generate</code> endpoint will be routed to that routine by the server.</p>
<section id="synchronous-up-front-generation" class="level3">
<h3 class="anchored" data-anchor-id="synchronous-up-front-generation">Synchronous Up-Front Generation</h3>
<p>Now, we could take the simple approach, where the <code>Gpt2App.generate()</code> call goes off and calls <code>model.generate()</code> and then patiently waits for the entire response to be generated before sending anything back to the user.</p>
<p>That code would look something like this:</p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Gpt2App(HttpApp):</span>
<span id="cb40-2">    routes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_routes()</span>
<span id="cb40-3">    route <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> router(routes)</span>
<span id="cb40-4"></span>
<span id="cb40-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@route</span></span>
<span id="cb40-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, request: Request,</span>
<span id="cb40-7">                 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args: List,</span>
<span id="cb40-8">                 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwds: Dict) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb40-9">        prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> args[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb40-10">        model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_model()</span>
<span id="cb40-11">        result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(prompt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prompt)</span>
<span id="cb40-12">        respose <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text_response(request, result)</span>
<span id="cb40-13">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.server.send_response(response)</span></code></pre></div>
<p>But when have you ever interacted with an LLM via a web interface where it waits until it generates <em>all</em> of the response up-front before sending it back to you? Never; you can see it generate the response in real time, and that’s what we want to mimic here in this experiment.</p>
</section>
<section id="our-goals" class="level3">
<h3 class="anchored" data-anchor-id="our-goals">Our Goals</h3>
<p>The high-level goals for our solution are thus:</p>
<ol type="1">
<li><p>We want to send a generated token back to the user as soon as it becomes available.</p></li>
<li><p>We want to ensure the client receiving the token can display it as soon as they receive it—so we need to be cognizant of what HTTP transfer protocol we use to send bytes back. If we just used normal HTTP transfer encoding, the client would wait until we’ve sent <em>everything</em> before the user sees it, despite the fact that we’ve been trickling individual tokens to them the entire time.</p></li>
<li><p>We want to play nicely with the <code>asyncio</code> ecosystem upon which our hosting HTTP server is based—so we need to be cognizant of the current thread’s event loop, and make sure we don’t impede that thread’s ability to <em>concurrently</em> serve other clients that are being handled by the event loop.</p></li>
</ol>
<p>Thankfully, as we saw earlier with the implementation of the <code>GPT.generate()</code> routine, generating tokens in response to a prompt is inherently a <em>token-by-token</em> process. So the algorithm at least provides us with the means to obtain a single token at a time, which takes care of the first point.</p>
<p>Second, HTTP’s chunked-encoding transfer protocol will allow a HTTP client to immediately <em>“see”</em> the tokens we send back to it as soon as we send them, provided we enable <code>TCP_NODELAY</code> on the underlying socket to ensure the operating system sends the bytes out to the client as soon as we send them.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>If we didn’t do this, the default behavior of <a href="https://en.wikipedia.org/wiki/Nagle%27s_algorithm">Nagle’s algorithm</a> would apply, and the operating system would delay sending individual bytes back when we request, in the hope that it can accumulate more bytes to send all at once at a slightly later point in time. This is advantageous for maximizing throughput, but it impedes latency, and in our case, we want the lower latency afforded by immediately sending the bytes back to the client as soon as we generate them.</p>
</div>
</div>
<p><a href="https://en.wikipedia.org/wiki/Chunked_transfer_encoding">Chunked-encoding</a> works by setting an HTTP response header <code>Transfer-Encoding: chunked</code>, and then in the body, each chunk is transmitted by its length and then the chunk itself. The server communicates to the client that the transfer has completed once a zero-length chunk is received.</p>
<p>So, as long as we send our tokens back via chunked-encoding, any HTTP/1.1 client will be able to reassemble them back into the generated text, giving the visual appearance of real time model generation. That will take care of the second point.</p>
<p>Lastly, in order to play nice within the greater <code>asyncio</code> ecosystem, we need to give control back to the underlying thread’s <code>asyncio</code> event loop after we generate a token and yield a decoded text fragment, which can thankfully be done via a simple call to <code>await asyncio.sleep(0)</code>, provided we’re generating text from the model from within an <code>async</code> callback.</p>
<p>This ensures multiple <em>concurrent</em> clients being handled by our thread’s event loop will be handled fairly; they’ll all receive generated tokens at the same rate.</p>
</section>
<section id="asynchronous-token-by-token-generation" class="level3">
<h3 class="anchored" data-anchor-id="asynchronous-token-by-token-generation">Asynchronous Token-by-Token Generation</h3>
<p>The first thing we need to do is to change our <code>Gpt2App.generate()</code> call into something that is <code>async</code> compatible, in anticipation of some later code that we write needing to issue an <code>await asyncio.sleep(0)</code>, which can only be done within a call frame of an asynchronous method.</p>
<p>When our <code>Gpt2App.generate()</code> routine is called, we’re still within the context of the <code>asyncio</code> protocol’s <code>data_received()</code> routine, which is a normal, synchronous method, <em>not</em> an enlightened <code>async</code> method that can participate in an <code>asyncio</code> event loop.</p>
<p>So, in order to transition from a synchronous callback to an asynchronous one, we can use the current event loop’s <code>create_task()</code> routine to enqueue an <code>async</code> method for execution.</p>
<section id="step-1-have-generate-enqueue-an-async-generate_response." class="level4">
<h4 class="anchored" data-anchor-id="step-1-have-generate-enqueue-an-async-generate_response.">Step 1: Have generate() enqueue an async generate_response().</h4>
<p>Thus, our <code>Gpt2App.generate()</code> call will look something like this:</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"></span>
<span id="cb41-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Gpt2App(HttpApp):</span>
<span id="cb41-3"></span>
<span id="cb41-4">    ...</span>
<span id="cb41-5"></span>
<span id="cb41-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@route</span></span>
<span id="cb41-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, request: Request,</span>
<span id="cb41-8">                 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args: List,</span>
<span id="cb41-9">                 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwds: Dict) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb41-10"></span>
<span id="cb41-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the "prompt" provided in the incoming request.</span></span>
<span id="cb41-12">        text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> args[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb41-13"></span>
<span id="cb41-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Obtain the event loop and schedule the response</span></span>
<span id="cb41-15">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generation via our async generation coroutine.</span></span>
<span id="cb41-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We have to do it like this as at this point we're</span></span>
<span id="cb41-17">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># still within the call frame of the data_received()</span></span>
<span id="cb41-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># protocol callback, which isn't an async function.</span></span>
<span id="cb41-19">        loop <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> asyncio.get_running_loop()</span>
<span id="cb41-20">        async_task <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.generate_response(request, text, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwds)</span>
<span id="cb41-21">        loop.create_task(async_task)</span></code></pre></div>
</section>
<section id="step-2-implement-an-async-generate_response" class="level4">
<h4 class="anchored" data-anchor-id="step-2-implement-an-async-generate_response">Step 2: Implement an async generate_response()</h4>
<p>Our asynchronous <code>generate_response()</code> routine will be the bridge between generating tokens from the model, and sending those tokens back to the client via chunked-encoding.</p>
<p>It is responsible for preparing the response to use chunked-encoding, and then enabling <code>TCP_NODELAY</code> on the socket.</p>
<p>Then, assuming that our model has an <code>async_generate_for()</code> routine, which we’ll implement in the next step, we perform an <code>async for</code> loop over that routine in order to obtain individual <em>decoded</em> tokens. As soon as we receive a token, we can send it back to the client via the <code>response</code> object’s <code>send_chunk()</code> routine.</p>
<p>Once we’ve exhausted the async generator (i.e.&nbsp;it either generated the maximum number of requested tokens, or it encountered a stop token), we can re-enable <code>TCP_NODELAY</code>, and then return.</p>
<p>A simplified version of the Python code is presented below. I have omitted most of the error handling and query parameter parsing code for simplicity; see the expandable code block at the end for the full version.</p>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1"></span>
<span id="cb42-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Gpt2App(HttpApp):</span>
<span id="cb42-3"></span>
<span id="cb42-4">    ...</span>
<span id="cb42-5"></span>
<span id="cb42-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_response(</span>
<span id="cb42-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, request: Request,</span>
<span id="cb42-8">        prompt: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb42-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwds: Dict</span>
<span id="cb42-10">    ) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb42-11"></span>
<span id="cb42-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prepare a chunked-encoding response.</span></span>
<span id="cb42-13">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request.response</span>
<span id="cb42-14">        response.code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span></span>
<span id="cb42-15">        response.message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'OK'</span></span>
<span id="cb42-16">        response.chunked_response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb42-17">        response.content_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'text/plain'</span></span>
<span id="cb42-18"></span>
<span id="cb42-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Obtain the model.</span></span>
<span id="cb42-20">        model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_model()</span>
<span id="cb42-21"></span>
<span id="cb42-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We want to enable TCP_NODELAY for the duration of</span></span>
<span id="cb42-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the response.  This ensures packets are sent</span></span>
<span id="cb42-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># immediately without any internal buffering.</span></span>
<span id="cb42-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb42-26">            response.enable_tcp_nodelay()</span>
<span id="cb42-27">            enabled_nodelay <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb42-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb42-29">            logging.error(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Error enabling TCP_NODELAY: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb42-30">            enabled_nodelay <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb42-31"></span>
<span id="cb42-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Write the chunked header immediately.</span></span>
<span id="cb42-33">        response_bytes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bytes</span>(response)</span>
<span id="cb42-34">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.write(response_bytes):</span>
<span id="cb42-35">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Encountered a disconnect, return.</span></span>
<span id="cb42-36">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span></span>
<span id="cb42-37"></span>
<span id="cb42-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># N.B. From herein, all data must be transferred to</span></span>
<span id="cb42-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      the client via chunked encoding with the</span></span>
<span id="cb42-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      `response.send_chunk()` routine.</span></span>
<span id="cb42-41"></span>
<span id="cb42-42">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Send the initial prompt text.</span></span>
<span id="cb42-43">        response.send_chunk(prompt)</span>
<span id="cb42-44"></span>
<span id="cb42-45">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Obtain decoded tokens from the model one at a time</span></span>
<span id="cb42-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># via an `async for` loop, sending the token back to</span></span>
<span id="cb42-47">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the client as soon as it's available.</span></span>
<span id="cb42-48">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> decoded_token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> model.generate_async_for(prompt):</span>
<span id="cb42-49">            response.send_chunk(decoded_token)</span>
<span id="cb42-50"></span>
<span id="cb42-51">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Terminate the chunked-encoding response.</span></span>
<span id="cb42-52">        response.end_chunks()</span>
<span id="cb42-53"></span>
<span id="cb42-54">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Disable TCP_NODELAY now that the response is complete.</span></span>
<span id="cb42-55">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The reasoning behind this is that the client may have</span></span>
<span id="cb42-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># issued the HTTP request with a keep-alive header, and</span></span>
<span id="cb42-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plans on reusing this connection for a different request</span></span>
<span id="cb42-58">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># next, which won't necessarily want `TCP_NODELAY` active.</span></span>
<span id="cb42-59">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> enabled_nodelay:</span>
<span id="cb42-60">            response.disable_tcp_nodelay()</span></code></pre></div>
<div id="gpt2app-generate-response-full" class="callout callout-style-simple callout-note no-icon callout-titled" title="Full Code for async Gpt2App.generate_response()">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-9-contents" aria-controls="callout-9" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Full Code for async Gpt2App.generate_response()
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-9" class="callout-9-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>The actual code has more robust error-handling facilities and support for extracting the query string parameters from the incoming request URI and converting them into keyword arguments suitable for passing to the model.</p>
<p>Additionally, we haven’t touched on how we initialize or obtain instances of our models yet, so the model-related code won’t make much sense until later in the article.</p>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1"></span>
<span id="cb43-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Gpt2App(HttpApp):</span>
<span id="cb43-3">    routes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_routes()</span>
<span id="cb43-4">    route <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> router(routes)</span>
<span id="cb43-5"></span>
<span id="cb43-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, server: HttpServer) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb43-7">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(server)</span>
<span id="cb43-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.printable <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PRINTABLE</span>
<span id="cb43-9"></span>
<span id="cb43-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> is_connected(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb43-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># server.transport will be severed when the client</span></span>
<span id="cb43-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># disconnects, so we can use this to determine if</span></span>
<span id="cb43-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the client is still connected.</span></span>
<span id="cb43-14">        server <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.server</span>
<span id="cb43-15">        transport <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb43-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb43-17">            transport <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> server.transport</span>
<span id="cb43-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">AttributeError</span>:</span>
<span id="cb43-19">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb43-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> transport <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb43-21"></span>
<span id="cb43-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> write(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, response_bytes):</span>
<span id="cb43-23">        server <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.server</span>
<span id="cb43-24">        transport <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb43-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb43-26">            transport <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> server.transport</span>
<span id="cb43-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">AttributeError</span>:</span>
<span id="cb43-28">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb43-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> transport <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb43-30">            transport.write(response_bytes)</span>
<span id="cb43-31">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb43-32">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb43-33">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb43-34"></span>
<span id="cb43-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_response(</span>
<span id="cb43-36">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, request: Request, prompt: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwds: Dict</span>
<span id="cb43-37">    ) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb43-38"></span>
<span id="cb43-39">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request.response</span>
<span id="cb43-40"></span>
<span id="cb43-41">        response.code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span></span>
<span id="cb43-42">        response.message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'OK'</span></span>
<span id="cb43-43">        response.chunked_response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb43-44">        response.content_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'text/plain'</span></span>
<span id="cb43-45"></span>
<span id="cb43-46">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> kwds <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb43-47">            kwds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb43-48">        max_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(kwds.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max_length'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>)</span>
<span id="cb43-49">        top_k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(kwds.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'top_k'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb43-50">        seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kwds.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'seed'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb43-51">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> seed:</span>
<span id="cb43-52">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb43-53">                seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(seed)</span>
<span id="cb43-54">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ValueError</span>:</span>
<span id="cb43-55">                seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb43-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> seed:</span>
<span id="cb43-57">            seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb43-58"></span>
<span id="cb43-59">        device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kwds.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'device'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb43-60"></span>
<span id="cb43-61">        model_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kwds.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'model'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb43-62">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> model_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gpt2-xl'</span>:</span>
<span id="cb43-63">            models <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PRETRAINED_MODELS</span>
<span id="cb43-64">            get_next <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_next_pretrained_model</span>
<span id="cb43-65">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb43-66">            model_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gpt2'</span></span>
<span id="cb43-67">            models <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MODELS</span>
<span id="cb43-68">            get_next <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_next_model</span>
<span id="cb43-69"></span>
<span id="cb43-70">        model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb43-71">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> device <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb43-72">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>:</span>
<span id="cb43-73">                model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> models[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb43-74">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> device.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda:'</span>):</span>
<span id="cb43-75">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb43-76">                    index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(device[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:])</span>
<span id="cb43-77">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ValueError</span>:</span>
<span id="cb43-78">                    index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb43-79">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> NUM_GPUS:</span>
<span id="cb43-80">                    index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb43-81">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb43-82">                    model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> models[index]</span>
<span id="cb43-83">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>:</span>
<span id="cb43-84">                model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> models[random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, NUM_GPUS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)]</span>
<span id="cb43-85"></span>
<span id="cb43-86">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> model:</span>
<span id="cb43-87">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a model.  If there are multiple models available, e.g. if we</span></span>
<span id="cb43-88">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># have multiple GPUs, this will balance the load a bit.</span></span>
<span id="cb43-89">            model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_next()</span>
<span id="cb43-90"></span>
<span id="cb43-91">        expose_headers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb43-92">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Access-Control-Expose-Headers: '</span></span>
<span id="cb43-93">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X-Max-Length, '</span></span>
<span id="cb43-94">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X-Top-K, '</span></span>
<span id="cb43-95">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X-Seed, '</span></span>
<span id="cb43-96">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X-Model-Name, '</span></span>
<span id="cb43-97">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X-Model-Device'</span></span>
<span id="cb43-98">        )</span>
<span id="cb43-99">        response.other_headers.extend([</span>
<span id="cb43-100">            expose_headers,</span>
<span id="cb43-101">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'X-Max-Length: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>max_length<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb43-102">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'X-Top-K: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>top_k<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb43-103">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'X-Seed: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>seed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb43-104">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'X-Model-Name: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>model_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb43-105">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'X-Model-Device: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>device<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb43-106">        ])</span>
<span id="cb43-107"></span>
<span id="cb43-108">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We want to enable TCP_NODELAY for the duration of</span></span>
<span id="cb43-109">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the response.  This ensures packets are sent</span></span>
<span id="cb43-110">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># immediately without any internal buffering.</span></span>
<span id="cb43-111">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb43-112">            response.enable_tcp_nodelay()</span>
<span id="cb43-113">            enabled_nodelay <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb43-114">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb43-115">            logging.error(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Error enabling TCP_NODELAY: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb43-116">            enabled_nodelay <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb43-117"></span>
<span id="cb43-118">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Write the chunked header immediately.</span></span>
<span id="cb43-119">        response_bytes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bytes</span>(response)</span>
<span id="cb43-120">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.write(response_bytes):</span>
<span id="cb43-121">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Encountered a disconnect, return.</span></span>
<span id="cb43-122">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span></span>
<span id="cb43-123"></span>
<span id="cb43-124">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># N.B. From herein, all data must be transferred to</span></span>
<span id="cb43-125">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      the client via chunked encoding with the</span></span>
<span id="cb43-126">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#      `response.send_chunk()` routine.</span></span>
<span id="cb43-127"></span>
<span id="cb43-128">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Send the initial prompt text.</span></span>
<span id="cb43-129">        response.send_chunk(prompt)</span>
<span id="cb43-130"></span>
<span id="cb43-131">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Obtain an async generator instance to the model's</span></span>
<span id="cb43-132">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># new async token generation routine.</span></span>
<span id="cb43-133">        generate_tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate_async_for(</span>
<span id="cb43-134">            prompt,</span>
<span id="cb43-135">            max_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>max_length,</span>
<span id="cb43-136">            top_k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>top_k,</span>
<span id="cb43-137">            seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed,</span>
<span id="cb43-138">        )</span>
<span id="cb43-139">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> decoded_token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> generate_tokens:</span>
<span id="cb43-140">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> decoded_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb43-141">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A non-printable token was generated,</span></span>
<span id="cb43-142">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># terminating generation.</span></span>
<span id="cb43-143">                response.send_chunk(</span>
<span id="cb43-144">                    OOPS_NON_PRINTABLE_ENCOUNTERED</span>
<span id="cb43-145">                )</span>
<span id="cb43-146">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb43-147"></span>
<span id="cb43-148">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If the client has forcibly disconnected,</span></span>
<span id="cb43-149">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># terminate generation.</span></span>
<span id="cb43-150">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.is_connected():</span>
<span id="cb43-151">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb43-152"></span>
<span id="cb43-153">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Otherwise, send the decoded token to the client</span></span>
<span id="cb43-154">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># via chunked encoding.</span></span>
<span id="cb43-155">            response.send_chunk(decoded_token)</span>
<span id="cb43-156"></span>
<span id="cb43-157">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Send the termination chunk.  This may fail at the</span></span>
<span id="cb43-158">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># socket.send() level if the client has already</span></span>
<span id="cb43-159">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># disconnected, which is harmless.</span></span>
<span id="cb43-160">        response.end_chunks()</span>
<span id="cb43-161"></span>
<span id="cb43-162">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Disable TCP_NODELAY now that the response is complete.</span></span>
<span id="cb43-163">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Again, this may fail at the socket level if the client</span></span>
<span id="cb43-164">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># has already disconnected, which is harmless.</span></span>
<span id="cb43-165">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> enabled_nodelay:</span>
<span id="cb43-166">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb43-167">                response.disable_tcp_nodelay()</span>
<span id="cb43-168">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb43-169">                msg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Error disabling TCP_NODELAY: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb43-170">                logging.error(msg)</span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="step-3-implement-an-async-gpt.async_generate_for" class="level4">
<h4 class="anchored" data-anchor-id="step-3-implement-an-async-gpt.async_generate_for">Step 3: Implement an async GPT.async_generate_for()</h4>
<p>In the code example above, we assumed the <code>GPT</code> model we’ve been using had grown a new <code>async</code> routine named <code>async_generate_for()</code>, which we’ll cover now.</p>
<p>This routine is essentially an <code>asyncio</code>-friendly version of the original <code>generate()</code> routine we wrote. It shares a lot of the same code, with a few notable tweaks in order to support the fact that it is being called from a callback that was enqueued on a thread’s <code>asyncio</code> event loop, and it is expected to yield a token as soon as it is available, and then pass control back to the event loop in order for it to service other clients before it continues with generating the next token.</p>
<p>It also has the notion of checking for <em>“printable”</em> characters. This came about when I was initially testing this code via <code>curl</code> which would sometimes balk and exit in the middle of streaming the response, citing that it encountered corrupted data or something like that.</p>
<p>After investigation, it turned out that sometimes, for whatever reason, the model just generates a junk, nonsensical token (like 65534, which is well outside the highest token number of 50384). I have no idea why it happens, although I’ll note it happens on the OpenAI GPT2 XL model available on HuggingFace (which we’ll discuss later) too, so, eh.</p>
<p>I deal with this by checking if we’ve generated a non-printable token after decoding it, and, if so, return -1 and terminate the loop. The full version of the <code>Gpt2App.generate_response()</code> routine that we introduced above checks if we return -1, and if so, terminates generation with an oopsie message, e.g.:</p>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1">OOPS_NON_PRINTABLE_ENCOUNTERED <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb44-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Oops! Non-printable token encountered.  Generation terminated.'</span></span>
<span id="cb44-3">)</span>
<span id="cb44-4">...</span>
<span id="cb44-5"></span>
<span id="cb44-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> decoded_token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> generate_tokens:</span>
<span id="cb44-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> decoded_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb44-8">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A non-printable token was generated,</span></span>
<span id="cb44-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># terminating generation.</span></span>
<span id="cb44-10">        response.send_chunk(</span>
<span id="cb44-11">            OOPS_NON_PRINTABLE_ENCOUNTERED</span>
<span id="cb44-12">        )</span>
<span id="cb44-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span></code></pre></div>
<p>After yielding a valid decoded token, we issue an <code>await asyncio.sleep(0)</code> call, which returns control back to the event loop for it to potentially handle other concurrent clients. If there are no other clients, or after it has handled all other enqueued work, generation resumes.</p>
<p>The full code follows, it is simple enough as-is that I didn’t feel the need to omit any details like in the prior example.</p>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1"></span>
<span id="cb45-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GPT:</span>
<span id="cb45-3"></span>
<span id="cb45-4">    ...</span>
<span id="cb45-5"></span>
<span id="cb45-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_async_for(</span>
<span id="cb45-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, text: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, max_length: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>, top_k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb45-8">        seed: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb45-9">    ):</span>
<span id="cb45-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb45-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Asynchronously generate text from the model, yielding tokens</span></span>
<span id="cb45-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        one at a time as soon as they are available.</span></span>
<span id="cb45-13"></span>
<span id="cb45-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Args:</span></span>
<span id="cb45-15"></span>
<span id="cb45-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            text (str): Supplies the prompt.</span></span>
<span id="cb45-17"></span>
<span id="cb45-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            max_length (int): Supplies the maximum total length,</span></span>
<span id="cb45-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                including prompt.</span></span>
<span id="cb45-20"></span>
<span id="cb45-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            top_k (int): Supplies the number of tokens to consider</span></span>
<span id="cb45-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                at each generation step.</span></span>
<span id="cb45-23"></span>
<span id="cb45-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            seed (int): Optionally supplies the manual seed to use</span></span>
<span id="cb45-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                for the generator.  If None, the model's manual</span></span>
<span id="cb45-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                seed will be used.</span></span>
<span id="cb45-27"></span>
<span id="cb45-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Returns:</span></span>
<span id="cb45-29"></span>
<span id="cb45-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            str: The generated text (including the initial prompt).</span></span>
<span id="cb45-31"></span>
<span id="cb45-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Yields:</span></span>
<span id="cb45-33"></span>
<span id="cb45-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            byte: The newly generated decoded token.  If -1, a</span></span>
<span id="cb45-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            non-printable token was generated, and generation</span></span>
<span id="cb45-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            was terminated.</span></span>
<span id="cb45-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb45-38"></span>
<span id="cb45-39">        enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.enc</span>
<span id="cb45-40">        stop_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stop_token</span>
<span id="cb45-41"></span>
<span id="cb45-42">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Encode the prompt -&gt; tensor of shape (1, T)</span></span>
<span id="cb45-43">        tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> enc.encode(text)</span>
<span id="cb45-44">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor(</span>
<span id="cb45-45">            tokens, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">long</span>, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.device</span>
<span id="cb45-46">        ).unsqueeze(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb45-47"></span>
<span id="cb45-48">        sample_rng <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.Generator(device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.device)</span>
<span id="cb45-49">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> seed <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb45-50">            seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.manual_seed</span>
<span id="cb45-51">        sample_rng.manual_seed(seed)</span>
<span id="cb45-52"></span>
<span id="cb45-53">        logging.debug(</span>
<span id="cb45-54">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'[generate_async_for] Starting generation loop for </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> '</span></span>
<span id="cb45-55">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'with seed </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>seed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.'</span></span>
<span id="cb45-56">        )</span>
<span id="cb45-57"></span>
<span id="cb45-58">        start_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.perf_counter()</span>
<span id="cb45-59">        count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb45-60">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> x.size(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> max_length:</span>
<span id="cb45-61">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb45-62">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb45-63">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forward pass, ignoring the returned loss.</span></span>
<span id="cb45-64">                (logits, _) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>(x)</span>
<span id="cb45-65"></span>
<span id="cb45-66">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Take the logits at the last time-step (shape:</span></span>
<span id="cb45-67">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (1, vocab_size)).</span></span>
<span id="cb45-68">            logits <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> logits[:, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :]</span>
<span id="cb45-69"></span>
<span id="cb45-70">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to probabilities.</span></span>
<span id="cb45-71">            probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> F.softmax(logits, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb45-72"></span>
<span id="cb45-73">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Top-k sampling.</span></span>
<span id="cb45-74">            topk_probs, topk_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.topk(</span>
<span id="cb45-75">                probs, k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>top_k, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb45-76">            )</span>
<span id="cb45-77"></span>
<span id="cb45-78">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample the next token.</span></span>
<span id="cb45-79">            next_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.multinomial(</span>
<span id="cb45-80">                topk_probs,</span>
<span id="cb45-81">                num_samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb45-82">                generator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sample_rng,</span>
<span id="cb45-83">            )</span>
<span id="cb45-84">            next_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.gather(topk_indices, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, next_idx)</span>
<span id="cb45-85"></span>
<span id="cb45-86">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If the next token is the stop token, we're done.</span></span>
<span id="cb45-87">            next_token_item <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> next_token.item()</span>
<span id="cb45-88">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> next_token_item <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> stop_token:</span>
<span id="cb45-89">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb45-90"></span>
<span id="cb45-91">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Append token to current sequence.  Although we only</span></span>
<span id="cb45-92">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># yield a singular decoded token below, we still need</span></span>
<span id="cb45-93">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to keep track of the entire sequence for subsequent</span></span>
<span id="cb45-94">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generation steps.</span></span>
<span id="cb45-95">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cat((x, next_token), dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb45-96"></span>
<span id="cb45-97">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Decode the newly-generated token.  Note that a single</span></span>
<span id="cb45-98">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># token will often be decoded to multiple characters.</span></span>
<span id="cb45-99">            new_text_fragment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> enc.decode([next_token.item()])</span>
<span id="cb45-100"></span>
<span id="cb45-101">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If any of the characters in the decoded text</span></span>
<span id="cb45-102">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># representation aren't printable, terminate</span></span>
<span id="cb45-103">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generation.</span></span>
<span id="cb45-104">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>(c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.printable <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> new_text_fragment):</span>
<span id="cb45-105">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">yield</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb45-106">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb45-107"></span>
<span id="cb45-108">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">yield</span> new_text_fragment</span>
<span id="cb45-109"></span>
<span id="cb45-110">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Yield control back to the event loop before continuing</span></span>
<span id="cb45-111">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generation.  If we didn't do this, this client would</span></span>
<span id="cb45-112">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># hog the thread's event loop, preventing other clients</span></span>
<span id="cb45-113">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># associated with the loop from getting services.  (As</span></span>
<span id="cb45-114">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we're now running multiple threads in parallel, other</span></span>
<span id="cb45-115">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clients associated with event loops on other threads</span></span>
<span id="cb45-116">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># would not be impacted.)</span></span>
<span id="cb45-117">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> asyncio.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb45-118"></span>
<span id="cb45-119">        elapsed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.perf_counter() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_time</span>
<span id="cb45-120">        logging.debug(</span>
<span id="cb45-121">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"[generate_async_for] Generated </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>count<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> tokens in "</span></span>
<span id="cb45-122">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>elapsed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds (~</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> elapsed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> tok/s)"</span></span>
<span id="cb45-123">        )</span></code></pre></div>
<p>This routine was the last piece we needed to implement to satisfy our three goals captured earlier, so, we’re now ready to test it out!</p>
</section>
</section>
</section>
<section id="test-drive" class="level2">
<h2 class="anchored" data-anchor-id="test-drive">Test Drive!</h2>
<p>We can launch an instance of our multi-threaded HTTP web server with our new <code>Gpt2App</code> HTTP application via the command line as follows:</p>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb46-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> %] python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-Xgil</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>0 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> parallelopedia.http.server <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--threads</span> 40 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--app-classes</span> parallelopedia.gpt2.Gpt2App <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--port</span> 4444</span>
<span id="cb46-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Traceback</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">most</span> recent call last<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb46-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;frozen runpy&gt;"</span>, line 198, in _run_module_as_main</span>
<span id="cb46-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;frozen runpy&gt;"</span>, line 88, in _run_code</span>
<span id="cb46-5">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/mnt/raid1/trent/src/parallelopedia/src/parallelopedia/http/server.py"</span>, line 1478, in <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>module<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb46-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">main()</span></span>
<span id="cb46-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~~~~^^</span></span>
<span id="cb46-8">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/mnt/raid1/trent/src/parallelopedia/src/parallelopedia/http/server.py"</span>, line 1457, in main</span>
<span id="cb46-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">get_class_from_string</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">app_class</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb46-10">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^</span></span>
<span id="cb46-11">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/mnt/raid1/trent/src/parallelopedia/src/parallelopedia/util.py"</span>, line 128, in get_class_from_string</span>
<span id="cb46-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">module</span> = __import__<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">module_name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb46-13">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/mnt/raid1/trent/src/parallelopedia/src/parallelopedia/gpt2.py"</span>, line 407, in <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>module<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb46-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">class</span> GPT<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nn.Module</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb46-15">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>679 lines<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>...</span>
<span id="cb46-16">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb46-17">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/mnt/raid1/trent/src/parallelopedia/src/parallelopedia/gpt2.py"</span>, line 905, in GPT</span>
<span id="cb46-18">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">@torch.compile</span></span>
<span id="cb46-19">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^^^^^^^^^^^^^</span></span>
<span id="cb46-20">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">File</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/trent/mambaforge/envs/py313t/lib/python3.13t/site-packages/torch/__init__.py"</span>, line 2526, in compile</span>
<span id="cb46-21">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">raise</span> RuntimeError<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb46-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"torch.compile is not supported on Python built with GIL disabled"</span></span>
<span id="cb46-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb46-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RuntimeError:</span> torch.compile is not supported on Python built with GIL disabled</span></code></pre></div>
<!-- vim:set ts=8 sw=2 sts=2 expandtab textwidth=78 -->


</section>
</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I used 0.23.3, as that was the latest version available at the time, however, 0.23.4 has since been released, so you could try that too.↩︎</p></li>
<li id="fn2"><p>And I’m sure I used the existing Python stdlib <code>http.server</code> code at the time as the basis; ain’t nobody got time to be writing new web servers from scratch.↩︎</p></li>
<li id="fn3"><p>Unfortunately, it doesn’t appear to work on Windows as-is; using the exact same code, only one thread can be seen running when the server is loaded. It’s not doing a round-robin between <em>all</em> threads, like you’d expect to see with the GIL enabled, there’s just a single sole thread attempting to service all incoming requests, with all other threads sitting idle. I don’t know if it’s because of something quirky with regards to additional, non-main-thread threads not getting their own event loop (hopefully easy to fix), or something more insidious related to how we’re misuing I/O completion ports behind the scenes in <code>IocpProactor()</code> now that we have free-threading (much harder to fix). I haven’t had time to investigate in more detail.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>PyTorch</category>
  <category>Python</category>
  <category>Free-Threading</category>
  <category>No-GIL</category>
  <category>LLM</category>
  <category>GPT2</category>
  <guid>https://trent.me/blog/posts/2025-xx-xx-pytorch-and-python-free-threading/</guid>
  <pubDate>Fri, 07 Feb 2025 06:27:03 GMT</pubDate>
  <media:content url="https://trent.me/blog/posts/2025-xx-xx-pytorch-and-python-free-threading/images/pytorch-and-python-free-threading.png" medium="image" type="image/png" height="144" width="144"/>
</item>
</channel>
</rss>
