<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Trent Nelson</title>
<link>https://trent.me/articles/</link>
<atom:link href="https://trent.me/articles/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<image>
<url>https://trent.me/bluebg.jpg</url>
<title>Trent Nelson</title>
<link>https://trent.me/articles/</link>
</image>
<generator>quarto-1.5.57</generator>
<lastBuildDate>Fri, 04 May 2018 07:00:00 GMT</lastBuildDate>
<item>
  <title>Is Prefix Of String In Table?</title>
  <dc:creator>Trent Nelson</dc:creator>
  <link>https://trent.me/articles/is-prefix-of-string-in-table/</link>
  <description><![CDATA[ 




<p><small> Published: 4th May, 2018.</small></p><small>
<p>Thanks to <a href="https://twitter.com/rygorous">Fabian Giesen</a>, <a href="https://twitter.com/pshufb">Wojciech Muła</a>, <a href="https://twitter.com/geofflangdale">Geoff Langdale</a>, <a href="https://twitter.com/lemire">Daniel Lemire</a>, and <a href="https://twitter.com/KendallWillets">Kendall Willets</a> for their valuable <a href="https://twitter.com/trentnelson/status/985715037934440448">feedback</a> on an early draft of this article.</p>
<!-- 15.6 + 48.53 + 2.42 + 33.85 + 42 + 49.67 + 11.55 + 9.12 + 12.95 + 4.87 -->
</small><p><small>Hours spent on this article to date: 230.56. </small></p>
<hr>
<section id="tldr" class="level1">
<h1>TL;DR</h1>
<p>I wrote some C and assembly code that uses SIMD instructions to perform prefix matching of strings. The C code was between 4-7x faster than the baseline implementation for prefix matching. The assembly code was 9-12x faster than the baseline specifically for the negative match case (determining that an incoming string definitely does <strong>not</strong> prefix match any of our known strings). The fastest negative match could be done in around 6 CPU cycles, which is pretty quick. (Integer division, for example, takes about 90 cycles.)</p>
</section>
<section id="overview" class="level1">
<h1>Overview</h1>
<p>Goal: given a string, determine if it prefix-matches a set of known strings as fast as possible. That is, in a set of known strings, do any of them prefix match the incoming search string?</p>
<p>A reference implementation was written in C as a baseline, which simply looped through an array of strings, comparing each one, byte-by-byte, looking for a prefix match. Prefix match performance ranged from 28 CPU cycles to 130, and negative match performance was around 74 cycles.</p>
<p>A SIMD-friendly C structure called <code>STRING_TABLE</code> was derived. It is optimized for up to 16 strings, ideally of length less than or equal to 16 characters. The table is created from the set of known strings up-front; it is sorted by length, ascending, and a unique character (with regards to other characters at the same byte offset) is then extracted, along with its index. A 16-byte character array, <code>STRING_SLOT</code>, is used to capture the unique characters. A 16-element array of unsigned characters, <code>SLOT_INDEX</code>, is used to capture the index. Similarly, lengths are stored in the same fashion via <code>SLOT_LENGTHS</code>. Finally, a 16-element array of <code>STRING_SLOTs</code> is used to capture up to the first 16 bytes of each string in the set.</p>
<p>An example of the memory layout of the <code>STRING_TABLE</code> structure at run time, using sample test data, is depicted below. Note the width of each row is 16 bytes (128 bits), which is the size of an XMM register.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/StringTable.svg" id="fig-stringtable"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/StringTable.svg" class="img-fluid figure-img" alt="The STRING_TABLE Structure"></a></p>
<figcaption>The STRING_TABLE Structure</figcaption>
</figure>
</div>
<p>The layout of the <code>STRING_TABLE</code> structure allows us to determine if a given search string does <strong>not</strong> prefix match all 16 strings at once in 12 assembly instructions. This breaks down into 18 μops, with a block throughput of 3.48 cycles on Intel’s Skylake architecture. (In practice, this clocks in at around 6 CPU cycles.)</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Assembly</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">IACA</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>  String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load address of string buffer.</span></span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast string length.</span></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load table lengths.</span></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqu</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string buffer.</span></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpgtb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>                           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify slots &gt; string len.</span></span>
<span id="cb1-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpshufb</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Rearrange string by unique index.</span></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpeqb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare rearranged to unique.</span></span>
<span id="cb1-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vptest</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Unique slots AND (!long slots).</span></span>
<span id="cb1-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnc</span>      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; CY=0, continue with routine.</span></span>
<span id="cb1-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; CY=1, no match.</span></span>
<span id="cb1-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                                         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1 (NO_MATCH_FOUND).</span></span>
<span id="cb1-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return NO_MATCH_FOUND.</span></span></code></pre></div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<pre class="plaintext"><code>S:\Source\tracer&gt;iaca x64\Release\StringTable2.dll
Intel(R) Architecture Code Analyzer
Version -  v3.0-28-g1ba2cbb build date: 2017-10-23;17:30:24
Analyzed File -  x64\Release\StringTable2.dll
Binary Format - 64Bit
Architecture  -  SKL
Analysis Type - Throughput

Throughput Analysis Report
--------------------------
Block Throughput: 3.48 Cycles       Throughput Bottleneck: FrontEnd
Loop Count:  24
Port Binding In Cycles Per Iteration:
----------------------------------------------------------------------------
| Port   |  0  - DV  |  1  |  2  - D   |  3  - D   |  4  |  5  |  6  |  7  |
----------------------------------------------------------------------------
| Cycles | 2.0   0.0 | 1.0 | 3.5   3.5 | 3.5   3.5 | 0.0 | 3.0 | 2.0 | 0.0 |
----------------------------------------------------------------------------

DV - Divider pipe (on port 0)
D - Data fetch pipe (on ports 2 and 3)
* - instruction micro-ops not bound to a port
^ - Micro Fusion occurred

|    | Ports pressure in cycles        | |
|μops|0DV| 1 | 2 - D | 3 - D |4| 5 | 6 |7|
-------------------------------------------
| 1  |   |   |0.5 0.5|0.5 0.5| |   |   | | mov rax, qword ptr [rdx+0x8]
| 2  |   |   |0.5 0.5|0.5 0.5| |1.0|   | | vpbroadcastb xmm4, byte ptr [rdx]
| 1  |   |   |0.5 0.5|0.5 0.5| |   |   | | vmovdqa xmm3, xmmword ptr [rcx+0x20]
| 1  |   |   |0.5 0.5|0.5 0.5| |   |   | | vmovdqu xmm0, xmmword ptr [rax]
| 1  |1.0|   |       |       | |   |   | | vpcmpgtb xmm1, xmm3, xmm4
| 2^ |   |   |0.5 0.5|0.5 0.5| |1.0|   | | vpshufb xmm5, xmm0, xmmword ptr [rcx+0x10]
| 2^ |   |1.0|0.5 0.5|0.5 0.5| |   |   | | vpcmpeqb xmm5, xmm5, xmmword ptr [rcx]
| 2  |1.0|   |       |       | |1.0|   | | vptest xmm1, xmm5
| 1  |   |   |       |       | |   |1.0| | jnb 0x10
| 1* |   |   |       |       | |   |   | | xor eax, eax
| 1  |   |   |       |       | |   |1.0| | not al
| 3^ |   |   |0.5 0.5|0.5 0.5| |   |   | | ret
Total Num Of μops: 18</code></pre>
</div>
</div>
</div>
<p>Here’s a simplified walk-through of a negative match in action, using the search string “CAT”:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/StringTable-NegativeMatch-v3.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/StringTable-NegativeMatch-v3.svg" class="img-fluid figure-img" alt="StringTable Negative Match"></a></p>
<figcaption>StringTable Negative Match</figcaption>
</figure>
</div>
<p>Ten iterations of a function named <code>IsPrefixOfStringInTable</code> were authored. The tenth and final iteration was the fastest, prefix matching in as little as 19 cycles—a 4x improvement over the baseline. Negative matching took 11 cycles—a 6.7x improvement.</p>
<p>An assembly version of the algorithm was authored specifically to optimize for the negative match case, and was able to do so in as little as 8 cycles, representing a 9x improvement over the baseline. (It was a little bit slower than the fastest C routine in the case of prefix matches, though, as can be seen below.)</p>
<p>Feedback for an early draft of this article was then solicited via <a href="https://twitter.com/trentnelson/status/985715037934440448">Twitter</a>, resulting in four more iterations of the C version, and three more iterations of the assembly version. The PGO build of the fastest C version prefix matched in about 16 cycles (and also had the best “worst case input string” performance where three slots needed comparison), negative matching in about 26 cycles. The fifth iteration of the assembly version negative matched in about 6 cycles, a 3 and 1 cycle improvement, respectively.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-Overview-v2.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-Overview-v2.svg" class="img-fluid figure-img" alt="Benchmark Overview"></a></p>
<figcaption>Benchmark Overview</figcaption>
</figure>
</div>
<p>We were then ready to publish, but felt compelled to investigate an odd performance quirk we’d noticed with one of the assembly routines, which yielded 7 more assembly versions. Were any of them faster? Let’s find out.</p>
</section>
<section id="the-background" class="level1">
<h1>The Background</h1>
<section id="the-tracer-project" class="level2">
<h2 class="anchored" data-anchor-id="the-tracer-project">The Tracer Project</h2>
<p>One of the frustrations I had with existing Python profilers was that there was no easy or efficient means to filter or exclude trace information based on the module name of the code being executed. I tackled this in my <a href="https://github.com/tpn/tracer">tracer</a> project, which allows you to set an environment variable named <code>TRACER_MODULE_NAMES</code> to restrict which modules should be traced, e.g.:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode cmd code-with-copy"><code class="sourceCode dosbat"><span id="cb3-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">TRACER_MODULE_NAMES</span>=myproject1;myproject2;myproject3.subproject;numpy;pandas;scipy</span></code></pre></div>
<p>If the code being executed is coming from the module <code>myproject3.subproject.foo</code>, then we need to trace it, as that string <strong>prefix matches</strong> the third entry on our list.</p>
<p>This article details the custom data structure and algorithm I came up with in order to try and solve the prefix matching problem more optimally with a SIMD approach. The resulting <a href="https://github.com/tpn/tracer/tree/master/StringTable2">StringTable</a> component is used extensively within the tracer project, and as such, must conform to unique constraints such as no use of the C runtime library and allocating all memory through TraceStore-backed allocators. Thus, it’s not really something you’d drop in to your current project in its current form. Hopefully, the article still proves to be interesting.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The code samples provided herein are copied directly from the tracer project, which is written in C and assembly, and uses the Pascal-esque <em>Cutler Normal Form</em> style for C. If you’re used to the more UNIX-style <a href="https://www.freebsd.org/cgi/man.cgi?query=style&amp;sektion=9"><em>Kernel Normal Form</em></a> of C, it’s quite like that, except that it’s absolutely nothing like that, and all these code samples will probably be very jarring.</p>
</div>
</div>
</section>
<section id="baseline-c-implementation" class="level2">
<h2 class="anchored" data-anchor-id="baseline-c-implementation">Baseline C Implementation</h2>
<p>The simplest way of solving this in C is to have an array of C strings (i.e., NULL-terminated byte arrays), then for each string, loop through byte by byte and see if it prefix matches the search string.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Baseline (Cutler Normal Form)</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Baseline (Kernel Normal Form)</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Declare a set of module names to be used as a string array.</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> ModuleNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myproject1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myproject2"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myproject3.subproject"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"numpy"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pandas"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-11">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scipy"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-12">    NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb4-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the function pointer typedef.</span></span>
<span id="cb4-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span></span>
<span id="cb4-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb4-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IS_PREFIX_OF_CSTR_IN_ARRAY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span></span>
<span id="cb4-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Out_opt_</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb4-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> IS_PREFIX_OF_CSTR_IN_ARRAY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PIS_PREFIX_OF_CSTR_IN_ARRAY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-27"></span>
<span id="cb4-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb4-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Forward declaration.</span></span>
<span id="cb4-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb4-31"></span>
<span id="cb4-32">IS_PREFIX_OF_CSTR_IN_ARRAY IsPrefixOfCStrInArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-33"></span>
<span id="cb4-34"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb4-35"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb4-36">IsPrefixOfCStrInArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb4-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-39">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb4-40">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-41"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-46">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-47"></span>
<span id="cb4-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++,</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-49">        Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-50">        Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-51">        Right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-52"></span>
<span id="cb4-53">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-54">            Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb4-55">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-56"></span>
<span id="cb4-57">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!*</span>Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-58">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-59">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-60">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-61">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-62">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-63">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-64">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-65">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-66"></span>
<span id="cb4-67">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-68"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb5-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>module_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myproject1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myproject2"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myproject3.subproject"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"numpy"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pandas"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scipy"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-8">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> string_match <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* Index of the match. */</span></span>
<span id="cb5-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-14"></span>
<span id="cb5-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* Number of characters matched. */</span></span>
<span id="cb5-16">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> number_of_chars_matched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-17"></span>
<span id="cb5-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* Pad out to an 8-byte boundary. */</span></span>
<span id="cb5-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb5-20"></span>
<span id="cb5-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* Pointer to the string that was matched. */</span></span>
<span id="cb5-22">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb5-24"></span>
<span id="cb5-25"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span></span>
<span id="cb5-26">is_prefix_of_c_str_in_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-27">                            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-28">                            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> string_match <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-29"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-30">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-31">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-32"></span>
<span id="cb5-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-34">        c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-35">        left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-36">        right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-38">            c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb5-39">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-40">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!*</span>right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-41">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-42">                match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-43">                match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>chars_matched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-44">                match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb5-45">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-46">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-47">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-48">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-49"></span>
<span id="cb5-50">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-51"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
<p>Another type of code pattern that the string table attempts to replace is anything that does a lot of <code>if/else if/else if</code>-type string comparisons to look for keywords. For example, in the <a href="https://github.com/id-Software/Quake-III-Arena/blob/dbe4ddb10315479fc00086f08e25d968b4b43c49/q3asm/q3asm.c#L609">Quake III</a> source, there’s some symbol/string processing logic that looks like this:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// call instructions reset currentArgOffset</span></span>
<span id="cb6-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>strncmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CALL"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-3">    EmitByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>segment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>CODESEG<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> OP_CALL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-4">    instructionCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-5">    currentArgOffset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-8"></span>
<span id="cb6-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// arg is converted to a reversed store</span></span>
<span id="cb6-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>strncmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ARG"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-11">    EmitByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>segment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>CODESEG<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> OP_ARG <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-12">    instructionCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> currentArgOffset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-14">        CodeError<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"currentArgOffset &gt;= 256"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-17">    EmitByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>segment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>CODESEG<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> currentArgOffset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-18">    currentArgOffset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-21"></span>
<span id="cb6-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// ret just leaves something on the op stack</span></span>
<span id="cb6-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>strncmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RET"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-24">    EmitByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>segment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>CODESEG<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> OP_LEAVE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-25">    instructionCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-26">    EmitInt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>segment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>CODESEG<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> currentLocals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> currentArgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-28"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-29"></span>
<span id="cb6-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// pop is needed to discard the return value of</span></span>
<span id="cb6-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a function</span></span>
<span id="cb6-32"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>strncmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pop"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-33">    EmitByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>segment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>CODESEG<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> OP_POP <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-34">    instructionCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-36"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-37"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span></span></code></pre></div>
<p>An example of using the string table approach for this problem is discussed in the Other Applications section.</p>
</section>
<section id="the-proposed-interface" class="level2">
<h2 class="anchored" data-anchor-id="the-proposed-interface">The Proposed Interface</h2>
<p>Let’s take a look at the interface we’re proposing, the <code>IsPrefixOfStringInTable</code> function, that this article is based upon:</p>
<section id="the-isprefixofstringintable-function" class="level3">
<h3 class="anchored" data-anchor-id="the-isprefixofstringintable-function">The <code>IsPrefixOfStringInTable</code> Function</h3>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Our string table index is simply a char, with -1 indicating no match found.</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">CHAR</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-6"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define NO_MATCH_FOUND </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span></span>
<span id="cb7-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb7-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">IS_PREFIX_OF_STRING_IN_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span></span>
<span id="cb7-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb7-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb7-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Out_opt_</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> StringMatch</span>
<span id="cb7-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">IS_PREFIX_OF_STRING_IN_TABLE</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-16"></span>
<span id="cb7-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">IS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-18"></span>
<span id="cb7-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb7-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb7-21">IsPrefixOfStringInTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb7-22">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb7-23">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb7-24">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb7-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb7-27"></span>
<span id="cb7-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb7-29"></span>
<span id="cb7-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb7-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb7-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb7-33"></span>
<span id="cb7-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb7-35"></span>
<span id="cb7-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb7-37"></span>
<span id="cb7-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb7-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb7-40"></span>
<span id="cb7-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb7-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb7-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb7-44"></span>
<span id="cb7-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb7-46"></span>
<span id="cb7-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb7-48"></span>
<span id="cb7-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span></code></pre></div>
<p>All implementations discussed in this article adhere to that function signature. The <code>STRING_TABLE</code> structure will be discussed shortly.</p>
</section>
<section id="the-string_match-structure" class="level3">
<h3 class="anchored" data-anchor-id="the-string_match-structure">The <code>STRING_MATCH</code> Structure</h3>
<p>The <code>STRING_MATCH</code> structure is used to optionally communicate information about the prefix match back to the caller. The index and characters matched fields are often very useful when using the string table for text parsing; see the other applications section below for an example.</p>
<p>The structure is defined as follows:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This structure is used to communicate matches back to the caller.</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> _STRING_MATCH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-6"></span>
<span id="cb8-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Index of the match.</span></span>
<span id="cb8-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-10"></span>
<span id="cb8-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-12"></span>
<span id="cb8-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Number of characters matched.</span></span>
<span id="cb8-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-16"></span>
<span id="cb8-17">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> NumberOfMatchedCharacters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-18"></span>
<span id="cb8-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pad out to 8-bytes.</span></span>
<span id="cb8-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-22"></span>
<span id="cb8-23">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> Padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb8-24"></span>
<span id="cb8-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pointer to the string that was matched.  The underlying buffer will</span></span>
<span id="cb8-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// stay valid for as long as the STRING_TABLE struct persists.</span></span>
<span id="cb8-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-29"></span>
<span id="cb8-30">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-31"></span>
<span id="cb8-32"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_MATCH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>PPSTRING_MATCH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_MATCH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
</section>
</section>
<section id="the-test-data" class="level2">
<h2 class="anchored" data-anchor-id="the-test-data">The Test Data</h2>
<p>Instead of using some arbitrary Python module names, this article is going to focus on a string table constructed out of a set of 16 strings that represent reserved names of the NTFS file system, at least when it was first released way back in the early 90s.</p>
<p>This list is desirable as it has good distribution of characters, there is a good mix of both short and long entries, plus one oversized one (<code>$INDEX_ALLOCATION</code>, which clocks in at 17 characters), and almost all strings lead with a common character (the dollar sign), preventing a simple <em>first character</em> optimization used by <a href="https://github.com/tpn/tracer/blob/2018-04-18.1/StringTable/StringTable.h#L324">the initial version of the StringTable component I wrote in 2016</a>.</p>
<p>So the scenario we’ll be emulating, in this case, is that we’ve just been passed a filename for creation, and we need to check if it prefix matches any of the reserved names.</p>
<p>Here’s the full list of NTFS names we’ll be using. We’re assuming 8-bit ASCII encoding (no UTF-8) and case sensitive. (If this were actually the NT kernel, we’d need to use wide characters with UTF-16 encoding, and be case-insensitive.)</p>
<section id="ntfs-reserved-names" class="level3">
<h3 class="anchored" data-anchor-id="ntfs-reserved-names">NTFS Reserved Names</h3>
<ul>
<li><code>$AttrDef</code></li>
<li><code>$BadClus</code></li>
<li><code>$Bitmap</code></li>
<li><code>$Boot</code></li>
<li><code>$Extend</code></li>
<li><code>$LogFile</code></li>
<li><code>$MftMirr</code></li>
<li><code>$Mft</code></li>
<li><code>$Secure</code></li>
<li><code>$UpCase</code></li>
<li><code>$Volume</code></li>
<li><code>$Cairo</code></li>
<li><code>$INDEX_ALLOCATION</code></li>
<li><code>$DATA</code></li>
<li><code>????</code></li>
<li><code>.</code></li>
</ul>
<p>The ordering is important in certain cases. For example, when you have overlapping strings, such as <code>$MftMirr</code> and <code>$Mft</code>, you should put the longest strings first. They will be matched first, and as our routine terminates upon the first successful prefix match—if a longer string resided after a shorter one, it would never get detected.</p>
<p>Let’s review some guiding design requirements and cover some of the design decisions I made, which should help shape your understanding of the implementation.</p>
</section>
</section>
</section>
<section id="requirements-and-design-decisions" class="level1">
<h1>Requirements and Design Decisions</h1>
<ol type="1">
<li>The <code>STRING</code> struct will be used to capture incoming search strings as well as the representation of any strings registered in the table (or more accurately, in the corresponding <code>StringArray</code> structure associated with the string table.</li>
</ol>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The STRING structure used by the NT kernel.  Our STRING_ARRAY structure</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// relies on an array of these structures.  We never pass raw 'char *'s</span></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// around, only STRING/PSTRING structs/pointers.</span></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> _STRING <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> MaximumLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span>  Padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCHAR</span> Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">STRING</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">STRING</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PCSTRING<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<ol start="2" type="1">
<li><p>The design should optimize for string lengths less than or equal to 16. Lengths greater than 16 are permitted, up to 128 bytes, but they incur more overhead during the prefix lookup.</p></li>
<li><p>The design should prioritize the fast-path code where there is no match for a given search string. Being able to terminate the search as early as possible is ideal.</p></li>
<li><p>The performance hits taken by unaligned data access are non-negligible, especially when dealing with XMM/YMM loads. Pay special care to alignment constraints and make sure that everything under our control is aligned on a suitable boundary.</p></li>
</ol>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The only thing we can’t really control in the real world is the alignment of the incoming search string buffer, which will often be at undesirable alignments like 2, 4, 6, etc. Our test program explicitly aligns the incoming search strings on 32-byte boundaries to avoid the penalties associated with unaligned access.</p>
</div>
</div>
<p>The string table is geared toward a single-shot build. Once you’ve created it with a given string array or used a delimited environment variable, that’s it. There are no <code>AddString()</code> or <code>RemoveString()</code> routines. The order you provided the strings in will be the same order the table uses—no re-ordering will be done. Thus, for prefix matching purposes, if two strings share a common prefix, the longer one should go first, as the prefix search routine will check it first.</p>
<p>Only single matches are performed; the first match that qualifies as a prefix match (target string in table had length less than or equal to the search string, and all of its characters matched). There is no support for obtaining multiple matches—if you’ve constructed your string tables properly (no duplicate or incorrectly-ordered overlapping fields), you shouldn’t need to.</p>
<p>So, to summarize, the design guidelines are as follows:</p>
<ul>
<li><p>Prioritize fast-path exit in the non-matched case. (I refer to this as <strong>negative matching</strong> in a lot of places.)</p></li>
<li><p>Optimize for up to 16 string slots, where each slot has up to 16 characters, ideally. It can have up to 128 in total; however, any bytes outside of the first sixteen live in the string array structure supporting the string table (accessible via <code>pStringArray</code>).</p></li>
<li><p>If a slot is longer than 16 characters, optimize for the assumption that it won’t be <em>that</em> much longer. For instance, assume a string of length 18 bytes is more common than 120 bytes.</p></li>
</ul>
</section>
<section id="the-data-structures" class="level1">
<h1>The Data Structures</h1>
<p>The primary data structure employed by this solution is the <code>STRING_TABLE</code> structure. It is composed of supporting structures: <code>STRING_SLOT</code>, <code>SLOT_INDEX</code>, and <code>SLOT_LENGTH</code>, and either embeds or points to the originating <code>STRING_ARRAY</code> structure from which it was created.</p>
<section id="string_table" class="level2">
<h2 class="anchored" data-anchor-id="string_table"><code>STRING_TABLE</code></h2>
<p>Let’s review the <code>STRING_TABLE</code> <a href="https://github.com/tpn/tracer/blob/2018-04-18.2/StringTable2/StringTable.h#L194">view on GitHub</a> structure first and then touch on the supporting structures.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">C (Cutler Normal Form)</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">C (Kernel Normal Form)</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-3" aria-controls="tabset-3-3" aria-selected="false">MASM</a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The STRING_TABLE struct is an optimized structure for testing whether a</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// prefix entry for a string is in a table, with the expectation that the</span></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// strings being compared will be relatively short (ideally &lt;= 16 characters),</span></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and the table of string prefixes to compare to will be relatively small</span></span>
<span id="cb10-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (ideally &lt;= 16 strings).</span></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The overall goal is to be able to prefix match a string with the lowest</span></span>
<span id="cb10-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// possible (amortized) latency.  Fixed-size, memory-aligned character arrays,</span></span>
<span id="cb10-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and SIMD instructions are used to try and achieve this.</span></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-12"></span>
<span id="cb10-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> _STRING_TABLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-14"></span>
<span id="cb10-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A slot where each individual element contains a uniquely-identifying</span></span>
<span id="cb10-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// letter, with respect to the other strings in the table, of each string</span></span>
<span id="cb10-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in an occupied slot.</span></span>
<span id="cb10-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-20"></span>
<span id="cb10-21">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-22"></span>
<span id="cb10-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (16 bytes consumed.)</span></span>
<span id="cb10-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-26"></span>
<span id="cb10-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// For each unique character identified above, the following structure</span></span>
<span id="cb10-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// captures the 0-based index of that character in the underlying string.</span></span>
<span id="cb10-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This is used as an input to vpshufb to rearrange the search string's</span></span>
<span id="cb10-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters such that it can be vpcmpeqb'd against the unique characters</span></span>
<span id="cb10-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// above.</span></span>
<span id="cb10-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-34"></span>
<span id="cb10-35">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_INDEX</span> UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-36"></span>
<span id="cb10-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (32 bytes consumed.)</span></span>
<span id="cb10-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-40"></span>
<span id="cb10-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Length of the underlying string in each slot.</span></span>
<span id="cb10-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-44"></span>
<span id="cb10-45">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-46"></span>
<span id="cb10-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (48 bytes consumed, aligned at 16 bytes.)</span></span>
<span id="cb10-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-50"></span>
<span id="cb10-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-52">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pointer to the STRING_ARRAY associated with this table, which we own</span></span>
<span id="cb10-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (we create it and copy the caller's contents at creation time and</span></span>
<span id="cb10-54">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// deallocate it when we get destroyed).</span></span>
<span id="cb10-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B.  We use pStringArray here instead of StringArray because the</span></span>
<span id="cb10-57">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//       latter is a field name at the end of the struct.</span></span>
<span id="cb10-58">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-60"></span>
<span id="cb10-61">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-62"></span>
<span id="cb10-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (56 bytes consumed, aligned at 8 bytes.)</span></span>
<span id="cb10-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-66"></span>
<span id="cb10-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// String table flags.</span></span>
<span id="cb10-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-70"></span>
<span id="cb10-71">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_FLAGS</span> Flags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-72"></span>
<span id="cb10-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (60 bytes consumed, aligned at 4 bytes.)</span></span>
<span id="cb10-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-76"></span>
<span id="cb10-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A 16-bit bitmap indicating which slots are occupied.</span></span>
<span id="cb10-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-80"></span>
<span id="cb10-81">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> OccupiedBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-82"></span>
<span id="cb10-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A 16-bit bitmap indicating which slots have strings longer than 16 chars.</span></span>
<span id="cb10-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-86"></span>
<span id="cb10-87">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> ContinuationBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-88"></span>
<span id="cb10-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (64 bytes consumed, aligned at 64 bytes.)</span></span>
<span id="cb10-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-92"></span>
<span id="cb10-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The 16-element array of STRING_SLOT structs.  We want this to be aligned</span></span>
<span id="cb10-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// on a 64-byte boundary, and it consumes 256-bytes of memory.</span></span>
<span id="cb10-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-97"></span>
<span id="cb10-98">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb10-99"></span>
<span id="cb10-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (320 bytes consumed, aligned at 64 bytes.)</span></span>
<span id="cb10-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-103"></span>
<span id="cb10-104">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We want the structure size to be a power of 2 such that an even number</span></span>
<span id="cb10-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can fit into a 4KB page (and reducing the likelihood of crossing page</span></span>
<span id="cb10-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// boundaries, which complicates SIMD boundary handling), so we have an</span></span>
<span id="cb10-108">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// extra 192-bytes to play with here.  The CopyStringArray() routine is</span></span>
<span id="cb10-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// special-cased to allocate the backing STRING_ARRAY structure plus the</span></span>
<span id="cb10-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// accommodating buffers in this space if it can fit.</span></span>
<span id="cb10-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (You can test whether or not this occurred by checking the invariant</span></span>
<span id="cb10-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  `StringTable-&gt;pStringArray == &amp;StringTable-&gt;StringArray`, if this</span></span>
<span id="cb10-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  is true, the array was allocated within this remaining padding space.)</span></span>
<span id="cb10-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-116"></span>
<span id="cb10-117">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">union</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-118">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-119">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">CHAR</span> Padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb10-120">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb10-121"></span>
<span id="cb10-122"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PPSTRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-123"></span>
<span id="cb10-124"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-125"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Assert critical size and alignment invariants at compile time.</span></span>
<span id="cb10-126"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-127"></span>
<span id="cb10-128"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FIELD_OFFSET</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-129"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FIELD_OFFSET</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-130"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FIELD_OFFSET</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-131"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FIELD_OFFSET</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-132"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FIELD_OFFSET</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">320</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-133"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb11-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> string_table <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-2">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>                       unique_chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb11-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>              unique_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb11-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>              slot_lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb11-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> string_array       <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>string_array_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> string_table_flags  flags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span>             occupied_bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span>             continuation_bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>                       slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">][</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb11-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">union</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> string_array    string_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-12">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>                   padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">184</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb11-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span></code></pre></div>
</div>
<div id="tabset-3-3" class="tab-pane" aria-labelledby="tabset-3-3-tab">
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb12-1">STRING_TABLE struct</span>
<span id="cb12-2">    UniqueChars         CHAR <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> dup  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(?)</span></span>
<span id="cb12-3">    UniqueIndex         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> dup  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(?)</span></span>
<span id="cb12-4">    Lengths             <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> dup  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(?)</span></span>
<span id="cb12-5">    pStringArray        PSTRING_ARRAY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb12-6">    Flags               ULONG         <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb12-7">    OccupiedBitmap      USHORT        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb12-8">    ContinuationBitmap  USHORT        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb12-9">    Slots               STRING_SLOT <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> dup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">({</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">})</span></span>
<span id="cb12-10">    union</span>
<span id="cb12-11">        StringArray STRING_ARRAY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{?}</span></span>
<span id="cb12-12">        Padding CHAR <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span> dup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(?)</span></span>
<span id="cb12-13">    ends</span>
<span id="cb12-14">STRING_TABLE ends</span>
<span id="cb12-15"></span>
<span id="cb12-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Assert our critical field offsets and structure size as per the same approach</span></span>
<span id="cb12-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; taken in StringTable.h.</span></span>
<span id="cb12-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-20"></span>
<span id="cb12-21">.erre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex  eq  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> @CatStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&lt;</span>UnexpectedOffset STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-22">.erre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths      eq  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> @CatStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&lt;</span>UnexpectedOffset STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-23">.erre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray eq  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> @CatStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&lt;</span>UnexpectedOffset STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-24">.erre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots        eq  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> @CatStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&lt;</span>UnexpectedOffset STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-25">.erre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Padding      eq <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">320</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> @CatStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&lt;</span>UnexpectedOffset STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-26">.erre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>size STRING_TABLE eq <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> @CatStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&lt;</span>IncorrectStructSize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(</span>size STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-27"></span>
<span id="cb12-28">PSTRING_TABLE typedef <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> STRING_TABLE</span>
<span id="cb12-29"></span>
<span id="cb12-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; CamelCase typedefs that are nicer to work with in assembly</span></span>
<span id="cb12-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; than their uppercase counterparts.</span></span>
<span id="cb12-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-34"></span>
<span id="cb12-35">StringTable typedef STRING_TABLE</span></code></pre></div>
</div>
</div>
</div>
<p>The following diagram depicts an in-memory representation of the <code>STRING_TABLE</code> structure using our NTFS reserved prefix names. It is created via the <code>CreateStringTable</code> routine, which we feature in the appendix of this article.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/StringTable.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/StringTable.svg" class="img-fluid figure-img" alt="STRING_TABLE Diagram"></a></p>
<figcaption>STRING_TABLE Diagram</figcaption>
</figure>
</div>
<p>In order to improve the uniqueness of the unique characters selected from each string, the strings are sorted by length during string table creation and enumerated in this order while identifying unique characters. The rationale behind this is that shorter strings simply have fewer characters to choose from, while longer strings have more to choose from. If we identified unique characters in the order they appear in the string table, we may have longer strings preceding shorter ones, such that toward the end of the table, nothing unique can be extracted from the short ones.</p>
<p>The utility of the string table is maximized by ensuring a unique character is selected from every string; thus, we sort by length first. Note that the uniqueness is actually determined by offset:character pairs, with the offsets becoming the indices stored in the <em>UniqueIndex</em> slot. If you trace through the diagram above, you’ll see that the unique character in each slot matches the character in the corresponding string slot, indicated by the underlying index.</p>
</section>
<section id="string_array" class="level2">
<h2 class="anchored" data-anchor-id="string_array"><code>STRING_ARRAY</code></h2>
<p>The string array captures a raw array representation of the underlying strings making up the string table. It is either embedded within the padding area at the end of the string table, or a separate allocation is made during string table creation. The main interface to creating a string table is via a <code>STRING_ARRAY</code> structure. The helper functions, <a href="https://github.com/tpn/tracer/blob/2018-04-18.2/StringTable2/CreateStringTable.c#L471"><code>CreateStringTableFromDelimitedString</code></a> and <a href="https://github.com/tpn/tracer/blob/2018-04-18.2/StringTable2/CreateStringTable.c#L595"><code>CreateStringTableFromDelimitedEnvironmentVariable</code></a>, simply break down their input into a <code>STRING_ARRAY</code> representation first before calling <a href="https://github.com/tpn/tracer/blob/2018-04-18.2/StringTable2/CreateStringTable.c#L51"><code>CreateStringTable</code></a>.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb13-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Struct_size_bytes_</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SizeInQuadwords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> _STRING_ARRAY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-2"></span>
<span id="cb13-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Size of the structure, in quadwords.  Why quadwords?  It allows us to</span></span>
<span id="cb13-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// keep this size field to a USHORT, which helps with the rest of the</span></span>
<span id="cb13-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// alignment in this struct (we want the STRING Strings[] array to start</span></span>
<span id="cb13-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// on an 8-byte boundary).</span></span>
<span id="cb13-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B.  We can't express the exact field size in the SAL annotation</span></span>
<span id="cb13-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//       below, because the array of buffer sizes are inexpressible;</span></span>
<span id="cb13-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//       however, we know the maximum length, so we can use the implicit</span></span>
<span id="cb13-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//       invariant that the total buffer size can't exceed whatever num</span></span>
<span id="cb13-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//       elements * max size is.</span></span>
<span id="cb13-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-15"></span>
<span id="cb13-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Field_range_</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&lt;=,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb13-17">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> _STRING_ARRAY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-18">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>NumberOfElements <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">STRING</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-19">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>MaximumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb13-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb13-21">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> SizeInQuadwords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-22"></span>
<span id="cb13-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Number of elements in the array.</span></span>
<span id="cb13-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-26"></span>
<span id="cb13-27">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-28"></span>
<span id="cb13-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Minimum and maximum lengths for the String-&gt;Length fields.  Optional.</span></span>
<span id="cb13-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-32"></span>
<span id="cb13-33">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> MinimumLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-34">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> MaximumLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-35"></span>
<span id="cb13-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A pointer to the STRING_TABLE structure that "owns" us.</span></span>
<span id="cb13-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-39"></span>
<span id="cb13-40">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> _STRING_TABLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-41"></span>
<span id="cb13-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The string array.  Number of elements in the array is governed by the</span></span>
<span id="cb13-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// NumberOfElements field above.</span></span>
<span id="cb13-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-46"></span>
<span id="cb13-47">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">STRING</span> Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>ANYSIZE_ARRAY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb13-48"></span>
<span id="cb13-49"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_ARRAY</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>PPSTRING_ARRAY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The odd-looking macros <a href="https://github.com/tpn/winsdk-10/blob/master/Include/10.0.16299.0/shared/sal.h#L597"><code>_Struct_size_bytes_</code></a> and <a href="https://github.com/tpn/winsdk-10/blob/master/Include/10.0.16299.0/shared/sal.h#L615"><code>_Field_range_</code></a> are <a href="https://docs.microsoft.com/en-us/visualstudio/code-quality/annotating-structs-and-classes">SAL Annotations</a>. There’s a neat deck called <a href="https://github.com/tpn/pdfs/blob/master/Program%20Analysis%20with%20PREfast%20and%20SAL%20-%20Erik%20Poll%20-%20Slides%20(3_StaticAnalysisPREfast).pdf">Engineering Better Software at Microsoft</a> which captures some interesting details about SAL, for those wanting to read more. The Code Analysis engine that uses the annotations is built upon the <a href="https://github.com/Z3Prover/z3">Z3 Theorem Prover</a>, which is a fascinating little project in its own right.</p>
</div>
</div>
<p>And finally, we’re left with the smaller helper structs that we use to encapsulate the various innards of the string table. (I use unions that feature <code>XMMWORD</code> representations (which is a typedef of <code>__m128i</code>, representing an XMM register) as well as underlying byte/character representations, as I personally find it makes the resulting C code a bit nicer.)</p>
</section>
<section id="STRING_SLOT" class="level2">
<h2 class="anchored" data-anchor-id="STRING_SLOT"><code>STRING_SLOT</code></h2>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// String tables are composed of a 16 element array of 16 byte string "slots",</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// which represent a unique character (with respect to other strings in the</span></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table) for a string in a given slot index. The STRING_SLOT structure</span></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// provides a convenient wrapper around this construct.</span></span>
<span id="cb14-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb14-7"></span>
<span id="cb14-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">union</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DECLSPEC_ALIGN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> _STRING_SLOT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">CHAR</span> Char<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb14-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_SLOT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PPSTRING_SLOT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
</section>
<section id="SLOT_INDEX" class="level2">
<h2 class="anchored" data-anchor-id="SLOT_INDEX"><code>SLOT_INDEX</code></h2>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb15-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A 16 element array of 1 byte unsigned integers, used to capture the length</span></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// of each string slot in a single XMM 128-bit register.</span></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb15-5"></span>
<span id="cb15-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">union</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DECLSPEC_ALIGN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> _SLOT_LENGTHS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb15-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PSLOT_LENGTHS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PPSLOT_LENGTHS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
</section>
<section id="CreateStringTable" class="level2">
<h2 class="anchored" data-anchor-id="CreateStringTable">String Table Construction</h2>
<p>The <a href="https://github.com/tpn/tracer/blob/2018-04-18.2/StringTable2/CreateStringTable.c#L147"><code>CreateSingleStringTable</code></a> routine is responsible for the construction of a new <code>STRING_TABLE</code>. It is here that we identify the unique set of characters (and their indices) to store in the first two fields of the string table.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define private types used by this module.</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-4"></span>
<span id="cb16-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">_LENGTH_INDEX_ENTRY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LENGTH_INDEX_ENTRY</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LENGTH_INDEX_ENTRY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PLENGTH_INDEX_ENTRY</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-10"></span>
<span id="cb16-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">_LENGTH_INDEX_TABLE</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-12">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LENGTH_INDEX_ENTRY</span> Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LENGTH_INDEX_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LENGTH_INDEX_TABLE</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PLENGTH_INDEX_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-15"></span>
<span id="cb16-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">union</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DECLSPEC_ALIGN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> _CHARACTER_BITMAP <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-17">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">YMMWORD</span> Ymm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-18">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> Xmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">LONG</span> Bits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))];</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 8</span></span>
<span id="cb16-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">CHARACTER_BITMAP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">CHARACTER_BITMAP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">CHARACTER_BITMAP</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PCHARACTER_BITMAP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-23"></span>
<span id="cb16-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">_SLOT_BITMAPS</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-25">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">CHARACTER_BITMAP</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_BITMAPS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_BITMAPS</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSLOT_BITMAPS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-28"></span>
<span id="cb16-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Function implementation.</span></span>
<span id="cb16-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-32"></span>
<span id="cb16-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb16-34"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span></span>
<span id="cb16-35">CreateSingleStringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb16-36">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PRTL</span> Rtl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-37">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PALLOCATOR</span> StringTableAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-38">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PALLOCATOR</span> StringArrayAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-39">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BOOL</span> CopyArray</span>
<span id="cb16-41">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb16-43"></span>
<span id="cb16-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb16-45"></span>
<span id="cb16-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Allocates space for a STRING_TABLE structure using the provided allocators,</span></span>
<span id="cb16-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    then initializes it using the provided STRING_ARRAY.  If CopyArray is set</span></span>
<span id="cb16-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    to TRUE, the routine will copy the string array such that the caller is</span></span>
<span id="cb16-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    free to destroy it after the table has been successfully created.  If it</span></span>
<span id="cb16-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    is set to FALSE and StringArray-&gt;StringTable has a non-NULL value, it is</span></span>
<span id="cb16-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    assumed that sufficient space has already been allocated for the string</span></span>
<span id="cb16-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    table and this pointer will be used to initialize the rest of the structure.</span></span>
<span id="cb16-53"></span>
<span id="cb16-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    DestroyStringTable() must be called against the returned PSTRING_TABLE when</span></span>
<span id="cb16-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the structure is no longer needed in order to ensure resources are released.</span></span>
<span id="cb16-56"></span>
<span id="cb16-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb16-58"></span>
<span id="cb16-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Rtl - Supplies a pointer to an initialized RTL structure.</span></span>
<span id="cb16-60"></span>
<span id="cb16-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTableAllocator - Supplies a pointer to an ALLOCATOR structure which</span></span>
<span id="cb16-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        will be used for creating the STRING_TABLE.</span></span>
<span id="cb16-63"></span>
<span id="cb16-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringArrayAllocator - Supplies a pointer to an ALLOCATOR structure which</span></span>
<span id="cb16-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        may be used to create the STRING_ARRAY if it cannot fit within the</span></span>
<span id="cb16-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        padding of the STRING_TABLE structure.  This is kept separate from the</span></span>
<span id="cb16-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        StringTableAllocator due to the stringent alignment requirements of the</span></span>
<span id="cb16-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        string table.</span></span>
<span id="cb16-69"></span>
<span id="cb16-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringArray - Supplies a pointer to an initialized STRING_ARRAY structure</span></span>
<span id="cb16-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        that contains the STRING structures that are to be added to the table.</span></span>
<span id="cb16-72"></span>
<span id="cb16-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    CopyArray - Supplies a boolean value indicating whether or not the</span></span>
<span id="cb16-74"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        StringArray structure should be deep-copied during creation.  This is</span></span>
<span id="cb16-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        typically set when the caller wants to be able to free the structure</span></span>
<span id="cb16-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        as soon as this call returns (or can't guarantee it will persist past</span></span>
<span id="cb16-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        this function's invocation, i.e. if it was stack allocated).</span></span>
<span id="cb16-78"></span>
<span id="cb16-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb16-80"></span>
<span id="cb16-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    A pointer to a valid PSTRING_TABLE structure on success, NULL on failure.</span></span>
<span id="cb16-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Call DestroyStringTable() on the returned structure when it is no longer</span></span>
<span id="cb16-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    needed in order to ensure resources are cleaned up appropriately.</span></span>
<span id="cb16-84"></span>
<span id="cb16-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb16-86"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-87">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Byte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-88">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-89">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-90">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-91">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-92">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> HighestBit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-93">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> OccupiedMask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-94">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PULONG</span> Bits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-95">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> OccupiedBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-96">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> ContinuationBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-97">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-98">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-99">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-100">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-101">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-102">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_INDEX</span> UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-103">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_INDEX</span> LengthIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-104">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-105">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LENGTH_INDEX_TABLE</span> LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-106">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PCHARACTER_BITMAP</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-107">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_BITMAPS</span> SlotBitmaps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-108">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PLENGTH_INDEX_ENTRY</span> Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-109"></span>
<span id="cb16-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Validate arguments.</span></span>
<span id="cb16-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-113"></span>
<span id="cb16-114">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringTableAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-115">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-116">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-117"></span>
<span id="cb16-118">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArrayAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-119">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-120">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-121"></span>
<span id="cb16-122">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SourceStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-123">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-124">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-125"></span>
<span id="cb16-126">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SourceStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfElements <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-127">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-128">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-129"></span>
<span id="cb16-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the incoming string array if applicable.</span></span>
<span id="cb16-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-133"></span>
<span id="cb16-134">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CopyArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-135"></span>
<span id="cb16-136">        StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CopyStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb16-137">            StringTableAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-138">            StringArrayAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-139">            SourceStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-140">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FIELD_OFFSET</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span></span>
<span id="cb16-141">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span></span>
<span id="cb16-142">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable</span>
<span id="cb16-143">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-144"></span>
<span id="cb16-145">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-146">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-147">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-148"></span>
<span id="cb16-149">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-150"></span>
<span id="cb16-151">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-152">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're not copying the array, so initialize StringArray to point at</span></span>
<span id="cb16-153">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the caller's SourceStringArray, and StringTable to point at the</span></span>
<span id="cb16-154">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// array's StringTable field (which will be non-NULL if sufficient</span></span>
<span id="cb16-155">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// space has been allocated).</span></span>
<span id="cb16-156">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-157"></span>
<span id="cb16-158">        StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SourceStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-159">        StringTable <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-160"></span>
<span id="cb16-161">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-162"></span>
<span id="cb16-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-164">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If StringTable has no value, we've either been called with CopyArray set</span></span>
<span id="cb16-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to FALSE, or CopyStringArray() wasn't able to allocate sufficient space</span></span>
<span id="cb16-166">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// for both the table and itself.  Either way, we need to allocate space for</span></span>
<span id="cb16-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the table.</span></span>
<span id="cb16-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-169"></span>
<span id="cb16-170">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-171"></span>
<span id="cb16-172">        StringTable <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span></span>
<span id="cb16-173">            StringTableAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>AlignedCalloc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb16-174">                StringTableAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Context<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-175">                <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-176">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span></span>
<span id="cb16-177">                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_ALIGNMENT</span></span>
<span id="cb16-178">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-179">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-180"></span>
<span id="cb16-181">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-182">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-183">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-184">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-185"></span>
<span id="cb16-186">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-187">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Make sure the fields that are sensitive to alignment are, in fact,</span></span>
<span id="cb16-188">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// aligned correctly.</span></span>
<span id="cb16-189">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-190"></span>
<span id="cb16-191">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>AssertStringTableFieldAlignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-192">        DestroyStringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringTableAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-193">                           StringArrayAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-194">                           StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-195">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-196">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-197"></span>
<span id="cb16-198">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-199">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// At this point, we have copied the incoming StringArray if necessary,</span></span>
<span id="cb16-200">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and we've allocated sufficient space for the StringTable structure.</span></span>
<span id="cb16-201">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Enumerate over all of the strings, set the continuation bit if the</span></span>
<span id="cb16-202">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// length &gt; 16, set the relevant slot length, set the relevant unique</span></span>
<span id="cb16-203">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// character entry, then move the first 16-bytes of the string into the</span></span>
<span id="cb16-204">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// relevant slot via an aligned SSE mov.</span></span>
<span id="cb16-205">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-206"></span>
<span id="cb16-207">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-208">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize pointers and counters, clear stack-based structures.</span></span>
<span id="cb16-209">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-210"></span>
<span id="cb16-211">    Slot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-212">    String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-213"></span>
<span id="cb16-214">    OccupiedBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-215">    ContinuationBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-216">    NumberOfElements <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-217">    UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_setzero_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-218">    UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_setzero_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-219">    LengthIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_setzero_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-220"></span>
<span id="cb16-221">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-222">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set all the slot lengths to 0x7f up front instead of defaulting</span></span>
<span id="cb16-223">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to zero.  This allows for simpler logic when searching for a prefix</span></span>
<span id="cb16-224">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// string, which involves broadcasting a search string's length to an XMM</span></span>
<span id="cb16-225">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register, then doing _mm_cmpgt_epi8() against the lengths array and</span></span>
<span id="cb16-226">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the string length.  If we left the lengths as 0 for unused slots, they</span></span>
<span id="cb16-227">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// would get included in the resulting comparison register (i.e. the high</span></span>
<span id="cb16-228">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// bits would be set to 1), so we'd have to do a subsequent masking of</span></span>
<span id="cb16-229">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the result at some point using the OccupiedBitmap.  By defaulting the</span></span>
<span id="cb16-230">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// lengths to 0x7f, we ensure they'll never get included in any cmpgt-type</span></span>
<span id="cb16-231">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// SIMD matches.  (We use 0x7f instead of 0xff because the _mm_cmpgt_epi8()</span></span>
<span id="cb16-232">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// intrinsic assumes packed signed integers.)</span></span>
<span id="cb16-233">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-234"></span>
<span id="cb16-235">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x7f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-236"></span>
<span id="cb16-237">    ZeroStruct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-238">    ZeroStruct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SlotBitmaps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-239"></span>
<span id="cb16-240">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-241"></span>
<span id="cb16-242">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-243"></span>
<span id="cb16-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the string length for the slot.</span></span>
<span id="cb16-246">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-247"></span>
<span id="cb16-248">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-249"></span>
<span id="cb16-250">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-251">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the appropriate bit in the continuation bitmap if the string is</span></span>
<span id="cb16-252">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// longer than 16 bytes.</span></span>
<span id="cb16-253">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-254"></span>
<span id="cb16-255">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-256">            ContinuationBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb16-257">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-258"></span>
<span id="cb16-259">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-260"></span>
<span id="cb16-261">            Entry <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-262">            Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-263">            Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-264"></span>
<span id="cb16-265">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-266"></span>
<span id="cb16-267">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-268">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Perform a linear scan of the length-index table in order to</span></span>
<span id="cb16-269">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// identify an appropriate insertion point.</span></span>
<span id="cb16-270">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-271"></span>
<span id="cb16-272">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-273">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-274">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-275">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-276">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-277"></span>
<span id="cb16-278">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-279"></span>
<span id="cb16-280">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-281">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// New entry doesn't go at the end of the table, so shuffle</span></span>
<span id="cb16-282">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// everything else down.</span></span>
<span id="cb16-283">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-284"></span>
<span id="cb16-285">                Rtl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>RtlMoveMemory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span></span>
<span id="cb16-286">                                   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span></span>
<span id="cb16-287">                                   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb16-288">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-289"></span>
<span id="cb16-290">            Entry <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-291">            Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-292">            Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-293">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-294"></span>
<span id="cb16-295">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-296">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the first 16-bytes of the string into the relevant slot.  We</span></span>
<span id="cb16-297">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// have taken care to ensure everything is 16-byte aligned by this</span></span>
<span id="cb16-298">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// stage, so we can use SSE intrinsics here.</span></span>
<span id="cb16-299">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-300"></span>
<span id="cb16-301">        CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-302">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_store_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;(*</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-303"></span>
<span id="cb16-304">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-305">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Advance our pointers.</span></span>
<span id="cb16-306">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-307"></span>
<span id="cb16-308">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-309">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-310"></span>
<span id="cb16-311">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-312"></span>
<span id="cb16-313">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-314">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store the slot lengths.</span></span>
<span id="cb16-315">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-316"></span>
<span id="cb16-317">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_store_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;(</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-318"></span>
<span id="cb16-319">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-320">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Loop through the strings in order of shortest to longest and construct</span></span>
<span id="cb16-321">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the uniquely-identifying character table with corresponding index.</span></span>
<span id="cb16-322">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-323"></span>
<span id="cb16-324"></span>
<span id="cb16-325">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-326">        Entry <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-327">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-328">        Slot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-329"></span>
<span id="cb16-330">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-331">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate over each character in the slot and find the first one</span></span>
<span id="cb16-332">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// without a corresponding bit set.</span></span>
<span id="cb16-333">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-334"></span>
<span id="cb16-335">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-336">            Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>SlotBitmaps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-337">            Bits <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PULONG</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&amp;</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Bits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-338">            Byte <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Char<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-339">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>BitTestAndSet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Byte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-340">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-341">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-342">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-343"></span>
<span id="cb16-344">        UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Char<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Byte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-345">        UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-346">        LengthIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-347">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-348"></span>
<span id="cb16-349">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-350">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Loop through the elements again such that the unique chars are stored</span></span>
<span id="cb16-351">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the order they appear in the table.</span></span>
<span id="cb16-352">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-353"></span>
<span id="cb16-354">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-355">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-356">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-357">                StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Char<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Char<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-358">                StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-359">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-360">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-361">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-362">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-363"></span>
<span id="cb16-364">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-365">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate and store the occupied bitmap.  Each bit, from low to high,</span></span>
<span id="cb16-366">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// corresponds to the index of a slot.  When set, the slot is occupied.</span></span>
<span id="cb16-367">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// When clear, it is not.  So, fill bits from the highest bit set down.</span></span>
<span id="cb16-368">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-369"></span>
<span id="cb16-370">    HighestBit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb16-371">    OccupiedMask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _blsmsk_u32<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>HighestBit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-372">    StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>OccupiedBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>OccupiedMask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-373"></span>
<span id="cb16-374">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-375">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store the continuation bitmap.</span></span>
<span id="cb16-376">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-377"></span>
<span id="cb16-378">    StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ContinuationBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>ContinuationBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-379"></span>
<span id="cb16-380">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-381">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Wire up the string array to the table.</span></span>
<span id="cb16-382">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-383"></span>
<span id="cb16-384">    StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-385"></span>
<span id="cb16-386">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-387">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// And we're done, return the table.</span></span>
<span id="cb16-388">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-389"></span>
<span id="cb16-390">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-391"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="the-benchmark" class="level1">
<h1>The Benchmark</h1>
<p>The performance comparison graphs in the subsequent sections were generated in Excel, using CSV data output by the creatively-named program <a href="https://github.com/tpn/tracer/blob/2018-04-18.2/StringTable2BenchmarkExe/main.c#L227"><code>StringTable2BenchmarkExe</code></a>.</p>
<p>Modern CPUs are fast, and timing is challenging, especially when you’re dealing with CPU cycle comparisons. No approach is perfect. Here’s what I settled on:</p>
<ol type="1">
<li><p>The benchmark utility has <code>#pragma optimize("", off)</code> at the start of the file, which disables global optimizations, even in release (optimized) builds. This prevents the compiler from doing clever things regarding the scheduling of the timestamping logic, which affects reported times.</p></li>
<li><p>The benchmark utility pins itself to a single core and sets its thread priority to the highest permissible value at startup. (Turbo is disabled on the computer, so the frequency is pinned to 3.68GHz.)</p></li>
<li><p>The benchmark utility is fed an array of function pointers and test inputs. It iterates over each test input, then iterates over each function, calling it with the test input and potentially verifying the result (some functions are included for comparison but don’t produce correct results, so they don’t have their results verified).</p></li>
<li><p>The test input string is copied into a local buffer aligned on a 32-byte boundary. This ensures that all test inputs are being compared fairly. (The natural alignment of the buffers varies anywhere from 2 to 512 bytes, and unaligned buffers have a significant impact on the timings.)</p></li>
<li><p>The function is run once, with the result captured. If verification has been requested, the result is verified. We <code>__debugbreak()</code> immediately if there’s a mismatch, which is handy during development.</p></li>
<li><p><code>NtDelayExecution(TRUE, 1)</code> is called, which results in a sleep of approximately 100 nanoseconds. This forces a context switch, giving the thread a new scheduling quantum before each function is run.</p></li>
<li><p>The function is executed 100 times for warmup.</p></li>
<li><p>Timings are taken for 1000 iterations of the function using the given test input. The <code>__rdtscp()</code> intrinsic is used (which forces some serialization) to capture the timestamp counter before and after the iterations.</p></li>
<li><p>This process is repeated 100 times. The minimum time observed to perform 1000 iterations (out of 100 attempts) is captured as the function’s best time.</p></li>
</ol>
<section id="release-vs-pgo-oddities" class="level2">
<h2 class="anchored" data-anchor-id="release-vs-pgo-oddities">Release vs PGO Oddities</h2>
<p>All of the times in the graphs come from the profile-guided optimization (PGO) build of the <code>StringTable</code> component. The PGO build is faster than the normal release build in every case except one, where it is notably slower.</p>
<p>It’s… odd. I haven’t investigated it. The following graph depicts the affected function, <code>IsPrefixOfStringInTable_1</code>, and a few other versions for reference, showing the performance of the PGO build compared to the release build on the input strings <code>"$INDEX_ALLOCATION"</code> and <code>"$Bai123456789012"</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-Release-vs-PGO-v3.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-Release-vs-PGO-v3.svg" class="img-fluid figure-img" alt="Benchmark Release vs PGO"></a></p>
<figcaption>Benchmark Release vs PGO</figcaption>
</figure>
</div>
<p>Only that function is affected, and the problem mainly manifests with the two example test strings shown. As this routine essentially serves as one of the initial baseline implementations, it would be misleading to compare all optimized PGO versions to the abnormally slow baseline implementation. Therefore, the release and PGO timings were blended into a single CSV, and the Excel PivotTables select the minimum time for a given function and test input.</p>
<p>Thus, you’re always looking at the PGO timings, except for this outlier case where the release versions are faster.</p>
</section>
</section>
<section id="implementations" class="level1">
<h1>The Implementations</h1>
<section id="round1" class="level2">
<h2 class="anchored" data-anchor-id="round1">Round 1</h2>
<p>In this section, we’ll take a look at the various implementations I experimented with on the first pass, prior to soliciting any feedback. I figured there were a couple of ways I could present this information. First, I could hand-pick what I choose to show and hide, creating a rosy picture that makes it seem like I effortlessly arrived at the fastest implementation without much actual effort whatsoever.</p>
<p>Or I could show the gritty reality of how everything <strong>actually</strong> went down in chronological fashion, errors and all. And there were definitely some errors! For better or worse, I’ve chosen this route, so you’ll get to see some pretty tedious tweaks (changing a single line, for example) before the juicy stuff really kicks in.</p>
<p>Additionally, with the benefit of writing this section introduction retroactively, iterations 4 and 5 aren’t testing what I initially thought they were testing. I’ve left them in as is; if anything, it demonstrates the importance of only changing one thing at a time and making sure you’re testing what you think you’re testing. I’ll discuss the errors with those iterations later in the article.</p>
<section id="c-implementations" class="level3">
<h3 class="anchored" data-anchor-id="c-implementations">C Implementations</h3>
<section id="IsPrefixOfCStrInArray" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfCStrInArray"><code>IsPrefixOfCStrInArray</code></h4>
<p>IsPrefixOfStringInTable_1 →</p>
<p>Let’s review the baseline implementation again, as that’s what we’re ultimately comparing ourselves against. This version enumerates the string array (and thus has a slightly different function signature than the <code>STRING_TABLE</code>-based functions) looking for prefix matches. No SIMD instructions are used. The timings captured should be proportional to the location of the test input string in the array. That is, it should take less time to prefix match strings that occur earlier in the array versus those that appear later.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb17-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb17-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb17-3">IsPrefixOfCStrInArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb17-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb17-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb17-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb17-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb17-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-14"></span>
<span id="cb17-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++,</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-16">        Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-17">        Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-18">        Right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-19"></span>
<span id="cb17-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-21">            Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb17-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-23"></span>
<span id="cb17-24">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!*</span>Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-25">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-26">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-27">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-28">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-29">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-31">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-32">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-33"></span>
<span id="cb17-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="IsPrefixOfStringInTable_1" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_1"><code>IsPrefixOfStringInTable_1</code></h4>
<p>← IsPrefixOfCStrInArray | IsPrefixOfStringInTable_2 →</p>
<p>This version is similar to the <code>IsPrefixOfCStrInArray</code> implementation, except it utilizes the slot length information provided by the <code>STRING_ARRAY</code> structure and conforms to our standard <code>IsPrefixOfStringInTable</code> function signature. It uses no SIMD instructions.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb18-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb18-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb18-3">IsPrefixOfStringInTable_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb18-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb18-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb18-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb18-9"></span>
<span id="cb18-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb18-11"></span>
<span id="cb18-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb18-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb18-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb18-15"></span>
<span id="cb18-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine performs a simple linear scan of the string table looking for</span></span>
<span id="cb18-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    a prefix match against each slot.</span></span>
<span id="cb18-18"></span>
<span id="cb18-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb18-20"></span>
<span id="cb18-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb18-22"></span>
<span id="cb18-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb18-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb18-25"></span>
<span id="cb18-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb18-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb18-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb18-29"></span>
<span id="cb18-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb18-31"></span>
<span id="cb18-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb18-33"></span>
<span id="cb18-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb18-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-40">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-42"></span>
<span id="cb18-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_START();</span></span>
<span id="cb18-44"></span>
<span id="cb18-45">    StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-46"></span>
<span id="cb18-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>MinimumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-48">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-49">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-50"></span>
<span id="cb18-51">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-52"></span>
<span id="cb18-53">        TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb18-54"></span>
<span id="cb18-55">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-56">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-57">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-58"></span>
<span id="cb18-59">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-60">            Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb18-61">            Right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb18-62">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-63">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-64">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-65">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-66"></span>
<span id="cb18-67">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-68"></span>
<span id="cb18-69">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-70"></span>
<span id="cb18-71">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-72">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-73">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-74"></span>
<span id="cb18-75">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-76"></span>
<span id="cb18-77">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-78">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-79"></span>
<span id="cb18-80">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-81"></span>
<span id="cb18-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-83"></span>
<span id="cb18-84">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-85"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="benchmark-1" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-1">Benchmark 1</h4>
<p>Here’s the performance of these two baseline routines:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-01-v6.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-01-v6.svg" class="img-fluid figure-img" alt="Benchmark 1"></a></p>
<figcaption>Benchmark 1</figcaption>
</figure>
</div>
<p>That’s an interesting result! Even without using any SIMD instructions, version 1, the <code>IsPrefixOfStringInTable_1</code> routine, is faster (in all but one case) than the baseline <code>IsPrefixOfCStrInArray</code> routine, thanks to a more sophisticated data structure.</p>
<p>(And really, it’s not even using the sophisticated parts of the <code>STRING_TABLE</code>; it’s just leveraging the fact that we’ve captured the lengths of each string in the backing <code>STRING_ARRAY</code> structure by virtue of using the <code>STRING</code> structure to wrap our strings (instead of relying on the standard NULL-terminated C string approach).)</p>
<hr>
<p>Before we look at <code>IsPrefixOfStringInTable_2</code>, which is the first of the routines to use SIMD instructions, it’s helpfu to know some backstory. The <code>_2</code> version is based on the prefix matching routine I wrote for the first version of the <code>StringTable</code> component back in 2016. The layout of the <code>STRING_TABLE</code> struct differed in the first version; only the first character of each slot was used to do the initial exclusion (as opposed to the unique character), and lengths were unsigned shorts instead of chars (16 bits instead of 8 bits), so the match bitmap had to be constructed slightly differently.</p>
<p>None of those details really apply to our second attempt at the <code>StringTable</code> component, detailed in this article. Our lengths are 8 bits, and we use unique characters in the initial negative match fast-path. However, the first version used an elaborate AVX2 prefix match routine geared toward matching long strings, attempting to use non-temporal streaming load instructions where possible (which would only make sense for a large number of long strings in specific cache-thrashing scenarios).</p>
<p>Compare our simpler implementation, <code>IsPrefixMatch</code>, used from version 3 onward, to the far more elaborate (and unnecessary) <code>IsPrefixMatchAvx2</code>:</p>
</section>
<section id="IsPrefixMatch" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixMatch"><code>IsPrefixMatch</code></h4>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb19-1">FORCEINLINE</span>
<span id="cb19-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span></span>
<span id="cb19-3">IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb19-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> PCSTRING SearchString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb19-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> PCSTRING TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb19-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Offset</span>
<span id="cb19-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb19-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PBYTE</span> Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PBYTE</span> Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Matched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Remaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-13"></span>
<span id="cb19-14">    Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PBYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>RtlOffsetToPointer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-15">    Right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PBYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>RtlOffsetToPointer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-16"></span>
<span id="cb19-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Remaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-18">        Matched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb19-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb19-20"></span>
<span id="cb19-21">    Matched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Matched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-24">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb19-25"></span>
<span id="cb19-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> Matched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-27"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="IsPrefixMatchAvx2" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixMatchAvx2"><code>IsPrefixMatchAvx2</code></h4>
<p>The AVX2 routine is overkill, especially considering the emphasis we put on favoring short strings over longer ones in the requirements section. However, we want to put broad statements like that to the test, so let’s include it as our first SIMD implementation to see how it stacks up against the simpler versions.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb20-1">FORCEINLINE</span>
<span id="cb20-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span></span>
<span id="cb20-3">IsPrefixMatchAvx2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb20-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> PCSTRING SearchString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> PCSTRING TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> Offset</span>
<span id="cb20-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb20-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> SearchStringRemaining<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> TargetStringRemaining<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONGLONG</span> SearchStringAlignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONGLONG</span> TargetStringAlignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-14"></span>
<span id="cb20-15">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">LONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-16">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">LONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-17"></span>
<span id="cb20-18">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCHAR</span> SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCHAR</span> TargetBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-20"></span>
<span id="cb20-21">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> SearchSlot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-22"></span>
<span id="cb20-23">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> SearchXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-24">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TargetXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-25">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> ResultXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-26"></span>
<span id="cb20-27">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">YMMWORD</span> SearchYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-28">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">YMMWORD</span> TargetYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-29">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">YMMWORD</span> ResultYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-30"></span>
<span id="cb20-31">    SearchStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SearchString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-32">    TargetStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-33"></span>
<span id="cb20-34">    SearchBuffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCHAR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>RtlOffsetToPointer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-35">    TargetBuffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCHAR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>RtlOffsetToPointer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-36"></span>
<span id="cb20-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This routine is only called in the final stage of a prefix match when</span></span>
<span id="cb20-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// we've already verified the slot's corresponding original string length</span></span>
<span id="cb20-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (referred in this routine as the target string) is less than or equal</span></span>
<span id="cb20-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to the length of the search string.</span></span>
<span id="cb20-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We attempt as many 32-byte comparisons as we can, then as many 16-byte</span></span>
<span id="cb20-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// comparisons as we can, then a final &lt; 16-byte comparison if necessary.</span></span>
<span id="cb20-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-46">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We use aligned loads if possible, falling back to unaligned if not.</span></span>
<span id="cb20-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-48"></span>
<span id="cb20-49">StartYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb20-50"></span>
<span id="cb20-51">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> TargetStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-52"></span>
<span id="cb20-53">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-54">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We have at least 32 bytes to compare for each string.  Check the</span></span>
<span id="cb20-55">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// alignment for each buffer and do an aligned streaming load (non-</span></span>
<span id="cb20-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// temporal hint) if our alignment is at a 32-byte boundary or better;</span></span>
<span id="cb20-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// reverting to an unaligned load when not.</span></span>
<span id="cb20-58">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-59"></span>
<span id="cb20-60">        SearchStringAlignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GetAddressAlignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-61">        TargetStringAlignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GetAddressAlignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TargetBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-62"></span>
<span id="cb20-63">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchStringAlignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-64">            SearchYmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm256_loadu_si256</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PYMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-65">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-66">            SearchYmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm256_stream_load_si256</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PYMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-67">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-68"></span>
<span id="cb20-69">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TargetStringAlignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-70">            TargetYmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm256_loadu_si256</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PYMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>TargetBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-71">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-72">            TargetYmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm256_stream_load_si256</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PYMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>TargetBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-73">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-74"></span>
<span id="cb20-75">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-76">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the two vectors.</span></span>
<span id="cb20-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-78"></span>
<span id="cb20-79">        ResultYmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm256_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-80"></span>
<span id="cb20-81">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-82">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask from the result of the comparison.</span></span>
<span id="cb20-83">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-84"></span>
<span id="cb20-85">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm256_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ResultYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-86"></span>
<span id="cb20-87">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-88">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// There were at least 32 characters remaining in each string buffer,</span></span>
<span id="cb20-89">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, every character needs to have matched in order for this search</span></span>
<span id="cb20-90">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to continue.  If there were less than 32 characters, we can terminate</span></span>
<span id="cb20-91">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this prefix search here.  (-1 == 0xffffffff == all bits set == all</span></span>
<span id="cb20-92">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters matched.)</span></span>
<span id="cb20-93">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-94"></span>
<span id="cb20-95">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-96"></span>
<span id="cb20-97">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-98">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not all characters were matched, terminate the prefix search.</span></span>
<span id="cb20-99">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-100"></span>
<span id="cb20-101">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-102">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-103"></span>
<span id="cb20-104">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-105">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// All 32 characters were matched.  Update counters and pointers</span></span>
<span id="cb20-106">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// accordingly and jump back to the start of the 32-byte processing.</span></span>
<span id="cb20-107">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-108"></span>
<span id="cb20-109">        SearchStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-110">        TargetStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-111"></span>
<span id="cb20-112">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-113"></span>
<span id="cb20-114">        SearchBuffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-115">        TargetBuffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-116"></span>
<span id="cb20-117">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> StartYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-118">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-119"></span>
<span id="cb20-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Intentional follow-on to StartXmm.</span></span>
<span id="cb20-122">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-123"></span>
<span id="cb20-124">StartXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb20-125"></span>
<span id="cb20-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the search string's alignment.</span></span>
<span id="cb20-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-129"></span>
<span id="cb20-130">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> TargetStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-131"></span>
<span id="cb20-132">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-133">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We have at least 16 bytes to compare for each string.  Check the</span></span>
<span id="cb20-134">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// alignment for each buffer and do an aligned streaming load (non-</span></span>
<span id="cb20-135">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// temporal hint) if our alignment is at a 16-byte boundary or better;</span></span>
<span id="cb20-136">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// reverting to an unaligned load when not.</span></span>
<span id="cb20-137">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-138"></span>
<span id="cb20-139">        SearchStringAlignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GetAddressAlignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-140"></span>
<span id="cb20-141">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchStringAlignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-142">            SearchXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*)</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-143">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-144">            SearchXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_stream_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*)</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-145">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-146"></span>
<span id="cb20-147">        TargetXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_stream_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*)</span>TargetBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-148"></span>
<span id="cb20-149">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-150">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the two vectors.</span></span>
<span id="cb20-151">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-152"></span>
<span id="cb20-153">        ResultXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-154"></span>
<span id="cb20-155">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-156">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask from the result of the comparison.</span></span>
<span id="cb20-157">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-158"></span>
<span id="cb20-159">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ResultXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-160"></span>
<span id="cb20-161">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-162">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// There were at least 16 characters remaining in each string buffer,</span></span>
<span id="cb20-163">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, every character needs to have matched in order for this search</span></span>
<span id="cb20-164">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to continue.  If there were less than 16 characters, we can terminate</span></span>
<span id="cb20-165">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this prefix search here.  (-1 == 0xffff -&gt; all bits set -&gt; all chars</span></span>
<span id="cb20-166">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// matched.)</span></span>
<span id="cb20-167">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-168"></span>
<span id="cb20-169">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">SHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">SHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-170"></span>
<span id="cb20-171">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-172">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not all characters were matched, terminate the prefix search.</span></span>
<span id="cb20-173">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-174"></span>
<span id="cb20-175">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-176">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-177"></span>
<span id="cb20-178">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-179">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// All 16 characters were matched.  Update counters and pointers</span></span>
<span id="cb20-180">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// accordingly and jump back to the start of the 16-byte processing.</span></span>
<span id="cb20-181">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-182"></span>
<span id="cb20-183">        SearchStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-184">        TargetStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-185"></span>
<span id="cb20-186">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-187"></span>
<span id="cb20-188">        SearchBuffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-189">        TargetBuffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-190"></span>
<span id="cb20-191">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> StartXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-192">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-193"></span>
<span id="cb20-194">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TargetStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-195"></span>
<span id="cb20-196">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-197">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We'll get here if we successfully prefix matched the search string</span></span>
<span id="cb20-198">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and all our buffers were aligned (i.e. we don't have a trailing</span></span>
<span id="cb20-199">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// &lt; 16 bytes comparison to perform).</span></span>
<span id="cb20-200">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-201"></span>
<span id="cb20-202">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-203">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-204"></span>
<span id="cb20-205">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-206">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we have less than 16 bytes to compare.  Our target</span></span>
<span id="cb20-207">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// strings are guaranteed to be 16-byte aligned, so we can load them</span></span>
<span id="cb20-208">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// using an aligned stream load as in the previous cases.</span></span>
<span id="cb20-209">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-210"></span>
<span id="cb20-211">    TargetXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_stream_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>TargetBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-212"></span>
<span id="cb20-213">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-214">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Loading the remainder of our search string's buffer is a little more</span></span>
<span id="cb20-215">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// complicated.  It could reside within 15 bytes of the end of the page</span></span>
<span id="cb20-216">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// boundary, which would mean that a 128-bit load would cross a page</span></span>
<span id="cb20-217">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// boundary.</span></span>
<span id="cb20-218">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-219">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// At best, the page will belong to our process and we'll take a performance</span></span>
<span id="cb20-220">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// hit.  At worst, we won't own the page, and we'll end up triggering a hard</span></span>
<span id="cb20-221">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// page fault.</span></span>
<span id="cb20-222">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-223">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// So, see if the current search buffer address plus 16 bytes crosses a page</span></span>
<span id="cb20-224">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// boundary.  If it does, take the safe but slower approach of a ranged</span></span>
<span id="cb20-225">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// memcpy (movsb) into a local stack-allocated STRING_SLOT structure.</span></span>
<span id="cb20-226">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-227"></span>
<span id="cb20-228">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>PointerToOffsetCrossesPageBoundary<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-229"></span>
<span id="cb20-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No page boundary is crossed, so just do an unaligned 128-bit move</span></span>
<span id="cb20-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// into our Xmm register.  (We could do the aligned/unaligned dance</span></span>
<span id="cb20-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// here, but it's the last load we'll be doing (i.e. it's not</span></span>
<span id="cb20-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// potentially on a loop path), so I don't think it's worth the extra</span></span>
<span id="cb20-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// branch cost, although I haven't measured this empirically.)</span></span>
<span id="cb20-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-237"></span>
<span id="cb20-238">        SearchXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*)</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-239"></span>
<span id="cb20-240">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-241"></span>
<span id="cb20-242">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We cross a page boundary, so only copy the the bytes we need via</span></span>
<span id="cb20-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// __movsb(), then do an aligned stream load into the Xmm register</span></span>
<span id="cb20-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// we'll use in the comparison.</span></span>
<span id="cb20-246">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-247"></span>
<span id="cb20-248">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__movsb</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PBYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&amp;</span>SearchSlot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Char<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-249">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PBYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-250">                SearchStringRemaining<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-251"></span>
<span id="cb20-252">        SearchXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_stream_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>SearchSlot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-253">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-254"></span>
<span id="cb20-255">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-256">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the final vectors.</span></span>
<span id="cb20-257">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-258"></span>
<span id="cb20-259">    ResultXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-260"></span>
<span id="cb20-261">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-262">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask from the result of the comparison, but mask off (zero</span></span>
<span id="cb20-263">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// out) high bits from the target string's remaining length.</span></span>
<span id="cb20-264">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-265"></span>
<span id="cb20-266">    Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ResultXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> TargetStringRemaining<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-267"></span>
<span id="cb20-268">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-269">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters were matched and determine if we were a</span></span>
<span id="cb20-270">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// successful prefix match or not.</span></span>
<span id="cb20-271">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-272"></span>
<span id="cb20-273">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-274"></span>
<span id="cb20-275">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> TargetStringRemaining<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-276"></span>
<span id="cb20-277">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-278">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we matched the same amount of characters as remaining in the</span></span>
<span id="cb20-279">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// target string, we've successfully prefix matched the search string.</span></span>
<span id="cb20-280">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Return the total number of characters we matched.</span></span>
<span id="cb20-281">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-282"></span>
<span id="cb20-283">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-284">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-285">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-286"></span>
<span id="cb20-287">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-288">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// After all that work, our string match failed at the final stage!  Return</span></span>
<span id="cb20-289">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to the caller indicating we were unable to make a prefix match.</span></span>
<span id="cb20-290">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-291"></span>
<span id="cb20-292">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-293"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="IsPrefixOfStringInTable_2" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_2"><code>IsPrefixOfStringInTable_2</code></h4>
<p>← IsPrefixOfStringInTable_1 | IsPrefixOfStringInTable_3 →</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>This is is the first time we’re seeing the full body of the SIMD-style <code>IsPrefixOfStringInTable</code> implementation. It’s heavily commented, and generally, the core algorithm doesn’t fundamentally change across iterations (just slight tweaks). I’d recommend reading through it thoroughly to build a mental model of how the matching algorithm works. It’s straightforward, and the subsequent iterations will make much more sense, as they’re typically presented as diffs against the previous version.</p>
</div>
</div>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb21-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb21-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb21-3">IsPrefixOfStringInTable_2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb21-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb21-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb21-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb21-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb21-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb21-9"></span>
<span id="cb21-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb21-11"></span>
<span id="cb21-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb21-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb21-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb21-15"></span>
<span id="cb21-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This is our first AVX-optimized version of the routine.</span></span>
<span id="cb21-17"></span>
<span id="cb21-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb21-19"></span>
<span id="cb21-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb21-21"></span>
<span id="cb21-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb21-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb21-24"></span>
<span id="cb21-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb21-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb21-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb21-28"></span>
<span id="cb21-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb21-30"></span>
<span id="cb21-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb21-32"></span>
<span id="cb21-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb21-34"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-35">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-45">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-58"></span>
<span id="cb21-59">    StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-60"></span>
<span id="cb21-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the minimum length of the string array is greater than the length of</span></span>
<span id="cb21-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// our search string, there can't be a prefix match.</span></span>
<span id="cb21-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-65"></span>
<span id="cb21-66">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>MinimumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-67">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-68">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-69"></span>
<span id="cb21-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb21-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb21-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb21-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb21-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb21-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb21-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb21-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb21-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb21-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb21-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb21-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb21-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb21-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb21-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb21-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb21-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb21-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb21-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb21-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb21-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb21-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb21-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb21-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb21-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-103"></span>
<span id="cb21-104">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb21-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-107"></span>
<span id="cb21-108">    LoadSearchStringIntoXmmRegister<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-109"></span>
<span id="cb21-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb21-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb21-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-114"></span>
<span id="cb21-115">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb21-116">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-117"></span>
<span id="cb21-118">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb21-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-121"></span>
<span id="cb21-122">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-123"></span>
<span id="cb21-124">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb21-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-127"></span>
<span id="cb21-128">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-129"></span>
<span id="cb21-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb21-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-133"></span>
<span id="cb21-134">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-135">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-136"></span>
<span id="cb21-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb21-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb21-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb21-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb21-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb21-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-144"></span>
<span id="cb21-145">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-146"></span>
<span id="cb21-147">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb21-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb21-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb21-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb21-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb21-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb21-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-156"></span>
<span id="cb21-157">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-158"></span>
<span id="cb21-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb21-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb21-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb21-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-164"></span>
<span id="cb21-165">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-166"></span>
<span id="cb21-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb21-169">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb21-170">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb21-171">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb21-172">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-173"></span>
<span id="cb21-174">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb21-175">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-176"></span>
<span id="cb21-177">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-178">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb21-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-180"></span>
<span id="cb21-181">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-182"></span>
<span id="cb21-183">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-184"></span>
<span id="cb21-185">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-186">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb21-187">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb21-188">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb21-189">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-190"></span>
<span id="cb21-191">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-192">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-193"></span>
<span id="cb21-194">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-195">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb21-196">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb21-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-198"></span>
<span id="cb21-199">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-200"></span>
<span id="cb21-201">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-202"></span>
<span id="cb21-203">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-204">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb21-205">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb21-206">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-207"></span>
<span id="cb21-208">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-209">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-210"></span>
<span id="cb21-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-212">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb21-213">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb21-214">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb21-215">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-216"></span>
<span id="cb21-217">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-218">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-219"></span>
<span id="cb21-220">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-221">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb21-222">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-223"></span>
<span id="cb21-224">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-225">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb21-226"></span>
<span id="cb21-227">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-228">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb21-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-230"></span>
<span id="cb21-231">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-232"></span>
<span id="cb21-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb21-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb21-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb21-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb21-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb21-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb21-240">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb21-241">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb21-242">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb21-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-244"></span>
<span id="cb21-245">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-246"></span>
<span id="cb21-247">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-248">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb21-249">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-250"></span>
<span id="cb21-251">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-252"></span>
<span id="cb21-253">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-254"></span>
<span id="cb21-255">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-256">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb21-257">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb21-258">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb21-259">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-260"></span>
<span id="cb21-261">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb21-262"></span>
<span id="cb21-263">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatchAvx2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-264"></span>
<span id="cb21-265">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-266"></span>
<span id="cb21-267">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-268">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb21-269">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-270"></span>
<span id="cb21-271">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-272"></span>
<span id="cb21-273">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-274"></span>
<span id="cb21-275">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-276">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb21-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb21-278">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb21-279">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb21-280">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb21-281">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-282"></span>
<span id="cb21-283">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-284">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-285">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-286"></span>
<span id="cb21-287">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-288"></span>
<span id="cb21-289">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb21-290"></span>
<span id="cb21-291">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-292">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb21-293">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb21-294">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb21-295">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-296"></span>
<span id="cb21-297"></span>
<span id="cb21-298">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-299"></span>
<span id="cb21-300">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-301">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-302">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb21-303"></span>
<span id="cb21-304">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-305"></span>
<span id="cb21-306">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-307">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-308"></span>
<span id="cb21-309">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-310">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb21-311">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-312"></span>
<span id="cb21-313">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-314"></span>
<span id="cb21-315">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-316">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb21-317">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-318"></span>
<span id="cb21-319">NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb21-320"></span>
<span id="cb21-321">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb21-322"></span>
<span id="cb21-323">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-324"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="benchmark-2" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-2">Benchmark 2</h4>
<p>Let’s see how version 2, our first SIMD attempt, performs in comparison to the two baselines.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-02-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-02-v1.svg" class="img-fluid figure-img" alt="Benchmark 2"></a></p>
<figcaption>Benchmark 2</figcaption>
</figure>
</div>
<p>Eek! Our first SIMD attempt actually has worse prefix matching performance in most cases! The only area where it shows a performance improvement is in negative matching.</p>
</section>
<section id="IsPrefixOfStringInTable_3" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_3"><code>IsPrefixOfStringInTable_3</code></h4>
<p>← IsPrefixOfStringInTable_2 | IsPrefixOfStringInTable_4 →</p>
<p>For version 3, let’s replace the call to <code>IsPrefixMatchAvx2</code> with our simpler version, <code>IsPrefixMatch</code>:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-4-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-1" aria-controls="tabset-4-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-2" aria-controls="tabset-4-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-4-1" class="tab-pane active" aria-labelledby="tabset-4-1-tab">
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb22-1">% diff -u IsPrefixOfStringInTable_2.c IsPrefixOfStringInTable_3.c</span>
<span id="cb22-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_2.c 2018-04-15 22:35:55.458773500 -0400</span></span>
<span id="cb22-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_3.c 2018-04-15 22:35:55.456274700 -0400</span></span>
<span id="cb22-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,7 +18,7 @@</span></span>
<span id="cb22-5"></span>
<span id="cb22-6"> _Use_decl_annotations_</span>
<span id="cb22-7"> STRING_TABLE_INDEX</span>
<span id="cb22-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_2(</span></span>
<span id="cb22-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_3(</span></span>
<span id="cb22-10">     PSTRING_TABLE StringTable,</span>
<span id="cb22-11">     PSTRING String,</span>
<span id="cb22-12">     PSTRING_MATCH Match</span>
<span id="cb22-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -278,7 +278,7 @@</span></span>
<span id="cb22-14"></span>
<span id="cb22-15">             TargetString = &amp;StringTable-&gt;pStringArray-&gt;Strings[Index];</span>
<span id="cb22-16"></span>
<span id="cb22-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            CharactersMatched = IsPrefixMatchAvx2(String, TargetString, 16);</span></span>
<span id="cb22-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            CharactersMatched = IsPrefixMatch(String, TargetString, 16);</span></span>
<span id="cb22-19"></span>
<span id="cb22-20">             if (CharactersMatched == NO_MATCH_FOUND) {</span></code></pre></div>
</div>
<div id="tabset-4-2" class="tab-pane" aria-labelledby="tabset-4-2-tab">
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb23-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb23-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb23-3">IsPrefixOfStringInTable_3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb23-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb23-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb23-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb23-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb23-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb23-9"></span>
<span id="cb23-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb23-11"></span>
<span id="cb23-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb23-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb23-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb23-15"></span>
<span id="cb23-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This is our first AVX-optimized version of the routine.</span></span>
<span id="cb23-17"></span>
<span id="cb23-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb23-19"></span>
<span id="cb23-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb23-21"></span>
<span id="cb23-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb23-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb23-24"></span>
<span id="cb23-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb23-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb23-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb23-28"></span>
<span id="cb23-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb23-30"></span>
<span id="cb23-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb23-32"></span>
<span id="cb23-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb23-34"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-35">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-45">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-58"></span>
<span id="cb23-59">    StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-60"></span>
<span id="cb23-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the minimum length of the string array is greater than the length of</span></span>
<span id="cb23-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// our search string, there can't be a prefix match.</span></span>
<span id="cb23-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-65"></span>
<span id="cb23-66">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>MinimumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-67">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-68">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-69"></span>
<span id="cb23-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb23-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb23-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb23-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb23-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb23-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb23-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb23-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb23-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb23-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb23-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb23-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb23-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb23-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb23-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb23-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb23-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb23-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb23-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb23-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb23-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb23-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb23-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb23-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb23-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-103"></span>
<span id="cb23-104">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb23-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-107"></span>
<span id="cb23-108">    LoadSearchStringIntoXmmRegister<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-109"></span>
<span id="cb23-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb23-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb23-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-114"></span>
<span id="cb23-115">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb23-116">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-117"></span>
<span id="cb23-118">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb23-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-121"></span>
<span id="cb23-122">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-123"></span>
<span id="cb23-124">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb23-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-127"></span>
<span id="cb23-128">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-129"></span>
<span id="cb23-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb23-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-133"></span>
<span id="cb23-134">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-135">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-136"></span>
<span id="cb23-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb23-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb23-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb23-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb23-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb23-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-144"></span>
<span id="cb23-145">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-146"></span>
<span id="cb23-147">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb23-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb23-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb23-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb23-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb23-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb23-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-156"></span>
<span id="cb23-157">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-158"></span>
<span id="cb23-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb23-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb23-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb23-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-164"></span>
<span id="cb23-165">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-166"></span>
<span id="cb23-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb23-169">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb23-170">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb23-171">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb23-172">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-173"></span>
<span id="cb23-174">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb23-175">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-176"></span>
<span id="cb23-177">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-178">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb23-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-180"></span>
<span id="cb23-181">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-182"></span>
<span id="cb23-183">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-184"></span>
<span id="cb23-185">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-186">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb23-187">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb23-188">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb23-189">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-190"></span>
<span id="cb23-191">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-192">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-193"></span>
<span id="cb23-194">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-195">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb23-196">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb23-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-198"></span>
<span id="cb23-199">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-200"></span>
<span id="cb23-201">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-202"></span>
<span id="cb23-203">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-204">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb23-205">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb23-206">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-207"></span>
<span id="cb23-208">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-209">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-210"></span>
<span id="cb23-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-212">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb23-213">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb23-214">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb23-215">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-216"></span>
<span id="cb23-217">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-218">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-219"></span>
<span id="cb23-220">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-221">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb23-222">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-223"></span>
<span id="cb23-224">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-225">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb23-226"></span>
<span id="cb23-227">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-228">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb23-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-230"></span>
<span id="cb23-231">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-232"></span>
<span id="cb23-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb23-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb23-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb23-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb23-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb23-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb23-240">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb23-241">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb23-242">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb23-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-244"></span>
<span id="cb23-245">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-246"></span>
<span id="cb23-247">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-248">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb23-249">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-250"></span>
<span id="cb23-251">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-252"></span>
<span id="cb23-253">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-254"></span>
<span id="cb23-255">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-256">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb23-257">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb23-258">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb23-259">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-260"></span>
<span id="cb23-261">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb23-262"></span>
<span id="cb23-263">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-264"></span>
<span id="cb23-265">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-266"></span>
<span id="cb23-267">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-268">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb23-269">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-270"></span>
<span id="cb23-271">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-272"></span>
<span id="cb23-273">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-274"></span>
<span id="cb23-275">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-276">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb23-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb23-278">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb23-279">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb23-280">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb23-281">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-282"></span>
<span id="cb23-283">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-284">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-285">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-286"></span>
<span id="cb23-287">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-288"></span>
<span id="cb23-289">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb23-290"></span>
<span id="cb23-291">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-292">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb23-293">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb23-294">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb23-295">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-296"></span>
<span id="cb23-297"></span>
<span id="cb23-298">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-299"></span>
<span id="cb23-300">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-301">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-302">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb23-303"></span>
<span id="cb23-304">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-305"></span>
<span id="cb23-306">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-307">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-308"></span>
<span id="cb23-309">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-310">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb23-311">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-312"></span>
<span id="cb23-313">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-314"></span>
<span id="cb23-315">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-316">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb23-317">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-318"></span>
<span id="cb23-319">NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb23-320"></span>
<span id="cb23-321">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb23-322"></span>
<span id="cb23-323">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-324"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="benchmark-3" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-3">Benchmark 3</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-03-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-03-v1.svg" class="img-fluid figure-img" alt="Benchmark 3"></a></p>
<figcaption>Benchmark 3</figcaption>
</figure>
</div>
<p>Phew! We finally see superior performance across the board. This ends the short-lived tenure of version 2, which is demonstrably worse in every case.</p>
<p>We’ll also omit the <code>IsPrefixOfCStrInArray</code> routine from the graphs for now (for the most part), as it has served its initial baseline purpose.</p>
</section>
<section id="IsPrefixOfStringInTable_4" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_4"><code>IsPrefixOfStringInTable_4</code></h4>
<p>← IsPrefixOfStringInTable_3 | IsPrefixOfStringInTable_5 →</p>
<p>When I first wrote the initial string table code, I was experimenting with different strategies for loading the initial search string buffer. That resulted in the file <a href="https://github.com/tpn/tracer/blob/v0.1.11/StringTable2/StringLoadStoreOperations.h"><code>StringLoadStoreOperations.h</code></a>, which defined a bunch of helper macros. I’ve included them below, but don’t spend too much time absorbing them—they’re not good practice, and they all become irrelevant as soon as we switch to <code>_mm_loadu_si128()</code> in a few versions. I’m including them because they set the scene for versions 4, 5, and 6.</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb24-2"></span>
<span id="cb24-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    VOID</span></span>
<span id="cb24-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LoadSearchStringIntoXmmRegister_SEH(</span></span>
<span id="cb24-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ STRING_SLOT Slot,</span></span>
<span id="cb24-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ PSTRING String,</span></span>
<span id="cb24-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ USHORT LengthVar</span></span>
<span id="cb24-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        );</span></span>
<span id="cb24-9"></span>
<span id="cb24-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb24-11"></span>
<span id="cb24-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Attempts an aligned 128-bit load of String-&gt;Buffer into Slot.CharXmm via</span></span>
<span id="cb24-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the _mm_load_si128() intrinsic.  The intrinsic is surrounded in a __try/</span></span>
<span id="cb24-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    __except block that catches EXCEPTION_ACCESS_VIOLATION exceptions.</span></span>
<span id="cb24-15"></span>
<span id="cb24-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    If such an exception is caught, the routine will check to see if the string</span></span>
<span id="cb24-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    buffer's address will cross a page boundary if 16-bytes are loaded.  If a</span></span>
<span id="cb24-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    page boundary would be crossed, a __movsb() intrinsic is used to copy only</span></span>
<span id="cb24-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the bytes specified by String-&gt;Length, otherwise, an unaligned 128-bit load</span></span>
<span id="cb24-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    is attemped via the _mm_loadu_si128() intrinsic.</span></span>
<span id="cb24-21"></span>
<span id="cb24-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb24-23"></span>
<span id="cb24-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Slot - Supplies the STRING_SLOT local variable name within the calling</span></span>
<span id="cb24-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        function that will receive the results of the load operation.</span></span>
<span id="cb24-26"></span>
<span id="cb24-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies the name of the PSTRING variable that is to be loaded</span></span>
<span id="cb24-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        into the slot.  This will usually be one of the function parameters.</span></span>
<span id="cb24-29"></span>
<span id="cb24-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LengthVar - Supplies the name of a USHORT local variable that will receive</span></span>
<span id="cb24-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        the value of min(String-&gt;Length, 16).</span></span>
<span id="cb24-32"></span>
<span id="cb24-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb24-34"></span>
<span id="cb24-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    None.</span></span>
<span id="cb24-36"></span>
<span id="cb24-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb24-38"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define LoadSearchStringIntoXmmRegister_SEH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">   </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-39"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span>LengthVar<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                               </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-40"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    TRY_SSE42_ALIGNED </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                                </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-41"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">CharsXmm </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">      </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-42"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> CATCH_EXCEPTION_ACCESS_VIOLATION </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                               </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-43"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">PointerToOffsetCrossesPageBoundary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">  </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-44"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__movsb</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">             </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-45"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                                       </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-46"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">            Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">CharsXmm </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-47"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                                              </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-48"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-49"></span>
<span id="cb24-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb24-51"></span>
<span id="cb24-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    VOID</span></span>
<span id="cb24-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LoadSearchStringIntoXmmRegister_AlignmentCheck(</span></span>
<span id="cb24-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ STRING_SLOT Slot,</span></span>
<span id="cb24-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ PSTRING String,</span></span>
<span id="cb24-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ USHORT LengthVar</span></span>
<span id="cb24-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        );</span></span>
<span id="cb24-58"></span>
<span id="cb24-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb24-60"></span>
<span id="cb24-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine checks to see if a page boundary will be crossed if 16-bytes</span></span>
<span id="cb24-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    are loaded from the address supplied by String-&gt;Buffer.  If a page boundary</span></span>
<span id="cb24-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    will be crossed, a __movsb() intrinsic is used to only copy String-&gt;Length</span></span>
<span id="cb24-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    bytes into the given Slot.</span></span>
<span id="cb24-65"></span>
<span id="cb24-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    If no page boundary will be crossed by a 128-bit load, the alignment of</span></span>
<span id="cb24-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the address supplied by String-&gt;Buffer is checked.  If the alignment isn't</span></span>
<span id="cb24-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    at least on a 16-byte boundary, an unaligned load will be issued via the</span></span>
<span id="cb24-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    _mm_loadu_si128() intrinsic, otherwise, an _mm_load_si128() will be used.</span></span>
<span id="cb24-70"></span>
<span id="cb24-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb24-72"></span>
<span id="cb24-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Slot - Supplies the STRING_SLOT local variable name within the calling</span></span>
<span id="cb24-74"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        function that will receive the results of the load operation.</span></span>
<span id="cb24-75"></span>
<span id="cb24-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies the name of the PSTRING variable that is to be loaded</span></span>
<span id="cb24-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        into the slot.  This will usually be one of the function parameters.</span></span>
<span id="cb24-78"></span>
<span id="cb24-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LengthVar - Supplies the name of a USHORT local variable that will receive</span></span>
<span id="cb24-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        the value of min(String-&gt;Length, 16).</span></span>
<span id="cb24-81"></span>
<span id="cb24-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb24-83"></span>
<span id="cb24-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    None.</span></span>
<span id="cb24-85"></span>
<span id="cb24-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb24-87"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define LoadSearchStringIntoXmmRegister_AlignmentCheck</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-88"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span>LengthVar<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                       </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-89"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">PointerToOffsetCrossesPageBoundary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">              </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-90"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__movsb</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                         </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-91"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">GetAddressAlignment</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                     </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-92"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">CharsXmm </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">             </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-93"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                                                   </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-94"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">CharsXmm </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">              </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-95"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-96"></span>
<span id="cb24-97"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb24-98"></span>
<span id="cb24-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    VOID</span></span>
<span id="cb24-100"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LoadSearchStringIntoXmmRegister_AlwaysUnaligned(</span></span>
<span id="cb24-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ STRING_SLOT Slot,</span></span>
<span id="cb24-102"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ PSTRING String,</span></span>
<span id="cb24-103"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ USHORT LengthVar</span></span>
<span id="cb24-104"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        );</span></span>
<span id="cb24-105"></span>
<span id="cb24-106"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb24-107"></span>
<span id="cb24-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine performs an unaligned 128-bit load of the address supplied by</span></span>
<span id="cb24-109"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String-&gt;Buffer into the given Slot via the _mm_loadu_si128() intrinsic.</span></span>
<span id="cb24-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    No checks are done regarding whether or not a page boundary will be crossed.</span></span>
<span id="cb24-111"></span>
<span id="cb24-112"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb24-113"></span>
<span id="cb24-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Slot - Supplies the STRING_SLOT local variable name within the calling</span></span>
<span id="cb24-115"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        function that will receive the results of the load operation.</span></span>
<span id="cb24-116"></span>
<span id="cb24-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies the name of the PSTRING variable that is to be loaded</span></span>
<span id="cb24-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        into the slot.  This will usually be one of the function parameters.</span></span>
<span id="cb24-119"></span>
<span id="cb24-120"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LengthVar - Supplies the name of a USHORT local variable that will receive</span></span>
<span id="cb24-121"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        the value of min(String-&gt;Length, 16).</span></span>
<span id="cb24-122"></span>
<span id="cb24-123"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb24-124"></span>
<span id="cb24-125"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    None.</span></span>
<span id="cb24-126"></span>
<span id="cb24-127"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb24-128"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define LoadSearchStringIntoXmmRegister_Unaligned</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-129"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span>LengthVar<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                   </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-130"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">PointerToOffsetCrossesPageBoundary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">          </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-131"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__movsb</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                     </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-132"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">GetAddressAlignment</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                 </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-133"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">CharsXmm </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                   </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-134"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                                               </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-135"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">CharsXmm </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-136"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-137"></span>
<span id="cb24-138"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb24-139"></span>
<span id="cb24-140"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    VOID</span></span>
<span id="cb24-141"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LoadSearchStringIntoXmmRegister_AlwaysMovsb(</span></span>
<span id="cb24-142"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ STRING_SLOT Slot,</span></span>
<span id="cb24-143"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ PSTRING String,</span></span>
<span id="cb24-144"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ USHORT LengthVar</span></span>
<span id="cb24-145"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        );</span></span>
<span id="cb24-146"></span>
<span id="cb24-147"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb24-148"></span>
<span id="cb24-149"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine copies min(String-&gt;Length, 16) bytes from String-&gt;Buffer</span></span>
<span id="cb24-150"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    into the given Slot via the __movsb() intrinsic.  The memory referenced by</span></span>
<span id="cb24-151"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the Slot is not cleared first via SecureZeroMemory().</span></span>
<span id="cb24-152"></span>
<span id="cb24-153"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb24-154"></span>
<span id="cb24-155"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Slot - Supplies the STRING_SLOT local variable name within the calling</span></span>
<span id="cb24-156"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        function that will receive the results of the load operation.</span></span>
<span id="cb24-157"></span>
<span id="cb24-158"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies the name of the PSTRING variable that is to be loaded</span></span>
<span id="cb24-159"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        into the slot.  This will usually be one of the function parameters.</span></span>
<span id="cb24-160"></span>
<span id="cb24-161"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LengthVar - Supplies the name of a USHORT local variable that will receive</span></span>
<span id="cb24-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        the value of min(String-&gt;Length, 16).</span></span>
<span id="cb24-163"></span>
<span id="cb24-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb24-165"></span>
<span id="cb24-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    None.</span></span>
<span id="cb24-167"></span>
<span id="cb24-168"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb24-169"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define LoadSearchStringIntoXmmRegister_AlwaysMovsb</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-170"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span>LengthVar<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                     </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-171"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__movsb</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
<p>In our <a href="https://github.com/tpn/tracer/blob/v0.1.11/StringTable2/StringTable2.vcxproj#L52"><code>StringTable2.vcxproj</code></a> file, we have the following:</p>
<hr>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode xml code-with-copy"><code class="sourceCode xml"><span id="cb25-1">  &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">PropertyGroup</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> Label=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Globals"</span>&gt;</span>
<span id="cb25-2">    ...</span>
<span id="cb25-3">    &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">LoadSearchStringStrategy</span>&gt;AlwaysMovsb&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">LoadSearchStringStrategy</span>&gt;</span>
<span id="cb25-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!--</span></span>
<span id="cb25-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    &lt;LoadSearchStringStrategy&gt;SEH&lt;/LoadSearchStringStrategy&gt;</span></span>
<span id="cb25-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    &lt;LoadSearchStringStrategy&gt;AlignmentCheck&lt;/LoadSearchStringStrategy&gt;</span></span>
<span id="cb25-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    &lt;LoadSearchStringStrategy&gt;AlwaysUnaligned&lt;/LoadSearchStringStrategy&gt;</span></span>
<span id="cb25-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    --&gt;</span></span></code></pre></div>
<p>This setup allowed me to toggle which strategy I wanted to use for loading the search string into an XMM register. As shown above, the default is to use the <code>AlwaysMovsb</code> approach*; so, for version 4, let’s swap that out for the <code>SEH</code> approach, which wraps the aligned load in a structured exception handler that falls back to <code>__movsb()</code> if the aligned load fails and the pointer plus 16 bytes crosses a page boundary.</p>
<p><small> [*]: Or was it?</small></p><small>
<p>Narrator: <a href="https://github.com/tpn/tracer/blob/v0.1.11/StringTable2/StringLoadStoreOperations.h#L226">it wasn’t</a>.</p>
</small><p><small></small></p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-5-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-1" aria-controls="tabset-5-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-5-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-2" aria-controls="tabset-5-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-5-1" class="tab-pane active" aria-labelledby="tabset-5-1-tab">
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb26-1">% diff -u IsPrefixOfStringInTable_4.c IsPrefixOfStringInTable_3.c</span>
<span id="cb26-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_3.c 2018-04-15 22:35:55.456274700 -0400</span></span>
<span id="cb26-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_4.c 2018-04-15 22:35:55.453274200 -0400</span></span>
<span id="cb26-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,7 +18,7 @@</span></span>
<span id="cb26-5"></span>
<span id="cb26-6"> _Use_decl_annotations_</span>
<span id="cb26-7"> STRING_TABLE_INDEX</span>
<span id="cb26-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_3(</span></span>
<span id="cb26-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_4(</span></span>
<span id="cb26-10">     PSTRING_TABLE StringTable,</span>
<span id="cb26-11">     PSTRING String,</span>
<span id="cb26-12">     PSTRING_MATCH Match</span>
<span id="cb26-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,7 +31,8 @@</span></span>
<span id="cb26-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb26-15">     or is equal to" the search string.</span>
<span id="cb26-16"></span>
<span id="cb26-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This is our first AVX-optimized version of the routine.</span></span>
<span id="cb26-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This routine is a variant of version 3 that uses a structured exception</span></span>
<span id="cb26-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    handler for loading the initial search string.</span></span>
<span id="cb26-20"></span>
<span id="cb26-21"> Arguments:</span>
<span id="cb26-22"></span>
<span id="cb26-23"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -123,7 +124,7 @@</span></span>
<span id="cb26-24">     // Load the first 16-bytes of the search string into an XMM register.</span>
<span id="cb26-25">     //</span>
<span id="cb26-26"></span>
<span id="cb26-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    LoadSearchStringIntoXmmRegister(Search, String, SearchLength);</span></span>
<span id="cb26-28"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    LoadSearchStringIntoXmmRegister_SEH(Search, String, SearchLength);</span></span>
<span id="cb26-29"></span>
<span id="cb26-30">     //</span>
<span id="cb26-31">     // Broadcast the search string's unique characters according to the string</span></code></pre></div>
</div>
<div id="tabset-5-2" class="tab-pane" aria-labelledby="tabset-5-2-tab">
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb27-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb27-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb27-3">IsPrefixOfStringInTable_4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb27-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb27-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb27-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb27-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb27-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb27-9"></span>
<span id="cb27-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb27-11"></span>
<span id="cb27-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb27-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb27-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb27-15"></span>
<span id="cb27-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine is a variant of version 3 that uses a structured exception</span></span>
<span id="cb27-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    handler for loading the initial search string.</span></span>
<span id="cb27-18"></span>
<span id="cb27-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb27-20"></span>
<span id="cb27-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb27-22"></span>
<span id="cb27-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb27-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb27-25"></span>
<span id="cb27-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb27-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb27-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb27-29"></span>
<span id="cb27-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb27-31"></span>
<span id="cb27-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb27-33"></span>
<span id="cb27-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb27-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-50">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-58">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-59"></span>
<span id="cb27-60">    StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-61"></span>
<span id="cb27-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the minimum length of the string array is greater than the length of</span></span>
<span id="cb27-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// our search string, there can't be a prefix match.</span></span>
<span id="cb27-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-66"></span>
<span id="cb27-67">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>MinimumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-68">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-69">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-70"></span>
<span id="cb27-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb27-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb27-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb27-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb27-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb27-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb27-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb27-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb27-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb27-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb27-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb27-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb27-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb27-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb27-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb27-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb27-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb27-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb27-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb27-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb27-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb27-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb27-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb27-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb27-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-104"></span>
<span id="cb27-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb27-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-108"></span>
<span id="cb27-109">    LoadSearchStringIntoXmmRegister_SEH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-110"></span>
<span id="cb27-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb27-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb27-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-115"></span>
<span id="cb27-116">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb27-117">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-118"></span>
<span id="cb27-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb27-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-122"></span>
<span id="cb27-123">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-124"></span>
<span id="cb27-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb27-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-128"></span>
<span id="cb27-129">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-130"></span>
<span id="cb27-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb27-133">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-134"></span>
<span id="cb27-135">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-136">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-137"></span>
<span id="cb27-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb27-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb27-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb27-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb27-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb27-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-145"></span>
<span id="cb27-146">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-147"></span>
<span id="cb27-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb27-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb27-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb27-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb27-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb27-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb27-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-157"></span>
<span id="cb27-158">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-159"></span>
<span id="cb27-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb27-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb27-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb27-164">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-165"></span>
<span id="cb27-166">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-167"></span>
<span id="cb27-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-169">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb27-170">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb27-171">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb27-172">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb27-173">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-174"></span>
<span id="cb27-175">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb27-176">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-177"></span>
<span id="cb27-178">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb27-180">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-181"></span>
<span id="cb27-182">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-183"></span>
<span id="cb27-184">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-185"></span>
<span id="cb27-186">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-187">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb27-188">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb27-189">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb27-190">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-191"></span>
<span id="cb27-192">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-193">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-194"></span>
<span id="cb27-195">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-196">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb27-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb27-198">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-199"></span>
<span id="cb27-200">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-201"></span>
<span id="cb27-202">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-203"></span>
<span id="cb27-204">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-205">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb27-206">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb27-207">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-208"></span>
<span id="cb27-209">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-210">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-211"></span>
<span id="cb27-212">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-213">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb27-214">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb27-215">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb27-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-217"></span>
<span id="cb27-218">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-219">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-220"></span>
<span id="cb27-221">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-222">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb27-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-224"></span>
<span id="cb27-225">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-226">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb27-227"></span>
<span id="cb27-228">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb27-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-231"></span>
<span id="cb27-232">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-233"></span>
<span id="cb27-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb27-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb27-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb27-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb27-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb27-240">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb27-241">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb27-242">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb27-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb27-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-245"></span>
<span id="cb27-246">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-247"></span>
<span id="cb27-248">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-249">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb27-250">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-251"></span>
<span id="cb27-252">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-253"></span>
<span id="cb27-254">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-255"></span>
<span id="cb27-256">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-257">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb27-258">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb27-259">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb27-260">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-261"></span>
<span id="cb27-262">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb27-263"></span>
<span id="cb27-264">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-265"></span>
<span id="cb27-266">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-267"></span>
<span id="cb27-268">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-269">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb27-270">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-271"></span>
<span id="cb27-272">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-273"></span>
<span id="cb27-274">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-275"></span>
<span id="cb27-276">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb27-278">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb27-279">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb27-280">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb27-281">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb27-282">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-283"></span>
<span id="cb27-284">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-285">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-286">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-287"></span>
<span id="cb27-288">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-289"></span>
<span id="cb27-290">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb27-291"></span>
<span id="cb27-292">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-293">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb27-294">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb27-295">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb27-296">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-297"></span>
<span id="cb27-298"></span>
<span id="cb27-299">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-300"></span>
<span id="cb27-301">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-302">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-303">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb27-304"></span>
<span id="cb27-305">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-306"></span>
<span id="cb27-307">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-308">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-309"></span>
<span id="cb27-310">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-311">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb27-312">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-313"></span>
<span id="cb27-314">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-315"></span>
<span id="cb27-316">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-317">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb27-318">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-319"></span>
<span id="cb27-320">NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb27-321"></span>
<span id="cb27-322">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb27-323"></span>
<span id="cb27-324">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-325"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="benchmark-4" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-4">Benchmark 4</h4>
<p>The performance of version 4 was slightly worse than 3 in every case:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-04-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-04-v1.svg" class="img-fluid figure-img" alt="Benchmark 4"></a></p>
<figcaption>Benchmark 4</figcaption>
</figure>
</div>
<p>Version 3 is still in the lead with the <code>AlwaysMovsb</code>-based search string loading approach.</p>
<p><small> <em>Narrator</em>: except the <a href="https://github.com/tpn/tracer/blob/v0.1.11/StringTable2/StringLoadStoreOperations.h#L112"><code>AlignmentCheck</code></a> macro was actually active, not the <a href="https://github.com/tpn/tracer/blob/v0.1.11/StringTable2/StringLoadStoreOperations.h#L112"><code>AlwaysMovsb</code></a> one. </small></p>
</section>
<section id="IsPrefixOfStringInTable_5" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_5">IsPrefixOfStringInTable_5</h4>
<p>← IsPrefixOfStringInTable_4 | IsPrefixOfStringInTable_6 →</p>
<p>Version 5 is an interesting one. It’s the first time we attempt to validate our claim that it’s more efficient to give the CPU a bunch of independent things to do up front, rather than adding more branches and attempting to terminate as early as possible.</p>
<p>Note: we’ll also explicitly use the <code>LoadSearchStringIntoXmmRegister_AlwaysMovsb</code> macro here, instead of <code>LoadSearchStringIntoXmmRegister</code>, to make it clear that we’re actually relying on the <code>__movsb()</code>-based string loading routine.</p>
<p><small> <em>Narrator</em>: can anyone spot the mistake with this logic? </small></p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-6-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-6-1" aria-controls="tabset-6-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-6-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-6-2" aria-controls="tabset-6-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-6-1" class="tab-pane active" aria-labelledby="tabset-6-1-tab">
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb28-1">% diff -u IsPrefixOfStringInTable_3.c IsPrefixOfStringInTable_5.c</span>
<span id="cb28-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_3.c 2018-04-15 22:35:55.456274700 -0400</span></span>
<span id="cb28-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_5.c 2018-04-15 13:24:52.480972900 -0400</span></span>
<span id="cb28-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -16,9 +16,13 @@</span></span>
<span id="cb28-5"></span>
<span id="cb28-6"> #include "stdafx.h"</span>
<span id="cb28-7"></span>
<span id="cb28-8"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+//</span></span>
<span id="cb28-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+// Variant of v3 with early-exits.</span></span>
<span id="cb28-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+//</span></span>
<span id="cb28-11"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-12"> _Use_decl_annotations_</span>
<span id="cb28-13"> STRING_TABLE_INDEX</span>
<span id="cb28-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_3(</span></span>
<span id="cb28-15"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_5(</span></span>
<span id="cb28-16">     PSTRING_TABLE StringTable,</span>
<span id="cb28-17">     PSTRING String,</span>
<span id="cb28-18">     PSTRING_MATCH Match</span>
<span id="cb28-19"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,7 +35,11 @@</span></span>
<span id="cb28-20">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb28-21">     or is equal to" the search string.</span>
<span id="cb28-22"></span>
<span id="cb28-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This is our first AVX-optimized version of the routine.</span></span>
<span id="cb28-24"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This routine is a variant of version 3 that uses early exits (i.e.</span></span>
<span id="cb28-25"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    returning NO_MATCH_FOUND as early as we can).  It is designed to evaluate</span></span>
<span id="cb28-26"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    the assertion we've been making that it's more optimal to give the CPU</span></span>
<span id="cb28-27"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    to do a bunch of things up front versus doing something, then potentially</span></span>
<span id="cb28-28"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    branching, doing the next thing, potentially branching, etc.</span></span>
<span id="cb28-29"></span>
<span id="cb28-30"> Arguments:</span>
<span id="cb28-31"></span>
<span id="cb28-32"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -51,6 +59,8 @@</span></span>
<span id="cb28-33"> --*/</span>
<span id="cb28-34"> {</span>
<span id="cb28-35">     ULONG Bitmap;</span>
<span id="cb28-36"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    ULONG CharBitmap;</span></span>
<span id="cb28-37"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    ULONG LengthBitmap;</span></span>
<span id="cb28-38">     ULONG Mask;</span>
<span id="cb28-39">     ULONG Count;</span>
<span id="cb28-40">     ULONG Length;</span>
<span id="cb28-41"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -71,7 +81,6 @@</span></span>
<span id="cb28-42">     XMMWORD IncludeSlotsByUniqueChar;</span>
<span id="cb28-43">     XMMWORD IgnoreSlotsByLength;</span>
<span id="cb28-44">     XMMWORD IncludeSlotsByLength;</span>
<span id="cb28-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    XMMWORD IncludeSlots;</span></span>
<span id="cb28-46">     const XMMWORD AllOnesXmm = _mm_set1_epi8(0xff);</span>
<span id="cb28-47"></span>
<span id="cb28-48">     StringArray = StringTable-&gt;pStringArray;</span>
<span id="cb28-49"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -123,7 +132,7 @@</span></span>
<span id="cb28-50">     // Load the first 16-bytes of the search string into an XMM register.</span>
<span id="cb28-51">     //</span>
<span id="cb28-52"></span>
<span id="cb28-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    LoadSearchStringIntoXmmRegister(Search, String, SearchLength);</span></span>
<span id="cb28-54"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    LoadSearchStringIntoXmmRegister_AlwaysMovsb(Search, String, SearchLength);</span></span>
<span id="cb28-55"></span>
<span id="cb28-56">     //</span>
<span id="cb28-57">     // Broadcast the search string's unique characters according to the string</span>
<span id="cb28-58"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -133,11 +142,6 @@</span></span>
<span id="cb28-59">     UniqueChar = _mm_shuffle_epi8(Search.CharsXmm,</span>
<span id="cb28-60">                                   StringTable-&gt;UniqueIndex.IndexXmm);</span>
<span id="cb28-61"></span>
<span id="cb28-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Load the slot length array into an XMM register.</span></span>
<span id="cb28-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb28-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Lengths.SlotsXmm = _mm_load_si128(&amp;StringTable-&gt;Lengths.SlotsXmm);</span></span>
<span id="cb28-67"></span>
<span id="cb28-68">     //</span>
<span id="cb28-69">     // Load the string table's unique character array into an XMM register.</span>
<span id="cb28-70"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -146,13 +150,6 @@</span></span>
<span id="cb28-71">     TableUniqueChars = _mm_load_si128(&amp;StringTable-&gt;UniqueChars.CharsXmm);</span>
<span id="cb28-72"></span>
<span id="cb28-73">     //</span>
<span id="cb28-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Broadcast the search string's length into an XMM register.</span></span>
<span id="cb28-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb28-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    LengthXmm.m128i_u8[0] = (BYTE)String-&gt;Length;</span></span>
<span id="cb28-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    LengthXmm = _mm_broadcastb_epi8(LengthXmm);</span></span>
<span id="cb28-79"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb28-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-81">     // Compare the search string's unique character with all of the unique</span>
<span id="cb28-82">     // characters of strings in the table, saving the results into an XMM</span>
<span id="cb28-83">     // register.  This comparison will indicate which slots we can ignore</span>
<span id="cb28-84"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -162,6 +159,25 @@</span></span>
<span id="cb28-85"></span>
<span id="cb28-86">     IncludeSlotsByUniqueChar = _mm_cmpeq_epi8(UniqueChar, TableUniqueChars);</span>
<span id="cb28-87"></span>
<span id="cb28-88"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    CharBitmap = _mm_movemask_epi8(IncludeSlotsByUniqueChar);</span></span>
<span id="cb28-89"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-90"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    if (!CharBitmap) {</span></span>
<span id="cb28-91"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        return NO_MATCH_FOUND;</span></span>
<span id="cb28-92"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    }</span></span>
<span id="cb28-93"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-94"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb28-95"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // Load the slot length array into an XMM register.</span></span>
<span id="cb28-96"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb28-97"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-98"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Lengths.SlotsXmm = _mm_load_si128(&amp;StringTable-&gt;Lengths.SlotsXmm);</span></span>
<span id="cb28-99"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-100"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb28-101"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // Broadcast the search string's length into an XMM register.</span></span>
<span id="cb28-102"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb28-103"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-104"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    LengthXmm.m128i_u8[0] = (BYTE)String-&gt;Length;</span></span>
<span id="cb28-105"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    LengthXmm = _mm_broadcastb_epi8(LengthXmm);</span></span>
<span id="cb28-106"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-107">     //</span>
<span id="cb28-108">     // Find all slots that are longer than the incoming string length, as these</span>
<span id="cb28-109">     // are the ones we're going to exclude from any prefix match.</span>
<span id="cb28-110"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -182,31 +198,16 @@</span></span>
<span id="cb28-111"></span>
<span id="cb28-112">     IncludeSlotsByLength = _mm_xor_si128(IgnoreSlotsByLength, AllOnesXmm);</span>
<span id="cb28-113"></span>
<span id="cb28-114"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-115"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb28-116"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb28-117"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // the exact same unique character as the string and a length less than or</span></span>
<span id="cb28-118"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // equal to the length of the search string).</span></span>
<span id="cb28-119"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-120"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb28-121"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    IncludeSlots = _mm_and_si128(IncludeSlotsByUniqueChar,</span></span>
<span id="cb28-122"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                                 IncludeSlotsByLength);</span></span>
<span id="cb28-123"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    LengthBitmap = _mm_movemask_epi8(IncludeSlotsByLength);</span></span>
<span id="cb28-124"></span>
<span id="cb28-125"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-126"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Generate a mask.</span></span>
<span id="cb28-127"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-128"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    if (!LengthBitmap) {</span></span>
<span id="cb28-129"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        return NO_MATCH_FOUND;</span></span>
<span id="cb28-130"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    }</span></span>
<span id="cb28-131"></span>
<span id="cb28-132"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Bitmap = _mm_movemask_epi8(IncludeSlots);</span></span>
<span id="cb28-133"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Bitmap = CharBitmap &amp; LengthBitmap;</span></span>
<span id="cb28-134"></span>
<span id="cb28-135">     if (!Bitmap) {</span>
<span id="cb28-136"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb28-137"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        //</span></span>
<span id="cb28-138"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // No bits were set, so there are no strings in this table starting</span></span>
<span id="cb28-139"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // with the same character and of a lesser or equal length as the</span></span>
<span id="cb28-140"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // search string.</span></span>
<span id="cb28-141"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        //</span></span>
<span id="cb28-142"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb28-143"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        goto NoMatch;</span></span>
<span id="cb28-144"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        return NO_MATCH_FOUND;</span></span>
<span id="cb28-145">     }</span>
<span id="cb28-146"></span>
<span id="cb28-147">     //</span></code></pre></div>
</div>
<div id="tabset-6-2" class="tab-pane" aria-labelledby="tabset-6-2-tab">
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb29-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb29-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb29-3">IsPrefixOfStringInTable_5<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb29-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb29-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb29-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb29-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb29-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb29-9"></span>
<span id="cb29-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb29-11"></span>
<span id="cb29-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb29-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb29-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb29-15"></span>
<span id="cb29-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine is a variant of version 3 that uses early exits (i.e.</span></span>
<span id="cb29-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    returning NO_MATCH_FOUND as early as we can).  It is designed to evaluate</span></span>
<span id="cb29-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the assertion we've been making that it's more optimal to give the CPU</span></span>
<span id="cb29-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    to do a bunch of things up front versus doing something, then potentially</span></span>
<span id="cb29-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    branching, doing the next thing, potentially branching, etc.</span></span>
<span id="cb29-21"></span>
<span id="cb29-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb29-23"></span>
<span id="cb29-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb29-25"></span>
<span id="cb29-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb29-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb29-28"></span>
<span id="cb29-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb29-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb29-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb29-32"></span>
<span id="cb29-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb29-34"></span>
<span id="cb29-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb29-36"></span>
<span id="cb29-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb29-38"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> LengthBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-46">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-47">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-48">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-49">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-51">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-52">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-53">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-54">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-55">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-58">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-59">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-60">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-61">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-62">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-63"></span>
<span id="cb29-64">    StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-65"></span>
<span id="cb29-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the minimum length of the string array is greater than the length of</span></span>
<span id="cb29-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// our search string, there can't be a prefix match.</span></span>
<span id="cb29-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-70"></span>
<span id="cb29-71">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>MinimumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-72">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-73">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-74"></span>
<span id="cb29-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb29-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb29-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb29-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb29-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb29-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb29-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb29-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb29-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb29-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb29-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb29-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb29-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb29-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb29-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb29-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb29-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb29-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb29-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb29-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb29-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb29-104">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb29-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb29-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb29-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-108"></span>
<span id="cb29-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb29-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-112"></span>
<span id="cb29-113">    LoadSearchStringIntoXmmRegister_AlwaysMovsb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-114"></span>
<span id="cb29-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-116">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb29-117">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb29-118">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-119"></span>
<span id="cb29-120">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb29-121">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-122"></span>
<span id="cb29-123"></span>
<span id="cb29-124">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb29-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-127"></span>
<span id="cb29-128">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-129"></span>
<span id="cb29-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb29-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb29-133">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb29-134">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb29-135">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb29-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-137"></span>
<span id="cb29-138">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-139"></span>
<span id="cb29-140">    CharBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-141"></span>
<span id="cb29-142">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>CharBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-143">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-144">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-145"></span>
<span id="cb29-146">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-147">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb29-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-149"></span>
<span id="cb29-150">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-151"></span>
<span id="cb29-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb29-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-155"></span>
<span id="cb29-156">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-157">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-158"></span>
<span id="cb29-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb29-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb29-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb29-164">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb29-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb29-166">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb29-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-168"></span>
<span id="cb29-169">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-170"></span>
<span id="cb29-171">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-172">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb29-173">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb29-174">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb29-175">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-176"></span>
<span id="cb29-177">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-178"></span>
<span id="cb29-179">    LengthBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-180"></span>
<span id="cb29-181">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>LengthBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-182">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-183">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-184"></span>
<span id="cb29-185">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CharBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> LengthBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-186"></span>
<span id="cb29-187">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-188">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-189">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-190"></span>
<span id="cb29-191">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-192">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb29-193">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb29-194">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-195"></span>
<span id="cb29-196">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-197"></span>
<span id="cb29-198">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-199"></span>
<span id="cb29-200">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-201">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb29-202">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb29-203">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-204"></span>
<span id="cb29-205">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-206">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-207"></span>
<span id="cb29-208">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-209">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb29-210">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb29-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb29-212">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-213"></span>
<span id="cb29-214">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-215">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-216"></span>
<span id="cb29-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb29-219">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-220"></span>
<span id="cb29-221">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-222">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb29-223"></span>
<span id="cb29-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb29-226">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-227"></span>
<span id="cb29-228">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-229"></span>
<span id="cb29-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb29-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb29-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb29-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb29-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb29-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb29-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb29-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb29-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb29-240">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-241"></span>
<span id="cb29-242">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-243"></span>
<span id="cb29-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb29-246">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-247"></span>
<span id="cb29-248">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-249"></span>
<span id="cb29-250">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-251"></span>
<span id="cb29-252">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-253">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb29-254">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb29-255">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb29-256">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-257"></span>
<span id="cb29-258">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb29-259"></span>
<span id="cb29-260">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-261"></span>
<span id="cb29-262">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-263"></span>
<span id="cb29-264">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-265">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb29-266">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-267"></span>
<span id="cb29-268">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-269"></span>
<span id="cb29-270">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-271"></span>
<span id="cb29-272">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-273">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb29-274">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb29-275">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb29-276">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb29-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb29-278">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-279"></span>
<span id="cb29-280">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-281">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-282">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-283"></span>
<span id="cb29-284">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-285"></span>
<span id="cb29-286">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb29-287"></span>
<span id="cb29-288">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-289">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb29-290">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb29-291">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb29-292">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-293"></span>
<span id="cb29-294"></span>
<span id="cb29-295">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-296"></span>
<span id="cb29-297">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-298">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-299">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb29-300"></span>
<span id="cb29-301">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-302"></span>
<span id="cb29-303">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-304">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-305"></span>
<span id="cb29-306">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-307">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb29-308">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-309"></span>
<span id="cb29-310">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-311"></span>
<span id="cb29-312">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-313">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb29-314">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-315"></span>
<span id="cb29-316">NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb29-317"></span>
<span id="cb29-318">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb29-319"></span>
<span id="cb29-320">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-321"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="benchmark-5" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-5">Benchmark 5</h4>
<p>If our theory is correct, the performance of this version should be worse, due to all the extra branches in the initial test. Let’s see if we’re right:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-05-v2.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-05-v2.svg" class="img-fluid figure-img" alt="Benchmark 5"></a></p>
<figcaption>Benchmark 5</figcaption>
</figure>
</div>
<p>Holy smokes, version 5 <strong>is</strong> bad! It’s so bad it’s actually closest in performance to the failed version 2 with the elaborate AVX2 prefix matching routine.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>It was actually so close I double-checked the two routines to ensure they were correct; they were, so this is just a coincidence.</p>
</div>
</div>
<p>That’s good news, though, as it validates the assumption we’ve been working with since inception:</p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb30-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb30-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb30-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb30-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb30-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb30-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb30-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb30-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span></code></pre></div>
<p>That’s the end of version 5’s tenure. TL;DR: fewer branches &gt; more branches.</p>
<p><small> <em>Narrator</em>: more accurate TL;DR: <code>__movsb()</code> is slow, and always make sure you’re testing what you think you’re testing.] </small></p>
</section>
<section id="IsPrefixOfStringInTable_6" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_6"><code>IsPrefixOfStringInTable_6</code></h4>
<p>← IsPrefixOfStringInTable_5 | IsPrefixOfStringInTable_7 →</p>
<p>Version 6 is boring. We tweak the initial loading of the search string, explicitly loading it via an unaligned load. If the underlying buffer is aligned on a 16-byte boundary, this is just as fast as an aligned load. If not, at least it doesn’t crash—it’s just slow.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you attempt an aligned load on an address that isn’t aligned at a 16-byte boundary, the processor will generate an exception, causing your program to crash (assuming you don’t have any structured exception handlers in place to catch the error).</p>
</div>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-7-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-7-1" aria-controls="tabset-7-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-7-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-7-2" aria-controls="tabset-7-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-7-1" class="tab-pane active" aria-labelledby="tabset-7-1-tab">
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb31-1">% diff -u IsPrefixOfStringInTable_3.c IsPrefixOfStringInTable_6.c</span>
<span id="cb31-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_3.c 2018-04-15 22:35:55.456274700 -0400</span></span>
<span id="cb31-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_6.c 2018-04-26 18:29:40.594556800 -0400</span></span>
<span id="cb31-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,7 +18,7 @@</span></span>
<span id="cb31-5"></span>
<span id="cb31-6"> _Use_decl_annotations_</span>
<span id="cb31-7"> STRING_TABLE_INDEX</span>
<span id="cb31-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_3(</span></span>
<span id="cb31-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_6(</span></span>
<span id="cb31-10">     PSTRING_TABLE StringTable,</span>
<span id="cb31-11">     PSTRING String,</span>
<span id="cb31-12">     PSTRING_MATCH Match</span>
<span id="cb31-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,7 +31,8 @@</span></span>
<span id="cb31-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb31-15">     or is equal to" the search string.</span>
<span id="cb31-16"></span>
<span id="cb31-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This is our first AVX-optimized version of the routine.</span></span>
<span id="cb31-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This routine differs from version 3 in that we do an unaligned load of</span></span>
<span id="cb31-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    the search string buffer without any SEH wrappers or alignment checks.</span></span>
<span id="cb31-20"></span>
<span id="cb31-21"> Arguments:</span>
<span id="cb31-22"></span>
<span id="cb31-23"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -123,7 +124,8 @@</span></span>
<span id="cb31-24">     // Load the first 16-bytes of the search string into an XMM register.</span>
<span id="cb31-25">     //</span>
<span id="cb31-26"></span>
<span id="cb31-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    LoadSearchStringIntoXmmRegister(Search, String, SearchLength);</span></span>
<span id="cb31-28"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    SearchLength = min(String-&gt;Length, 16);</span></span>
<span id="cb31-29"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Search.CharsXmm = _mm_loadu_si128((PXMMWORD)String-&gt;Buffer);</span></span>
<span id="cb31-30"></span>
<span id="cb31-31">     //</span>
<span id="cb31-32">     // Broadcast the search string's unique characters according to the string</span></code></pre></div>
</div>
<div id="tabset-7-2" class="tab-pane" aria-labelledby="tabset-7-2-tab">
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb32-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb32-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb32-3">IsPrefixOfStringInTable_6<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb32-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb32-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb32-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb32-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb32-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb32-9"></span>
<span id="cb32-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb32-11"></span>
<span id="cb32-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb32-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb32-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb32-15"></span>
<span id="cb32-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine differs from version 3 in that we do an unaligned load of</span></span>
<span id="cb32-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the search string buffer without any SEH wrappers or alignment checks.</span></span>
<span id="cb32-18"></span>
<span id="cb32-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb32-20"></span>
<span id="cb32-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb32-22"></span>
<span id="cb32-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb32-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb32-25"></span>
<span id="cb32-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb32-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb32-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb32-29"></span>
<span id="cb32-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb32-31"></span>
<span id="cb32-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb32-33"></span>
<span id="cb32-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb32-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-50">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-58">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-59"></span>
<span id="cb32-60">    StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-61"></span>
<span id="cb32-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the minimum length of the string array is greater than the length of</span></span>
<span id="cb32-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// our search string, there can't be a prefix match.</span></span>
<span id="cb32-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-66"></span>
<span id="cb32-67">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>MinimumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-68">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-69">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-70"></span>
<span id="cb32-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb32-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb32-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb32-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb32-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb32-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb32-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb32-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb32-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb32-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb32-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb32-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb32-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb32-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb32-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb32-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb32-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb32-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb32-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb32-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb32-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb32-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb32-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb32-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb32-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-104"></span>
<span id="cb32-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb32-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-108"></span>
<span id="cb32-109">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-110">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-111"></span>
<span id="cb32-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb32-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb32-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-116"></span>
<span id="cb32-117">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb32-118">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-119"></span>
<span id="cb32-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb32-122">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-123"></span>
<span id="cb32-124">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-125"></span>
<span id="cb32-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb32-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-129"></span>
<span id="cb32-130">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-131"></span>
<span id="cb32-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-133">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb32-134">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-135"></span>
<span id="cb32-136">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-137">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-138"></span>
<span id="cb32-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb32-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb32-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb32-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb32-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb32-145">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-146"></span>
<span id="cb32-147">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-148"></span>
<span id="cb32-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb32-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb32-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb32-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb32-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb32-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb32-157">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-158"></span>
<span id="cb32-159">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-160"></span>
<span id="cb32-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb32-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb32-164">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb32-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-166"></span>
<span id="cb32-167">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-168"></span>
<span id="cb32-169">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-170">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb32-171">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb32-172">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb32-173">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb32-174">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-175"></span>
<span id="cb32-176">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb32-177">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-178"></span>
<span id="cb32-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-180">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb32-181">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-182"></span>
<span id="cb32-183">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-184"></span>
<span id="cb32-185">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-186"></span>
<span id="cb32-187">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-188">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb32-189">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb32-190">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb32-191">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-192"></span>
<span id="cb32-193">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-194">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-195"></span>
<span id="cb32-196">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb32-198">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb32-199">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-200"></span>
<span id="cb32-201">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-202"></span>
<span id="cb32-203">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-204"></span>
<span id="cb32-205">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-206">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb32-207">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb32-208">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-209"></span>
<span id="cb32-210">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-211">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-212"></span>
<span id="cb32-213">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-214">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb32-215">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb32-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb32-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-218"></span>
<span id="cb32-219">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-220">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-221"></span>
<span id="cb32-222">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb32-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-225"></span>
<span id="cb32-226">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-227">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb32-228"></span>
<span id="cb32-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb32-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-232"></span>
<span id="cb32-233">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-234"></span>
<span id="cb32-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb32-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb32-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb32-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb32-240">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb32-241">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb32-242">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb32-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb32-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb32-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-246"></span>
<span id="cb32-247">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-248"></span>
<span id="cb32-249">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-250">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb32-251">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-252"></span>
<span id="cb32-253">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-254"></span>
<span id="cb32-255">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-256"></span>
<span id="cb32-257">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-258">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb32-259">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb32-260">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb32-261">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-262"></span>
<span id="cb32-263">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb32-264"></span>
<span id="cb32-265">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-266"></span>
<span id="cb32-267">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-268"></span>
<span id="cb32-269">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-270">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb32-271">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-272"></span>
<span id="cb32-273">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-274"></span>
<span id="cb32-275">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-276"></span>
<span id="cb32-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-278">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb32-279">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb32-280">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb32-281">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb32-282">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb32-283">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-284"></span>
<span id="cb32-285">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-286">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-287">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-288"></span>
<span id="cb32-289">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-290"></span>
<span id="cb32-291">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb32-292"></span>
<span id="cb32-293">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-294">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb32-295">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb32-296">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb32-297">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-298"></span>
<span id="cb32-299"></span>
<span id="cb32-300">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-301"></span>
<span id="cb32-302">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-303">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-304">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb32-305"></span>
<span id="cb32-306">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-307"></span>
<span id="cb32-308">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-309">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-310"></span>
<span id="cb32-311">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-312">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb32-313">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-314"></span>
<span id="cb32-315">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-316"></span>
<span id="cb32-317">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-318">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb32-319">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-320"></span>
<span id="cb32-321">NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb32-322"></span>
<span id="cb32-323">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb32-324"></span>
<span id="cb32-325">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-326"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="benchmark-6" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-6">Benchmark 6</h4>
<p>Version 6 should be faster than version 3; we omit alignment checks, all of our input buffers are aligned at 32 bytes, and an unaligned XMM load of an aligned buffer should definitely be faster than a <code>__movsb()</code>. Let’s see:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-06-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-06-v1.svg" class="img-fluid figure-img" alt="Benchmark 6"></a></p>
<figcaption>Benchmark 6</figcaption>
</figure>
</div>
<p>We have a new winner! Version 3 had a good run, but it’s time to retire. Let’s tweak version 6 going forward.</p>
<p><small> <em>Narrator</em>: this is actually testing <code>_mm_loadu_si128()</code> against the <code>AlignmentCheck</code> routine, which first calls <code>PointerToOffsetCrossesPageBoundary()</code>, and then checks the address alignment before calling <code>_mm_load_si128()</code>. Since unaligned loads are just as fast as aligned loads as long as the underlying buffer is aligned, all this shows is that it’s slightly faster to skip the pointer boundary and address alignment checks, which isn’t too surprising. </small></p>
</section>
<section id="IsPrefixOfStringInTable_7" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_7"><code>IsPrefixOfStringInTable_7</code></h4>
<p>← IsPrefixOfStringInTable_6 | IsPrefixOfStringInTable_8 →</p>
<p>Version 7 tweaks version 6 a little bit. We don’t need the search string length calculated so early in the routine. Let’s move it to later.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-8-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-8-1" aria-controls="tabset-8-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-8-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-8-2" aria-controls="tabset-8-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-8-1" class="tab-pane active" aria-labelledby="tabset-8-1-tab">
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"></code></pre></div>
</div>
<div id="tabset-8-2" class="tab-pane" aria-labelledby="tabset-8-2-tab">
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb34-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb34-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb34-3">IsPrefixOfStringInTable_7<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb34-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb34-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb34-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb34-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb34-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb34-9"></span>
<span id="cb34-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb34-11"></span>
<span id="cb34-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb34-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb34-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb34-15"></span>
<span id="cb34-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine is based off version 6, but alters when we calculate the</span></span>
<span id="cb34-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    "search length" for the given string, which is done via the expression</span></span>
<span id="cb34-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    'min(String-&gt;Length, 16)'.  We don't need this value until later in the</span></span>
<span id="cb34-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    routine, when we're ready to start comparing strings.</span></span>
<span id="cb34-20"></span>
<span id="cb34-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb34-22"></span>
<span id="cb34-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb34-24"></span>
<span id="cb34-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb34-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb34-27"></span>
<span id="cb34-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb34-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb34-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb34-31"></span>
<span id="cb34-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb34-33"></span>
<span id="cb34-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb34-35"></span>
<span id="cb34-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb34-37"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-46">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-47">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-50">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-51">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-52">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-58">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-59">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-60">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-61"></span>
<span id="cb34-62">    StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-63"></span>
<span id="cb34-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the minimum length of the string array is greater than the length of</span></span>
<span id="cb34-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// our search string, there can't be a prefix match.</span></span>
<span id="cb34-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-68"></span>
<span id="cb34-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>MinimumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-70">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-71">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-72"></span>
<span id="cb34-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb34-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb34-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb34-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb34-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb34-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb34-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb34-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb34-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb34-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb34-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb34-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb34-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb34-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb34-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb34-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb34-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb34-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb34-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb34-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb34-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb34-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb34-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb34-104">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb34-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-106"></span>
<span id="cb34-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-108">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb34-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-110"></span>
<span id="cb34-111">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-112"></span>
<span id="cb34-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb34-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb34-116">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-117"></span>
<span id="cb34-118">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb34-119">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-120"></span>
<span id="cb34-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-122">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb34-123">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-124"></span>
<span id="cb34-125">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-126"></span>
<span id="cb34-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb34-129">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-130"></span>
<span id="cb34-131">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-132"></span>
<span id="cb34-133">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-134">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb34-135">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-136"></span>
<span id="cb34-137">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-138">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-139"></span>
<span id="cb34-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb34-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb34-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb34-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb34-145">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb34-146">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-147"></span>
<span id="cb34-148">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-149"></span>
<span id="cb34-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb34-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb34-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb34-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb34-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb34-157">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb34-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-159"></span>
<span id="cb34-160">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-161"></span>
<span id="cb34-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb34-164">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb34-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb34-166">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-167"></span>
<span id="cb34-168">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-169"></span>
<span id="cb34-170">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-171">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb34-172">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb34-173">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb34-174">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb34-175">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-176"></span>
<span id="cb34-177">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb34-178">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-179"></span>
<span id="cb34-180">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-181">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb34-182">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-183"></span>
<span id="cb34-184">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-185"></span>
<span id="cb34-186">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-187"></span>
<span id="cb34-188">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-189">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb34-190">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb34-191">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb34-192">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-193"></span>
<span id="cb34-194">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-195">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-196"></span>
<span id="cb34-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-198">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb34-199">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb34-200">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-201"></span>
<span id="cb34-202">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-203"></span>
<span id="cb34-204">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-205">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb34-206">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb34-207">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-208"></span>
<span id="cb34-209">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-210"></span>
<span id="cb34-211">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-212"></span>
<span id="cb34-213">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-214">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb34-215">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb34-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-217"></span>
<span id="cb34-218">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-219">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-220"></span>
<span id="cb34-221">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-222">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb34-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb34-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb34-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-226"></span>
<span id="cb34-227">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-228">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-229"></span>
<span id="cb34-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb34-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-233"></span>
<span id="cb34-234">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-235">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb34-236"></span>
<span id="cb34-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb34-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-240"></span>
<span id="cb34-241">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-242"></span>
<span id="cb34-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb34-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb34-246">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb34-247">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb34-248">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb34-249">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb34-250">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb34-251">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb34-252">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb34-253">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-254"></span>
<span id="cb34-255">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-256"></span>
<span id="cb34-257">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-258">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb34-259">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-260"></span>
<span id="cb34-261">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-262"></span>
<span id="cb34-263">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-264"></span>
<span id="cb34-265">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-266">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb34-267">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb34-268">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb34-269">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-270"></span>
<span id="cb34-271">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb34-272"></span>
<span id="cb34-273">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-274"></span>
<span id="cb34-275">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-276"></span>
<span id="cb34-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-278">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb34-279">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-280"></span>
<span id="cb34-281">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-282"></span>
<span id="cb34-283">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-284"></span>
<span id="cb34-285">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-286">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb34-287">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb34-288">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb34-289">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb34-290">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb34-291">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-292"></span>
<span id="cb34-293">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-294">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-295">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-296"></span>
<span id="cb34-297">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-298"></span>
<span id="cb34-299">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb34-300"></span>
<span id="cb34-301">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-302">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb34-303">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb34-304">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb34-305">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-306"></span>
<span id="cb34-307"></span>
<span id="cb34-308">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-309"></span>
<span id="cb34-310">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-311">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-312">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb34-313"></span>
<span id="cb34-314">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-315"></span>
<span id="cb34-316">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-317">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-318"></span>
<span id="cb34-319">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-320">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb34-321">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-322"></span>
<span id="cb34-323">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-324"></span>
<span id="cb34-325">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-326">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb34-327">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-328"></span>
<span id="cb34-329">NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb34-330"></span>
<span id="cb34-331">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb34-332"></span>
<span id="cb34-333">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-334"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
<p>This is a tiny change; if it shows any performance difference, it should lean towards a positive change, although it’s possible the compiler deferred scheduling until after the initial negative match logic since the expression wasn’t used immediately. Let’s see.</p>
</section>
<section id="benchmark-7" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-7">Benchmark 7</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-07-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-07-v1.svg" class="img-fluid figure-img" alt="Benchmark 7"></a></p>
<figcaption>Benchmark 7</figcaption>
</figure>
</div>
<p>Tiny change, tiny performance improvement! Looks like this saves a couple of cycles, thus ending the short-lived reign of version 6.</p>
</section>
<section id="IsPrefixOfStringInTable_8" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_8"><code>IsPrefixOfStringInTable_8</code></h4>
<p>← IsPrefixOfStringInTable_7 | IsPrefixOfStringInTable_9 →</p>
<p>Version 8 is based off version 7, but omits the initial length test. Again, it’s another small change, but if version 5 was anything to go off, the less branches, the better.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-9-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-9-1" aria-controls="tabset-9-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-9-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-9-2" aria-controls="tabset-9-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-9-1" class="tab-pane active" aria-labelledby="tabset-9-1-tab">
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb35-1"></span>
<span id="cb35-2">% diff -u IsPrefixOfStringInTable_7.c IsPrefixOfStringInTable_8.c</span>
<span id="cb35-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_7.c 2018-04-26 10:21:43.253466500 -0400</span></span>
<span id="cb35-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_8.c 2018-04-26 10:21:27.109761800 -0400</span></span>
<span id="cb35-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,7 +18,7 @@</span></span>
<span id="cb35-6"></span>
<span id="cb35-7"> _Use_decl_annotations_</span>
<span id="cb35-8"> STRING_TABLE_INDEX</span>
<span id="cb35-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_7(</span></span>
<span id="cb35-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_8(</span></span>
<span id="cb35-11">     PSTRING_TABLE StringTable,</span>
<span id="cb35-12">     PSTRING String,</span>
<span id="cb35-13">     PSTRING_MATCH Match</span>
<span id="cb35-14"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,10 +31,8 @@</span></span>
<span id="cb35-15">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb35-16">     or is equal to" the search string.</span>
<span id="cb35-17"></span>
<span id="cb35-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This routine is based off version 6, but alters when we calculate the</span></span>
<span id="cb35-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    "search length" for the given string, which is done via the expression</span></span>
<span id="cb35-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    'min(String-&gt;Length, 16)'.  We don't need this value until later in the</span></span>
<span id="cb35-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    routine, when we're ready to start comparing strings.</span></span>
<span id="cb35-22"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This routine is based off version 7, but omits the initial minimum</span></span>
<span id="cb35-23"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    length test of the string array.</span></span>
<span id="cb35-24"></span>
<span id="cb35-25"> Arguments:</span>
<span id="cb35-26"></span>
<span id="cb35-27"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -63,7 +61,6 @@</span></span>
<span id="cb35-28">     ULONG NumberOfTrailingZeros;</span>
<span id="cb35-29">     ULONG SearchLength;</span>
<span id="cb35-30">     PSTRING TargetString;</span>
<span id="cb35-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    PSTRING_ARRAY StringArray;</span></span>
<span id="cb35-32">     STRING_SLOT Slot;</span>
<span id="cb35-33">     STRING_SLOT Search;</span>
<span id="cb35-34">     STRING_SLOT Compare;</span>
<span id="cb35-35"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -77,17 +74,6 @@</span></span>
<span id="cb35-36">     XMMWORD IncludeSlots;</span>
<span id="cb35-37">     const XMMWORD AllOnesXmm = _mm_set1_epi8(0xff);</span>
<span id="cb35-38"></span>
<span id="cb35-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    StringArray = StringTable-&gt;pStringArray;</span></span>
<span id="cb35-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb35-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb35-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // If the minimum length of the string array is greater than the length of</span></span>
<span id="cb35-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // our search string, there can't be a prefix match.</span></span>
<span id="cb35-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb35-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb35-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    if (StringArray-&gt;MinimumLength &gt; String-&gt;Length) {</span></span>
<span id="cb35-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        goto NoMatch;</span></span>
<span id="cb35-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    }</span></span>
<span id="cb35-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb35-50">     //</span>
<span id="cb35-51">     // Unconditionally do the following five operations before checking any of</span>
<span id="cb35-52">     // the results and determining how the search should proceed:</span></code></pre></div>
</div>
<div id="tabset-9-2" class="tab-pane" aria-labelledby="tabset-9-2-tab">
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb36-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb36-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb36-3">IsPrefixOfStringInTable_8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb36-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb36-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb36-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb36-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb36-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb36-9"></span>
<span id="cb36-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb36-11"></span>
<span id="cb36-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb36-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb36-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb36-15"></span>
<span id="cb36-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine is based off version 7, but omits the initial minimum</span></span>
<span id="cb36-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    length test of the string array.</span></span>
<span id="cb36-18"></span>
<span id="cb36-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb36-20"></span>
<span id="cb36-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb36-22"></span>
<span id="cb36-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb36-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb36-25"></span>
<span id="cb36-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb36-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb36-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb36-29"></span>
<span id="cb36-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb36-31"></span>
<span id="cb36-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb36-33"></span>
<span id="cb36-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb36-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-58"></span>
<span id="cb36-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb36-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb36-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb36-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb36-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb36-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb36-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb36-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb36-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb36-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb36-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb36-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb36-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb36-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb36-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb36-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb36-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb36-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb36-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb36-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb36-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb36-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb36-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb36-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb36-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-92"></span>
<span id="cb36-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb36-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-96"></span>
<span id="cb36-97">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-98"></span>
<span id="cb36-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb36-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb36-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-103"></span>
<span id="cb36-104">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb36-105">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-106"></span>
<span id="cb36-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-108">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb36-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-110"></span>
<span id="cb36-111">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-112"></span>
<span id="cb36-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb36-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-116"></span>
<span id="cb36-117">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-118"></span>
<span id="cb36-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb36-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-122"></span>
<span id="cb36-123">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-124">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-125"></span>
<span id="cb36-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb36-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb36-129">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb36-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb36-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb36-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-133"></span>
<span id="cb36-134">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-135"></span>
<span id="cb36-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb36-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb36-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb36-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb36-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb36-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb36-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-145"></span>
<span id="cb36-146">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-147"></span>
<span id="cb36-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb36-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb36-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb36-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-153"></span>
<span id="cb36-154">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-155"></span>
<span id="cb36-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-157">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb36-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb36-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb36-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb36-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-162"></span>
<span id="cb36-163">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb36-164">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-165"></span>
<span id="cb36-166">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb36-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-169"></span>
<span id="cb36-170">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-171"></span>
<span id="cb36-172">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-173"></span>
<span id="cb36-174">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-175">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb36-176">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb36-177">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb36-178">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-179"></span>
<span id="cb36-180">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-181">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-182"></span>
<span id="cb36-183">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb36-185">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb36-186">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-187"></span>
<span id="cb36-188">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-189"></span>
<span id="cb36-190">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-191">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb36-192">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb36-193">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-194"></span>
<span id="cb36-195">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-196"></span>
<span id="cb36-197">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-198"></span>
<span id="cb36-199">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-200">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb36-201">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb36-202">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-203"></span>
<span id="cb36-204">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-205">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-206"></span>
<span id="cb36-207">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-208">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb36-209">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb36-210">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb36-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-212"></span>
<span id="cb36-213">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-214">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-215"></span>
<span id="cb36-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb36-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-219"></span>
<span id="cb36-220">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-221">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb36-222"></span>
<span id="cb36-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb36-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-226"></span>
<span id="cb36-227">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-228"></span>
<span id="cb36-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb36-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb36-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb36-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb36-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb36-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb36-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb36-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb36-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb36-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-240"></span>
<span id="cb36-241">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-242"></span>
<span id="cb36-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb36-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-246"></span>
<span id="cb36-247">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-248"></span>
<span id="cb36-249">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-250"></span>
<span id="cb36-251">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-252">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb36-253">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb36-254">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb36-255">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-256"></span>
<span id="cb36-257">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb36-258"></span>
<span id="cb36-259">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-260"></span>
<span id="cb36-261">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-262"></span>
<span id="cb36-263">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-264">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb36-265">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-266"></span>
<span id="cb36-267">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-268"></span>
<span id="cb36-269">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-270"></span>
<span id="cb36-271">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-272">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb36-273">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb36-274">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb36-275">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb36-276">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb36-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-278"></span>
<span id="cb36-279">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-280">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-281">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-282"></span>
<span id="cb36-283">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-284"></span>
<span id="cb36-285">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb36-286"></span>
<span id="cb36-287">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-288">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb36-289">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb36-290">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb36-291">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-292"></span>
<span id="cb36-293"></span>
<span id="cb36-294">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-295"></span>
<span id="cb36-296">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-297">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-298">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb36-299"></span>
<span id="cb36-300">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-301"></span>
<span id="cb36-302">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-303">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-304"></span>
<span id="cb36-305">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-306">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb36-307">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-308"></span>
<span id="cb36-309">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-310"></span>
<span id="cb36-311">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-312">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb36-313">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-314"></span>
<span id="cb36-315">NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb36-316"></span>
<span id="cb36-317">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb36-318"></span>
<span id="cb36-319">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-320"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="benchmark-8" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-8">Benchmark 8</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-08-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-08-v1.svg" class="img-fluid figure-img" alt="Benchmark 8"></a></p>
<figcaption>Benchmark 8</figcaption>
</figure>
</div>
<p>Hey, look at that, another win across the board! Omitting the length test shaves off a few more cycles for both prefix and negative matching. Version 7’s one-round reign has come to a timely end.</p>
</section>
<section id="IsPrefixOfStringInTable_9" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_9"><code>IsPrefixOfStringInTable_9</code></h4>
<p>← IsPrefixOfStringInTable_8 | IsPrefixOfStringInTable_10 →</p>
<p>Version 9 tweaks version 8 by simply using <code>return NO_MATCH_FOUND</code> after the initial bitmap check instead of <code>goto NoMatch</code>. (The use of <code>goto</code> was a bit peculiar there anyway. We’re going to rewrite the body similarly for version 10, but let’s try to stick to making one change at a time.)</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-10-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-10-1" aria-controls="tabset-10-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-10-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-10-2" aria-controls="tabset-10-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-10-1" class="tab-pane active" aria-labelledby="tabset-10-1-tab">
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb37-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_8.c 2018-04-26 10:30:52.337935400 -0400</span></span>
<span id="cb37-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_9.c 2018-04-26 10:32:04.986734400 -0400</span></span>
<span id="cb37-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,7 +18,7 @@</span></span>
<span id="cb37-4"></span>
<span id="cb37-5"> _Use_decl_annotations_</span>
<span id="cb37-6"> STRING_TABLE_INDEX</span>
<span id="cb37-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_8(</span></span>
<span id="cb37-8"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_9(</span></span>
<span id="cb37-9">     PSTRING_TABLE StringTable,</span>
<span id="cb37-10">     PSTRING String,</span>
<span id="cb37-11">     PSTRING_MATCH Match</span>
<span id="cb37-12"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,8 +31,8 @@</span></span>
<span id="cb37-13">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb37-14">     or is equal to" the search string.</span>
<span id="cb37-15"></span>
<span id="cb37-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This routine is based off version 7, but omits the initial minimum</span></span>
<span id="cb37-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    length test of the string array.</span></span>
<span id="cb37-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This is a tweaked version of version 8 that does 'return NO_MATCH_FOUND'</span></span>
<span id="cb37-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    after the initial bitmap check versus 'goto NoMatch'.</span></span>
<span id="cb37-20"></span>
<span id="cb37-21"> Arguments:</span>
<span id="cb37-22"></span>
<span id="cb37-23"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -195,7 +195,7 @@</span></span>
<span id="cb37-24">         // search string.</span>
<span id="cb37-25">         //</span>
<span id="cb37-26"></span>
<span id="cb37-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        goto NoMatch;</span></span>
<span id="cb37-28"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        return NO_MATCH_FOUND;</span></span>
<span id="cb37-29">     }</span>
<span id="cb37-30"></span>
<span id="cb37-31">     //</span>
<span id="cb37-32"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -330,8 +330,6 @@</span></span>
<span id="cb37-33">     // If we get here, we didn't find a match.</span>
<span id="cb37-34">     //</span>
<span id="cb37-35"></span>
<span id="cb37-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-NoMatch:</span></span>
<span id="cb37-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb37-38">     //IACA_VC_END();</span>
<span id="cb37-39"></span>
<span id="cb37-40">     return NO_MATCH_FOUND;</span></code></pre></div>
</div>
<div id="tabset-10-2" class="tab-pane" aria-labelledby="tabset-10-2-tab">
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb38-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb38-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb38-3">IsPrefixOfStringInTable_9<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb38-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb38-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb38-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb38-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb38-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb38-9"></span>
<span id="cb38-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb38-11"></span>
<span id="cb38-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb38-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb38-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb38-15"></span>
<span id="cb38-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This is a tweaked version of version 9 that does 'return NO_MATCH_FOUND'</span></span>
<span id="cb38-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    after the initial bitmap check versus 'goto NoMatch'.</span></span>
<span id="cb38-18"></span>
<span id="cb38-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb38-20"></span>
<span id="cb38-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb38-22"></span>
<span id="cb38-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb38-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb38-25"></span>
<span id="cb38-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb38-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb38-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb38-29"></span>
<span id="cb38-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb38-31"></span>
<span id="cb38-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb38-33"></span>
<span id="cb38-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb38-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-58"></span>
<span id="cb38-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb38-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb38-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb38-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb38-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb38-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb38-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb38-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb38-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb38-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb38-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb38-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb38-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb38-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb38-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb38-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb38-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb38-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb38-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb38-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb38-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb38-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb38-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb38-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb38-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-92"></span>
<span id="cb38-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb38-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-96"></span>
<span id="cb38-97">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-98"></span>
<span id="cb38-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb38-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb38-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-103"></span>
<span id="cb38-104">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb38-105">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-106"></span>
<span id="cb38-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-108">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb38-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-110"></span>
<span id="cb38-111">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-112"></span>
<span id="cb38-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb38-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-116"></span>
<span id="cb38-117">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-118"></span>
<span id="cb38-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb38-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-122"></span>
<span id="cb38-123">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-124">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-125"></span>
<span id="cb38-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb38-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb38-129">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb38-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb38-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb38-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-133"></span>
<span id="cb38-134">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-135"></span>
<span id="cb38-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb38-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb38-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb38-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb38-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb38-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb38-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-145"></span>
<span id="cb38-146">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-147"></span>
<span id="cb38-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb38-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb38-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb38-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-153"></span>
<span id="cb38-154">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-155"></span>
<span id="cb38-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-157">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb38-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb38-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb38-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb38-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-162"></span>
<span id="cb38-163">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb38-164">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-165"></span>
<span id="cb38-166">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb38-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-169"></span>
<span id="cb38-170">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-171"></span>
<span id="cb38-172">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-173"></span>
<span id="cb38-174">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-175">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb38-176">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb38-177">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb38-178">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-179"></span>
<span id="cb38-180">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-181">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-182"></span>
<span id="cb38-183">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb38-185">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb38-186">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-187"></span>
<span id="cb38-188">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-189"></span>
<span id="cb38-190">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-191">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb38-192">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb38-193">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-194"></span>
<span id="cb38-195">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-196"></span>
<span id="cb38-197">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-198"></span>
<span id="cb38-199">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-200">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb38-201">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb38-202">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-203"></span>
<span id="cb38-204">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-205">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-206"></span>
<span id="cb38-207">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-208">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb38-209">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb38-210">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb38-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-212"></span>
<span id="cb38-213">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-214">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-215"></span>
<span id="cb38-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb38-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-219"></span>
<span id="cb38-220">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-221">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb38-222"></span>
<span id="cb38-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb38-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-226"></span>
<span id="cb38-227">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-228"></span>
<span id="cb38-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb38-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb38-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb38-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb38-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb38-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb38-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb38-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb38-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb38-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-240"></span>
<span id="cb38-241">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-242"></span>
<span id="cb38-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb38-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-246"></span>
<span id="cb38-247">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-248"></span>
<span id="cb38-249">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-250"></span>
<span id="cb38-251">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-252">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb38-253">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb38-254">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb38-255">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-256"></span>
<span id="cb38-257">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb38-258"></span>
<span id="cb38-259">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-260"></span>
<span id="cb38-261">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-262"></span>
<span id="cb38-263">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-264">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb38-265">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-266"></span>
<span id="cb38-267">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-268"></span>
<span id="cb38-269">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-270"></span>
<span id="cb38-271">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-272">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb38-273">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb38-274">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb38-275">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb38-276">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb38-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-278"></span>
<span id="cb38-279">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-280">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-281">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-282"></span>
<span id="cb38-283">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-284"></span>
<span id="cb38-285">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb38-286"></span>
<span id="cb38-287">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-288">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb38-289">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb38-290">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb38-291">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-292"></span>
<span id="cb38-293"></span>
<span id="cb38-294">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-295"></span>
<span id="cb38-296">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-297">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-298">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb38-299"></span>
<span id="cb38-300">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-301"></span>
<span id="cb38-302">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-303">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-304"></span>
<span id="cb38-305">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-306">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb38-307">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-308"></span>
<span id="cb38-309">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-310"></span>
<span id="cb38-311">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-312">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb38-313">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-314"></span>
<span id="cb38-315">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb38-316"></span>
<span id="cb38-317">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-318"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="benchmark-9" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-9">Benchmark 9</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-09-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-09-v1.svg" class="img-fluid figure-img" alt="Benchmark 09"></a></p>
<figcaption>Benchmark 09</figcaption>
</figure>
</div>
<p>This is an interesting one. The <code>return</code> versus <code>goto</code> appears to have cost us a tiny bit with the first few test inputs—only about 0.2 more cycles, which is negligible in the grand scheme of things. (Though let’s not pull on that thread too much, or the entire premise of the article might start to unravel!)</p>
<p>Version 9 improves the negative match performance by a few cycles, so let’s keep it.</p>
</section>
<section id="IsPrefixOfStringInTable_10" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_10"><code>IsPrefixOfStringInTable_10</code></h4>
<p>← IsPrefixOfStringInTable_9 | IsPrefixOfStringInTable_11 →</p>
<p>At this point, we’ve exhausted all the small, easy tweaks. Let’s rewrite the inner loop that performs the character comparison and see how that affects performance.</p>
<p>This should be an interesting one because the way it’s written now is… a bit odd. (I’ve clearly made some assumptions about optimal branch organization, to say the least.)</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-11-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-11-1" aria-controls="tabset-11-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-11-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-11-2" aria-controls="tabset-11-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-11-1" class="tab-pane active" aria-labelledby="tabset-11-1-tab">
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb39-1">% diff -u IsPrefixOfStringInTable_9.c IsPrefixOfStringInTable_10.c</span>
<span id="cb39-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_9.c 2018-04-26 10:32:04.986734400 -0400</span></span>
<span id="cb39-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_10.c        2018-04-26 10:38:09.357890400 -0400</span></span>
<span id="cb39-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,7 +18,7 @@</span></span>
<span id="cb39-5"></span>
<span id="cb39-6"> _Use_decl_annotations_</span>
<span id="cb39-7"> STRING_TABLE_INDEX</span>
<span id="cb39-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_9(</span></span>
<span id="cb39-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_10(</span></span>
<span id="cb39-10">     PSTRING_TABLE StringTable,</span>
<span id="cb39-11">     PSTRING String,</span>
<span id="cb39-12">     PSTRING_MATCH Match</span>
<span id="cb39-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,8 +31,8 @@</span></span>
<span id="cb39-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb39-15">     or is equal to" the search string.</span>
<span id="cb39-16"></span>
<span id="cb39-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This is a tweaked version of version 8 that does 'return NO_MATCH_FOUND'</span></span>
<span id="cb39-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    after the initial bitmap check versus 'goto NoMatch'.</span></span>
<span id="cb39-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This version is based off version 9, but rewrites the inner loop that</span></span>
<span id="cb39-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    checks for comparisons.</span></span>
<span id="cb39-21"></span>
<span id="cb39-22"> Arguments:</span>
<span id="cb39-23"></span>
<span id="cb39-24"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -264,7 +264,17 @@</span></span>
<span id="cb39-25"></span>
<span id="cb39-26">         CharactersMatched = __popcnt(Mask);</span>
<span id="cb39-27"></span>
<span id="cb39-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        if ((USHORT)CharactersMatched == 16 &amp;&amp; Length &gt; 16) {</span></span>
<span id="cb39-29"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        if ((USHORT)CharactersMatched &lt; Length &amp;&amp; Length &lt;= 16) {</span></span>
<span id="cb39-30"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-31"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            //</span></span>
<span id="cb39-32"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            // The slot length is longer than the number of characters matched</span></span>
<span id="cb39-33"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            // from the search string; this isn't a prefix match.  Continue.</span></span>
<span id="cb39-34"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            //</span></span>
<span id="cb39-35"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-36"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            continue;</span></span>
<span id="cb39-37"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        }</span></span>
<span id="cb39-38"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-39"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        if (Length &gt; 16) {</span></span>
<span id="cb39-40"></span>
<span id="cb39-41">             //</span>
<span id="cb39-42">             // The first 16 characters in the string matched against this</span>
<span id="cb39-43"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -283,46 +293,24 @@</span></span>
<span id="cb39-44">                 //</span>
<span id="cb39-45"></span>
<span id="cb39-46">                 continue;</span>
<span id="cb39-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb39-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            } else {</span></span>
<span id="cb39-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb39-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                //</span></span>
<span id="cb39-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                // We successfully prefix matched the search string against</span></span>
<span id="cb39-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                // this slot.  The code immediately following us deals with</span></span>
<span id="cb39-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                // handling a successful prefix match at the initial slot</span></span>
<span id="cb39-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                // level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb39-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                // directly into it.</span></span>
<span id="cb39-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                //</span></span>
<span id="cb39-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb39-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                goto FoundMatch;</span></span>
<span id="cb39-59">             }</span>
<span id="cb39-60">         }</span>
<span id="cb39-61"></span>
<span id="cb39-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        if ((USHORT)CharactersMatched == Length) {</span></span>
<span id="cb39-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb39-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-FoundMatch:</span></span>
<span id="cb39-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb39-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            //</span></span>
<span id="cb39-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            // This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb39-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            // caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb39-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            // match.</span></span>
<span id="cb39-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            //</span></span>
<span id="cb39-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb39-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb39-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            if (ARGUMENT_PRESENT(Match)) {</span></span>
<span id="cb39-74"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb39-75"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb39-76"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb39-77"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // match.</span></span>
<span id="cb39-78"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb39-79"></span>
<span id="cb39-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                Match-&gt;Index = (BYTE)Index;</span></span>
<span id="cb39-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                Match-&gt;NumberOfMatchedCharacters = (BYTE)CharactersMatched;</span></span>
<span id="cb39-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                Match-&gt;String = &amp;StringTable-&gt;pStringArray-&gt;Strings[Index];</span></span>
<span id="cb39-83"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        if (ARGUMENT_PRESENT(Match)) {</span></span>
<span id="cb39-84"></span>
<span id="cb39-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            }</span></span>
<span id="cb39-86"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            Match-&gt;Index = (BYTE)Index;</span></span>
<span id="cb39-87"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            Match-&gt;NumberOfMatchedCharacters = (BYTE)CharactersMatched;</span></span>
<span id="cb39-88"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            Match-&gt;String = &amp;StringTable-&gt;pStringArray-&gt;Strings[Index];</span></span>
<span id="cb39-89"></span>
<span id="cb39-90"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            return (STRING_TABLE_INDEX)Index;</span></span>
<span id="cb39-91">         }</span>
<span id="cb39-92"></span>
<span id="cb39-93"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        //</span></span>
<span id="cb39-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // Not enough characters matched, so continue the loop.</span></span>
<span id="cb39-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        //</span></span>
<span id="cb39-96"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        return (STRING_TABLE_INDEX)Index;</span></span>
<span id="cb39-97"></span>
<span id="cb39-98">     } while (--Count);</span></code></pre></div>
</div>
<div id="tabset-11-2" class="tab-pane" aria-labelledby="tabset-11-2-tab">
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb40-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb40-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb40-3">IsPrefixOfStringInTable_10<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb40-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb40-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb40-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb40-9"></span>
<span id="cb40-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb40-11"></span>
<span id="cb40-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb40-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb40-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb40-15"></span>
<span id="cb40-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This version is based off version 8, but rewrites the inner loop that</span></span>
<span id="cb40-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    checks for comparisons.</span></span>
<span id="cb40-18"></span>
<span id="cb40-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb40-20"></span>
<span id="cb40-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb40-22"></span>
<span id="cb40-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb40-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb40-25"></span>
<span id="cb40-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb40-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb40-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb40-29"></span>
<span id="cb40-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb40-31"></span>
<span id="cb40-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb40-33"></span>
<span id="cb40-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb40-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-58"></span>
<span id="cb40-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb40-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb40-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb40-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb40-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb40-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb40-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb40-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb40-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb40-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb40-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb40-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb40-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb40-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb40-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb40-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb40-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb40-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb40-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb40-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb40-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb40-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb40-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb40-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb40-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-92"></span>
<span id="cb40-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb40-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-96"></span>
<span id="cb40-97">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-98"></span>
<span id="cb40-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb40-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb40-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-103"></span>
<span id="cb40-104">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-105">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-106"></span>
<span id="cb40-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-108">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb40-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-110"></span>
<span id="cb40-111">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-112"></span>
<span id="cb40-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb40-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-116"></span>
<span id="cb40-117">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-118"></span>
<span id="cb40-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb40-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-122"></span>
<span id="cb40-123">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-124">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-125"></span>
<span id="cb40-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb40-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb40-129">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb40-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb40-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb40-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-133"></span>
<span id="cb40-134">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-135"></span>
<span id="cb40-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb40-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb40-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb40-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb40-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb40-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb40-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-145"></span>
<span id="cb40-146">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-147"></span>
<span id="cb40-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb40-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb40-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb40-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-153"></span>
<span id="cb40-154">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-155"></span>
<span id="cb40-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-157">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb40-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb40-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb40-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb40-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-162"></span>
<span id="cb40-163">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-164">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-165"></span>
<span id="cb40-166">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb40-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-169"></span>
<span id="cb40-170">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-171"></span>
<span id="cb40-172">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-173"></span>
<span id="cb40-174">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-175">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb40-176">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb40-177">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb40-178">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-179"></span>
<span id="cb40-180">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-181">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-182"></span>
<span id="cb40-183">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb40-185">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb40-186">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-187"></span>
<span id="cb40-188">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-189"></span>
<span id="cb40-190">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-191">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb40-192">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb40-193">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-194"></span>
<span id="cb40-195">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-196"></span>
<span id="cb40-197">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-198"></span>
<span id="cb40-199">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-200">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb40-201">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb40-202">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-203"></span>
<span id="cb40-204">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-205">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-206"></span>
<span id="cb40-207">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-208">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb40-209">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb40-210">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb40-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-212"></span>
<span id="cb40-213">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-214">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-215"></span>
<span id="cb40-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb40-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-219"></span>
<span id="cb40-220">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-221">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb40-222"></span>
<span id="cb40-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb40-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-226"></span>
<span id="cb40-227">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-228"></span>
<span id="cb40-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb40-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb40-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb40-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb40-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb40-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb40-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb40-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb40-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb40-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-240"></span>
<span id="cb40-241">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-242"></span>
<span id="cb40-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb40-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-246"></span>
<span id="cb40-247">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-248"></span>
<span id="cb40-249">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-250"></span>
<span id="cb40-251">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-252">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The slot length is longer than the number of characters matched</span></span>
<span id="cb40-253">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// from the search string; this isn't a prefix match.  Continue.</span></span>
<span id="cb40-254">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-255"></span>
<span id="cb40-256">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-257">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-258"></span>
<span id="cb40-259">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-260"></span>
<span id="cb40-261">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-262">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb40-263">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb40-264">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb40-265">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-266"></span>
<span id="cb40-267">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb40-268"></span>
<span id="cb40-269">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-270"></span>
<span id="cb40-271">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-272"></span>
<span id="cb40-273">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-274">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb40-275">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-276"></span>
<span id="cb40-277">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-278">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-279">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-280"></span>
<span id="cb40-281">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-282">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb40-283">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb40-284">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb40-285">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-286"></span>
<span id="cb40-287">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-288"></span>
<span id="cb40-289">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-290">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-291">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb40-292"></span>
<span id="cb40-293">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-294"></span>
<span id="cb40-295">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-296"></span>
<span id="cb40-297">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-298"></span>
<span id="cb40-299">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-300">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb40-301">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-302"></span>
<span id="cb40-303">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb40-304"></span>
<span id="cb40-305">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-306"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
<p>That’s a nicer bit of logic—more C-like, less assembly-like, and arguably clearer. Let’s see how they compare. (This is an interesting one, as I genuinely don’t have a strong hunch about what kind of performance impact this will have; obviously, I thought the initial way of structuring the loop was optimal, and I had it in place for two years before deciding to embark on this article, which led to the rework we just saw. )</p>
</section>
<section id="benchmark-10" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-10">Benchmark 10</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-10-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-10-v1.svg" class="img-fluid figure-img" alt="Benchmark 10"></a></p>
<figcaption>Benchmark 10</figcaption>
</figure>
</div>
<p>Hey, look at that! We’ve shaved off a few more cycles in most cases, especially for the negative matches!</p>
</section>
</section>
<section id="speeding-up-negative-matches-with-assembly" class="level3">
<h3 class="anchored" data-anchor-id="speeding-up-negative-matches-with-assembly">Speeding Up Negative Matches with Assembly</h3>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p><small><small></small></small></p><small><small>
<p>If you build the <a href="https://github.com/tpn/tracer">Tracer</a> project, you can run a helper batch file in the root directory called <code>cdb-simple.bat</code>, which uses <code>cdb</code> to launch one of the project’s executables, <code>ModuleLoader.exe</code>. This will start up, load all of our tracing project’s DLLs, then allow the debugger to break in, yielding a debugger prompt from which we can easily disassemble functions, inspect runtime function entries, etc. This is the approach I used for capturing the output over the next couple of sections.</p>
</small></small><p><small><small></small></small></p>
</div>
</div>
<p>Now for the fun part! Let’s take a look at the disassembly of the initial part of version 10 responsible for the negative match logic and see if there are any improvements we can make.</p>
<pre class="plaintext"><code>0:000&gt; uf StringTable2!IsPrefixOfStringInTable_10
StringTable2!IsPrefixOfStringInTable_10:
00007fff`f69c1df0 48896c2418      mov     qword ptr [rsp+18h],rbp
00007fff`f69c1df5 4889742420      mov     qword ptr [rsp+20h],rsi
00007fff`f69c1dfa 4155            push    r13
00007fff`f69c1dfc 4156            push    r14
00007fff`f69c1dfe 4157            push    r15
00007fff`f69c1e00 4883ec20        sub     rsp,20h
00007fff`f69c1e04 c5fa6f5920      vmovdqu xmm3,xmmword ptr [rcx+20h]
00007fff`f69c1e09 4c8b6a08        mov     r13,qword ptr [rdx+8]
00007fff`f69c1e0d 4d8bf0          mov     r14,r8
00007fff`f69c1e10 440fb63a        movzx   r15d,byte ptr [rdx]
00007fff`f69c1e14 33ed            xor     ebp,ebp
00007fff`f69c1e16 44883c24        mov     byte ptr [rsp],r15b
00007fff`f69c1e1a 488bf1          mov     rsi,rcx
00007fff`f69c1e1d c4e279780c24    vpbroadcastb xmm1,byte ptr [rsp]
00007fff`f69c1e23 c4c17a6f6500    vmovdqu xmm4,xmmword ptr [r13]
00007fff`f69c1e29 c4e259004110    vpshufb xmm0,xmm4,xmmword ptr [rcx+10h]
00007fff`f69c1e2f c5f97411        vpcmpeqb xmm2,xmm0,xmmword ptr [rcx]
00007fff`f69c1e33 c5e164c9        vpcmpgtb xmm1,xmm3,xmm1
00007fff`f69c1e37 c5f1ef0d41320000 vpxor   xmm1,xmm1,xmmword ptr [StringTable2!_xmmffffffffffffffffffffffffffffffff (00007fff`f69c5080)]
00007fff`f69c1e3f c5e9dbd1        vpand   xmm2,xmm2,xmm1
00007fff`f69c1e43 c579d7c2        vpmovmskb r8d,xmm2
00007fff`f69c1e47 c5fa7f5c2410    vmovdqu xmmword ptr [rsp+10h],xmm3
00007fff`f69c1e4d 4585c0          test    r8d,r8d
00007fff`f69c1e50 0f849a000000    je      StringTable2!IsPrefixOfStringInTable_10+0x100 (00007fff`f69c1ef0)</code></pre>
<p>There’s a bit of cruft at the start regarding setting up the function’s prologue (pushing non-volatile registers to the stack, etc. ). That’s to be expected for C (and C++, and basically every language); as the programmer, you don’t have any <strong>direct</strong> control over how many registers a compiler uses for a routine, how much stack space it uses, which registers it uses when, etc.</p>
<p>However, with assembly, we’re on the opposite end of the spectrum: we can control everything! We also have a little trick up our sleeves: the venerable <code>LEAF_ENTRY</code>.</p>
<section id="windows-x64-abi-calling-conventions" class="level4">
<h4 class="anchored" data-anchor-id="windows-x64-abi-calling-conventions">Windows x64 ABI Calling Conventions</h4>
<p>First, some background. The Windows x64 ABI and calling convention dictate two types of functions: <a href="https://github.com/tpn/winsdk-10/blob/master/Include/10.0.16299.0/shared/macamd64.inc#L524"><code>NESTED_ENTRY</code></a> and <a href="https://github.com/tpn/winsdk-10/blob/master/Include/10.0.16299.0/shared/macamd64.inc#L353"><code>LEAF_ENTRY</code></a>.</p>
<section id="nested_entry" class="level5">
<h5 class="anchored" data-anchor-id="nested_entry"><code>NESTED_ENTRY</code></h5>
<p><code>NESTED_ENTRY</code> is by far the most common; C and C++ functions are all implicitly <code>NESTED_ENTRY</code> functions. (The <code>LEAF_ENTRY</code> and <code>NESTED_ENTRY</code> symbols are MASM (<code>ml64.exe</code>) macro names, but the concept applies to all languages.)</p>
</section>
<section id="leaf_entry" class="level5">
<h5 class="anchored" data-anchor-id="leaf_entry"><code>LEAF_ENTRY</code></h5>
<p>A <code>LEAF_ENTRY</code> can only be implemented in assembly. It is constrained in that it may not manipulate any of the non-volatile x64 registers (<code>rbx</code>, <code>rdi</code>, <code>rsi</code>, <code>rsp</code>, <code>rbp</code>, <code>r12</code>, <code>r13</code>, <code>r14</code>, <code>r15</code>, <code>xmm6-15</code>), nor may it <code>call</code> any other functions (since <code>call</code> implicitly modifies the stack pointer), nor may it have a structured exception handler (since handling an exception for a given stack frame also manipulates the stack pointer).</p>
<p>The reason for these constraints is that <code>LEAF_ENTRY</code> routines do not have any unwind information generated for them in their runtime function entries. Unwind information is used by the kernel to, well, unwind the modifications made to non-volatile registers while traversing back up through the call stack looking for an exception handler in the event of an exception.</p>
<p>For example, here’s the function entry and associated unwind information for the PGO build of the <code>IsPrefixOfStringInTable_10</code> function:</p>
<pre class="plaintext"><code>0:000&gt; .fnent StringTable2!IsPrefixOfStringInTable_10
Debugger function entry 000001d8`2ea03cf8 for:
(00007fff`f8411df0)   StringTable2!IsPrefixOfStringInTable_10
Exact matches:
    StringTable2!IsPrefixOfStringInTable_10 (struct _STRING_TABLE *,
                                             struct _STRING *,
                                             struct _STRING_MATCH *)

BeginAddress      = 00000000`00001df0
EndAddress        = 00000000`00001e59
UnwindInfoAddress = 00000000`000054f8

Unwind info at 00007fff`f84154f8, 14 bytes
  version 1, flags 0, prolog 14, codes 8
  00: offs 14, unwind op 4, op info 6   UWOP_SAVE_NONVOL FrameOffset: 58 reg: rsi.
  02: offs 14, unwind op 4, op info 5   UWOP_SAVE_NONVOL FrameOffset: 50 reg: rbp.
  04: offs 14, unwind op 2, op info 3   UWOP_ALLOC_SMALL.
  05: offs 10, unwind op 0, op info f   UWOP_PUSH_NONVOL reg: r15.
  06: offs e, unwind op 0, op info e    UWOP_PUSH_NONVOL reg: r14.
  07: offs c, unwind op 0, op info d    UWOP_PUSH_NONVOL reg: r13.</code></pre>
<p>We can see that this routine manipulates six non-volatile registers in total, including the stack pointer. The first instructions of the routine constitute the function’s prologue; in the disassembly, you can see that three of the <code>rxx</code> registers are pushed to the stack, followed by the allocation of 0x20 (32) bytes of stack space:</p>
<pre class="plaintext"><code>0:000&gt; uf StringTable2!IsPrefixOfStringInTable_10
StringTable2!IsPrefixOfStringInTable_10:
00007fff`f69c1df0 48896c2418      mov     qword ptr [rsp+18h],rbp
00007fff`f69c1df5 4889742420      mov     qword ptr [rsp+20h],rsi
00007fff`f69c1dfa 4155            push    r13
00007fff`f69c1dfc 4156            push    r14
00007fff`f69c1dfe 4157            push    r15
00007fff`f69c1e00 4883ec20        sub     rsp,20h</code></pre>
<p>It also cheekily uses the home parameter space for stashing <code>rbp</code> and <code>rsi</code> instead of pushing them to the stack. That’s fair game, though—this is the PGO build, so I’d expect it to use some extra tricks to shave off a few cycles here and there. I’d do the same if I were writing assembly. <em>(Side note: if you view the source of this page, there’s a commented-out section below that shows the runtime function entry for the release build of version 10; it uses nine registers instead of six and 40 bytes of stack space instead of 32. I wrote it before switching to using the PGO build for everything.)</em></p>
<p>The home parameter space is a 32-byte area that immediately follows the return address (i.e., the value of <code>rsp</code> when the function is entered); it is mandated by the x64 calling convention on Windows and is primarily intended to provide scratch space for a routine to <em>home</em> its parameter registers (i.e., the registers used for the first four arguments of a function: <code>rcx</code>, <code>rdx</code>, <code>r8</code>, and <code>r9</code>). This allows the four volatile registers to be repurposed within a routine while still providing a way to refer to the parameters if needed. That’s its intended use—however, it’s not strictly enforced, so you can essentially treat this area as a free 32-byte scratch space if you’re writing assembly.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p><small> On a semi-related note, I’d highly recommend reading <a href="https://github.com/tpn/pdfs/blob/4d2296269d3737b649def585a19eb103cda9c3d0/A%20History%20of%20Modern%2064-bit%20Computing%20-%20Feb%202007%20(CSEP590A).pdf">A History of Modern 64-bit Computing</a> if you have some spare time. It’s a fascinating insight into contemporary x64 conventions we often take for granted, drawing on numerous interviews with industry luminaries like Dave Cutler and Linus Torvalds. I found it incredibly useful for understanding the <em>why</em> behind concepts like home parameter space, structured exception handling, runtime function entries, and why you can’t write inline assembly for x64 with MSVC anymore—apparently, it provides a direct vector for disrupting the mechanisms relied upon by the kernel stack unwinding functionality. (At least, I think that’s the reason—can anyone from Microsoft confirm?)) </small></p>
</div>
</div>
<!--
    This is the runtime function entry for the release build of version 10, including follow-up
    commentary.  I wrote this before switching to the PGO version for everything.

<small><pre>
0:000&gt; .fnent StringTable2!IsPrefixOfStringInTable_10
Debugger function entry 000001f9`048edf98 for:
Exact matches:
    StringTable2!IsPrefixOfStringInTable_10 (struct _STRING_TABLE *, struct _STRING *, struct _STRING_MATCH *)

BeginAddress      = 00000000`00001fe0
EndAddress        = 00000000`00002165
UnwindInfoAddress = 00000000`00004370

Unwind info at 00007ffd`15594370, 1e bytes
  version 1, flags 0, prolog 81, codes d
  00: offs 81, unwind op 4, op info 7   UWOP_SAVE_NONVOL FrameOffset: 20 reg: rdi.
  02: offs 7c, unwind op 4, op info 6   UWOP_SAVE_NONVOL FrameOffset: 60 reg: rsi.
  04: offs 77, unwind op 4, op info 5   UWOP_SAVE_NONVOL FrameOffset: 58 reg: rbp.
  06: offs 72, unwind op 4, op info 3   UWOP_SAVE_NONVOL FrameOffset: 50 reg: rbx.
  08: offs c, unwind op 2, op info 4    UWOP_ALLOC_SMALL.
  09: offs 8, unwind op 0, op info f    UWOP_PUSH_NONVOL reg: r15.
  0a: offs 6, unwind op 0, op info e    UWOP_PUSH_NONVOL reg: r14.
  0b: offs 4, unwind op 0, op info d    UWOP_PUSH_NONVOL reg: r13.
  0c: offs 2, unwind op 0, op info c    UWOP_PUSH_NONVOL reg: r12.
0:000&gt;
</pre></small>
                <hr/>

                <p>

                    We can see that the C version of our routine manipulates 9 non-volatile
                    registers in total, including the stack pointer.  The first instructions
                    of the C version constitute the function's prologue; in the disassembly,
                    you can see that four of the rxx registers are pushed to the stack and then
                    0x28 (40) bytes of stack space is allocated:

                </p>

                <hr/>
<small><pre>
0:000&gt; uf StringTable2!IsPrefixOfStringInTable_10
StringTable2!IsPrefixOfStringInTable_10:
00007ffd`15591fe0 4154            push    r12
00007ffd`15591fe2 4155            push    r13
00007ffd`15591fe4 4156            push    r14
00007ffd`15591fe6 4157            push    r15
00007ffd`15591fe8 4883ec28        sub     rsp,28h
--- END OF PROLOGUE ---
00007ffd`15591fec c5fa6f5920      vmovdqu xmm3,xmmword ptr [rcx+20h]
</pre></small>
                <hr/>
-->
<hr>
</section>
</section>
</section>
<section id="assembly-implementations" class="level3">
<h3 class="anchored" data-anchor-id="assembly-implementations">Assembly Implementations</h3>
<section id="IsPrefixOfStringInTable_x64_1" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_x64_1"><code>IsPrefixOfStringInTable_x64_1</code></h4>
<p>IsPrefixOfStringInTable_x64_2 →</p>
<p>So, knowing what we now know about the venerable little <code>LEAF_ENTRY</code> trick, let’s see if we can construct a simple routine in assembly that just deals with the negative match case.</p>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb44-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;++</span></span>
<span id="cb44-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; STRING_TABLE_INDEX</span></span>
<span id="cb44-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; IsPrefixOfStringInTable_x64_*(</span></span>
<span id="cb44-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING_TABLE StringTable,</span></span>
<span id="cb44-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING String,</span></span>
<span id="cb44-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _Out_opt_ PSTRING_MATCH Match</span></span>
<span id="cb44-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     )</span></span>
<span id="cb44-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Routine Description:</span></span>
<span id="cb44-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb44-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb44-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   or is equal to" the search string.</span></span>
<span id="cb44-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Arguments:</span></span>
<span id="cb44-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb44-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb44-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       search for.</span></span>
<span id="cb44-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb44-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb44-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb44-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return Value:</span></span>
<span id="cb44-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb44-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;--</span></span>
<span id="cb44-32"></span>
<span id="cb44-33">        LEAF_ENTRY IsPrefixOfStringInTable_x64_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb44-34"></span>
<span id="cb44-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_START</span></span>
<span id="cb44-36"></span>
<span id="cb44-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string buffer into xmm0, and the unique indexes from the string table</span></span>
<span id="cb44-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span></span>
<span id="cb44-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; result back into xmm0.</span></span>
<span id="cb44-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-42"></span>
<span id="cb44-43">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb44-44">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb44-45">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load indexes.</span></span>
<span id="cb44-46">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpshufb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb44-47"></span>
<span id="cb44-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string table's unique character array into xmm2, and the lengths for</span></span>
<span id="cb44-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; each string slot into xmm3.</span></span>
<span id="cb44-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-52"></span>
<span id="cb44-53">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load chars.</span></span>
<span id="cb44-54">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load lengths.</span></span>
<span id="cb44-55"></span>
<span id="cb44-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm5 to all ones.  This is used later.</span></span>
<span id="cb44-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-59"></span>
<span id="cb44-60">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpeqq</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm5 to all ones.</span></span>
<span id="cb44-61"></span>
<span id="cb44-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb44-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-65"></span>
<span id="cb44-66">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast length.</span></span>
<span id="cb44-67"></span>
<span id="cb44-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's unique character array (xmm0) against the string</span></span>
<span id="cb44-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table's unique chars (xmm2), saving the result back into xmm0.</span></span>
<span id="cb44-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-72"></span>
<span id="cb44-73">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare unique chars.</span></span>
<span id="cb44-74"></span>
<span id="cb44-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb44-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb44-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table, to find those that are greater in length.  Invert the result, such</span></span>
<span id="cb44-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; that we're left with a masked register where each 0xff element indicates</span></span>
<span id="cb44-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; a slot with a length less than or equal to our search string's length.</span></span>
<span id="cb44-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-82"></span>
<span id="cb44-83">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpgtb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb44-84">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Invert the result.</span></span>
<span id="cb44-85"></span>
<span id="cb44-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect-via-test xmm0 and xmm1 to identify string slots of a suitable</span></span>
<span id="cb44-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length with a matching unique character.</span></span>
<span id="cb44-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-90"></span>
<span id="cb44-91">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vptest</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Check for no match.</span></span>
<span id="cb44-92">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;jnz        short @F                    ; There was a match.</span></span>
<span id="cb44-93">                                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (Not yet implemented.)</span></span>
<span id="cb44-94"></span>
<span id="cb44-95"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-96"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match, set rax to -1 and return.</span></span>
<span id="cb44-97"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-98"></span>
<span id="cb44-99">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-100">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; rax = -1</span></span>
<span id="cb44-101">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb44-102"></span>
<span id="cb44-103">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb44-104"></span>
<span id="cb44-105">        LEAF_END   IsPrefixOfStringInTable_x64_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb44-106"></span>
<span id="cb44-107"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></span></code></pre></div>
<p>Note how we don’t need to push anything to the stack since we didn’t manipulate any non-volatile registers. If an exception occurs within the body of our implementation (say we dereference a NULL pointer), the kernel knows it doesn’t have to undo any non-volatile register modifications (using offsets specified by the unwind information) because there isn’t any unwind information. It can simply advance to the frame before us (e. g. , <code>rsp</code> at the time of the fault, minus 8 bytes) as it continues its search for runtime function entries and associated unwind information. As you can see, the unwind info is effectively empty:</p>
<pre class="plaintext"><code>0:000&gt; .fnent StringTable2!IsPrefixOfStringInTable_x64_1
Debugger function entry 000001f9`048edf98 for:
Exact matches:
    StringTable2!IsPrefixOfStringInTable_x64_1 (void)

BeginAddress      = 00000000`00003290
EndAddress        = 00000000`000032cb
UnwindInfoAddress = 00000000`00004468

Unwind info at 00007ffd`15594468, 4 bytes
  version 1, flags 0, prolog 0, codes 0</code></pre>
</section>
<section id="benchmark-x64-1" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-x64-1">Benchmark x64 1</h4>
<p>Let’s see how this scrappy little fellow (who always returns <code>NO_MATCH_FOUND</code> but still mimics the steps required to successfully negative match) does against the leading C implementation at this point, version 10:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-01-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-01-v1.svg" class="img-fluid figure-img" alt="Benchmark x64 1"></a></p>
<figcaption>Benchmark x64 1</figcaption>
</figure>
</div>
<p>Fwoah, look at that, we’ve shaved about three cycles off the C version!</p>
<p><small> (Note that when I first wrote this, I was comparing the assembly version against the release build (not the PGO build), which was clocking in at about 13-14 cycles for negative matching. So getting it down to ~7.5 from 13-14 was a bit more exciting. Damn the PGO build and its 10.9-ish cycles for negative matching!) </small></p>
<p>The good news is that our theory about the performance of the <code>LEAF_ENTRY</code> looks like it’s paid off: we can reliably get about 7.5 cycles for negative matching.</p>
</section>
<section id="IsPrefixOfStringInTable_x64_2" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_x64_2"><code>IsPrefixOfStringInTable_x64_2</code></h4>
<p>← IsPrefixOfStringInTable_x64_1 | IsPrefixOfStringInTable_x64_3 →</p>
<p>The bad news is that we now need to implement the rest of the functionality within the constraints of a <code>LEAF_ENTRY</code>!</p>
<p>The problem with a <code>LEAF_ENTRY</code> for anything more than a trivial bit of code is that you only have a handful of volatile registers to work with, and no stack space can be used for register spilling or temporaries. (Technically I could use the home parameter space, but, eh, we’re already avoiding stack spills, why not make life harder for ourselves and try to avoid <strong>all</strong> memory spilling.)</p>
<p>If you can’t spill to memory, your only option is really spilling to XMM registers via <code>vpinsr</code> and <code>vpextr</code> combinations, which, as you can see in the implementation of version 2 below, I have to do a lot.</p>
<p><small> (Also note: when I wrote this version, I didn’t use the disassembly from the C routines for guidance. I find that as soon as you start to grok the disassembly for a given routine, it becomes harder to think of ways to approach it from a fresh angle. Also, the <code>LEAF_ENTRY</code> aspect significantly limited what I could do anyway, so I figured I may as well just give it a crack from scratch and see what I could come up with. It would be an interesting point of reference compared to a future iteration that tries to improve on the disassembly of an optimized PGO version, for example.) </small></p>
<p>The diff view for this routine is less useful given the vast majority of the code is new, so I’ve put the full version of the code first. It’s based more or less on the approach used by version 8 of the C routine (I actually wrote it after I wrote version 8; versions 9 and 10 of the C routine (with the latter having the improved loop logic) came after).</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-12-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-12-1" aria-controls="tabset-12-1" aria-selected="true">Full</a></li><li class="nav-item"><a class="nav-link" id="tabset-12-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-12-2" aria-controls="tabset-12-2" aria-selected="false">Diff</a></li></ul>
<div class="tab-content">
<div id="tabset-12-1" class="tab-pane active" aria-labelledby="tabset-12-1-tab">
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb46-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;++</span></span>
<span id="cb46-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; STRING_TABLE_INDEX</span></span>
<span id="cb46-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; IsPrefixOfStringInTable_x64_*(</span></span>
<span id="cb46-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING_TABLE StringTable,</span></span>
<span id="cb46-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING String,</span></span>
<span id="cb46-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _Out_opt_ PSTRING_MATCH Match</span></span>
<span id="cb46-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     )</span></span>
<span id="cb46-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Routine Description:</span></span>
<span id="cb46-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb46-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb46-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   or is equal to" the search string.</span></span>
<span id="cb46-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Arguments:</span></span>
<span id="cb46-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb46-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb46-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       search for.</span></span>
<span id="cb46-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb46-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb46-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb46-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return Value:</span></span>
<span id="cb46-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb46-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;--</span></span>
<span id="cb46-32"></span>
<span id="cb46-33">        LEAF_ENTRY IsPrefixOfStringInTable_x64_2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb46-34"></span>
<span id="cb46-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string buffer into xmm0, and the unique indexes from the string table</span></span>
<span id="cb46-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span></span>
<span id="cb46-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; result into xmm5.</span></span>
<span id="cb46-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-40"></span>
<span id="cb46-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_START</span></span>
<span id="cb46-42"></span>
<span id="cb46-43">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb46-44">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb46-45">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load indexes.</span></span>
<span id="cb46-46">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpshufb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb46-47"></span>
<span id="cb46-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string table's unique character array into xmm2.</span></span>
<span id="cb46-50"></span>
<span id="cb46-51">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load chars.</span></span>
<span id="cb46-52"></span>
<span id="cb46-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb46-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb46-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-57"></span>
<span id="cb46-58">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare unique chars.</span></span>
<span id="cb46-59"></span>
<span id="cb46-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb46-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-63">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load lengths.</span></span>
<span id="cb46-64"></span>
<span id="cb46-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.  We use this later to invert the length comparison.</span></span>
<span id="cb46-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-68"></span>
<span id="cb46-69">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpeqq</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.</span></span>
<span id="cb46-70"></span>
<span id="cb46-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb46-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-74"></span>
<span id="cb46-75">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast length.</span></span>
<span id="cb46-76"></span>
<span id="cb46-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb46-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb46-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table, to find those that are greater in length.  Invert the result, such</span></span>
<span id="cb46-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; that we're left with a masked register where each 0xff element indicates</span></span>
<span id="cb46-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; a slot with a length less than or equal to our search string's length.</span></span>
<span id="cb46-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-84"></span>
<span id="cb46-85">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpgtb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb46-86">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Invert the result.</span></span>
<span id="cb46-87"></span>
<span id="cb46-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect-and-test the unique character match xmm mask register (xmm5) with</span></span>
<span id="cb46-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the length match mask xmm register (xmm1).  This affects flags, allowing us</span></span>
<span id="cb46-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do a fast-path exit for the no-match case (where ZF = 1).</span></span>
<span id="cb46-92"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-93"></span>
<span id="cb46-94">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vptest</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Check for no match.</span></span>
<span id="cb46-95">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; There was a match.</span></span>
<span id="cb46-96"></span>
<span id="cb46-97"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-98"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match, set rax to -1 and return.</span></span>
<span id="cb46-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-100"></span>
<span id="cb46-101">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb46-102">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb46-103">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb46-104"></span>
<span id="cb46-105">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb46-106"></span>
<span id="cb46-107"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (There was at least one match, continue with processing.)</span></span>
<span id="cb46-109"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-110"></span>
<span id="cb46-111"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-112"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Calculate the "search length" for the incoming search string, which is</span></span>
<span id="cb46-113"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equivalent of 'min(String-&gt;Length, 16)'.  (The search string's length</span></span>
<span id="cb46-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; currently lives in xmm4, albeit as a byte-value broadcasted across the</span></span>
<span id="cb46-115"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; entire register, so extract that first.)</span></span>
<span id="cb46-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Once the search length is calculated, deposit it back at the second byte</span></span>
<span id="cb46-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location of xmm4.</span></span>
<span id="cb46-119"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-120"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 and xmm4[15:8] - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb46-121"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-122"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length (String-&gt;Length)</span></span>
<span id="cb46-123"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-124"></span>
<span id="cb46-125"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx10:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load length.</span></span>
<span id="cb46-126">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load 16 into rax.</span></span>
<span id="cb46-127">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy into r10.</span></span>
<span id="cb46-128">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against 16.</span></span>
<span id="cb46-129">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmova</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Use 16 if length is greater.</span></span>
<span id="cb46-130">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save back to xmm4b[1].</span></span>
<span id="cb46-131"></span>
<span id="cb46-132"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-133"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our parameter registers into xmm registers instead of their stack-backed</span></span>
<span id="cb46-134"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location, to avoid memory writes.</span></span>
<span id="cb46-135"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-136"></span>
<span id="cb46-137">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm2.</span></span>
<span id="cb46-138">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rcx into xmm2q[0].</span></span>
<span id="cb46-139">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rdx into xmm2q[1].</span></span>
<span id="cb46-140"></span>
<span id="cb46-141"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-142"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm5, xmm1'),</span></span>
<span id="cb46-143"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; yielding a mask identifying indices we need to perform subsequent matches</span></span>
<span id="cb46-144"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; upon.  Convert this into a bitmap and save in xmm2d[2].</span></span>
<span id="cb46-145"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-146"></span>
<span id="cb46-147">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpand</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect unique + lengths.</span></span>
<span id="cb46-148">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Generate a bitmap from mask.</span></span>
<span id="cb46-149"></span>
<span id="cb46-150"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-151"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We're finished with xmm5; repurpose it in the same vein as xmm2 above.</span></span>
<span id="cb46-152"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-153"></span>
<span id="cb46-154">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm5.</span></span>
<span id="cb46-155">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save r8 into xmm5q[0].</span></span>
<span id="cb46-156"></span>
<span id="cb46-157"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-158"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Summary of xmm register stashing for the rest of the routine:</span></span>
<span id="cb46-159"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-160"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm2:</span></span>
<span id="cb46-161"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        0:63   (vpinsrq 0)     rcx (1st function parameter, StringTable)</span></span>
<span id="cb46-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       64:127  (vpinsrq 1)     rdx (2nd function paramter, String)</span></span>
<span id="cb46-163"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm4:</span></span>
<span id="cb46-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:7     (vpinsrb 0)     length of search string</span></span>
<span id="cb46-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16)</span></span>
<span id="cb46-167"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      16:23    (vpinsrb 2)     loop counter (when doing long string compares)</span></span>
<span id="cb46-168"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      24:31    (vpinsrb 3)     shift count</span></span>
<span id="cb46-169"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-170"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm5:</span></span>
<span id="cb46-171"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span></span>
<span id="cb46-172"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      64:95    (vpinsrd 2)     bitmap of slots to compare</span></span>
<span id="cb46-173"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      96:127   (vpinsrd 3)     index of slot currently being processed</span></span>
<span id="cb46-174"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-175"></span>
<span id="cb46-176"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-177"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Initialize rcx as our counter register by doing a popcnt against the bitmap</span></span>
<span id="cb46-178"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we just generated in edx, and clear our shift count register (r9).</span></span>
<span id="cb46-179"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-180"></span>
<span id="cb46-181">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits in bitmap.</span></span>
<span id="cb46-182">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear r9.</span></span>
<span id="cb46-183"></span>
<span id="cb46-184">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb46-185"></span>
<span id="cb46-186"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-187"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span></span>
<span id="cb46-188"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; trailing zeros of the bitmap, and then add in the shift count, producing an</span></span>
<span id="cb46-189"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; index (rax) we can use to load the corresponding slot.</span></span>
<span id="cb46-190"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-191"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Register usage at top of loop:</span></span>
<span id="cb46-192"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-193"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index.</span></span>
<span id="cb46-194"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-195"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - Loop counter.</span></span>
<span id="cb46-196"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-197"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rdx - Bitmap initially, then slot length.</span></span>
<span id="cb46-198"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-199"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - Shift count.</span></span>
<span id="cb46-200"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-201"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 - Search length.</span></span>
<span id="cb46-202"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-203"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length.</span></span>
<span id="cb46-204"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-205"></span>
<span id="cb46-206"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx20:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">tzcnt</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count trailing zeros.</span></span>
<span id="cb46-207">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy tzcnt to rax,</span></span>
<span id="cb46-208">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Add shift to create index.</span></span>
<span id="cb46-209">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; tzcnt + 1</span></span>
<span id="cb46-210">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shrx</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Reposition bitmap.</span></span>
<span id="cb46-211">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store bitmap, free up rdx.</span></span>
<span id="cb46-212">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear edx.</span></span>
<span id="cb46-213">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy index back to shift.</span></span>
<span id="cb46-214">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shift = Index + 1</span></span>
<span id="cb46-215">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store the raw index xmm5d[3].</span></span>
<span id="cb46-216"></span>
<span id="cb46-217"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-218"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span></span>
<span id="cb46-219"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span></span>
<span id="cb46-220"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-221"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, load the string table slot at this index into xmm1, then shift rax back.</span></span>
<span id="cb46-222"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-223"></span>
<span id="cb46-224">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb46-225">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb46-226">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span></span>
<span id="cb46-227">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb46-228"></span>
<span id="cb46-229"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-230"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The search string's first 16 characters are already in xmm0.  Compare this</span></span>
<span id="cb46-231"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; against the slot that has just been loaded into xmm1, storing the result back</span></span>
<span id="cb46-232"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.</span></span>
<span id="cb46-233"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-234"></span>
<span id="cb46-235">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare search string to slot.</span></span>
<span id="cb46-236"></span>
<span id="cb46-237"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-238"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert the XMM mask into a 32-bit representation, then zero high bits after</span></span>
<span id="cb46-239"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; our "search length", which allows us to ignore the results of the comparison</span></span>
<span id="cb46-240"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; above for bytes that were after the search string's length, if applicable.</span></span>
<span id="cb46-241"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, count the number of bits remaining, which tells us how many characters</span></span>
<span id="cb46-242"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we matched.</span></span>
<span id="cb46-243"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-244"></span>
<span id="cb46-245">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert into mask.</span></span>
<span id="cb46-246">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">bzhi</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Zero high bits.</span></span>
<span id="cb46-247">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits.</span></span>
<span id="cb46-248"></span>
<span id="cb46-249"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-250"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the slot length into rdx.  As xmm3 already has all the slot lengths in</span></span>
<span id="cb46-251"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it, we can load rax (the current index) into xmm1 and use it to extract the</span></span>
<span id="cb46-252"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; slot length via shuffle.  (The length will be in the lowest byte of xmm1</span></span>
<span id="cb46-253"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; after the shuffle, which we can then vpextrb.)</span></span>
<span id="cb46-254"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-255"></span>
<span id="cb46-256">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">movd</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load index into xmm1.</span></span>
<span id="cb46-257">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle lengths.</span></span>
<span id="cb46-258">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract target length to rdx.</span></span>
<span id="cb46-259"></span>
<span id="cb46-260"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-261"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If 16 characters matched, and the search string's length is longer than 16,</span></span>
<span id="cb46-262"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we're going to need to do a comparison of the remaining strings.</span></span>
<span id="cb46-263"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-264"></span>
<span id="cb46-265">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare chars matched to 16.</span></span>
<span id="cb46-266">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 chars matched.</span></span>
<span id="cb46-267">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx30                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than 16 matched.</span></span>
<span id="cb46-268"></span>
<span id="cb46-269"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-270"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All 16 characters matched.  If the slot length is greater than 16, we need</span></span>
<span id="cb46-271"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do an inline memory comparison of the remaining bytes.  If it's 16 exactly,</span></span>
<span id="cb46-272"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then great, that's a slot match, we're done.</span></span>
<span id="cb46-273"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-274"></span>
<span id="cb46-275">@@:     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare length to 16.</span></span>
<span id="cb46-276">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ja</span>          Pfx50                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length is &gt; 16.</span></span>
<span id="cb46-277">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Lengths match!</span></span>
<span id="cb46-278">                                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length &lt;= 16, fall through...</span></span>
<span id="cb46-279"></span>
<span id="cb46-280"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-281"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than or equal to 16 characters were matched.  Compare this against the</span></span>
<span id="cb46-282"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length of the slot; if equal, this is a match, if not, no match, continue.</span></span>
<span id="cb46-283"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-284"></span>
<span id="cb46-285"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx30:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against slot length.</span></span>
<span id="cb46-286">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jne</span>         @F                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match found.</span></span>
<span id="cb46-287">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Match found!</span></span>
<span id="cb46-288"></span>
<span id="cb46-289"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-290"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match against this slot, decrement counter and either continue the loop</span></span>
<span id="cb46-291"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; or terminate the search and return no match.</span></span>
<span id="cb46-292"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-293"></span>
<span id="cb46-294">@@:     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb46-295">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb46-296">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; cx != 0, continue.</span></span>
<span id="cb46-297"></span>
<span id="cb46-298">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb46-299">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb46-300">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb46-301"></span>
<span id="cb46-302"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-303"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span></span>
<span id="cb46-304"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; former is used when we need to copy the number of characters matched from r8</span></span>
<span id="cb46-305"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back to rax.  The latter jump target doesn't require this.</span></span>
<span id="cb46-306"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-307"></span>
<span id="cb46-308"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx35:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy numbers of chars matched.</span></span>
<span id="cb46-309"></span>
<span id="cb46-310"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-311"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the match parameter back into r8 and test to see if it's not-NULL, in</span></span>
<span id="cb46-312"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; which case we need to fill out a STRING_MATCH structure for the match.</span></span>
<span id="cb46-313"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-314"></span>
<span id="cb46-315"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx40:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringMatch.</span></span>
<span id="cb46-316">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is NULL?</span></span>
<span id="cb46-317">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not zero, need to fill out.</span></span>
<span id="cb46-318"></span>
<span id="cb46-319"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-320"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is NULL, we're done. Extract index of match back into rax and ret.</span></span>
<span id="cb46-321"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-322"></span>
<span id="cb46-323">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb46-324">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch == NULL, finish.</span></span>
<span id="cb46-325"></span>
<span id="cb46-326"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-327"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span></span>
<span id="cb46-328"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; reload the index from xmm5 into rax and save.</span></span>
<span id="cb46-329"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-330"></span>
<span id="cb46-331">@@:     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>NumberOfMatchedCharacters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb46-332">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb46-333">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb46-334"></span>
<span id="cb46-335"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-336"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb46-337"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; involves going through the StringTable, so we need to load that parameter</span></span>
<span id="cb46-338"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back into rcx, then resolving the string array address via pStringArray,</span></span>
<span id="cb46-339"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then the relevant STRING offset within the StringArray.Strings structure.</span></span>
<span id="cb46-340"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-341"></span>
<span id="cb46-342">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into rcx.</span></span>
<span id="cb46-343">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb46-344"></span>
<span id="cb46-345">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb46-346">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb46-347">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save STRING ptr.</span></span>
<span id="cb46-348">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Revert the scaling.</span></span>
<span id="cb46-349"></span>
<span id="cb46-350">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb46-351"></span>
<span id="cb46-352"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-353"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb46-354"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb46-355"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string is a prefix match.</span></span>
<span id="cb46-356"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-357"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The slot length is stored in rax at this point, and the search string's</span></span>
<span id="cb46-358"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length is stored in r11.  We know that the search string's length will</span></span>
<span id="cb46-359"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; always be longer than or equal to the slot length at this point, so, we</span></span>
<span id="cb46-360"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; can subtract 16 (currently stored in r10) from rax, and use the resulting</span></span>
<span id="cb46-361"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; value as a loop counter, comparing the search string with the underlying</span></span>
<span id="cb46-362"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string slot byte-by-byte to determine if there's a match.</span></span>
<span id="cb46-363"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-364"></span>
<span id="cb46-365"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx50:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sub</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Subtract 16 from search length.</span></span>
<span id="cb46-366"></span>
<span id="cb46-367"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-368"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up some registers by stashing their values into various xmm offsets.</span></span>
<span id="cb46-369"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-370"></span>
<span id="cb46-371">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rcx register.</span></span>
<span id="cb46-372">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rdx, rcx is now counter.</span></span>
<span id="cb46-373"></span>
<span id="cb46-374"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-375"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the search string buffer and advance it 16 bytes.</span></span>
<span id="cb46-376"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-377"></span>
<span id="cb46-378">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract String into r11.</span></span>
<span id="cb46-379">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer address.</span></span>
<span id="cb46-380">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb46-381"></span>
<span id="cb46-382"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-383"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Loading the slot is more involved as we have to go to the string table, then</span></span>
<span id="cb46-384"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the pStringArray pointer, then the relevant STRING offset within the string</span></span>
<span id="cb46-385"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; array (which requires re-loading the index from xmm5d[3]), then the string</span></span>
<span id="cb46-386"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; buffer from that structure.</span></span>
<span id="cb46-387"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-388"></span>
<span id="cb46-389">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into r8.</span></span>
<span id="cb46-390">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb46-391"></span>
<span id="cb46-392">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb46-393"></span>
<span id="cb46-394">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb46-395">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string table buffer address.</span></span>
<span id="cb46-396">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb46-397"></span>
<span id="cb46-398">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear eax.</span></span>
<span id="cb46-399"></span>
<span id="cb46-400"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-401"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span></span>
<span id="cb46-402"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Do a byte-by-byte comparison.</span></span>
<span id="cb46-403"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-404"></span>
<span id="cb46-405">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb46-406">@@:     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load byte from search string.</span></span>
<span id="cb46-407">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against target.</span></span>
<span id="cb46-408">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jne</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx60                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If not equal, jump.</span></span>
<span id="cb46-409"></span>
<span id="cb46-410"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-411"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The two bytes were equal, update rax, decrement rcx and potentially continue</span></span>
<span id="cb46-412"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the loop.</span></span>
<span id="cb46-413"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-414"></span>
<span id="cb46-415">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Increment index.</span></span>
<span id="cb46-416">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">loopnz</span>      @B                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement cx and loop back.</span></span>
<span id="cb46-417"></span>
<span id="cb46-418"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-419"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span></span>
<span id="cb46-420"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; how many characters we matched, and then jump to Pfx40 for finalization.</span></span>
<span id="cb46-421"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-422"></span>
<span id="cb46-423">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span></span>
<span id="cb46-424">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx40</span>
<span id="cb46-425"></span>
<span id="cb46-426"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-427"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Byte comparisons were not equal.  Restore the rcx loop counter and decrement</span></span>
<span id="cb46-428"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it.  If it's zero, we have no more strings to compare, so we can do a quick</span></span>
<span id="cb46-429"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; exit.  If there are still comparisons to be made, restore the other registers</span></span>
<span id="cb46-430"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we trampled then jump back to the start of the loop Pfx20.</span></span>
<span id="cb46-431"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-432"></span>
<span id="cb46-433"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx60:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rcx counter.</span></span>
<span id="cb46-434">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb46-435">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Jump forward if not zero.</span></span>
<span id="cb46-436"></span>
<span id="cb46-437"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-438"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No more comparisons remaining, return.</span></span>
<span id="cb46-439"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-440"></span>
<span id="cb46-441">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb46-442">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb46-443">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb46-444"></span>
<span id="cb46-445"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-446"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; More comparisons remain; restore the registers we clobbered and continue loop.</span></span>
<span id="cb46-447"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-448"></span>
<span id="cb46-449">@@:     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r10.</span></span>
<span id="cb46-450">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r11.</span></span>
<span id="cb46-451">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb46-452">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Continue comparisons.</span></span>
<span id="cb46-453"></span>
<span id="cb46-454">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb46-455"></span>
<span id="cb46-456">        LEAF_END   IsPrefixOfStringInTable_x64_2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb46-457"></span>
<span id="cb46-458"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></span></code></pre></div>
</div>
<div id="tabset-12-2" class="tab-pane" aria-labelledby="tabset-12-2-tab">
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb47-1">% diff -u IsPrefixOfStringInTable_x64_1.asm IsPrefixOfStringInTable_x64_2.asm</span>
<span id="cb47-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_x64_1.asm   2018-04-29 11:03:46.403568800 -0400</span></span>
<span id="cb47-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_x64_2.asm   2018-04-26 14:15:53.805409700 -0400</span></span>
<span id="cb47-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -50,12 +50,12 @@</span></span>
<span id="cb47-5"> ;</span>
<span id="cb47-6"> ;--</span>
<span id="cb47-7"></span>
<span id="cb47-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_ENTRY IsPrefixOfStringInTable_x64_1, _TEXT$00</span></span>
<span id="cb47-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_ENTRY IsPrefixOfStringInTable_x64_2, _TEXT$00</span></span>
<span id="cb47-10"></span>
<span id="cb47-11"> ;</span>
<span id="cb47-12"> ; Load the string buffer into xmm0, and the unique indexes from the string table</span>
<span id="cb47-13"> ; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span>
<span id="cb47-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; result back into xmm0.</span></span>
<span id="cb47-15"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; result into xmm5.</span></span>
<span id="cb47-16"> ;</span>
<span id="cb47-17"></span>
<span id="cb47-18">         ;IACA_VC_START</span>
<span id="cb47-19"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -63,34 +63,36 @@</span></span>
<span id="cb47-20">         mov     rax, String.Buffer[rdx]</span>
<span id="cb47-21">         vmovdqu xmm0, xmmword ptr [rax]                 ; Load search buffer.</span>
<span id="cb47-22">         vmovdqa xmm1, xmmword ptr StringTable.UniqueIndex[rcx] ; Load indexes.</span>
<span id="cb47-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpshufb xmm0, xmm0, xmm1</span></span>
<span id="cb47-24"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpshufb xmm5, xmm0, xmm1</span></span>
<span id="cb47-25"></span>
<span id="cb47-26"> ;</span>
<span id="cb47-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Load the string table's unique character array into xmm2, and the lengths for</span></span>
<span id="cb47-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; each string slot into xmm3.</span></span>
<span id="cb47-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb47-30"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the string table's unique character array into xmm2.</span></span>
<span id="cb47-31"></span>
<span id="cb47-32">         vmovdqa xmm2, xmmword ptr StringTable.UniqueChars[rcx]  ; Load chars.</span>
<span id="cb47-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vmovdqa xmm3, xmmword ptr StringTable.Lengths[rcx]      ; Load lengths.</span></span>
<span id="cb47-34"></span>
<span id="cb47-35"> ;</span>
<span id="cb47-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Set xmm5 to all ones.  This is used later.</span></span>
<span id="cb47-37"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb47-38"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb47-39"> ;</span>
<span id="cb47-40"></span>
<span id="cb47-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpcmpeqq    xmm5, xmm5, xmm5                    ; Set xmm5 to all ones.</span></span>
<span id="cb47-42"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpcmpeqb    xmm5, xmm5, xmm2            ; Compare unique chars.</span></span>
<span id="cb47-43"></span>
<span id="cb47-44"> ;</span>
<span id="cb47-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb47-46"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb47-47"> ;</span>
<span id="cb47-48"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vmovdqa xmm3, xmmword ptr StringTable.Lengths[rcx]      ; Load lengths.</span></span>
<span id="cb47-49"></span>
<span id="cb47-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpbroadcastb xmm4, byte ptr String.Length[rdx]  ; Broadcast length.</span></span>
<span id="cb47-51"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-52"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Set xmm2 to all ones.  We use this later to invert the length comparison.</span></span>
<span id="cb47-53"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-54"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-55"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpcmpeqq    xmm2, xmm2, xmm2            ; Set xmm2 to all ones.</span></span>
<span id="cb47-56"></span>
<span id="cb47-57"> ;</span>
<span id="cb47-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Compare the search string's unique character array (xmm0) against the string</span></span>
<span id="cb47-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; table's unique chars (xmm2), saving the result back into xmm0.</span></span>
<span id="cb47-60"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb47-61"> ;</span>
<span id="cb47-62"></span>
<span id="cb47-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpcmpeqb    xmm0, xmm0, xmm2            ; Compare unique chars.</span></span>
<span id="cb47-64"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpbroadcastb xmm4, byte ptr String.Length[rdx]  ; Broadcast length.</span></span>
<span id="cb47-65"></span>
<span id="cb47-66"> ;</span>
<span id="cb47-67"> ; Compare the search string's length, which we've broadcasted to all 8-byte</span>
<span id="cb47-68"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -100,30 +102,378 @@</span></span>
<span id="cb47-69"> ; a slot with a length less than or equal to our search string's length.</span>
<span id="cb47-70"> ;</span>
<span id="cb47-71"></span>
<span id="cb47-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpcmpgtb    xmm1, xmm4, xmm3            ; Identify long slots.</span></span>
<span id="cb47-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpxor       xmm1, xmm1, xmm5            ; Invert the result.</span></span>
<span id="cb47-74"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpcmpgtb    xmm1, xmm3, xmm4            ; Identify long slots.</span></span>
<span id="cb47-75"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpxor       xmm1, xmm1, xmm2            ; Invert the result.</span></span>
<span id="cb47-76"></span>
<span id="cb47-77"> ;</span>
<span id="cb47-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Intersect-and-test the unique character match xmm mask register (xmm0) with</span></span>
<span id="cb47-79"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Intersect-and-test the unique character match xmm mask register (xmm5) with</span></span>
<span id="cb47-80"> ; the length match mask xmm register (xmm1).  This affects flags, allowing us</span>
<span id="cb47-81"> ; to do a fast-path exit for the no-match case (where ZF = 1).</span>
<span id="cb47-82"> ;</span>
<span id="cb47-83"></span>
<span id="cb47-84"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vptest      xmm0, xmm1                  ; Check for no match.</span></span>
<span id="cb47-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ;jnz        short @F                    ; There was a match.</span></span>
<span id="cb47-86"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                                                ; (Not yet implemented.)</span></span>
<span id="cb47-87"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vptest      xmm5, xmm1                  ; Check for no match.</span></span>
<span id="cb47-88"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnz         short Pfx10                 ; There was a match.</span></span>
<span id="cb47-89"></span>
<span id="cb47-90"> ;</span>
<span id="cb47-91"> ; No match, set rax to -1 and return.</span>
<span id="cb47-92"> ;</span>
<span id="cb47-93"></span>
<span id="cb47-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        xor         eax, eax                    ;</span></span>
<span id="cb47-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        not         al                          ; rax = -1</span></span>
<span id="cb47-96"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        xor         eax, eax                    ; Clear rax.</span></span>
<span id="cb47-97"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        not         al                          ; al = -1</span></span>
<span id="cb47-98"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; Return.</span></span>
<span id="cb47-99"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-100"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ;IACA_VC_END</span></span>
<span id="cb47-101"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-102"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-103"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; (There was at least one match, continue with processing.)</span></span>
<span id="cb47-104"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-105"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-106"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-107"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Calculate the "search length" for the incoming search string, which is</span></span>
<span id="cb47-108"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; equivalent of 'min(String-&gt;Length, 16)'.  (The search string's length</span></span>
<span id="cb47-109"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; currently lives in xmm4, albeit as a byte-value broadcasted across the</span></span>
<span id="cb47-110"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; entire register, so extract that first.)</span></span>
<span id="cb47-111"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-112"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Once the search length is calculated, deposit it back at the second byte</span></span>
<span id="cb47-113"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; location of xmm4.</span></span>
<span id="cb47-114"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-115"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r10 and xmm4[15:8] - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb47-116"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-117"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r11 - String length (String-&gt;Length)</span></span>
<span id="cb47-118"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-119"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-120"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx10:  vpextrb     r11, xmm4, 0                ; Load length.</span></span>
<span id="cb47-121"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rax, 16                     ; Load 16 into rax.</span></span>
<span id="cb47-122"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r10, r11                    ; Copy into r10.</span></span>
<span id="cb47-123"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmp         r10w, ax                    ; Compare against 16.</span></span>
<span id="cb47-124"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmova       r10w, ax                    ; Use 16 if length is greater.</span></span>
<span id="cb47-125"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrb     xmm4, xmm4, r10d, 1         ; Save back to xmm4b[1].</span></span>
<span id="cb47-126"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-127"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-128"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Home our parameter registers into xmm registers instead of their stack-backed</span></span>
<span id="cb47-129"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; location, to avoid memory writes.</span></span>
<span id="cb47-130"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-131"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-132"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpxor       xmm2, xmm2, xmm2            ; Clear xmm2.</span></span>
<span id="cb47-133"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrq     xmm2, xmm2, rcx, 0          ; Save rcx into xmm2q[0].</span></span>
<span id="cb47-134"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrq     xmm2, xmm2, rdx, 1          ; Save rdx into xmm2q[1].</span></span>
<span id="cb47-135"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-136"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-137"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm5, xmm1'),</span></span>
<span id="cb47-138"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; yielding a mask identifying indices we need to perform subsequent matches</span></span>
<span id="cb47-139"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; upon.  Convert this into a bitmap and save in xmm2d[2].</span></span>
<span id="cb47-140"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-141"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-142"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpand       xmm5, xmm5, xmm1            ; Intersect unique + lengths.</span></span>
<span id="cb47-143"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpmovmskb   edx, xmm5                   ; Generate a bitmap from mask.</span></span>
<span id="cb47-144"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-145"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-146"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; We're finished with xmm5; repurpose it in the same vein as xmm2 above.</span></span>
<span id="cb47-147"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-148"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-149"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpxor       xmm5, xmm5, xmm5            ; Clear xmm5.</span></span>
<span id="cb47-150"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrq     xmm5, xmm5, r8, 0           ; Save r8 into xmm5q[0].</span></span>
<span id="cb47-151"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-152"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-153"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Summary of xmm register stashing for the rest of the routine:</span></span>
<span id="cb47-154"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-155"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; xmm2:</span></span>
<span id="cb47-156"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;        0:63   (vpinsrq 0)     rcx (1st function parameter, StringTable)</span></span>
<span id="cb47-157"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;       64:127  (vpinsrq 1)     rdx (2nd function paramter, String)</span></span>
<span id="cb47-158"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-159"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; xmm4:</span></span>
<span id="cb47-160"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;       0:7     (vpinsrb 0)     length of search string</span></span>
<span id="cb47-161"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16)</span></span>
<span id="cb47-162"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      16:23    (vpinsrb 2)     loop counter (when doing long string compares)</span></span>
<span id="cb47-163"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      24:31    (vpinsrb 3)     shift count</span></span>
<span id="cb47-164"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-165"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; xmm5:</span></span>
<span id="cb47-166"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span></span>
<span id="cb47-167"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      64:95    (vpinsrd 2)     bitmap of slots to compare</span></span>
<span id="cb47-168"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      96:127   (vpinsrd 3)     index of slot currently being processed</span></span>
<span id="cb47-169"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-170"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-171"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-172"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Initialize rcx as our counter register by doing a popcnt against the bitmap</span></span>
<span id="cb47-173"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; we just generated in edx, and clear our shift count register (r9).</span></span>
<span id="cb47-174"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-175"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-176"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        popcnt      ecx, edx                    ; Count bits in bitmap.</span></span>
<span id="cb47-177"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        xor         r9, r9                      ; Clear r9.</span></span>
<span id="cb47-178"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-179"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        align 16</span></span>
<span id="cb47-180"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-181"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-182"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span></span>
<span id="cb47-183"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; trailing zeros of the bitmap, and then add in the shift count, producing an</span></span>
<span id="cb47-184"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; index (rax) we can use to load the corresponding slot.</span></span>
<span id="cb47-185"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-186"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Register usage at top of loop:</span></span>
<span id="cb47-187"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-188"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rax - Index.</span></span>
<span id="cb47-189"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-190"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rcx - Loop counter.</span></span>
<span id="cb47-191"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-192"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rdx - Bitmap initially, then slot length.</span></span>
<span id="cb47-193"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-194"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r9 - Shift count.</span></span>
<span id="cb47-195"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-196"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r10 - Search length.</span></span>
<span id="cb47-197"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-198"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r11 - String length.</span></span>
<span id="cb47-199"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-200"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-201"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx20:  tzcnt       r8d, edx                    ; Count trailing zeros.</span></span>
<span id="cb47-202"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         eax, r8d                    ; Copy tzcnt to rax,</span></span>
<span id="cb47-203"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        add         rax, r9                     ; Add shift to create index.</span></span>
<span id="cb47-204"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        inc         r8                          ; tzcnt + 1</span></span>
<span id="cb47-205"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        shrx        rdx, rdx, r8                ; Reposition bitmap.</span></span>
<span id="cb47-206"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrd     xmm5, xmm5, edx, 2          ; Store bitmap, free up rdx.</span></span>
<span id="cb47-207"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        xor         edx, edx                    ; Clear edx.</span></span>
<span id="cb47-208"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r9, rax                     ; Copy index back to shift.</span></span>
<span id="cb47-209"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        inc         r9                          ; Shift = Index + 1</span></span>
<span id="cb47-210"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrd     xmm5, xmm5, eax, 3          ; Store the raw index xmm5d[3].</span></span>
<span id="cb47-211"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-212"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-213"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span></span>
<span id="cb47-214"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span></span>
<span id="cb47-215"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-216"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Then, load the string table slot at this index into xmm1, then shift rax back.</span></span>
<span id="cb47-217"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-218"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-219"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        shl         eax, 4</span></span>
<span id="cb47-220"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrq     r8, xmm2, 0</span></span>
<span id="cb47-221"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vmovdqa     xmm1, xmmword ptr [rax + StringTable.Slots[r8]]</span></span>
<span id="cb47-222"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        shr         eax, 4</span></span>
<span id="cb47-223"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-224"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-225"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; The search string's first 16 characters are already in xmm0.  Compare this</span></span>
<span id="cb47-226"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; against the slot that has just been loaded into xmm1, storing the result back</span></span>
<span id="cb47-227"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; into xmm1.</span></span>
<span id="cb47-228"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-229"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-230"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpcmpeqb    xmm1, xmm1, xmm0            ; Compare search string to slot.</span></span>
<span id="cb47-231"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-232"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-233"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Convert the XMM mask into a 32-bit representation, then zero high bits after</span></span>
<span id="cb47-234"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; our "search length", which allows us to ignore the results of the comparison</span></span>
<span id="cb47-235"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; above for bytes that were after the search string's length, if applicable.</span></span>
<span id="cb47-236"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Then, count the number of bits remaining, which tells us how many characters</span></span>
<span id="cb47-237"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; we matched.</span></span>
<span id="cb47-238"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-239"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-240"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpmovmskb   r8d, xmm1                   ; Convert into mask.</span></span>
<span id="cb47-241"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        bzhi        r8d, r8d, r10d              ; Zero high bits.</span></span>
<span id="cb47-242"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        popcnt      r8d, r8d                    ; Count bits.</span></span>
<span id="cb47-243"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-244"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-245"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the slot length into rdx.  As xmm3 already has all the slot lengths in</span></span>
<span id="cb47-246"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; it, we can load rax (the current index) into xmm1 and use it to extract the</span></span>
<span id="cb47-247"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; slot length via shuffle.  (The length will be in the lowest byte of xmm1</span></span>
<span id="cb47-248"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; after the shuffle, which we can then vpextrb.)</span></span>
<span id="cb47-249"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-250"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-251"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        movd        xmm1, rax                   ; Load index into xmm1.</span></span>
<span id="cb47-252"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpshufb     xmm1, xmm3, xmm1            ; Shuffle lengths.</span></span>
<span id="cb47-253"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrb     rdx, xmm1, 0                ; Extract target length to rdx.</span></span>
<span id="cb47-254"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-255"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-256"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; If 16 characters matched, and the search string's length is longer than 16,</span></span>
<span id="cb47-257"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; we're going to need to do a comparison of the remaining strings.</span></span>
<span id="cb47-258"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-259"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-260"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmp         r8w, 16                     ; Compare chars matched to 16.</span></span>
<span id="cb47-261"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        je          short @F                    ; 16 chars matched.</span></span>
<span id="cb47-262"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         Pfx30                       ; Less than 16 matched.</span></span>
<span id="cb47-263"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-264"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-265"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; All 16 characters matched.  If the slot length is greater than 16, we need</span></span>
<span id="cb47-266"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; to do an inline memory comparison of the remaining bytes.  If it's 16 exactly,</span></span>
<span id="cb47-267"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; then great, that's a slot match, we're done.</span></span>
<span id="cb47-268"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-269"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-270"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+@@:     cmp         dl, 16                      ; Compare length to 16.</span></span>
<span id="cb47-271"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ja          Pfx50                       ; Length is &gt; 16.</span></span>
<span id="cb47-272"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        je          short Pfx35                 ; Lengths match!</span></span>
<span id="cb47-273"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+                                                ; Length &lt;= 16, fall through...</span></span>
<span id="cb47-274"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-275"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-276"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Less than or equal to 16 characters were matched.  Compare this against the</span></span>
<span id="cb47-277"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; length of the slot; if equal, this is a match, if not, no match, continue.</span></span>
<span id="cb47-278"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-279"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-280"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx30:  cmp         r8b, dl                     ; Compare against slot length.</span></span>
<span id="cb47-281"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jne         @F                          ; No match found.</span></span>
<span id="cb47-282"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         short Pfx35                 ; Match found!</span></span>
<span id="cb47-283"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-284"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-285"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; No match against this slot, decrement counter and either continue the loop</span></span>
<span id="cb47-286"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; or terminate the search and return no match.</span></span>
<span id="cb47-287"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-288"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-289"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+@@:     vpextrd     edx, xmm5, 2                ; Restore rdx bitmap.</span></span>
<span id="cb47-290"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        dec         cx                          ; Decrement counter.</span></span>
<span id="cb47-291"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnz         Pfx20                       ; cx != 0, continue.</span></span>
<span id="cb47-292"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-293"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        xor         eax, eax                    ; Clear rax.</span></span>
<span id="cb47-294"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        not         al                          ; al = -1</span></span>
<span id="cb47-295"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; Return.</span></span>
<span id="cb47-296"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-297"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-298"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span></span>
<span id="cb47-299"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; former is used when we need to copy the number of characters matched from r8</span></span>
<span id="cb47-300"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; back to rax.  The latter jump target doesn't require this.</span></span>
<span id="cb47-301"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-302"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-303"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx35:  mov         rax, r8                     ; Copy numbers of chars matched.</span></span>
<span id="cb47-304"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-305"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-306"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the match parameter back into r8 and test to see if it's not-NULL, in</span></span>
<span id="cb47-307"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; which case we need to fill out a STRING_MATCH structure for the match.</span></span>
<span id="cb47-308"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-309"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-310"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx40:  vpextrq     r8, xmm5, 0                 ; Extract StringMatch.</span></span>
<span id="cb47-311"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        test        r8, r8                      ; Is NULL?</span></span>
<span id="cb47-312"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnz         short @F                    ; Not zero, need to fill out.</span></span>
<span id="cb47-313"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-314"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-315"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; StringMatch is NULL, we're done. Extract index of match back into rax and ret.</span></span>
<span id="cb47-316"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-317"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-318"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrd     eax, xmm5, 3                ; Extract raw index for match.</span></span>
<span id="cb47-319"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; StringMatch == NULL, finish.</span></span>
<span id="cb47-320"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-321"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-322"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span></span>
<span id="cb47-323"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; reload the index from xmm5 into rax and save.</span></span>
<span id="cb47-324"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-325"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-326"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+@@:     mov         byte ptr StringMatch.NumberOfMatchedCharacters[r8], al</span></span>
<span id="cb47-327"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrd     eax, xmm5, 3                ; Extract raw index for match.</span></span>
<span id="cb47-328"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         byte ptr StringMatch.Index[r8], al</span></span>
<span id="cb47-329"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-330"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-331"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb47-332"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; involves going through the StringTable, so we need to load that parameter</span></span>
<span id="cb47-333"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; back into rcx, then resolving the string array address via pStringArray,</span></span>
<span id="cb47-334"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; then the relevant STRING offset within the StringArray.Strings structure.</span></span>
<span id="cb47-335"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-336"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-337"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrq     rcx, xmm2, 0            ; Extract StringTable into rcx.</span></span>
<span id="cb47-338"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rcx, StringTable.pStringArray[rcx] ; Load string array.</span></span>
<span id="cb47-339"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-340"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        shl         eax, 4                  ; Scale the index; sizeof STRING=16.</span></span>
<span id="cb47-341"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        lea         rdx, [rax + StringArray.Strings[rcx]] ; Resolve address.</span></span>
<span id="cb47-342"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         qword ptr StringMatch.String[r8], rdx ; Save STRING ptr.</span></span>
<span id="cb47-343"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        shr         eax, 4                  ; Revert the scaling.</span></span>
<span id="cb47-344"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-345">         ret</span>
<span id="cb47-346"></span>
<span id="cb47-347"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-348"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb47-349"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb47-350"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; string is a prefix match.</span></span>
<span id="cb47-351"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-352"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; The slot length is stored in rax at this point, and the search string's</span></span>
<span id="cb47-353"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; length is stored in r11.  We know that the search string's length will</span></span>
<span id="cb47-354"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; always be longer than or equal to the slot length at this point, so, we</span></span>
<span id="cb47-355"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; can subtract 16 (currently stored in r10) from rax, and use the resulting</span></span>
<span id="cb47-356"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; value as a loop counter, comparing the search string with the underlying</span></span>
<span id="cb47-357"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; string slot byte-by-byte to determine if there's a match.</span></span>
<span id="cb47-358"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-359"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-360"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx50:  sub         rdx, r10                ; Subtract 16 from search length.</span></span>
<span id="cb47-361"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-362"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-363"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Free up some registers by stashing their values into various xmm offsets.</span></span>
<span id="cb47-364"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-365"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-366"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrb     xmm4, xmm4, ecx, 2      ; Free up rcx register.</span></span>
<span id="cb47-367"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rcx, rdx                ; Free up rdx, rcx is now counter.</span></span>
<span id="cb47-368"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-369"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-370"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the search string buffer and advance it 16 bytes.</span></span>
<span id="cb47-371"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-372"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-373"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrq     r11, xmm2, 1            ; Extract String into r11.</span></span>
<span id="cb47-374"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r11, String.Buffer[r11] ; Load buffer address.</span></span>
<span id="cb47-375"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        add         r11, r10                ; Advance buffer 16 bytes.</span></span>
<span id="cb47-376"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-377"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-378"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Loading the slot is more involved as we have to go to the string table, then</span></span>
<span id="cb47-379"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; the pStringArray pointer, then the relevant STRING offset within the string</span></span>
<span id="cb47-380"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; array (which requires re-loading the index from xmm5d[3]), then the string</span></span>
<span id="cb47-381"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; buffer from that structure.</span></span>
<span id="cb47-382"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-383"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-384"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrq     r8, xmm2, 0             ; Extract StringTable into r8.</span></span>
<span id="cb47-385"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r8, StringTable.pStringArray[r8] ; Load string array.</span></span>
<span id="cb47-386"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-387"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        shl         eax, 4                  ; Scale the index; sizeof STRING=16.</span></span>
<span id="cb47-388"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-389"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        lea         r8, [rax + StringArray.Strings[r8]] ; Resolve address.</span></span>
<span id="cb47-390"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r8, String.Buffer[r8]   ; Load string table buffer address.</span></span>
<span id="cb47-391"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        add         r8, r10                 ; Advance buffer 16 bytes.</span></span>
<span id="cb47-392"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-393"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        xor         eax, eax                ; Clear eax.</span></span>
<span id="cb47-394"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-395"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-396"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span></span>
<span id="cb47-397"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Do a byte-by-byte comparison.</span></span>
<span id="cb47-398"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-399"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-400"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        align 16</span></span>
<span id="cb47-401"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+@@:     mov         dl, byte ptr [rax + r11]    ; Load byte from search string.</span></span>
<span id="cb47-402"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmp         dl, byte ptr [rax + r8]     ; Compare against target.</span></span>
<span id="cb47-403"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jne         short Pfx60                 ; If not equal, jump.</span></span>
<span id="cb47-404"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-405"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-406"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; The two bytes were equal, update rax, decrement rcx and potentially continue</span></span>
<span id="cb47-407"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; the loop.</span></span>
<span id="cb47-408"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-409"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-410"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        inc         ax                          ; Increment index.</span></span>
<span id="cb47-411"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        loopnz      @B                          ; Decrement cx and loop back.</span></span>
<span id="cb47-412"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-413"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-414"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span></span>
<span id="cb47-415"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; how many characters we matched, and then jump to Pfx40 for finalization.</span></span>
<span id="cb47-416"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-417"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-418"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        add         rax, r10</span></span>
<span id="cb47-419"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         Pfx40</span></span>
<span id="cb47-420"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-421"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-422"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Byte comparisons were not equal.  Restore the rcx loop counter and decrement</span></span>
<span id="cb47-423"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; it.  If it's zero, we have no more strings to compare, so we can do a quick</span></span>
<span id="cb47-424"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; exit.  If there are still comparisons to be made, restore the other registers</span></span>
<span id="cb47-425"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; we trampled then jump back to the start of the loop Pfx20.</span></span>
<span id="cb47-426"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-427"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-428"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx60:  vpextrb     rcx, xmm4, 2                ; Restore rcx counter.</span></span>
<span id="cb47-429"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        dec         cx                          ; Decrement counter.</span></span>
<span id="cb47-430"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnz         short @F                    ; Jump forward if not zero.</span></span>
<span id="cb47-431"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-432"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-433"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; No more comparisons remaining, return.</span></span>
<span id="cb47-434"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-435"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-436"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        xor         eax, eax                    ; Clear rax.</span></span>
<span id="cb47-437"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        not         al                          ; al = -1</span></span>
<span id="cb47-438"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; Return.</span></span>
<span id="cb47-439"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-440"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-441"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; More comparisons remain; restore the registers we clobbered and continue loop.</span></span>
<span id="cb47-442"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-443"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-444"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+@@:     vpextrb     r10, xmm4, 1                ; Restore r10.</span></span>
<span id="cb47-445"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrb     r11, xmm4, 0                ; Restore r11.</span></span>
<span id="cb47-446"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrd     edx, xmm5, 2                ; Restore rdx bitmap.</span></span>
<span id="cb47-447"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         Pfx20                       ; Continue comparisons.</span></span>
<span id="cb47-448"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-449">         ;IACA_VC_END</span>
<span id="cb47-450"></span>
<span id="cb47-451"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_END   IsPrefixOfStringInTable_x64_1, _TEXT$00</span></span>
<span id="cb47-452"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_END   IsPrefixOfStringInTable_x64_2, _TEXT$00</span></span>
<span id="cb47-453"></span>
<span id="cb47-454"> ; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></code></pre></div>
</div>
</div>
</div>
<p>Looking back on my time logs (shout out to my favorite iPhone app, <a href="https://itunes.apple.com/us/app/hourstracker-hours-and-pay/id336456412?mt=8">HoursTracker</a>!), the routine above took about 8 hours to implement over the course of about two days, give or take. Writing assembly is slow; writing correct assembly is even slower. I generally find that there’s a noticeable hump I need to get over in the first, say, 30 minutes of any assembly programming session, but once you get into the zone, things can start flowing quite nicely. I’m an aggressive debugger user; often, to get started, I’ll write a simple <code>LEAF_ENTRY</code> that looks like this:</p>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb48-1">    LEAF_ENTRY Foo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb48-2">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">int</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb48-3">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span></span>
<span id="cb48-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb48-5">    LEAF_END Foo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span></code></pre></div>
<p>That’ll allow me to attach the debugger and at least inspect the parameter registers so I can write the next couple of instructions. I find it definitely helps get me into the zone quicker.</p>
<p>Anyway, enough about that. Let’s look at performance. Again, this will be an interesting one—other than the optimal negative match logic that I copied from version 1, the sole focus was on getting a working assembly version; I wasn’t giving any thought to performance at this stage.</p>
<p>So, it’ll be interesting to see how it compares to a) version 1 in the negative matching case (it should be very close), and b) against the C versions in the prefix matching case (it hopefully won’t be prohibitively worse).</p>
</section>
<section id="benchmark-x64-2-negative-matching" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-x64-2-negative-matching">Benchmark x64 2: Negative Matching</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-02-Negative-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-02-Negative-v1.svg" class="img-fluid figure-img" alt="Benchmark Negative Match"></a></p>
<figcaption>Benchmark Negative Match</figcaption>
</figure>
</div>
<p>Hmmm, that’s not too bad! We’re very close to version 1 for negative matching, within about 0.5 cycles or so. That sounds about right, given that our initial logic had to be tweaked a bit to play nicer with the rest of the implementation. And we’re still about 3-4 cycles faster than the fastest C version.</p>
<p>What about prefix matching performance?</p>
</section>
<section id="benchmark-x64-2-prefix-matching" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-x64-2-prefix-matching">Benchmark x64 2: Prefix Matching</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-02-v2.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-02-v2.svg" class="img-fluid figure-img" alt="Benchmark Prefix Match"></a></p>
<figcaption>Benchmark Prefix Match</figcaption>
</figure>
</div>
<p>The prefix matching performance isn’t too bad either! We’re definitely slower than the C version, ranging from about 4 cycles to 10 cycles in most cases, with the <code>$INDEX_ALLOCATION</code> input about 13 cycles slower.</p>
<p><a id="oddities"></a> <small> (I’ve just noticed the pattern with regards to the first 8 entries, <code>$AttrDef</code> to <code>$Mft</code>, clocking in at about 18 and 24 cycles respectively. But the next four entries, <code>$Secure</code> to <code>$Cairo</code>, consistently clock in at about 24 and 34 cycles respectively. <code>$Secure</code> is the 9th slot, which puts it at memory offset 192 bytes from the start of the string table. And then the 18 and 24 cycle behavior returns for the last two items, <code>????</code> and <code>.</code>, which are at the end of the string table’s inner slot array. This pattern is prevalent in all of our iterations. Very peculiar! We’ll investigate later.) </small></p>
</section>
<section id="IsPrefixOfStringInTable_x64_3" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_x64_3"><code>IsPrefixOfStringInTable_x64_3</code></h4>
<p>← IsPrefixOfStringInTable_x64_2 | IsPrefixOfStringInTable_x64_4 →</p>
<p><small>(We’re nearly at the end of the first round of iterations, I promise!)</small></p>
<p>Seeing the performance of the second version in assembly, I decided to try whipping up a third version, which would switch from a <code>LEAF_ENTRY</code> to <code>NESTED_ENTRY</code> and use <code>rep cmps</code> for the byte comparison for long strings (instead of the byte-by-byte approach used now).</p>
<p>In order to use <code>rep cmps</code>, you need to use two non-volatile registers, <code>rsi</code> (the source index) and <code>rdi</code> (the destination index). You also need to specify the direction of the comparison, which means mutating the flags, which are also classed as non-volatile, so they need to be pushed to the stack in the prologue and popped back off in the epilogue.</p>
<p>I didn’t really expect this to offer a measurable speedup, but it was a tangible reason to use a <code>NESTED_ENTRY</code>, and otherwise allowed me to stay within the confines of the version 2 implementation.</p>
<p>Let’s take a look at the implementation. At the very least, it’s useful to see how you can go about organizing your prologue in MASM. For <code>NESTED_ENTRY</code> routines, I always define a <code>Locals</code> structure that incorporates the return address and home parameter space for easy access. Mainly because it allows me to write code like this:</p>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb49-1">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>     Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>HomeRcx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our first param.</span></span>
<span id="cb49-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>     Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>HomeRdx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our second param.</span></span>
<span id="cb49-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRsi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rsi.</span></span>
<span id="cb49-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRdi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdi.</span></span></code></pre></div>
<p>Instead of working wiht offsets like this:</p>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb50-1">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">30h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our first param.</span></span>
<span id="cb50-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">38h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our second param.</span></span>
<span id="cb50-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">10h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rsi.</span></span>
<span id="cb50-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdi.</span></span></code></pre></div>
<p>This routine was written last, after version 10 of the C routine, so it incorporates the slightly re-arranged loop logic that proved to be faster for that version. Other than that, the main changes involved converting all the early exit returns in the body of the function to jump to a single exit point, <code>Pfx90</code>, mainly to simplify epilogue exit code.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-13-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-13-1" aria-controls="tabset-13-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-13-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-13-2" aria-controls="tabset-13-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-13-1" class="tab-pane active" aria-labelledby="tabset-13-1-tab">
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb51-1"> % diff -u IsPrefixOfStringInTable_x64_2.asm IsPrefixOfStringInTable_x64_3.asm</span>
<span id="cb51-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_x64_2.asm   2018-04-26 14:15:53.805409700 -0400</span></span>
<span id="cb51-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_x64_3.asm   2018-04-29 16:01:10.033827200 -0400</span></span>
<span id="cb51-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,6 +18,31 @@</span></span>
<span id="cb51-5"></span>
<span id="cb51-6"> include StringTable.inc</span>
<span id="cb51-7"></span>
<span id="cb51-8"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb51-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Define a locals struct for saving flags, rsi and rdi.</span></span>
<span id="cb51-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb51-11"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-12"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Locals struct</span></span>
<span id="cb51-13"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-14"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Padding             dq      ?</span></span>
<span id="cb51-15"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    SavedRdi            dq      ?</span></span>
<span id="cb51-16"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    SavedRsi            dq      ?</span></span>
<span id="cb51-17"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    SavedFlags          dq      ?</span></span>
<span id="cb51-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    ReturnAddress       dq      ?</span></span>
<span id="cb51-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    HomeRcx             dq      ?</span></span>
<span id="cb51-21"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    HomeRdx             dq      ?</span></span>
<span id="cb51-22"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    HomeR8              dq      ?</span></span>
<span id="cb51-23"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    HomeR9              dq      ?</span></span>
<span id="cb51-24"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-25"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Locals ends</span></span>
<span id="cb51-26"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-27"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb51-28"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Exclude the return address onward from the frame calculation size.</span></span>
<span id="cb51-29"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb51-30"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-31"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+LOCALS_SIZE  equ ((sizeof Locals) + (Locals.ReturnAddress - (sizeof Locals)))</span></span>
<span id="cb51-32"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-33"> ;++</span>
<span id="cb51-34"> ;</span>
<span id="cb51-35"> ; STRING_TABLE_INDEX</span>
<span id="cb51-36"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -33,6 +58,14 @@</span></span>
<span id="cb51-37"> ;   search string.  That is, whether any string in the table "starts with</span>
<span id="cb51-38"> ;   or is equal to" the search string.</span>
<span id="cb51-39"> ;</span>
<span id="cb51-40"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   This routine is based off version 2.  It has been converted into a nested</span></span>
<span id="cb51-41"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   entry (version 2 is a leaf entry), and uses 'repe cmpsb' to do the string</span></span>
<span id="cb51-42"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   comparison for long strings (instead of the byte-by-byte comparison used</span></span>
<span id="cb51-43"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   in version 2).  This requires use of the rsi and rdi registers, and the</span></span>
<span id="cb51-44"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   direction flag.  These are all non-volatile registers and thus, must be</span></span>
<span id="cb51-45"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   saved to the stack in the function prologue (hence the need to make this</span></span>
<span id="cb51-46"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   a nested entry).</span></span>
<span id="cb51-47"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb51-48"> ; Arguments:</span>
<span id="cb51-49"> ;</span>
<span id="cb51-50"> ;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span>
<span id="cb51-51"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -50,7 +83,19 @@</span></span>
<span id="cb51-52"> ;</span>
<span id="cb51-53"> ;--</span>
<span id="cb51-54"></span>
<span id="cb51-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_ENTRY IsPrefixOfStringInTable_x64_2, _TEXT$00</span></span>
<span id="cb51-56"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        NESTED_ENTRY IsPrefixOfStringInTable_x64_3, _TEXT$00</span></span>
<span id="cb51-57"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-58"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb51-59"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Begin prologue.  Allocate stack space and save non-volatile registers.</span></span>
<span id="cb51-60"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb51-61"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-62"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        alloc_stack LOCALS_SIZE                     ; Allocate stack space.</span></span>
<span id="cb51-63"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-64"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        push_eflags                                 ; Save flags.</span></span>
<span id="cb51-65"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        save_reg    rsi, Locals.SavedRsi            ; Save non-volatile rsi.</span></span>
<span id="cb51-66"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        save_reg    rdi, Locals.SavedRdi            ; Save non-volatile rdi.</span></span>
<span id="cb51-67"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-68"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        END_PROLOGUE</span></span>
<span id="cb51-69"></span>
<span id="cb51-70"> ;</span>
<span id="cb51-71"> ; Load the string buffer into xmm0, and the unique indexes from the string table</span>
<span id="cb51-72"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -120,7 +165,7 @@</span></span>
<span id="cb51-73"></span>
<span id="cb51-74">         xor         eax, eax                    ; Clear rax.</span>
<span id="cb51-75">         not         al                          ; al = -1</span>
<span id="cb51-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ret                                     ; Return.</span></span>
<span id="cb51-77"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         Pfx90                       ; Return.</span></span>
<span id="cb51-78"></span>
<span id="cb51-79">         ;IACA_VC_END</span>
<span id="cb51-80"></span>
<span id="cb51-81"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -214,7 +259,7 @@</span></span>
<span id="cb51-82"> ;</span>
<span id="cb51-83"> ;   rcx - Loop counter.</span>
<span id="cb51-84"> ;</span>
<span id="cb51-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   rdx - Bitmap initially, then slot length.</span></span>
<span id="cb51-86"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rdx - Bitmap.</span></span>
<span id="cb51-87"> ;</span>
<span id="cb51-88"> ;   r9 - Shift count.</span>
<span id="cb51-89"> ;</span>
<span id="cb51-90"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -228,8 +273,6 @@</span></span>
<span id="cb51-91">         add         rax, r9                     ; Add shift to create index.</span>
<span id="cb51-92">         inc         r8                          ; tzcnt + 1</span>
<span id="cb51-93">         shrx        rdx, rdx, r8                ; Reposition bitmap.</span>
<span id="cb51-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpinsrd     xmm5, xmm5, edx, 2          ; Store bitmap, free up rdx.</span></span>
<span id="cb51-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        xor         edx, edx                    ; Clear edx.</span></span>
<span id="cb51-96">         mov         r9, rax                     ; Copy index back to shift.</span>
<span id="cb51-97">         inc         r9                          ; Shift = Index + 1</span>
<span id="cb51-98">         vpinsrd     xmm5, xmm5, eax, 3          ; Store the raw index xmm5d[3].</span>
<span id="cb51-99"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -252,7 +295,7 @@</span></span>
<span id="cb51-100"> ; into xmm1.</span>
<span id="cb51-101"> ;</span>
<span id="cb51-102"></span>
<span id="cb51-103"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpcmpeqb    xmm1, xmm1, xmm0            ; Compare search string to slot.</span></span>
<span id="cb51-104"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpcmpeqb    xmm1, xmm0, xmm1            ; Compare search string to slot.</span></span>
<span id="cb51-105"></span>
<span id="cb51-106"> ;</span>
<span id="cb51-107"> ; Convert the XMM mask into a 32-bit representation, then zero high bits after</span>
<span id="cb51-108"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -267,17 +310,6 @@</span></span>
<span id="cb51-109">         popcnt      r8d, r8d                    ; Count bits.</span>
<span id="cb51-110"></span>
<span id="cb51-111"> ;</span>
<span id="cb51-112"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Load the slot length into rdx.  As xmm3 already has all the slot lengths in</span></span>
<span id="cb51-113"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; it, we can load rax (the current index) into xmm1 and use it to extract the</span></span>
<span id="cb51-114"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; slot length via shuffle.  (The length will be in the lowest byte of xmm1</span></span>
<span id="cb51-115"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; after the shuffle, which we can then vpextrb.)</span></span>
<span id="cb51-116"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb51-117"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb51-118"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        movd        xmm1, rax                   ; Load index into xmm1.</span></span>
<span id="cb51-119"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpshufb     xmm1, xmm3, xmm1            ; Shuffle lengths.</span></span>
<span id="cb51-120"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpextrb     rdx, xmm1, 0                ; Extract target length to rdx.</span></span>
<span id="cb51-121"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb51-122"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb51-123"> ; If 16 characters matched, and the search string's length is longer than 16,</span>
<span id="cb51-124"> ; we're going to need to do a comparison of the remaining strings.</span>
<span id="cb51-125"> ;</span>
<span id="cb51-126"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -287,37 +319,38 @@</span></span>
<span id="cb51-127">         jmp         Pfx30                       ; Less than 16 matched.</span>
<span id="cb51-128"></span>
<span id="cb51-129"> ;</span>
<span id="cb51-130"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; All 16 characters matched.  If the slot length is greater than 16, we need</span></span>
<span id="cb51-131"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; to do an inline memory comparison of the remaining bytes.  If it's 16 exactly,</span></span>
<span id="cb51-132"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; then great, that's a slot match, we're done.</span></span>
<span id="cb51-133"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; All 16 characters matched.  Load the underlying slot's length from the</span></span>
<span id="cb51-134"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; relevant offset in the xmm3 register, then check to see if it's greater than,</span></span>
<span id="cb51-135"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; equal or less than 16.</span></span>
<span id="cb51-136"> ;</span>
<span id="cb51-137"></span>
<span id="cb51-138"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-@@:     cmp         dl, 16                      ; Compare length to 16.</span></span>
<span id="cb51-139"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+@@:     movd        xmm1, rax                   ; Load into xmm1.</span></span>
<span id="cb51-140"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpshufb     xmm1, xmm3, xmm1            ; Shuffle length...</span></span>
<span id="cb51-141"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrb     rax, xmm1, 0                ; And extract back into rax.</span></span>
<span id="cb51-142"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmp         al, 16                      ; Compare length to 16.</span></span>
<span id="cb51-143">         ja          Pfx50                       ; Length is &gt; 16.</span>
<span id="cb51-144">         je          short Pfx35                 ; Lengths match!</span>
<span id="cb51-145">                                                 ; Length &lt;= 16, fall through...</span>
<span id="cb51-146"></span>
<span id="cb51-147"> ;</span>
<span id="cb51-148"> ; Less than or equal to 16 characters were matched.  Compare this against the</span>
<span id="cb51-149"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; length of the slot; if equal, this is a match, if not, no match, continue.</span></span>
<span id="cb51-150"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; length of the search string; if equal, this is a match.</span></span>
<span id="cb51-151"> ;</span>
<span id="cb51-152"></span>
<span id="cb51-153"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Pfx30:  cmp         r8b, dl                     ; Compare against slot length.</span></span>
<span id="cb51-154"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jne         @F                          ; No match found.</span></span>
<span id="cb51-155"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jmp         short Pfx35                 ; Match found!</span></span>
<span id="cb51-156"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx30:  cmp         r8d, r10d                   ; Compare against search string.</span></span>
<span id="cb51-157"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        je          short Pfx35                 ; Match found!</span></span>
<span id="cb51-158"></span>
<span id="cb51-159"> ;</span>
<span id="cb51-160"> ; No match against this slot, decrement counter and either continue the loop</span>
<span id="cb51-161"> ; or terminate the search and return no match.</span>
<span id="cb51-162"> ;</span>
<span id="cb51-163"></span>
<span id="cb51-164"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-@@:     vpextrd     edx, xmm5, 2                ; Restore rdx bitmap.</span></span>
<span id="cb51-165">         dec         cx                          ; Decrement counter.</span>
<span id="cb51-166">         jnz         Pfx20                       ; cx != 0, continue.</span>
<span id="cb51-167"></span>
<span id="cb51-168">         xor         eax, eax                    ; Clear rax.</span>
<span id="cb51-169">         not         al                          ; al = -1</span>
<span id="cb51-170"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ret                                     ; Return.</span></span>
<span id="cb51-171"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         Pfx90                       ; Return.</span></span>
<span id="cb51-172"></span>
<span id="cb51-173"> ;</span>
<span id="cb51-174"> ; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span>
<span id="cb51-175"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -341,7 +374,7 @@</span></span>
<span id="cb51-176"> ;</span>
<span id="cb51-177"></span>
<span id="cb51-178">         vpextrd     eax, xmm5, 3                ; Extract raw index for match.</span>
<span id="cb51-179"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ret                                     ; StringMatch == NULL, finish.</span></span>
<span id="cb51-180"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         Pfx90                       ; StringMatch == NULL, finish.</span></span>
<span id="cb51-181"></span>
<span id="cb51-182"> ;</span>
<span id="cb51-183"> ; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span>
<span id="cb51-184"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -367,7 +400,7 @@</span></span>
<span id="cb51-185">         mov         qword ptr StringMatch.String[r8], rdx ; Save STRING ptr.</span>
<span id="cb51-186">         shr         eax, 4                  ; Revert the scaling.</span>
<span id="cb51-187"></span>
<span id="cb51-188"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ret</span></span>
<span id="cb51-189"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         Pfx90</span></span>
<span id="cb51-190"></span>
<span id="cb51-191"> ;</span>
<span id="cb51-192"> ; 16 characters matched and the length of the underlying slot is greater than</span>
<span id="cb51-193"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -382,14 +415,15 @@</span></span>
<span id="cb51-194"> ; string slot byte-by-byte to determine if there's a match.</span>
<span id="cb51-195"> ;</span>
<span id="cb51-196"></span>
<span id="cb51-197"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Pfx50:  sub         rdx, r10                ; Subtract 16 from search length.</span></span>
<span id="cb51-198"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx50:  sub         rax, r10                ; Subtract 16 from search length.</span></span>
<span id="cb51-199"></span>
<span id="cb51-200"> ;</span>
<span id="cb51-201"> ; Free up some registers by stashing their values into various xmm offsets.</span>
<span id="cb51-202"> ;</span>
<span id="cb51-203"></span>
<span id="cb51-204"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrd     xmm5, xmm5, edx, 2      ; Free up rdx register.</span></span>
<span id="cb51-205">         vpinsrb     xmm4, xmm4, ecx, 2      ; Free up rcx register.</span>
<span id="cb51-206"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         rcx, rdx                ; Free up rdx, rcx is now counter.</span></span>
<span id="cb51-207"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rcx, rax                ; Free up rax, rcx is now counter.</span></span>
<span id="cb51-208"></span>
<span id="cb51-209"> ;</span>
<span id="cb51-210"> ; Load the search string buffer and advance it 16 bytes.</span>
<span id="cb51-211"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -409,31 +443,27 @@</span></span>
<span id="cb51-212">         vpextrq     r8, xmm2, 0             ; Extract StringTable into r8.</span>
<span id="cb51-213">         mov         r8, StringTable.pStringArray[r8] ; Load string array.</span>
<span id="cb51-214"></span>
<span id="cb51-215"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrd     eax, xmm5, 3            ; Extract index from xmm5.</span></span>
<span id="cb51-216">         shl         eax, 4                  ; Scale the index; sizeof STRING=16.</span>
<span id="cb51-217"></span>
<span id="cb51-218">         lea         r8, [rax + StringArray.Strings[r8]] ; Resolve address.</span>
<span id="cb51-219">         mov         r8, String.Buffer[r8]   ; Load string table buffer address.</span>
<span id="cb51-220">         add         r8, r10                 ; Advance buffer 16 bytes.</span>
<span id="cb51-221"></span>
<span id="cb51-222"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        xor         eax, eax                ; Clear eax.</span></span>
<span id="cb51-223"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rax, rcx                ; Copy counter.</span></span>
<span id="cb51-224"></span>
<span id="cb51-225"> ;</span>
<span id="cb51-226"> ; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span>
<span id="cb51-227"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Do a byte-by-byte comparison.</span></span>
<span id="cb51-228"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Set up rsi/rdi so we can do a 'rep cmps'.</span></span>
<span id="cb51-229"> ;</span>
<span id="cb51-230"></span>
<span id="cb51-231"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        align 16</span></span>
<span id="cb51-232"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-@@:     mov         dl, byte ptr [rax + r11]    ; Load byte from search string.</span></span>
<span id="cb51-233"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        cmp         dl, byte ptr [rax + r8]     ; Compare against target.</span></span>
<span id="cb51-234"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jne         short Pfx60                 ; If not equal, jump.</span></span>
<span id="cb51-235"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb51-236"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb51-237"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; The two bytes were equal, update rax, decrement rcx and potentially continue</span></span>
<span id="cb51-238"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; the loop.</span></span>
<span id="cb51-239"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb51-240"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cld</span></span>
<span id="cb51-241"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rsi, r11</span></span>
<span id="cb51-242"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rdi, r8</span></span>
<span id="cb51-243"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        repe        cmpsb</span></span>
<span id="cb51-244"></span>
<span id="cb51-245"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        inc         ax                          ; Increment index.</span></span>
<span id="cb51-246"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        loopnz      @B                          ; Decrement cx and loop back.</span></span>
<span id="cb51-247"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        test        cl, 0</span></span>
<span id="cb51-248"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnz         short Pfx60                 ; Not all bytes compared, jump.</span></span>
<span id="cb51-249"></span>
<span id="cb51-250"> ;</span>
<span id="cb51-251"> ; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span>
<span id="cb51-252"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -460,7 +490,7 @@</span></span>
<span id="cb51-253"></span>
<span id="cb51-254">         xor         eax, eax                    ; Clear rax.</span>
<span id="cb51-255">         not         al                          ; al = -1</span>
<span id="cb51-256"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ret                                     ; Return.</span></span>
<span id="cb51-257"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp Pfx90                               ; Return.</span></span>
<span id="cb51-258"></span>
<span id="cb51-259"> ;</span>
<span id="cb51-260"> ; More comparisons remain; restore the registers we clobbered and continue loop.</span>
<span id="cb51-261"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -473,7 +503,17 @@</span></span>
<span id="cb51-262"></span>
<span id="cb51-263">         ;IACA_VC_END</span>
<span id="cb51-264"></span>
<span id="cb51-265"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_END   IsPrefixOfStringInTable_x64_2, _TEXT$00</span></span>
<span id="cb51-266"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        align   16</span></span>
<span id="cb51-267"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-268"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx90:  mov     rsi, Locals.SavedRsi[rsp]       ; Restore rsi.</span></span>
<span id="cb51-269"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov     rdi, Locals.SavedRdi[rsp]       ; Restore rdi.</span></span>
<span id="cb51-270"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        popfq                                   ; Restore flags.</span></span>
<span id="cb51-271"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        add     rsp, LOCALS_SIZE                ; Deallocate stack space.</span></span>
<span id="cb51-272"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-273"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret</span></span>
<span id="cb51-274"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-275"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        NESTED_END   IsPrefixOfStringInTable_x64_3, _TEXT$00</span></span>
<span id="cb51-276"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-277"></span>
<span id="cb51-278"> ; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></code></pre></div>
</div>
<div id="tabset-13-2" class="tab-pane" aria-labelledby="tabset-13-2-tab">
<div class="sourceCode" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb52-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Define a locals struct for saving flags, rsi and rdi.</span></span>
<span id="cb52-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-4"></span>
<span id="cb52-5">Locals struct</span>
<span id="cb52-6"></span>
<span id="cb52-7">    Padding             <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-8">    SavedRdi            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-9">    SavedRsi            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-10">    SavedFlags          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-11"></span>
<span id="cb52-12">    ReturnAddress       <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-13">    HomeRcx             <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-14">    HomeRdx             <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-15">    HomeR8              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-16">    HomeR9              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-17"></span>
<span id="cb52-18">Locals ends</span>
<span id="cb52-19"></span>
<span id="cb52-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Exclude the return address onward from the frame calculation size.</span></span>
<span id="cb52-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-23"></span>
<span id="cb52-24">LOCALS_SIZE  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">equ</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>sizeof Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>ReturnAddress <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sizeof Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)))</span></span>
<span id="cb52-25"></span>
<span id="cb52-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;++</span></span>
<span id="cb52-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; STRING_TABLE_INDEX</span></span>
<span id="cb52-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; IsPrefixOfStringInTable_x64_*(</span></span>
<span id="cb52-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING_TABLE StringTable,</span></span>
<span id="cb52-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING String,</span></span>
<span id="cb52-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _Out_opt_ PSTRING_MATCH Match</span></span>
<span id="cb52-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     )</span></span>
<span id="cb52-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Routine Description:</span></span>
<span id="cb52-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb52-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb52-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   or is equal to" the search string.</span></span>
<span id="cb52-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   This routine is based off version 2.  It has been converted into a nested</span></span>
<span id="cb52-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   entry (version 2 is a leaf entry), and uses 'rep cmpsb' to do the string</span></span>
<span id="cb52-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   comparison for long strings (instead of the byte-by-byte comparison used</span></span>
<span id="cb52-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   in version 2).  This requires use of the rsi and rdi registers, and the</span></span>
<span id="cb52-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   direction flag.  These are all non-volatile registers and thus, must be</span></span>
<span id="cb52-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   saved to the stack in the function prologue (hence the need to make this</span></span>
<span id="cb52-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   a nested entry).</span></span>
<span id="cb52-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Arguments:</span></span>
<span id="cb52-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb52-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb52-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       search for.</span></span>
<span id="cb52-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb52-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb52-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb52-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return Value:</span></span>
<span id="cb52-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb52-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;--</span></span>
<span id="cb52-65"></span>
<span id="cb52-66">        NESTED_ENTRY IsPrefixOfStringInTable_x64_3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb52-67"></span>
<span id="cb52-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Begin prologue.  Allocate stack space and save non-volatile registers.</span></span>
<span id="cb52-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-71"></span>
<span id="cb52-72">        alloc_stack LOCALS_SIZE                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Allocate stack space.</span></span>
<span id="cb52-73"></span>
<span id="cb52-74">        push_eflags                                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save flags.</span></span>
<span id="cb52-75">        save_reg    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRsi            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save non-volatile rsi.</span></span>
<span id="cb52-76">        save_reg    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRdi            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save non-volatile rdi.</span></span>
<span id="cb52-77"></span>
<span id="cb52-78">        END_PROLOGUE</span>
<span id="cb52-79"></span>
<span id="cb52-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string buffer into xmm0, and the unique indexes from the string table</span></span>
<span id="cb52-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span></span>
<span id="cb52-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; result into xmm5.</span></span>
<span id="cb52-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-85"></span>
<span id="cb52-86">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_START</span></span>
<span id="cb52-87"></span>
<span id="cb52-88">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb52-89">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb52-90">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load indexes.</span></span>
<span id="cb52-91">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpshufb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb52-92"></span>
<span id="cb52-93"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-94"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string table's unique character array into xmm2.</span></span>
<span id="cb52-95"></span>
<span id="cb52-96">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load chars.</span></span>
<span id="cb52-97"></span>
<span id="cb52-98"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb52-100"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb52-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-102"></span>
<span id="cb52-103">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare unique chars.</span></span>
<span id="cb52-104"></span>
<span id="cb52-105"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-106"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb52-107"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-108">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load lengths.</span></span>
<span id="cb52-109"></span>
<span id="cb52-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-111"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.  We use this later to invert the length comparison.</span></span>
<span id="cb52-112"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-113"></span>
<span id="cb52-114">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpeqq</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.</span></span>
<span id="cb52-115"></span>
<span id="cb52-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb52-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-119"></span>
<span id="cb52-120">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast length.</span></span>
<span id="cb52-121"></span>
<span id="cb52-122"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-123"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb52-124"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb52-125"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table, to find those that are greater in length.  Invert the result, such</span></span>
<span id="cb52-126"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; that we're left with a masked register where each 0xff element indicates</span></span>
<span id="cb52-127"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; a slot with a length less than or equal to our search string's length.</span></span>
<span id="cb52-128"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-129"></span>
<span id="cb52-130">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpgtb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb52-131">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Invert the result.</span></span>
<span id="cb52-132"></span>
<span id="cb52-133"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-134"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect-and-test the unique character match xmm mask register (xmm5) with</span></span>
<span id="cb52-135"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the length match mask xmm register (xmm1).  This affects flags, allowing us</span></span>
<span id="cb52-136"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do a fast-path exit for the no-match case (where ZF = 1).</span></span>
<span id="cb52-137"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-138"></span>
<span id="cb52-139">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vptest</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Check for no match.</span></span>
<span id="cb52-140">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; There was a match.</span></span>
<span id="cb52-141"></span>
<span id="cb52-142"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-143"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match, set rax to -1 and return.</span></span>
<span id="cb52-144"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-145"></span>
<span id="cb52-146">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb52-147">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb52-148">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb52-149"></span>
<span id="cb52-150">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb52-151"></span>
<span id="cb52-152"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-153"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (There was at least one match, continue with processing.)</span></span>
<span id="cb52-154"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-155"></span>
<span id="cb52-156"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-157"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Calculate the "search length" for the incoming search string, which is</span></span>
<span id="cb52-158"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equivalent of 'min(String-&gt;Length, 16)'.  (The search string's length</span></span>
<span id="cb52-159"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; currently lives in xmm4, albeit as a byte-value broadcasted across the</span></span>
<span id="cb52-160"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; entire register, so extract that first.)</span></span>
<span id="cb52-161"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Once the search length is calculated, deposit it back at the second byte</span></span>
<span id="cb52-163"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location of xmm4.</span></span>
<span id="cb52-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 and xmm4[15:8] - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb52-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-167"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length (String-&gt;Length)</span></span>
<span id="cb52-168"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-169"></span>
<span id="cb52-170"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx10:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load length.</span></span>
<span id="cb52-171">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load 16 into rax.</span></span>
<span id="cb52-172">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy into r10.</span></span>
<span id="cb52-173">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against 16.</span></span>
<span id="cb52-174">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmova</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Use 16 if length is greater.</span></span>
<span id="cb52-175">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save back to xmm4b[1].</span></span>
<span id="cb52-176"></span>
<span id="cb52-177"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-178"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our parameter registers into xmm registers instead of their stack-backed</span></span>
<span id="cb52-179"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location, to avoid memory writes.</span></span>
<span id="cb52-180"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-181"></span>
<span id="cb52-182">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm2.</span></span>
<span id="cb52-183">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rcx into xmm2q[0].</span></span>
<span id="cb52-184">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rdx into xmm2q[1].</span></span>
<span id="cb52-185"></span>
<span id="cb52-186"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-187"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm5, xmm1'),</span></span>
<span id="cb52-188"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; yielding a mask identifying indices we need to perform subsequent matches</span></span>
<span id="cb52-189"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; upon.  Convert this into a bitmap and save in xmm2d[2].</span></span>
<span id="cb52-190"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-191"></span>
<span id="cb52-192">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpand</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect unique + lengths.</span></span>
<span id="cb52-193">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Generate a bitmap from mask.</span></span>
<span id="cb52-194"></span>
<span id="cb52-195"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-196"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We're finished with xmm5; repurpose it in the same vein as xmm2 above.</span></span>
<span id="cb52-197"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-198"></span>
<span id="cb52-199">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm5.</span></span>
<span id="cb52-200">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save r8 into xmm5q[0].</span></span>
<span id="cb52-201"></span>
<span id="cb52-202"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-203"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Summary of xmm register stashing for the rest of the routine:</span></span>
<span id="cb52-204"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-205"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm2:</span></span>
<span id="cb52-206"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        0:63   (vpinsrq 0)     rcx (1st function parameter, StringTable)</span></span>
<span id="cb52-207"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       64:127  (vpinsrq 1)     rdx (2nd function paramter, String)</span></span>
<span id="cb52-208"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-209"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm4:</span></span>
<span id="cb52-210"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:7     (vpinsrb 0)     length of search string</span></span>
<span id="cb52-211"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16)</span></span>
<span id="cb52-212"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      16:23    (vpinsrb 2)     loop counter (when doing long string compares)</span></span>
<span id="cb52-213"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      24:31    (vpinsrb 3)     shift count</span></span>
<span id="cb52-214"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-215"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm5:</span></span>
<span id="cb52-216"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span></span>
<span id="cb52-217"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      64:95    (vpinsrd 2)     bitmap of slots to compare</span></span>
<span id="cb52-218"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      96:127   (vpinsrd 3)     index of slot currently being processed</span></span>
<span id="cb52-219"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-220"></span>
<span id="cb52-221"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-222"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Initialize rcx as our counter register by doing a popcnt against the bitmap</span></span>
<span id="cb52-223"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we just generated in edx, and clear our shift count register (r9).</span></span>
<span id="cb52-224"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-225"></span>
<span id="cb52-226">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits in bitmap.</span></span>
<span id="cb52-227">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear r9.</span></span>
<span id="cb52-228"></span>
<span id="cb52-229">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb52-230"></span>
<span id="cb52-231"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-232"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span></span>
<span id="cb52-233"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; trailing zeros of the bitmap, and then add in the shift count, producing an</span></span>
<span id="cb52-234"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; index (rax) we can use to load the corresponding slot.</span></span>
<span id="cb52-235"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-236"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Register usage at top of loop:</span></span>
<span id="cb52-237"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-238"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index.</span></span>
<span id="cb52-239"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-240"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - Loop counter.</span></span>
<span id="cb52-241"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-242"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rdx - Bitmap.</span></span>
<span id="cb52-243"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-244"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - Shift count.</span></span>
<span id="cb52-245"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-246"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 - Search length.</span></span>
<span id="cb52-247"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-248"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length.</span></span>
<span id="cb52-249"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-250"></span>
<span id="cb52-251"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx20:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">tzcnt</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count trailing zeros.</span></span>
<span id="cb52-252">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy tzcnt to rax,</span></span>
<span id="cb52-253">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Add shift to create index.</span></span>
<span id="cb52-254">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; tzcnt + 1</span></span>
<span id="cb52-255">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shrx</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Reposition bitmap.</span></span>
<span id="cb52-256">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy index back to shift.</span></span>
<span id="cb52-257">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shift = Index + 1</span></span>
<span id="cb52-258">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store the raw index xmm5d[3].</span></span>
<span id="cb52-259"></span>
<span id="cb52-260"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-261"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span></span>
<span id="cb52-262"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span></span>
<span id="cb52-263"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-264"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, load the string table slot at this index into xmm1, then shift rax back.</span></span>
<span id="cb52-265"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-266"></span>
<span id="cb52-267">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb52-268">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb52-269">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span></span>
<span id="cb52-270">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb52-271"></span>
<span id="cb52-272"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-273"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The search string's first 16 characters are already in xmm0.  Compare this</span></span>
<span id="cb52-274"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; against the slot that has just been loaded into xmm1, storing the result back</span></span>
<span id="cb52-275"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.</span></span>
<span id="cb52-276"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-277"></span>
<span id="cb52-278">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare search string to slot.</span></span>
<span id="cb52-279"></span>
<span id="cb52-280"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-281"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert the XMM mask into a 32-bit representation, then zero high bits after</span></span>
<span id="cb52-282"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; our "search length", which allows us to ignore the results of the comparison</span></span>
<span id="cb52-283"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; above for bytes that were after the search string's length, if applicable.</span></span>
<span id="cb52-284"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, count the number of bits remaining, which tells us how many characters</span></span>
<span id="cb52-285"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we matched.</span></span>
<span id="cb52-286"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-287"></span>
<span id="cb52-288">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert into mask.</span></span>
<span id="cb52-289">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">bzhi</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Zero high bits.</span></span>
<span id="cb52-290">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits.</span></span>
<span id="cb52-291"></span>
<span id="cb52-292"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-293"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If 16 characters matched, and the search string's length is longer than 16,</span></span>
<span id="cb52-294"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we're going to need to do a comparison of the remaining strings.</span></span>
<span id="cb52-295"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-296"></span>
<span id="cb52-297">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare chars matched to 16.</span></span>
<span id="cb52-298">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 chars matched.</span></span>
<span id="cb52-299">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx30                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than 16 matched.</span></span>
<span id="cb52-300"></span>
<span id="cb52-301"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-302"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All 16 characters matched.  Load the underlying slot's length from the</span></span>
<span id="cb52-303"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; relevant offset in the xmm3 register, then check to see if it's greater than,</span></span>
<span id="cb52-304"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equal or less than 16.</span></span>
<span id="cb52-305"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-306"></span>
<span id="cb52-307">@@:     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">movd</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load into xmm1.</span></span>
<span id="cb52-308">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle length...</span></span>
<span id="cb52-309">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; And extract back into rax.</span></span>
<span id="cb52-310">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare length to 16.</span></span>
<span id="cb52-311">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ja</span>          Pfx50                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length is &gt; 16.</span></span>
<span id="cb52-312">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Lengths match!</span></span>
<span id="cb52-313">                                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length &lt;= 16, fall through...</span></span>
<span id="cb52-314"></span>
<span id="cb52-315"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-316"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than or equal to 16 characters were matched.  Compare this against the</span></span>
<span id="cb52-317"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length of the search string; if equal, this is a match.</span></span>
<span id="cb52-318"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-319"></span>
<span id="cb52-320"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx30:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against search string.</span></span>
<span id="cb52-321">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Match found!</span></span>
<span id="cb52-322"></span>
<span id="cb52-323"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-324"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match against this slot, decrement counter and either continue the loop</span></span>
<span id="cb52-325"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; or terminate the search and return no match.</span></span>
<span id="cb52-326"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-327"></span>
<span id="cb52-328">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb52-329">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; cx != 0, continue.</span></span>
<span id="cb52-330"></span>
<span id="cb52-331">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb52-332">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb52-333">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb52-334"></span>
<span id="cb52-335"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-336"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span></span>
<span id="cb52-337"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; former is used when we need to copy the number of characters matched from r8</span></span>
<span id="cb52-338"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back to rax.  The latter jump target doesn't require this.</span></span>
<span id="cb52-339"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-340"></span>
<span id="cb52-341"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx35:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy numbers of chars matched.</span></span>
<span id="cb52-342"></span>
<span id="cb52-343"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-344"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the match parameter back into r8 and test to see if it's not-NULL, in</span></span>
<span id="cb52-345"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; which case we need to fill out a STRING_MATCH structure for the match.</span></span>
<span id="cb52-346"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-347"></span>
<span id="cb52-348"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx40:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringMatch.</span></span>
<span id="cb52-349">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is NULL?</span></span>
<span id="cb52-350">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not zero, need to fill out.</span></span>
<span id="cb52-351"></span>
<span id="cb52-352"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-353"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is NULL, we're done. Extract index of match back into rax and ret.</span></span>
<span id="cb52-354"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-355"></span>
<span id="cb52-356">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb52-357">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch == NULL, finish.</span></span>
<span id="cb52-358"></span>
<span id="cb52-359"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-360"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span></span>
<span id="cb52-361"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; reload the index from xmm5 into rax and save.</span></span>
<span id="cb52-362"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-363"></span>
<span id="cb52-364">@@:     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>NumberOfMatchedCharacters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb52-365">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb52-366">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb52-367"></span>
<span id="cb52-368"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-369"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb52-370"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; involves going through the StringTable, so we need to load that parameter</span></span>
<span id="cb52-371"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back into rcx, then resolving the string array address via pStringArray,</span></span>
<span id="cb52-372"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then the relevant STRING offset within the StringArray.Strings structure.</span></span>
<span id="cb52-373"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-374"></span>
<span id="cb52-375">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into rcx.</span></span>
<span id="cb52-376">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb52-377"></span>
<span id="cb52-378">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb52-379">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb52-380">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save STRING ptr.</span></span>
<span id="cb52-381">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Revert the scaling.</span></span>
<span id="cb52-382"></span>
<span id="cb52-383">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90</span>
<span id="cb52-384"></span>
<span id="cb52-385"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-386"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb52-387"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb52-388"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string is a prefix match.</span></span>
<span id="cb52-389"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-390"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The slot length is stored in rax at this point, and the search string's</span></span>
<span id="cb52-391"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length is stored in r11.  We know that the search string's length will</span></span>
<span id="cb52-392"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; always be longer than or equal to the slot length at this point, so, we</span></span>
<span id="cb52-393"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; can subtract 16 (currently stored in r10) from rax, and use the resulting</span></span>
<span id="cb52-394"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; value as a loop counter, comparing the search string with the underlying</span></span>
<span id="cb52-395"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string slot byte-by-byte to determine if there's a match.</span></span>
<span id="cb52-396"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-397"></span>
<span id="cb52-398"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx50:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sub</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Subtract 16 from search length.</span></span>
<span id="cb52-399"></span>
<span id="cb52-400"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-401"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up some registers by stashing their values into various xmm offsets.</span></span>
<span id="cb52-402"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-403"></span>
<span id="cb52-404">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rdx register.</span></span>
<span id="cb52-405">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rcx register.</span></span>
<span id="cb52-406">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rax, rcx is now counter.</span></span>
<span id="cb52-407"></span>
<span id="cb52-408"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-409"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the search string buffer and advance it 16 bytes.</span></span>
<span id="cb52-410"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-411"></span>
<span id="cb52-412">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract String into r11.</span></span>
<span id="cb52-413">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer address.</span></span>
<span id="cb52-414">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb52-415"></span>
<span id="cb52-416"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-417"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Loading the slot is more involved as we have to go to the string table, then</span></span>
<span id="cb52-418"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the pStringArray pointer, then the relevant STRING offset within the string</span></span>
<span id="cb52-419"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; array (which requires re-loading the index from xmm5d[3]), then the string</span></span>
<span id="cb52-420"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; buffer from that structure.</span></span>
<span id="cb52-421"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-422"></span>
<span id="cb52-423">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into r8.</span></span>
<span id="cb52-424">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb52-425"></span>
<span id="cb52-426">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract index from xmm5.</span></span>
<span id="cb52-427">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb52-428"></span>
<span id="cb52-429">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb52-430">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string table buffer address.</span></span>
<span id="cb52-431">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb52-432"></span>
<span id="cb52-433">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy counter.</span></span>
<span id="cb52-434"></span>
<span id="cb52-435"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-436"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span></span>
<span id="cb52-437"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set up rsi/rdi so we can do a 'rep cmps'.</span></span>
<span id="cb52-438"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-439"></span>
<span id="cb52-440">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cld</span></span>
<span id="cb52-441">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span></span>
<span id="cb52-442">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span></span>
<span id="cb52-443">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">repe</span>        cmpsb</span>
<span id="cb52-444"></span>
<span id="cb52-445">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb52-446">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx60                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not all bytes compared, jump.</span></span>
<span id="cb52-447"></span>
<span id="cb52-448"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-449"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span></span>
<span id="cb52-450"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; how many characters we matched, and then jump to Pfx40 for finalization.</span></span>
<span id="cb52-451"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-452"></span>
<span id="cb52-453">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span></span>
<span id="cb52-454">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx40</span>
<span id="cb52-455"></span>
<span id="cb52-456"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-457"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Byte comparisons were not equal.  Restore the rcx loop counter and decrement</span></span>
<span id="cb52-458"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it.  If it's zero, we have no more strings to compare, so we can do a quick</span></span>
<span id="cb52-459"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; exit.  If there are still comparisons to be made, restore the other registers</span></span>
<span id="cb52-460"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we trampled then jump back to the start of the loop Pfx20.</span></span>
<span id="cb52-461"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-462"></span>
<span id="cb52-463"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx60:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rcx counter.</span></span>
<span id="cb52-464">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb52-465">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Jump forward if not zero.</span></span>
<span id="cb52-466"></span>
<span id="cb52-467"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-468"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No more comparisons remaining, return.</span></span>
<span id="cb52-469"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-470"></span>
<span id="cb52-471">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb52-472">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb52-473">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span> Pfx90                               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb52-474"></span>
<span id="cb52-475"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-476"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; More comparisons remain; restore the registers we clobbered and continue loop.</span></span>
<span id="cb52-477"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-478"></span>
<span id="cb52-479">@@:     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r10.</span></span>
<span id="cb52-480">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r11.</span></span>
<span id="cb52-481">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb52-482">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Continue comparisons.</span></span>
<span id="cb52-483"></span>
<span id="cb52-484">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb52-485"></span>
<span id="cb52-486">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">align</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb52-487"></span>
<span id="cb52-488"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx90:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRsi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rsi.</span></span>
<span id="cb52-489">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRdi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdi.</span></span>
<span id="cb52-490">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">popfq</span>                                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore flags.</span></span>
<span id="cb52-491">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">add</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LOCALS_SIZE                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Deallocate stack space.</span></span>
<span id="cb52-492"></span>
<span id="cb52-493">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb52-494"></span>
<span id="cb52-495">        NESTED_END   IsPrefixOfStringInTable_x64_3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb52-496"></span>
<span id="cb52-497"></span>
<span id="cb52-498"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></span></code></pre></div>
</div>
</div>
</div>
<p>I don’t have a strong hunch as to how this will perform; like I said earlier, it was mainly done to set up the scaffolding for using a <code>NESTED_ENTRY</code> in the future, such that we’ll have the glue in place if we want to iterate on the disassembly of the PGO versions. If I had to guess, I suspect it will be slightly slower than version 2, but surely not by much, right? It’s a pretty minor change in the grand scheme of things. Let’s take a look.</p>
</section>
<section id="benchmark-x64-3" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-x64-3">Benchmark x64 3</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-03-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-03-v1.svg" class="img-fluid figure-img" alt="Benchmark x64 3"></a></p>
<figcaption>Benchmark x64 3</figcaption>
</figure>
</div>
<p>Hah! Version 3 is much, much worse! Even its negative matching performance is terrible, which is the one thing the assembly versions have been good at so far. How peculiar.</p>
<p>Now, in the interest of keeping events chronological, as much as I’d like to dive in now and figure out why, I’ll have to defer to my behavior when I encountered this performance gap: I laughed, shelved the version 3 experiment, and moved on.</p>
<p>That’s a decidedly unsatisfying end to the matter, though, I’ll admit. We’ll come back to it later in the article and try and get some closure as to why it was so slow, comparatively.</p>
</section>
</section>
<section id="internet-feedback" class="level3">
<h3 class="anchored" data-anchor-id="internet-feedback">Internet Feedback</h3>
<p>So, at this point, with version 10 of the C routine and version 2 of the assembly version in hand, and a very early draft of this article, I solicited <a href="https://twitter.com/trentnelson/status/985715037934440448">feedback on Twitter</a> and got some great responses. Thanks again to <a href="https://twitter.com/rygorous">Fabian Giesen</a>, <a href="https://twitter.com/pshufb">Wojciech Muła</a>, <a href="https://twitter.com/geofflangdale">Geoff Langdale</a>, <a href="https://twitter.com/lemire">Daniel Lemire</a>, and <a href="https://twitter.com/KendallWillets">Kendall Willets</a> for their discussion and input over the course of a few days!</p>
<hr>
</section>
</section>
<section id="round2" class="level2">
<h2 class="anchored" data-anchor-id="round2">Round 2—Post-Internet Feedback</h2>
<p>Let’s take a look at the iterations that came about after receiving feedback.</p>
<section id="c-implementations-1" class="level3">
<h3 class="anchored" data-anchor-id="c-implementations-1">C Implementations</h3>
<section id="IsPrefixOfStringInTable_11" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_11"><code>IsPrefixOfStringInTable_11</code></h4>
<p>← IsPrefixOfStringInTable_10 | IsPrefixOfStringInTable_12 →</p>
<p>Both <a href="https://twitter.com/rygorous">Fabian Giesen</a> and <a href="https://twitter.com/pshufb">Wojciech Muła</a> pointed out that we could use <code>_mm_andnot_si128()</code> to avoid the need to invert the results of the <code>IncludeSlotsByLength</code> XMM register (via <code>_mm_xor_si128()</code>). Let’s try that.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-14-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-14-1" aria-controls="tabset-14-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-14-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-14-2" aria-controls="tabset-14-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-14-1" class="tab-pane active" aria-labelledby="tabset-14-1-tab">
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb53-1">% diff -u IsPrefixOfStringInTable_10.c IsPrefixOfStringInTable_11.c</span>
<span id="cb53-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_10.c        2018-04-26 10:38:09.357890400 -0400</span></span>
<span id="cb53-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_11.c        2018-04-26 12:43:44.184528000 -0400</span></span>
<span id="cb53-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,7 +18,7 @@</span></span>
<span id="cb53-5"></span>
<span id="cb53-6"> _Use_decl_annotations_</span>
<span id="cb53-7"> STRING_TABLE_INDEX</span>
<span id="cb53-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_10(</span></span>
<span id="cb53-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_11(</span></span>
<span id="cb53-10">     PSTRING_TABLE StringTable,</span>
<span id="cb53-11">     PSTRING String,</span>
<span id="cb53-12">     PSTRING_MATCH Match</span>
<span id="cb53-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,8 +31,8 @@</span></span>
<span id="cb53-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb53-15">     or is equal to" the search string.</span>
<span id="cb53-16"></span>
<span id="cb53-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This version is based off version 8, but rewrites the inner loop that</span></span>
<span id="cb53-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    checks for comparisons.</span></span>
<span id="cb53-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This version is based off version 10, but with the vpandn used at the</span></span>
<span id="cb53-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    end of the initial test, as suggested by Wojciech Mula (@pshufb).</span></span>
<span id="cb53-21"></span>
<span id="cb53-22"> Arguments:</span>
<span id="cb53-23"></span>
<span id="cb53-24"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -70,9 +70,7 @@</span></span>
<span id="cb53-25">     XMMWORD TableUniqueChars;</span>
<span id="cb53-26">     XMMWORD IncludeSlotsByUniqueChar;</span>
<span id="cb53-27">     XMMWORD IgnoreSlotsByLength;</span>
<span id="cb53-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    XMMWORD IncludeSlotsByLength;</span></span>
<span id="cb53-29">     XMMWORD IncludeSlots;</span>
<span id="cb53-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    const XMMWORD AllOnesXmm = _mm_set1_epi8(0xff);</span></span>
<span id="cb53-31"></span>
<span id="cb53-32">     //</span>
<span id="cb53-33">     // Unconditionally do the following five operations before checking any of</span>
<span id="cb53-34"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -158,28 +156,25 @@</span></span>
<span id="cb53-35">     // N.B. Because we default the length of empty slots to 0x7f, they will</span>
<span id="cb53-36">     //      handily be included in the ignored set (i.e. their words will also</span>
<span id="cb53-37">     //      be set to 0xff), which means they'll also get filtered out when</span>
<span id="cb53-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //      we invert the mask shortly after.</span></span>
<span id="cb53-39"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      we do the "and not" intersection with the include slots next.</span></span>
<span id="cb53-40">     //</span>
<span id="cb53-41"></span>
<span id="cb53-42">     IgnoreSlotsByLength = _mm_cmpgt_epi8(Lengths.SlotsXmm, LengthXmm);</span>
<span id="cb53-43"></span>
<span id="cb53-44">     //</span>
<span id="cb53-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb53-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb53-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb53-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb53-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb53-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    IncludeSlotsByLength = _mm_xor_si128(IgnoreSlotsByLength, AllOnesXmm);</span></span>
<span id="cb53-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb53-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb53-53">     // We're now ready to intersect the two XMM registers to determine which</span>
<span id="cb53-54">     // slots should still be included in the comparison (i.e. which slots have</span>
<span id="cb53-55">     // the exact same unique character as the string and a length less than or</span>
<span id="cb53-56">     // equal to the length of the search string).</span>
<span id="cb53-57">     //</span>
<span id="cb53-58"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // As the IgnoreSlotsByLength XMM register is the inverse of what we want</span></span>
<span id="cb53-59"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // at the moment (we want 0xff for slots to include, and 0x00 for slots</span></span>
<span id="cb53-60"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // to ignore; it's currently the other way around), we use _mm_andnot_si128</span></span>
<span id="cb53-61"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // instead of just _mm_and_si128.</span></span>
<span id="cb53-62"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb53-63"></span>
<span id="cb53-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    IncludeSlots = _mm_and_si128(IncludeSlotsByUniqueChar,</span></span>
<span id="cb53-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                                 IncludeSlotsByLength);</span></span>
<span id="cb53-66"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    IncludeSlots = _mm_andnot_si128(IgnoreSlotsByLength,</span></span>
<span id="cb53-67"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+                                    IncludeSlotsByUniqueChar);</span></span>
<span id="cb53-68"></span>
<span id="cb53-69">     //</span>
<span id="cb53-70">     // Generate a mask.</span></code></pre></div>
</div>
<div id="tabset-14-2" class="tab-pane" aria-labelledby="tabset-14-2-tab">
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb54-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb54-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb54-3">IsPrefixOfStringInTable_11<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb54-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb54-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb54-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb54-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb54-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb54-9"></span>
<span id="cb54-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb54-11"></span>
<span id="cb54-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb54-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb54-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb54-15"></span>
<span id="cb54-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This version is based off version 10, but with the vpandn used at the</span></span>
<span id="cb54-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    end of the initial test, as suggested by Wojciech Mula (@pshufb).</span></span>
<span id="cb54-18"></span>
<span id="cb54-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb54-20"></span>
<span id="cb54-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb54-22"></span>
<span id="cb54-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb54-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb54-25"></span>
<span id="cb54-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb54-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb54-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb54-29"></span>
<span id="cb54-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb54-31"></span>
<span id="cb54-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb54-33"></span>
<span id="cb54-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb54-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-56"></span>
<span id="cb54-57">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-58">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb54-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb54-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb54-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb54-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb54-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb54-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb54-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb54-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb54-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb54-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb54-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb54-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb54-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb54-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb54-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb54-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb54-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb54-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb54-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb54-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb54-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb54-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb54-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb54-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-90"></span>
<span id="cb54-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb54-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-94"></span>
<span id="cb54-95">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-96"></span>
<span id="cb54-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb54-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb54-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-101"></span>
<span id="cb54-102">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb54-103">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-104"></span>
<span id="cb54-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb54-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-108"></span>
<span id="cb54-109">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-110"></span>
<span id="cb54-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb54-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-114"></span>
<span id="cb54-115">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-116"></span>
<span id="cb54-117">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-118">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb54-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-120"></span>
<span id="cb54-121">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-122">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-123"></span>
<span id="cb54-124">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb54-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb54-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb54-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb54-129">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb54-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-131"></span>
<span id="cb54-132">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-133"></span>
<span id="cb54-134">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-135">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb54-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb54-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb54-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb54-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb54-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we do the "and not" intersection with the include slots next.</span></span>
<span id="cb54-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-143"></span>
<span id="cb54-144">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-145"></span>
<span id="cb54-146">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-147">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb54-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb54-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb54-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb54-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// As the IgnoreSlotsByLength XMM register is the inverse of what we want</span></span>
<span id="cb54-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// at the moment (we want 0xff for slots to include, and 0x00 for slots</span></span>
<span id="cb54-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to ignore; it's currently the other way around), we use _mm_andnot_si128</span></span>
<span id="cb54-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// instead of just _mm_and_si128.</span></span>
<span id="cb54-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-157"></span>
<span id="cb54-158">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_andnot_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb54-159">                                    IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-160"></span>
<span id="cb54-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb54-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-164"></span>
<span id="cb54-165">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-166"></span>
<span id="cb54-167">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-168"></span>
<span id="cb54-169">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-170">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb54-171">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb54-172">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb54-173">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-174"></span>
<span id="cb54-175">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-176">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-177"></span>
<span id="cb54-178">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb54-180">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb54-181">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-182"></span>
<span id="cb54-183">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-184"></span>
<span id="cb54-185">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-186">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb54-187">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb54-188">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-189"></span>
<span id="cb54-190">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-191"></span>
<span id="cb54-192">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-193"></span>
<span id="cb54-194">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-195">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb54-196">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb54-197">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-198"></span>
<span id="cb54-199">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-200">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-201"></span>
<span id="cb54-202">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-203">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb54-204">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb54-205">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb54-206">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-207"></span>
<span id="cb54-208">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-209">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-210"></span>
<span id="cb54-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-212">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb54-213">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-214"></span>
<span id="cb54-215">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-216">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb54-217"></span>
<span id="cb54-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-219">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb54-220">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-221"></span>
<span id="cb54-222">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-223"></span>
<span id="cb54-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb54-226">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb54-227">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb54-228">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb54-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb54-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb54-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb54-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb54-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb54-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-235"></span>
<span id="cb54-236">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-237"></span>
<span id="cb54-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb54-240">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-241"></span>
<span id="cb54-242">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-243"></span>
<span id="cb54-244">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-245"></span>
<span id="cb54-246">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-247">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The slot length is longer than the number of characters matched</span></span>
<span id="cb54-248">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// from the search string; this isn't a prefix match.  Continue.</span></span>
<span id="cb54-249">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-250"></span>
<span id="cb54-251">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-252">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-253"></span>
<span id="cb54-254">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-255"></span>
<span id="cb54-256">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-257">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb54-258">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb54-259">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb54-260">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-261"></span>
<span id="cb54-262">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb54-263"></span>
<span id="cb54-264">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-265"></span>
<span id="cb54-266">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-267"></span>
<span id="cb54-268">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-269">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb54-270">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-271"></span>
<span id="cb54-272">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-273">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-274">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-275"></span>
<span id="cb54-276">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-277">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb54-278">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb54-279">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb54-280">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-281"></span>
<span id="cb54-282">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-283"></span>
<span id="cb54-284">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-285">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-286">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb54-287"></span>
<span id="cb54-288">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-289"></span>
<span id="cb54-290">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-291"></span>
<span id="cb54-292">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-293"></span>
<span id="cb54-294">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-295">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb54-296">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-297"></span>
<span id="cb54-298">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb54-299"></span>
<span id="cb54-300">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-301"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
<p>We’re only shaving one instruction off here, so the performance gain, if any, should be very modest.</p>
</section>
<section id="benchmark-11" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-11">Benchmark 11</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-11-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-11-v1.svg" class="img-fluid figure-img" alt="Benchmark 11"></a></p>
<figcaption>Benchmark 11</figcaption>
</figure>
</div>
<p>Definitely a slight improvement over version 10 in most cases!</p>
<hr>
</section>
<section id="IsPrefixOfStringInTable_x64_4" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_x64_4"><code>IsPrefixOfStringInTable_x64_4</code></h4>
<p>← IsPrefixOfStringInTable_x64_3 | IsPrefixOfStringInTable_x64_5 →</p>
<p>Something I didn’t know about <code>vptest</code> that Fabian pointed out is that it actually does two operations. The first essentially does an AND of the two input registers and sets the zero flag (ZF=1) if the result is all 0s. We’ve been using that aspect in the assembly version up to now.</p>
<p>However, it also does the equivalent of <code>(xmm0 and (not xmm1))</code>, and sets the carry flag (CY=1) if that expression evaluates to all zeros. That’s handy, because it’s exactly the expression we want to do!</p>
<p>So, let’s take version 2 of our assembly routine, remove the <code>vpxor</code> bit, and re-arrange the <code>vptest</code> inputs such that we can do a <code>jnc</code> instead of <code>jnz</code>:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-15-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-15-1" aria-controls="tabset-15-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-15-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-15-2" aria-controls="tabset-15-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-15-1" class="tab-pane active" aria-labelledby="tabset-15-1-tab">
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb55-1">% diff -u IsPrefixOfStringInTable_x64_2.asm IsPrefixOfStringInTable_x64_4.asm</span>
<span id="cb55-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_x64_2.asm   2018-04-26 14:15:53.805409700 -0400</span></span>
<span id="cb55-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_x64_4.asm   2018-04-26 14:16:37.909717200 -0400</span></span>
<span id="cb55-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -33,6 +33,10 @@</span></span>
<span id="cb55-5"> ;   search string.  That is, whether any string in the table "starts with</span>
<span id="cb55-6"> ;   or is equal to" the search string.</span>
<span id="cb55-7"> ;</span>
<span id="cb55-8"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   This routine is based off version 2, but leverages the fact that</span></span>
<span id="cb55-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   vptest sets the carry flag if '(xmm0 and (not xmm1))' evaluates</span></span>
<span id="cb55-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   to all 0s, avoiding the the need to do the pxor or pandn steps.</span></span>
<span id="cb55-11"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb55-12"> ; Arguments:</span>
<span id="cb55-13"> ;</span>
<span id="cb55-14"> ;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span>
<span id="cb55-15"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -50,7 +54,7 @@</span></span>
<span id="cb55-16"> ;</span>
<span id="cb55-17"> ;--</span>
<span id="cb55-18"></span>
<span id="cb55-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_ENTRY IsPrefixOfStringInTable_x64_2, _TEXT$00</span></span>
<span id="cb55-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_ENTRY IsPrefixOfStringInTable_x64_4, _TEXT$00</span></span>
<span id="cb55-21"></span>
<span id="cb55-22"> ;</span>
<span id="cb55-23"> ; Load the string buffer into xmm0, and the unique indexes from the string table</span>
<span id="cb55-24"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -83,12 +87,6 @@</span></span>
<span id="cb55-25">         vmovdqa xmm3, xmmword ptr StringTable.Lengths[rcx]      ; Load lengths.</span>
<span id="cb55-26"></span>
<span id="cb55-27"> ;</span>
<span id="cb55-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Set xmm2 to all ones.  We use this later to invert the length comparison.</span></span>
<span id="cb55-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb55-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb55-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpcmpeqq    xmm2, xmm2, xmm2            ; Set xmm2 to all ones.</span></span>
<span id="cb55-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb55-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb55-34"> ; Broadcast the byte-sized string length into xmm4.</span>
<span id="cb55-35"> ;</span>
<span id="cb55-36"></span>
<span id="cb55-37"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -103,16 +101,16 @@</span></span>
<span id="cb55-38"> ;</span>
<span id="cb55-39"></span>
<span id="cb55-40">         vpcmpgtb    xmm1, xmm3, xmm4            ; Identify long slots.</span>
<span id="cb55-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpxor       xmm1, xmm1, xmm2            ; Invert the result.</span></span>
<span id="cb55-42"></span>
<span id="cb55-43"> ;</span>
<span id="cb55-44"> ; Intersect-and-test the unique character match xmm mask register (xmm5) with</span>
<span id="cb55-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; the length match mask xmm register (xmm1).  This affects flags, allowing us</span></span>
<span id="cb55-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; to do a fast-path exit for the no-match case (where ZF = 1).</span></span>
<span id="cb55-47"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; the inverted length match mask xmm register (xmm1).  This will set the carry</span></span>
<span id="cb55-48"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; flag (CY = 1) if the result of 'xmm5 and (not xmm1)' is all 0s, which allows</span></span>
<span id="cb55-49"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; us to do a fast-path exit for the no-match case.</span></span>
<span id="cb55-50"> ;</span>
<span id="cb55-51"></span>
<span id="cb55-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vptest      xmm5, xmm1                  ; Check for no match.</span></span>
<span id="cb55-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jnz         short Pfx10                 ; There was a match.</span></span>
<span id="cb55-54"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vptest      xmm1, xmm5                  ; Check for no match.</span></span>
<span id="cb55-55"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnc         short Pfx10                 ; There was a match.</span></span>
<span id="cb55-56"></span>
<span id="cb55-57"> ;</span>
<span id="cb55-58"> ; No match, set rax to -1 and return.</span>
<span id="cb55-59"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -159,12 +157,12 @@</span></span>
<span id="cb55-60">         vpinsrq     xmm2, xmm2, rdx, 1          ; Save rdx into xmm2q[1].</span>
<span id="cb55-61"></span>
<span id="cb55-62"> ;</span>
<span id="cb55-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm5, xmm1'),</span></span>
<span id="cb55-64"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm1, xmm5'),</span></span>
<span id="cb55-65"> ; yielding a mask identifying indices we need to perform subsequent matches</span>
<span id="cb55-66"> ; upon.  Convert this into a bitmap and save in xmm2d[2].</span>
<span id="cb55-67"> ;</span>
<span id="cb55-68"></span>
<span id="cb55-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpand       xmm5, xmm5, xmm1            ; Intersect unique + lengths.</span></span>
<span id="cb55-70"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpandn      xmm5, xmm1, xmm5            ; Intersect unique + lengths.</span></span>
<span id="cb55-71">         vpmovmskb   edx, xmm5                   ; Generate a bitmap from mask.</span>
<span id="cb55-72"></span>
<span id="cb55-73"> ;</span>
<span id="cb55-74"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -473,7 +471,7 @@</span></span>
<span id="cb55-75"></span>
<span id="cb55-76">         ;IACA_VC_END</span>
<span id="cb55-77"></span>
<span id="cb55-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_END   IsPrefixOfStringInTable_x64_2, _TEXT$00</span></span>
<span id="cb55-79"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_END   IsPrefixOfStringInTable_x64_4, _TEXT$00</span></span>
<span id="cb55-80"></span>
<span id="cb55-81"> ; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></code></pre></div>
</div>
<div id="tabset-15-2" class="tab-pane" aria-labelledby="tabset-15-2-tab">
<div class="sourceCode" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb56-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;++</span></span>
<span id="cb56-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; STRING_TABLE_INDEX</span></span>
<span id="cb56-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; IsPrefixOfStringInTable_x64_*(</span></span>
<span id="cb56-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING_TABLE StringTable,</span></span>
<span id="cb56-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING String,</span></span>
<span id="cb56-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _Out_opt_ PSTRING_MATCH Match</span></span>
<span id="cb56-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     )</span></span>
<span id="cb56-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Routine Description:</span></span>
<span id="cb56-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb56-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb56-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   or is equal to" the search string.</span></span>
<span id="cb56-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   This routine is based off version 2, but leverages the fact that</span></span>
<span id="cb56-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   vptest sets the carry flag if '(xmm0 and (not xmm1))' evaluates</span></span>
<span id="cb56-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   to all 0s, avoiding the the need to do the pxor or pandn steps.</span></span>
<span id="cb56-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Arguments:</span></span>
<span id="cb56-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb56-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb56-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       search for.</span></span>
<span id="cb56-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb56-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb56-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb56-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return Value:</span></span>
<span id="cb56-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb56-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;--</span></span>
<span id="cb56-36"></span>
<span id="cb56-37">        LEAF_ENTRY IsPrefixOfStringInTable_x64_4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb56-38"></span>
<span id="cb56-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string buffer into xmm0, and the unique indexes from the string table</span></span>
<span id="cb56-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span></span>
<span id="cb56-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; result into xmm5.</span></span>
<span id="cb56-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-44"></span>
<span id="cb56-45">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_START</span></span>
<span id="cb56-46"></span>
<span id="cb56-47">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb56-48">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb56-49">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load indexes.</span></span>
<span id="cb56-50">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpshufb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb56-51"></span>
<span id="cb56-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string table's unique character array into xmm2.</span></span>
<span id="cb56-54"></span>
<span id="cb56-55">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load chars.</span></span>
<span id="cb56-56"></span>
<span id="cb56-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb56-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb56-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-61"></span>
<span id="cb56-62">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare unique chars.</span></span>
<span id="cb56-63"></span>
<span id="cb56-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb56-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-67">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load lengths.</span></span>
<span id="cb56-68"></span>
<span id="cb56-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb56-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-72"></span>
<span id="cb56-73">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast length.</span></span>
<span id="cb56-74"></span>
<span id="cb56-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb56-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb56-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table, to find those that are greater in length.  Invert the result, such</span></span>
<span id="cb56-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; that we're left with a masked register where each 0xff element indicates</span></span>
<span id="cb56-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; a slot with a length less than or equal to our search string's length.</span></span>
<span id="cb56-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-82"></span>
<span id="cb56-83">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpgtb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb56-84"></span>
<span id="cb56-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect-and-test the unique character match xmm mask register (xmm5) with</span></span>
<span id="cb56-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the inverted length match mask xmm register (xmm1).  This will set the carry</span></span>
<span id="cb56-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; flag (CY = 1) if the result of 'xmm5 and (not xmm1)' is all 0s, which allows</span></span>
<span id="cb56-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; us to do a fast-path exit for the no-match case.</span></span>
<span id="cb56-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-91"></span>
<span id="cb56-92">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vptest</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Check for no match.</span></span>
<span id="cb56-93">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnc</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; There was a match.</span></span>
<span id="cb56-94"></span>
<span id="cb56-95"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-96"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match, set rax to -1 and return.</span></span>
<span id="cb56-97"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-98"></span>
<span id="cb56-99">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb56-100">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb56-101">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb56-102"></span>
<span id="cb56-103">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb56-104"></span>
<span id="cb56-105"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-106"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (There was at least one match, continue with processing.)</span></span>
<span id="cb56-107"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-108"></span>
<span id="cb56-109"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Calculate the "search length" for the incoming search string, which is</span></span>
<span id="cb56-111"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equivalent of 'min(String-&gt;Length, 16)'.  (The search string's length</span></span>
<span id="cb56-112"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; currently lives in xmm4, albeit as a byte-value broadcasted across the</span></span>
<span id="cb56-113"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; entire register, so extract that first.)</span></span>
<span id="cb56-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-115"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Once the search length is calculated, deposit it back at the second byte</span></span>
<span id="cb56-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location of xmm4.</span></span>
<span id="cb56-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 and xmm4[15:8] - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb56-119"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-120"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length (String-&gt;Length)</span></span>
<span id="cb56-121"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-122"></span>
<span id="cb56-123"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx10:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load length.</span></span>
<span id="cb56-124">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load 16 into rax.</span></span>
<span id="cb56-125">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy into r10.</span></span>
<span id="cb56-126">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against 16.</span></span>
<span id="cb56-127">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmova</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Use 16 if length is greater.</span></span>
<span id="cb56-128">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save back to xmm4b[1].</span></span>
<span id="cb56-129"></span>
<span id="cb56-130"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-131"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our parameter registers into xmm registers instead of their stack-backed</span></span>
<span id="cb56-132"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location, to avoid memory writes.</span></span>
<span id="cb56-133"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-134"></span>
<span id="cb56-135">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm2.</span></span>
<span id="cb56-136">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rcx into xmm2q[0].</span></span>
<span id="cb56-137">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rdx into xmm2q[1].</span></span>
<span id="cb56-138"></span>
<span id="cb56-139"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-140"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm1, xmm5'),</span></span>
<span id="cb56-141"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; yielding a mask identifying indices we need to perform subsequent matches</span></span>
<span id="cb56-142"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; upon.  Convert this into a bitmap and save in xmm2d[2].</span></span>
<span id="cb56-143"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-144"></span>
<span id="cb56-145">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpandn</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect unique + lengths.</span></span>
<span id="cb56-146">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Generate a bitmap from mask.</span></span>
<span id="cb56-147"></span>
<span id="cb56-148"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-149"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We're finished with xmm5; repurpose it in the same vein as xmm2 above.</span></span>
<span id="cb56-150"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-151"></span>
<span id="cb56-152">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm5.</span></span>
<span id="cb56-153">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save r8 into xmm5q[0].</span></span>
<span id="cb56-154"></span>
<span id="cb56-155"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-156"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Summary of xmm register stashing for the rest of the routine:</span></span>
<span id="cb56-157"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-158"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm2:</span></span>
<span id="cb56-159"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        0:63   (vpinsrq 0)     rcx (1st function parameter, StringTable)</span></span>
<span id="cb56-160"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       64:127  (vpinsrq 1)     rdx (2nd function paramter, String)</span></span>
<span id="cb56-161"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm4:</span></span>
<span id="cb56-163"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:7     (vpinsrb 0)     length of search string</span></span>
<span id="cb56-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16)</span></span>
<span id="cb56-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      16:23    (vpinsrb 2)     loop counter (when doing long string compares)</span></span>
<span id="cb56-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      24:31    (vpinsrb 3)     shift count</span></span>
<span id="cb56-167"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-168"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm5:</span></span>
<span id="cb56-169"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span></span>
<span id="cb56-170"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      64:95    (vpinsrd 2)     bitmap of slots to compare</span></span>
<span id="cb56-171"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      96:127   (vpinsrd 3)     index of slot currently being processed</span></span>
<span id="cb56-172"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-173"></span>
<span id="cb56-174"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-175"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Initialize rcx as our counter register by doing a popcnt against the bitmap</span></span>
<span id="cb56-176"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we just generated in edx, and clear our shift count register (r9).</span></span>
<span id="cb56-177"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-178"></span>
<span id="cb56-179">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits in bitmap.</span></span>
<span id="cb56-180">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear r9.</span></span>
<span id="cb56-181"></span>
<span id="cb56-182">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb56-183"></span>
<span id="cb56-184"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-185"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span></span>
<span id="cb56-186"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; trailing zeros of the bitmap, and then add in the shift count, producing an</span></span>
<span id="cb56-187"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; index (rax) we can use to load the corresponding slot.</span></span>
<span id="cb56-188"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-189"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Register usage at top of loop:</span></span>
<span id="cb56-190"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-191"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index.</span></span>
<span id="cb56-192"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-193"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - Loop counter.</span></span>
<span id="cb56-194"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-195"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rdx - Bitmap initially, then slot length.</span></span>
<span id="cb56-196"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-197"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - Shift count.</span></span>
<span id="cb56-198"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-199"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 - Search length.</span></span>
<span id="cb56-200"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-201"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length.</span></span>
<span id="cb56-202"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-203"></span>
<span id="cb56-204"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx20:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">tzcnt</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count trailing zeros.</span></span>
<span id="cb56-205">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy tzcnt to rax,</span></span>
<span id="cb56-206">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Add shift to create index.</span></span>
<span id="cb56-207">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; tzcnt + 1</span></span>
<span id="cb56-208">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shrx</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Reposition bitmap.</span></span>
<span id="cb56-209">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store bitmap, free up rdx.</span></span>
<span id="cb56-210">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear edx.</span></span>
<span id="cb56-211">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy index back to shift.</span></span>
<span id="cb56-212">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shift = Index + 1</span></span>
<span id="cb56-213">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store the raw index xmm5d[3].</span></span>
<span id="cb56-214"></span>
<span id="cb56-215"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-216"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span></span>
<span id="cb56-217"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span></span>
<span id="cb56-218"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-219"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, load the string table slot at this index into xmm1, then shift rax back.</span></span>
<span id="cb56-220"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-221"></span>
<span id="cb56-222">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb56-223">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb56-224">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vmovdqa</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span></span>
<span id="cb56-225">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb56-226"></span>
<span id="cb56-227"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-228"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The search string's first 16 characters are already in xmm0.  Compare this</span></span>
<span id="cb56-229"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; against the slot that has just been loaded into xmm1, storing the result back</span></span>
<span id="cb56-230"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.</span></span>
<span id="cb56-231"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-232"></span>
<span id="cb56-233">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare search string to slot.</span></span>
<span id="cb56-234"></span>
<span id="cb56-235"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-236"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert the XMM mask into a 32-bit representation, then zero high bits after</span></span>
<span id="cb56-237"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; our "search length", which allows us to ignore the results of the comparison</span></span>
<span id="cb56-238"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; above for bytes that were after the search string's length, if applicable.</span></span>
<span id="cb56-239"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, count the number of bits remaining, which tells us how many characters</span></span>
<span id="cb56-240"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we matched.</span></span>
<span id="cb56-241"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-242"></span>
<span id="cb56-243">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert into mask.</span></span>
<span id="cb56-244">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">bzhi</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Zero high bits.</span></span>
<span id="cb56-245">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits.</span></span>
<span id="cb56-246"></span>
<span id="cb56-247"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-248"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the slot length into rdx.  As xmm3 already has all the slot lengths in</span></span>
<span id="cb56-249"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it, we can load rax (the current index) into xmm1 and use it to extract the</span></span>
<span id="cb56-250"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; slot length via shuffle.  (The length will be in the lowest byte of xmm1</span></span>
<span id="cb56-251"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; after the shuffle, which we can then vpextrb.)</span></span>
<span id="cb56-252"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-253"></span>
<span id="cb56-254">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">movd</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load index into xmm1.</span></span>
<span id="cb56-255">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle lengths.</span></span>
<span id="cb56-256">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract target length to rdx.</span></span>
<span id="cb56-257"></span>
<span id="cb56-258"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-259"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If 16 characters matched, and the search string's length is longer than 16,</span></span>
<span id="cb56-260"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we're going to need to do a comparison of the remaining strings.</span></span>
<span id="cb56-261"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-262"></span>
<span id="cb56-263">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare chars matched to 16.</span></span>
<span id="cb56-264">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 chars matched.</span></span>
<span id="cb56-265">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx30                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than 16 matched.</span></span>
<span id="cb56-266"></span>
<span id="cb56-267"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-268"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All 16 characters matched.  If the slot length is greater than 16, we need</span></span>
<span id="cb56-269"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do an inline memory comparison of the remaining bytes.  If it's 16 exactly,</span></span>
<span id="cb56-270"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then great, that's a slot match, we're done.</span></span>
<span id="cb56-271"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-272"></span>
<span id="cb56-273">@@:     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare length to 16.</span></span>
<span id="cb56-274">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ja</span>          Pfx50                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length is &gt; 16.</span></span>
<span id="cb56-275">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Lengths match!</span></span>
<span id="cb56-276">                                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length &lt;= 16, fall through...</span></span>
<span id="cb56-277"></span>
<span id="cb56-278"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-279"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than or equal to 16 characters were matched.  Compare this against the</span></span>
<span id="cb56-280"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length of the slot; if equal, this is a match, if not, no match, continue.</span></span>
<span id="cb56-281"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-282"></span>
<span id="cb56-283"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx30:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against slot length.</span></span>
<span id="cb56-284">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jne</span>         @F                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match found.</span></span>
<span id="cb56-285">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Match found!</span></span>
<span id="cb56-286"></span>
<span id="cb56-287"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-288"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match against this slot, decrement counter and either continue the loop</span></span>
<span id="cb56-289"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; or terminate the search and return no match.</span></span>
<span id="cb56-290"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-291"></span>
<span id="cb56-292">@@:     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb56-293">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb56-294">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; cx != 0, continue.</span></span>
<span id="cb56-295"></span>
<span id="cb56-296">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb56-297">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb56-298">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb56-299"></span>
<span id="cb56-300"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-301"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span></span>
<span id="cb56-302"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; former is used when we need to copy the number of characters matched from r8</span></span>
<span id="cb56-303"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back to rax.  The latter jump target doesn't require this.</span></span>
<span id="cb56-304"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-305"></span>
<span id="cb56-306"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx35:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy numbers of chars matched.</span></span>
<span id="cb56-307"></span>
<span id="cb56-308"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-309"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the match parameter back into r8 and test to see if it's not-NULL, in</span></span>
<span id="cb56-310"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; which case we need to fill out a STRING_MATCH structure for the match.</span></span>
<span id="cb56-311"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-312"></span>
<span id="cb56-313"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx40:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringMatch.</span></span>
<span id="cb56-314">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is NULL?</span></span>
<span id="cb56-315">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not zero, need to fill out.</span></span>
<span id="cb56-316"></span>
<span id="cb56-317"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-318"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is NULL, we're done. Extract index of match back into rax and ret.</span></span>
<span id="cb56-319"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-320"></span>
<span id="cb56-321">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb56-322">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch == NULL, finish.</span></span>
<span id="cb56-323"></span>
<span id="cb56-324"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-325"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span></span>
<span id="cb56-326"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; reload the index from xmm5 into rax and save.</span></span>
<span id="cb56-327"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-328"></span>
<span id="cb56-329">@@:     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>NumberOfMatchedCharacters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb56-330">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb56-331">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb56-332"></span>
<span id="cb56-333"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-334"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb56-335"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; involves going through the StringTable, so we need to load that parameter</span></span>
<span id="cb56-336"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back into rcx, then resolving the string array address via pStringArray,</span></span>
<span id="cb56-337"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then the relevant STRING offset within the StringArray.Strings structure.</span></span>
<span id="cb56-338"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-339"></span>
<span id="cb56-340">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into rcx.</span></span>
<span id="cb56-341">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb56-342"></span>
<span id="cb56-343">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb56-344">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb56-345">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save STRING ptr.</span></span>
<span id="cb56-346">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Revert the scaling.</span></span>
<span id="cb56-347"></span>
<span id="cb56-348">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb56-349"></span>
<span id="cb56-350"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-351"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb56-352"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb56-353"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string is a prefix match.</span></span>
<span id="cb56-354"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-355"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The slot length is stored in rax at this point, and the search string's</span></span>
<span id="cb56-356"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length is stored in r11.  We know that the search string's length will</span></span>
<span id="cb56-357"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; always be longer than or equal to the slot length at this point, so, we</span></span>
<span id="cb56-358"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; can subtract 16 (currently stored in r10) from rax, and use the resulting</span></span>
<span id="cb56-359"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; value as a loop counter, comparing the search string with the underlying</span></span>
<span id="cb56-360"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string slot byte-by-byte to determine if there's a match.</span></span>
<span id="cb56-361"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-362"></span>
<span id="cb56-363"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx50:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sub</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Subtract 16 from search length.</span></span>
<span id="cb56-364"></span>
<span id="cb56-365"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-366"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up some registers by stashing their values into various xmm offsets.</span></span>
<span id="cb56-367"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-368"></span>
<span id="cb56-369">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rcx register.</span></span>
<span id="cb56-370">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rdx, rcx is now counter.</span></span>
<span id="cb56-371"></span>
<span id="cb56-372"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-373"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the search string buffer and advance it 16 bytes.</span></span>
<span id="cb56-374"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-375"></span>
<span id="cb56-376">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract String into r11.</span></span>
<span id="cb56-377">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer address.</span></span>
<span id="cb56-378">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb56-379"></span>
<span id="cb56-380"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-381"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Loading the slot is more involved as we have to go to the string table, then</span></span>
<span id="cb56-382"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the pStringArray pointer, then the relevant STRING offset within the string</span></span>
<span id="cb56-383"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; array (which requires re-loading the index from xmm5d[3]), then the string</span></span>
<span id="cb56-384"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; buffer from that structure.</span></span>
<span id="cb56-385"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-386"></span>
<span id="cb56-387">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into r8.</span></span>
<span id="cb56-388">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb56-389"></span>
<span id="cb56-390">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb56-391"></span>
<span id="cb56-392">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb56-393">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string table buffer address.</span></span>
<span id="cb56-394">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb56-395"></span>
<span id="cb56-396">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear eax.</span></span>
<span id="cb56-397"></span>
<span id="cb56-398"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-399"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span></span>
<span id="cb56-400"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Do a byte-by-byte comparison.</span></span>
<span id="cb56-401"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-402"></span>
<span id="cb56-403">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb56-404">@@:     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load byte from search string.</span></span>
<span id="cb56-405">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against target.</span></span>
<span id="cb56-406">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jne</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx60                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If not equal, jump.</span></span>
<span id="cb56-407"></span>
<span id="cb56-408"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-409"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The two bytes were equal, update rax, decrement rcx and potentially continue</span></span>
<span id="cb56-410"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the loop.</span></span>
<span id="cb56-411"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-412"></span>
<span id="cb56-413">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Increment index.</span></span>
<span id="cb56-414">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">loopnz</span>      @B                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement cx and loop back.</span></span>
<span id="cb56-415"></span>
<span id="cb56-416"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-417"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span></span>
<span id="cb56-418"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; how many characters we matched, and then jump to Pfx40 for finalization.</span></span>
<span id="cb56-419"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-420"></span>
<span id="cb56-421">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span></span>
<span id="cb56-422">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx40</span>
<span id="cb56-423"></span>
<span id="cb56-424"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-425"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Byte comparisons were not equal.  Restore the rcx loop counter and decrement</span></span>
<span id="cb56-426"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it.  If it's zero, we have no more strings to compare, so we can do a quick</span></span>
<span id="cb56-427"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; exit.  If there are still comparisons to be made, restore the other registers</span></span>
<span id="cb56-428"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we trampled then jump back to the start of the loop Pfx20.</span></span>
<span id="cb56-429"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-430"></span>
<span id="cb56-431"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx60:</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rcx counter.</span></span>
<span id="cb56-432">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb56-433">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Jump forward if not zero.</span></span>
<span id="cb56-434"></span>
<span id="cb56-435"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-436"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No more comparisons remaining, return.</span></span>
<span id="cb56-437"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-438"></span>
<span id="cb56-439">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb56-440">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb56-441">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb56-442"></span>
<span id="cb56-443"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-444"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; More comparisons remain; restore the registers we clobbered and continue loop.</span></span>
<span id="cb56-445"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-446"></span>
<span id="cb56-447">@@:     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r10.</span></span>
<span id="cb56-448">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r11.</span></span>
<span id="cb56-449">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb56-450">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Continue comparisons.</span></span>
<span id="cb56-451"></span>
<span id="cb56-452">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb56-453"></span>
<span id="cb56-454">        LEAF_END   IsPrefixOfStringInTable_x64_4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span></code></pre></div>
</div>
</div>
</div>
<p>Let’s see how that stacks up against the existing version 2 of the assembly routine.</p>
</section>
<section id="benchmark-x64-4" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-x64-4">Benchmark x64 4</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-04-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-04-v1.svg" class="img-fluid figure-img" alt="Benchmark x64 4"></a></p>
<figcaption>Benchmark x64 4</figcaption>
</figure>
</div>
<p>Nice, we’ve shaved an entire cycle off the negative match path! I say that both seriously and sarcastically. A single cycle, wow, stop the press! On the other hand, going from 8 cycles to 7 cycles is usually a lot harder than, say, going from 100,000 cycles to 80,000 cycles. We’re so close to the lower bound, additional cycle improvements are a lot like trying to get blood out of a stone.</p>
<hr>
</section>
<section id="IsPrefixOfStringInTable_12" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_12"><code>IsPrefixOfStringInTable_12</code></h4>
<p>← IsPrefixOfStringInTable_11 | IsPrefixOfStringInTable_13 →</p>
<p>The <code>vptest</code> fast-path exit definitely yielded a repeatable and measurable gain for the assembly version. Let’s replicate it in a C version.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-16-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-16-1" aria-controls="tabset-16-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-16-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-16-2" aria-controls="tabset-16-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-16-1" class="tab-pane active" aria-labelledby="tabset-16-1-tab">
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb57-1">% diff -u IsPrefixOfStringInTable_10.c IsPrefixOfStringInTable_12.c</span>
<span id="cb57-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_10.c        2018-04-26 13:28:06.006627100 -0400</span></span>
<span id="cb57-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_12.c        2018-04-26 17:47:54.970331600 -0400</span></span>
<span id="cb57-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -19,7 +19,7 @@</span></span>
<span id="cb57-5"></span>
<span id="cb57-6"> _Use_decl_annotations_</span>
<span id="cb57-7"> STRING_TABLE_INDEX</span>
<span id="cb57-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_10(</span></span>
<span id="cb57-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_12(</span></span>
<span id="cb57-10">     PSTRING_TABLE StringTable,</span>
<span id="cb57-11">     PSTRING String,</span>
<span id="cb57-12">     PSTRING_MATCH Match</span>
<span id="cb57-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -32,8 +32,15 @@</span></span>
<span id="cb57-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb57-15">     or is equal to" the search string.</span>
<span id="cb57-16"></span>
<span id="cb57-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This version is based off version 8, but rewrites the inner loop that</span></span>
<span id="cb57-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    checks for comparisons.</span></span>
<span id="cb57-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This version is based off version 10, but with factors in the improvements</span></span>
<span id="cb57-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    made to version 4 of the x64 assembly version, thanks to suggestions from</span></span>
<span id="cb57-21"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    both Wojciech Mula (@pshufb) and Fabian Giesen (@rygorous).</span></span>
<span id="cb57-22"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb57-23"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Like version 11, we omit the vpxor to invert the lengths, but instead of</span></span>
<span id="cb57-24"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    an initial vpandn, we leverage the fact that vptest sets the carry flag</span></span>
<span id="cb57-25"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    if all 0s result from the expression: "param1 and (not param2)".  This</span></span>
<span id="cb57-26"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    allows us to do a fast-path early exit (like x64 version 2 does) if no</span></span>
<span id="cb57-27"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    match is found.</span></span>
<span id="cb57-28"></span>
<span id="cb57-29"> Arguments:</span>
<span id="cb57-30"></span>
<span id="cb57-31"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -71,9 +78,7 @@</span></span>
<span id="cb57-32">     XMMWORD TableUniqueChars;</span>
<span id="cb57-33">     XMMWORD IncludeSlotsByUniqueChar;</span>
<span id="cb57-34">     XMMWORD IgnoreSlotsByLength;</span>
<span id="cb57-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    XMMWORD IncludeSlotsByLength;</span></span>
<span id="cb57-36">     XMMWORD IncludeSlots;</span>
<span id="cb57-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    const XMMWORD AllOnesXmm = _mm_set1_epi8(0xff);</span></span>
<span id="cb57-38"></span>
<span id="cb57-39">     //</span>
<span id="cb57-40">     // Unconditionally do the following five operations before checking any of</span>
<span id="cb57-41"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -159,47 +164,58 @@</span></span>
<span id="cb57-42">     // N.B. Because we default the length of empty slots to 0x7f, they will</span>
<span id="cb57-43">     //      handily be included in the ignored set (i.e. their words will also</span>
<span id="cb57-44">     //      be set to 0xff), which means they'll also get filtered out when</span>
<span id="cb57-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //      we invert the mask shortly after.</span></span>
<span id="cb57-46"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      we do the "and not" intersection with the include slots next.</span></span>
<span id="cb57-47">     //</span>
<span id="cb57-48"></span>
<span id="cb57-49">     IgnoreSlotsByLength = _mm_cmpgt_epi8(Lengths.SlotsXmm, LengthXmm);</span>
<span id="cb57-50"></span>
<span id="cb57-51">     //</span>
<span id="cb57-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb57-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb57-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb57-55"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // We can do a fast-path test for no match here via _mm_testc_si128(),</span></span>
<span id="cb57-56"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // which is essentially equivalent to the following logic, just with</span></span>
<span id="cb57-57"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // fewer instructions:</span></span>
<span id="cb57-58">     //</span>
<span id="cb57-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb57-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    IncludeSlotsByLength = _mm_xor_si128(IgnoreSlotsByLength, AllOnesXmm);</span></span>
<span id="cb57-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb57-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb57-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb57-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb57-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // the exact same unique character as the string and a length less than or</span></span>
<span id="cb57-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // equal to the length of the search string).</span></span>
<span id="cb57-67"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      IncludeSlots = _mm_andnot_si128(IgnoreSlotsByLength,</span></span>
<span id="cb57-68"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //                                      IncludeSlotsByUniqueChar);</span></span>
<span id="cb57-69">     //</span>
<span id="cb57-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb57-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    IncludeSlots = _mm_and_si128(IncludeSlotsByUniqueChar,</span></span>
<span id="cb57-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                                 IncludeSlotsByLength);</span></span>
<span id="cb57-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb57-74"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      if (!IncludeSlots) {</span></span>
<span id="cb57-75"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //          return NO_MATCH_FOUND;</span></span>
<span id="cb57-76"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      }</span></span>
<span id="cb57-77">     //</span>
<span id="cb57-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Generate a mask.</span></span>
<span id="cb57-79">     //</span>
<span id="cb57-80"></span>
<span id="cb57-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Bitmap = _mm_movemask_epi8(IncludeSlots);</span></span>
<span id="cb57-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb57-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    if (!Bitmap) {</span></span>
<span id="cb57-84"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    if (_mm_testc_si128(IgnoreSlotsByLength, IncludeSlotsByUniqueChar)) {</span></span>
<span id="cb57-85"></span>
<span id="cb57-86">         //</span>
<span id="cb57-87"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // No bits were set, so there are no strings in this table starting</span></span>
<span id="cb57-88"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // with the same character and of a lesser or equal length as the</span></span>
<span id="cb57-89"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // search string.</span></span>
<span id="cb57-90"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // No remaining slots were left after we intersected the slots with</span></span>
<span id="cb57-91"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // matching unique characters with the inverted slots to ignore due</span></span>
<span id="cb57-92"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // to length.  Thus, no prefix match was found.</span></span>
<span id="cb57-93">         //</span>
<span id="cb57-94"></span>
<span id="cb57-95">         return NO_MATCH_FOUND;</span>
<span id="cb57-96">     }</span>
<span id="cb57-97"></span>
<span id="cb57-98">     //</span>
<span id="cb57-99"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // Continue with the remaining logic, including actually generating the</span></span>
<span id="cb57-100"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // IncludeSlots, which we need for bitmap generation as part of our</span></span>
<span id="cb57-101"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // comparison loop.</span></span>
<span id="cb57-102"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb57-103"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // As the IgnoreSlotsByLength XMM register is the inverse of what we want</span></span>
<span id="cb57-104"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // at the moment (we want 0xff for slots to include, and 0x00 for slots</span></span>
<span id="cb57-105"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // to ignore; it's currently the other way around), we use _mm_andnot_si128</span></span>
<span id="cb57-106"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // instead of just _mm_and_si128.</span></span>
<span id="cb57-107"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb57-108"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb57-109"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    IncludeSlots = _mm_andnot_si128(IgnoreSlotsByLength,</span></span>
<span id="cb57-110"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+                                    IncludeSlotsByUniqueChar);</span></span>
<span id="cb57-111"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb57-112"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb57-113"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // Generate a mask, count the number of bits, and initialize the search</span></span>
<span id="cb57-114"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // length.</span></span>
<span id="cb57-115"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb57-116"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb57-117"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Bitmap = _mm_movemask_epi8(IncludeSlots);</span></span>
<span id="cb57-118"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb57-119"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb57-120">     // Calculate the "search length" of the incoming string, which ensures we</span>
<span id="cb57-121">     // only compare up to the first 16 characters.</span>
<span id="cb57-122">     //</span></code></pre></div>
</div>
<div id="tabset-16-2" class="tab-pane" aria-labelledby="tabset-16-2-tab">
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb58-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb58-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb58-3">IsPrefixOfStringInTable_12<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb58-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb58-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb58-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb58-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb58-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb58-9"></span>
<span id="cb58-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb58-11"></span>
<span id="cb58-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb58-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb58-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb58-15"></span>
<span id="cb58-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This version is based off version 10, but with factors in the improvements</span></span>
<span id="cb58-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    made to version 4 of the x64 assembly version, thanks to suggestions from</span></span>
<span id="cb58-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    both Wojciech Mula (@pshufb) and Fabian Giesen (@rygorous).</span></span>
<span id="cb58-19"></span>
<span id="cb58-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Like version 11, we omit the vpxor to invert the lengths, but instead of</span></span>
<span id="cb58-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    an initial vpandn, we leverage the fact that vptest sets the carry flag</span></span>
<span id="cb58-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    if all 0s result from the expression: "param1 and (not param2)".  This</span></span>
<span id="cb58-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    allows us to do a fast-path early exit (like x64 version 2 does) if no</span></span>
<span id="cb58-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    match is found.</span></span>
<span id="cb58-25"></span>
<span id="cb58-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb58-27"></span>
<span id="cb58-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb58-29"></span>
<span id="cb58-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb58-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb58-32"></span>
<span id="cb58-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb58-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb58-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb58-36"></span>
<span id="cb58-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb58-38"></span>
<span id="cb58-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb58-40"></span>
<span id="cb58-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb58-42"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-46">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-47">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-48">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-49">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-53">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-54">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-55">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-56">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-58">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-59">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-60">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-61">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-62">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-63"></span>
<span id="cb58-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb58-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb58-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb58-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb58-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb58-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb58-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb58-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb58-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb58-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb58-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb58-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb58-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb58-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb58-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb58-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb58-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb58-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb58-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb58-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb58-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb58-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb58-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb58-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb58-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-97"></span>
<span id="cb58-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb58-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-101"></span>
<span id="cb58-102">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-103"></span>
<span id="cb58-104">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb58-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb58-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-108"></span>
<span id="cb58-109">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb58-110">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-111"></span>
<span id="cb58-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb58-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-115"></span>
<span id="cb58-116">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-117"></span>
<span id="cb58-118">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb58-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-121"></span>
<span id="cb58-122">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-123"></span>
<span id="cb58-124">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb58-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-127"></span>
<span id="cb58-128">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-129">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-130"></span>
<span id="cb58-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb58-133">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb58-134">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb58-135">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb58-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb58-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-138"></span>
<span id="cb58-139">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-140"></span>
<span id="cb58-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb58-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb58-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-145">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb58-146">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb58-147">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb58-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we do the "and not" intersection with the include slots next.</span></span>
<span id="cb58-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-150"></span>
<span id="cb58-151">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-152"></span>
<span id="cb58-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We can do a fast-path test for no match here via _mm_testc_si128(),</span></span>
<span id="cb58-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// which is essentially equivalent to the following logic, just with</span></span>
<span id="cb58-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// fewer instructions:</span></span>
<span id="cb58-157">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      IncludeSlots = _mm_andnot_si128(IgnoreSlotsByLength,</span></span>
<span id="cb58-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//                                      IncludeSlotsByUniqueChar);</span></span>
<span id="cb58-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      if (!IncludeSlots) {</span></span>
<span id="cb58-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//          return NO_MATCH_FOUND;</span></span>
<span id="cb58-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      }</span></span>
<span id="cb58-164">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-166"></span>
<span id="cb58-167">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_testc_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-168"></span>
<span id="cb58-169">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-170">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No remaining slots were left after we intersected the slots with</span></span>
<span id="cb58-171">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// matching unique characters with the inverted slots to ignore due</span></span>
<span id="cb58-172">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to length.  Thus, no prefix match was found.</span></span>
<span id="cb58-173">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-174"></span>
<span id="cb58-175">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-176">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb58-177"></span>
<span id="cb58-178">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Continue with the remaining logic, including actually generating the</span></span>
<span id="cb58-180">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// IncludeSlots, which we need for bitmap generation as part of our</span></span>
<span id="cb58-181">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// comparison loop.</span></span>
<span id="cb58-182">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-183">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// As the IgnoreSlotsByLength XMM register is the inverse of what we want</span></span>
<span id="cb58-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// at the moment (we want 0xff for slots to include, and 0x00 for slots</span></span>
<span id="cb58-185">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to ignore; it's currently the other way around), we use _mm_andnot_si128</span></span>
<span id="cb58-186">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// instead of just _mm_and_si128.</span></span>
<span id="cb58-187">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-188"></span>
<span id="cb58-189">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_andnot_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb58-190">                                    IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-191"></span>
<span id="cb58-192">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-193">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask, count the number of bits, and initialize the search</span></span>
<span id="cb58-194">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// length.</span></span>
<span id="cb58-195">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-196"></span>
<span id="cb58-197">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-198"></span>
<span id="cb58-199">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-200">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb58-201">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb58-202">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-203"></span>
<span id="cb58-204">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-205"></span>
<span id="cb58-206">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-207">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb58-208">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb58-209">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-210"></span>
<span id="cb58-211">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-212"></span>
<span id="cb58-213">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-214"></span>
<span id="cb58-215">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb58-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb58-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-219"></span>
<span id="cb58-220">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-221">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-222"></span>
<span id="cb58-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb58-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb58-226">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb58-227">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-228"></span>
<span id="cb58-229">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-230">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-231"></span>
<span id="cb58-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb58-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-235"></span>
<span id="cb58-236">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-237">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb58-238"></span>
<span id="cb58-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-240">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb58-241">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-242"></span>
<span id="cb58-243">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-244"></span>
<span id="cb58-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-246">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb58-247">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb58-248">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb58-249">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb58-250">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb58-251">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb58-252">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb58-253">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb58-254">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb58-255">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-256"></span>
<span id="cb58-257">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-258"></span>
<span id="cb58-259">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-260">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb58-261">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-262"></span>
<span id="cb58-263">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-264"></span>
<span id="cb58-265">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-266"></span>
<span id="cb58-267">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-268">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The slot length is longer than the number of characters matched</span></span>
<span id="cb58-269">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// from the search string; this isn't a prefix match.  Continue.</span></span>
<span id="cb58-270">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-271"></span>
<span id="cb58-272">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-273">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb58-274"></span>
<span id="cb58-275">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-276"></span>
<span id="cb58-277">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-278">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb58-279">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb58-280">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb58-281">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-282"></span>
<span id="cb58-283">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb58-284"></span>
<span id="cb58-285">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-286"></span>
<span id="cb58-287">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-288"></span>
<span id="cb58-289">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-290">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb58-291">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-292"></span>
<span id="cb58-293">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-294">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb58-295">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb58-296"></span>
<span id="cb58-297">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-298">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb58-299">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb58-300">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb58-301">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-302"></span>
<span id="cb58-303">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-304"></span>
<span id="cb58-305">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-306">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-307">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb58-308"></span>
<span id="cb58-309">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb58-310"></span>
<span id="cb58-311">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-312"></span>
<span id="cb58-313">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-314"></span>
<span id="cb58-315">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-316">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb58-317">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-318"></span>
<span id="cb58-319">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb58-320"></span>
<span id="cb58-321">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-322"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="benchmark-12" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-12">Benchmark 12</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-12-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-12-v1.svg" class="img-fluid figure-img" alt="Benchmark 12"></a></p>
<figcaption>Benchmark 12</figcaption>
</figure>
</div>
<p>Eh, there’s not much in this one. The negative match fast path is basically identical, and the normal prefix matches are a tiny bit slower.</p>
<hr>
</section>
<section id="IsPrefixOfStringInTable_13" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_13"><code>IsPrefixOfStringInTable_13</code></h4>
<p>← IsPrefixOfStringInTable_12 | IsPrefixOfStringInTable_14 →</p>
<p><a href="https://twitter.com/rygorous/status/985737342156652544">Another tip from Fabian:</a> we can tweak the loop logic further. Instead of shifting the bitmap right each iteration (and keeping a separate shift count), we can just leverage the <code>blsr</code> intrinsic, which stands for <em>reset lowest set bit</em>, and is equivalent to doing <code>x &amp; (x -1)</code>. This allows us to tweak the loop organization as well, such that we can simply do <code>while (Bitmap) { }</code> instead of the <code>do { } while (--Count)</code> approach we’ve been using.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-17-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-17-1" aria-controls="tabset-17-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-17-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-17-2" aria-controls="tabset-17-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-17-1" class="tab-pane active" aria-labelledby="tabset-17-1-tab">
<div class="sourceCode" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb59-1">% diff -u IsPrefixOfStringInTable_10.c IsPrefixOfStringInTable_13.c</span>
<span id="cb59-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_10.c        2018-04-26 18:22:23.926168500 -0400</span></span>
<span id="cb59-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_13.c        2018-04-26 19:16:34.926170200 -0400</span></span>
<span id="cb59-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -19,7 +19,7 @@</span></span>
<span id="cb59-5"></span>
<span id="cb59-6"> _Use_decl_annotations_</span>
<span id="cb59-7"> STRING_TABLE_INDEX</span>
<span id="cb59-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_10(</span></span>
<span id="cb59-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_13(</span></span>
<span id="cb59-10">     PSTRING_TABLE StringTable,</span>
<span id="cb59-11">     PSTRING String,</span>
<span id="cb59-12">     PSTRING_MATCH Match</span>
<span id="cb59-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -32,8 +32,10 @@</span></span>
<span id="cb59-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb59-15">     or is equal to" the search string.</span>
<span id="cb59-16"></span>
<span id="cb59-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This version is based off version 8, but rewrites the inner loop that</span></span>
<span id="cb59-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    checks for comparisons.</span></span>
<span id="cb59-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This version is based off version 10, but does away with the bitmap</span></span>
<span id="cb59-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    shifting logic and `do { } while (--Count)` loop, instead simply using</span></span>
<span id="cb59-21"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    blsr in conjunction with `while (Bitmap) { }`.  Credit goes to Fabian</span></span>
<span id="cb59-22"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Giesen (@rygorous) for pointing this approach out.</span></span>
<span id="cb59-23"></span>
<span id="cb59-24"> Arguments:</span>
<span id="cb59-25"></span>
<span id="cb59-26"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -54,12 +56,9 @@</span></span>
<span id="cb59-27"> {</span>
<span id="cb59-28">     ULONG Bitmap;</span>
<span id="cb59-29">     ULONG Mask;</span>
<span id="cb59-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    ULONG Count;</span></span>
<span id="cb59-31">     ULONG Length;</span>
<span id="cb59-32">     ULONG Index;</span>
<span id="cb59-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    ULONG Shift = 0;</span></span>
<span id="cb59-34">     ULONG CharactersMatched;</span>
<span id="cb59-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    ULONG NumberOfTrailingZeros;</span></span>
<span id="cb59-36">     ULONG SearchLength;</span>
<span id="cb59-37">     PSTRING TargetString;</span>
<span id="cb59-38">     STRING_SLOT Slot;</span>
<span id="cb59-39"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -206,31 +205,26 @@</span></span>
<span id="cb59-40"></span>
<span id="cb59-41">     SearchLength = min(String-&gt;Length, 16);</span>
<span id="cb59-42"></span>
<span id="cb59-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb59-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb59-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // thus, need to compare.</span></span>
<span id="cb59-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb59-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb59-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Count = __popcnt(Bitmap);</span></span>
<span id="cb59-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb59-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    do {</span></span>
<span id="cb59-51"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    while (Bitmap) {</span></span>
<span id="cb59-52"></span>
<span id="cb59-53">         //</span>
<span id="cb59-54">         // Extract the next index by counting the number of trailing zeros left</span>
<span id="cb59-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb59-56"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // in the bitmap.</span></span>
<span id="cb59-57">         //</span>
<span id="cb59-58"></span>
<span id="cb59-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        NumberOfTrailingZeros = _tzcnt_u32(Bitmap);</span></span>
<span id="cb59-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        Index = NumberOfTrailingZeros + Shift;</span></span>
<span id="cb59-61"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        Index = _tzcnt_u32(Bitmap);</span></span>
<span id="cb59-62"></span>
<span id="cb59-63">         //</span>
<span id="cb59-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb59-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb59-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // the shift count accordingly.</span></span>
<span id="cb59-67"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // Clear the bitmap's lowest set bit, such that it's ready for the next</span></span>
<span id="cb59-68"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // loop's tzcnt if no match is found in this iteration.  Equivalent to</span></span>
<span id="cb59-69"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb59-70"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //      Bitmap &amp;= Bitmap - 1;</span></span>
<span id="cb59-71"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb59-72"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // (Which the optimizer will convert into a blsr instruction anyway in</span></span>
<span id="cb59-73"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //  non-debug builds.  But it's nice to be explicit.)</span></span>
<span id="cb59-74">         //</span>
<span id="cb59-75"></span>
<span id="cb59-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        Bitmap &gt;&gt;= (NumberOfTrailingZeros + 1);</span></span>
<span id="cb59-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        Shift = Index + 1;</span></span>
<span id="cb59-78"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        Bitmap = _blsr_u32(Bitmap);</span></span>
<span id="cb59-79"></span>
<span id="cb59-80">         //</span>
<span id="cb59-81">         // Load the slot and its length.</span>
<span id="cb59-82"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -313,7 +307,7 @@</span></span>
<span id="cb59-83"></span>
<span id="cb59-84">         return (STRING_TABLE_INDEX)Index;</span>
<span id="cb59-85"></span>
<span id="cb59-86"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    } while (--Count);</span></span>
<span id="cb59-87"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    }</span></span>
<span id="cb59-88"></span>
<span id="cb59-89">     //</span>
<span id="cb59-90">     // If we get here, we didn't find a match.</span></code></pre></div>
</div>
<div id="tabset-17-2" class="tab-pane" aria-labelledby="tabset-17-2-tab">
<div class="sourceCode" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb60-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb60-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb60-3">IsPrefixOfStringInTable_13<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb60-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb60-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb60-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb60-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb60-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb60-9"></span>
<span id="cb60-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb60-11"></span>
<span id="cb60-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb60-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb60-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb60-15"></span>
<span id="cb60-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This version is based off version 10, but does away with the bitmap</span></span>
<span id="cb60-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    shifting logic and `do { } while (--Count)` loop, instead simply using</span></span>
<span id="cb60-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    blsr in conjunction with `while (Bitmap) { }`.  Credit goes to Fabian</span></span>
<span id="cb60-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Giesen (@rygorous) for pointing this approach out.</span></span>
<span id="cb60-20"></span>
<span id="cb60-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb60-22"></span>
<span id="cb60-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb60-24"></span>
<span id="cb60-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb60-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb60-27"></span>
<span id="cb60-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb60-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb60-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb60-31"></span>
<span id="cb60-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb60-33"></span>
<span id="cb60-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb60-35"></span>
<span id="cb60-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb60-37"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-45">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-49">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-57"></span>
<span id="cb60-58">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb60-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb60-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb60-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb60-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb60-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb60-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb60-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb60-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb60-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb60-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb60-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb60-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb60-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb60-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb60-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb60-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb60-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb60-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb60-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb60-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb60-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb60-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb60-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb60-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-91"></span>
<span id="cb60-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb60-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-95"></span>
<span id="cb60-96">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-97"></span>
<span id="cb60-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb60-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb60-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-102"></span>
<span id="cb60-103">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb60-104">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-105"></span>
<span id="cb60-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb60-108">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-109"></span>
<span id="cb60-110">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-111"></span>
<span id="cb60-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb60-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-115"></span>
<span id="cb60-116">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-117"></span>
<span id="cb60-118">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb60-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-121"></span>
<span id="cb60-122">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-123">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-124"></span>
<span id="cb60-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb60-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb60-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb60-129">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb60-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb60-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-132"></span>
<span id="cb60-133">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-134"></span>
<span id="cb60-135">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb60-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb60-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb60-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb60-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb60-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb60-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-144"></span>
<span id="cb60-145">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-146"></span>
<span id="cb60-147">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb60-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb60-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb60-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-152"></span>
<span id="cb60-153">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-154"></span>
<span id="cb60-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb60-157">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb60-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb60-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb60-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-161"></span>
<span id="cb60-162">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb60-163">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-164"></span>
<span id="cb60-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-166">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb60-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-168"></span>
<span id="cb60-169">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-170"></span>
<span id="cb60-171">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-172"></span>
<span id="cb60-173">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-174">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb60-175">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb60-176">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb60-177">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-178"></span>
<span id="cb60-179">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-180">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-181"></span>
<span id="cb60-182">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-183">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb60-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb60-185">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-186"></span>
<span id="cb60-187">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-188"></span>
<span id="cb60-189">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-190"></span>
<span id="cb60-191">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-192">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb60-193">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap.</span></span>
<span id="cb60-194">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-195"></span>
<span id="cb60-196">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-197"></span>
<span id="cb60-198">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-199">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clear the bitmap's lowest set bit, such that it's ready for the next</span></span>
<span id="cb60-200">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// loop's tzcnt if no match is found in this iteration.  Equivalent to</span></span>
<span id="cb60-201">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-202">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      Bitmap &amp;= Bitmap - 1;</span></span>
<span id="cb60-203">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-204">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (Which the optimizer will convert into a blsr instruction anyway in</span></span>
<span id="cb60-205">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  non-debug builds.  But it's nice to be explicit.)</span></span>
<span id="cb60-206">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-207"></span>
<span id="cb60-208">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_blsr_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-209"></span>
<span id="cb60-210">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb60-212">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-213"></span>
<span id="cb60-214">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-215">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb60-216"></span>
<span id="cb60-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb60-219">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-220"></span>
<span id="cb60-221">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-222"></span>
<span id="cb60-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb60-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb60-226">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb60-227">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb60-228">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb60-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb60-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb60-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb60-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb60-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-234"></span>
<span id="cb60-235">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-236"></span>
<span id="cb60-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb60-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-240"></span>
<span id="cb60-241">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-242"></span>
<span id="cb60-243">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-244"></span>
<span id="cb60-245">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-246">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The slot length is longer than the number of characters matched</span></span>
<span id="cb60-247">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// from the search string; this isn't a prefix match.  Continue.</span></span>
<span id="cb60-248">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-249"></span>
<span id="cb60-250">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-251">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-252"></span>
<span id="cb60-253">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-254"></span>
<span id="cb60-255">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-256">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb60-257">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb60-258">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb60-259">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-260"></span>
<span id="cb60-261">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb60-262"></span>
<span id="cb60-263">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-264"></span>
<span id="cb60-265">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-266"></span>
<span id="cb60-267">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-268">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb60-269">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-270"></span>
<span id="cb60-271">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-272">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-273">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-274"></span>
<span id="cb60-275">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-276">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb60-277">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb60-278">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb60-279">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-280"></span>
<span id="cb60-281">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-282"></span>
<span id="cb60-283">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-284">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-285">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb60-286"></span>
<span id="cb60-287">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-288"></span>
<span id="cb60-289">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-290"></span>
<span id="cb60-291">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-292"></span>
<span id="cb60-293">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-294">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb60-295">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-296"></span>
<span id="cb60-297">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb60-298"></span>
<span id="cb60-299">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-300"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
<p>I like this change. It was a great suggestion from Fabian. Let’s see how it performs. Hopefully it’ll do slightly better at prefix matching, given that we’re effectively reducing the number of instructions required as part of the string comparison logic.</p>
</section>
<section id="benchmark-13" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-13">Benchmark 13</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-13-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-13-v1.svg" class="img-fluid figure-img" alt="Benchmark 13"></a></p>
<figcaption>Benchmark 13</figcaption>
</figure>
</div>
<p>Ah! A measurable, repeatable speed-up! Excellent!</p>
<hr>
</section>
<section id="IsPrefixOfStringInTable_14" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_14"><code>IsPrefixOfStringInTable_14</code></h4>
<p>← IsPrefixOfStringInTable_13 | IsPrefixOfStringInTable_15 →</p>
<p>Let’s give the C version the same chance as the assembly version with regards to negative matching; we’ll take version 13 above and factor in the <code>vptest</code> logic from version 12.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-18-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-18-1" aria-controls="tabset-18-1" aria-selected="true">Diff (14 vs 13)</a></li><li class="nav-item"><a class="nav-link" id="tabset-18-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-18-2" aria-controls="tabset-18-2" aria-selected="false">Diff (14 vs 12)</a></li><li class="nav-item"><a class="nav-link" id="tabset-18-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-18-3" aria-controls="tabset-18-3" aria-selected="false">Full (14)</a></li></ul>
<div class="tab-content">
<div id="tabset-18-1" class="tab-pane active" aria-labelledby="tabset-18-1-tab">
<div class="sourceCode" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb61-1">% diff -u IsPrefixOfStringInTable_13.c IsPrefixOfStringInTable_14.c</span>
<span id="cb61-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_13.c        2018-04-26 19:16:34.926170200 -0400</span></span>
<span id="cb61-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_14.c        2018-04-26 19:32:30.674199200 -0400</span></span>
<span id="cb61-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -19,7 +19,7 @@</span></span>
<span id="cb61-5"></span>
<span id="cb61-6"> _Use_decl_annotations_</span>
<span id="cb61-7"> STRING_TABLE_INDEX</span>
<span id="cb61-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_13(</span></span>
<span id="cb61-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_14(</span></span>
<span id="cb61-10">     PSTRING_TABLE StringTable,</span>
<span id="cb61-11">     PSTRING String,</span>
<span id="cb61-12">     PSTRING_MATCH Match</span>
<span id="cb61-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -32,10 +32,8 @@</span></span>
<span id="cb61-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb61-15">     or is equal to" the search string.</span>
<span id="cb61-16"></span>
<span id="cb61-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This version is based off version 10, but does away with the bitmap</span></span>
<span id="cb61-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    shifting logic and `do { } while (--Count)` loop, instead simply using</span></span>
<span id="cb61-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    blsr in conjunction with `while (Bitmap) { }`.  Credit goes to Fabian</span></span>
<span id="cb61-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Giesen (@rygorous) for pointing this approach out.</span></span>
<span id="cb61-21"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This version combines the altered bitmap logic from version 13 with the</span></span>
<span id="cb61-22"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    fast-path _mm_testc_si128() exit from version 12.</span></span>
<span id="cb61-23"></span>
<span id="cb61-24"> Arguments:</span>
<span id="cb61-25"></span>
<span id="cb61-26"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -70,9 +68,7 @@</span></span>
<span id="cb61-27">     XMMWORD TableUniqueChars;</span>
<span id="cb61-28">     XMMWORD IncludeSlotsByUniqueChar;</span>
<span id="cb61-29">     XMMWORD IgnoreSlotsByLength;</span>
<span id="cb61-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    XMMWORD IncludeSlotsByLength;</span></span>
<span id="cb61-31">     XMMWORD IncludeSlots;</span>
<span id="cb61-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    const XMMWORD AllOnesXmm = _mm_set1_epi8(0xff);</span></span>
<span id="cb61-33"></span>
<span id="cb61-34">     //</span>
<span id="cb61-35">     // Unconditionally do the following five operations before checking any of</span>
<span id="cb61-36"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -164,22 +160,43 @@</span></span>
<span id="cb61-37">     IgnoreSlotsByLength = _mm_cmpgt_epi8(Lengths.SlotsXmm, LengthXmm);</span>
<span id="cb61-38"></span>
<span id="cb61-39">     //</span>
<span id="cb61-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb61-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb61-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb61-43"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // We can do a fast-path test for no match here via _mm_testc_si128(),</span></span>
<span id="cb61-44"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // which is essentially equivalent to the following logic, just with</span></span>
<span id="cb61-45"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // fewer instructions:</span></span>
<span id="cb61-46">     //</span>
<span id="cb61-47"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      IncludeSlots = _mm_andnot_si128(IgnoreSlotsByLength,</span></span>
<span id="cb61-48"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //                                      IncludeSlotsByUniqueChar);</span></span>
<span id="cb61-49"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb61-50"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      if (!IncludeSlots) {</span></span>
<span id="cb61-51"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //          return NO_MATCH_FOUND;</span></span>
<span id="cb61-52"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      }</span></span>
<span id="cb61-53"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb61-54"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb61-55"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb61-56"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    if (_mm_testc_si128(IgnoreSlotsByLength, IncludeSlotsByUniqueChar)) {</span></span>
<span id="cb61-57"></span>
<span id="cb61-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    IncludeSlotsByLength = _mm_xor_si128(IgnoreSlotsByLength, AllOnesXmm);</span></span>
<span id="cb61-59"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb61-60"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // No remaining slots were left after we intersected the slots with</span></span>
<span id="cb61-61"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // matching unique characters with the inverted slots to ignore due</span></span>
<span id="cb61-62"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // to length.  Thus, no prefix match was found.</span></span>
<span id="cb61-63"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb61-64"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb61-65"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        return NO_MATCH_FOUND;</span></span>
<span id="cb61-66"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    }</span></span>
<span id="cb61-67"></span>
<span id="cb61-68">     //</span>
<span id="cb61-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb61-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb61-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // the exact same unique character as the string and a length less than or</span></span>
<span id="cb61-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // equal to the length of the search string).</span></span>
<span id="cb61-73"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // Continue with the remaining logic, including actually generating the</span></span>
<span id="cb61-74"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // IncludeSlots, which we need for bitmap generation as part of our</span></span>
<span id="cb61-75"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // comparison loop.</span></span>
<span id="cb61-76"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb61-77"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // As the IgnoreSlotsByLength XMM register is the inverse of what we want</span></span>
<span id="cb61-78"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // at the moment (we want 0xff for slots to include, and 0x00 for slots</span></span>
<span id="cb61-79"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // to ignore; it's currently the other way around), we use _mm_andnot_si128</span></span>
<span id="cb61-80"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // instead of just _mm_and_si128.</span></span>
<span id="cb61-81">     //</span>
<span id="cb61-82"></span>
<span id="cb61-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    IncludeSlots = _mm_and_si128(IncludeSlotsByUniqueChar,</span></span>
<span id="cb61-84"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                                 IncludeSlotsByLength);</span></span>
<span id="cb61-85"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    IncludeSlots = _mm_andnot_si128(IgnoreSlotsByLength,</span></span>
<span id="cb61-86"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+                                    IncludeSlotsByUniqueChar);</span></span>
<span id="cb61-87"></span>
<span id="cb61-88">     //</span>
<span id="cb61-89">     // Generate a mask.</span>
<span id="cb61-90"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -187,17 +204,6 @@</span></span>
<span id="cb61-91"></span>
<span id="cb61-92">     Bitmap = _mm_movemask_epi8(IncludeSlots);</span>
<span id="cb61-93"></span>
<span id="cb61-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    if (!Bitmap) {</span></span>
<span id="cb61-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb61-96"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        //</span></span>
<span id="cb61-97"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // No bits were set, so there are no strings in this table starting</span></span>
<span id="cb61-98"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // with the same character and of a lesser or equal length as the</span></span>
<span id="cb61-99"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // search string.</span></span>
<span id="cb61-100"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        //</span></span>
<span id="cb61-101"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb61-102"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        return NO_MATCH_FOUND;</span></span>
<span id="cb61-103"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    }</span></span>
<span id="cb61-104"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb61-105">     //</span>
<span id="cb61-106">     // Calculate the "search length" of the incoming string, which ensures we</span>
<span id="cb61-107">     // only compare up to the first 16 characters.</span></code></pre></div>
</div>
<div id="tabset-18-2" class="tab-pane" aria-labelledby="tabset-18-2-tab">
<div class="sourceCode" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb62-1">% diff -u IsPrefixOfStringInTable_12.c IsPrefixOfStringInTable_14.c</span>
<span id="cb62-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_12.c        2018-04-26 17:47:54.970331600 -0400</span></span>
<span id="cb62-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_14.c        2018-04-26 19:32:30.674199200 -0400</span></span>
<span id="cb62-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -19,7 +19,7 @@</span></span>
<span id="cb62-5"></span>
<span id="cb62-6"> _Use_decl_annotations_</span>
<span id="cb62-7"> STRING_TABLE_INDEX</span>
<span id="cb62-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_12(</span></span>
<span id="cb62-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_14(</span></span>
<span id="cb62-10">     PSTRING_TABLE StringTable,</span>
<span id="cb62-11">     PSTRING String,</span>
<span id="cb62-12">     PSTRING_MATCH Match</span>
<span id="cb62-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -32,15 +32,8 @@</span></span>
<span id="cb62-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb62-15">     or is equal to" the search string.</span>
<span id="cb62-16"></span>
<span id="cb62-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This version is based off version 10, but with factors in the improvements</span></span>
<span id="cb62-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    made to version 4 of the x64 assembly version, thanks to suggestions from</span></span>
<span id="cb62-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    both Wojciech Mula (@pshufb) and Fabian Giesen (@rygorous).</span></span>
<span id="cb62-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb62-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Like version 11, we omit the vpxor to invert the lengths, but instead of</span></span>
<span id="cb62-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    an initial vpandn, we leverage the fact that vptest sets the carry flag</span></span>
<span id="cb62-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    if all 0s result from the expression: "param1 and (not param2)".  This</span></span>
<span id="cb62-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    allows us to do a fast-path early exit (like x64 version 2 does) if no</span></span>
<span id="cb62-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    match is found.</span></span>
<span id="cb62-26"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This version combines the altered bitmap logic from version 13 with the</span></span>
<span id="cb62-27"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    fast-path _mm_testc_si128() exit from version 12.</span></span>
<span id="cb62-28"></span>
<span id="cb62-29"> Arguments:</span>
<span id="cb62-30"></span>
<span id="cb62-31"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -61,12 +54,9 @@</span></span>
<span id="cb62-32"> {</span>
<span id="cb62-33">     ULONG Bitmap;</span>
<span id="cb62-34">     ULONG Mask;</span>
<span id="cb62-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    ULONG Count;</span></span>
<span id="cb62-36">     ULONG Length;</span>
<span id="cb62-37">     ULONG Index;</span>
<span id="cb62-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    ULONG Shift = 0;</span></span>
<span id="cb62-39">     ULONG CharactersMatched;</span>
<span id="cb62-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    ULONG NumberOfTrailingZeros;</span></span>
<span id="cb62-41">     ULONG SearchLength;</span>
<span id="cb62-42">     PSTRING TargetString;</span>
<span id="cb62-43">     STRING_SLOT Slot;</span>
<span id="cb62-44"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -118,7 +108,7 @@</span></span>
<span id="cb62-45">     // Load the first 16-bytes of the search string into an XMM register.</span>
<span id="cb62-46">     //</span>
<span id="cb62-47"></span>
<span id="cb62-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Search.CharsXmm = _mm_load_si128((PXMMWORD)String-&gt;Buffer);</span></span>
<span id="cb62-49"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Search.CharsXmm = _mm_loadu_si128((PXMMWORD)String-&gt;Buffer);</span></span>
<span id="cb62-50"></span>
<span id="cb62-51">     //</span>
<span id="cb62-52">     // Broadcast the search string's unique characters according to the string</span>
<span id="cb62-53"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -164,7 +154,7 @@</span></span>
<span id="cb62-54">     // N.B. Because we default the length of empty slots to 0x7f, they will</span>
<span id="cb62-55">     //      handily be included in the ignored set (i.e. their words will also</span>
<span id="cb62-56">     //      be set to 0xff), which means they'll also get filtered out when</span>
<span id="cb62-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //      we do the "and not" intersection with the include slots next.</span></span>
<span id="cb62-58"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      we invert the mask shortly after.</span></span>
<span id="cb62-59">     //</span>
<span id="cb62-60"></span>
<span id="cb62-61">     IgnoreSlotsByLength = _mm_cmpgt_epi8(Lengths.SlotsXmm, LengthXmm);</span>
<span id="cb62-62"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -209,8 +199,7 @@</span></span>
<span id="cb62-63">                                     IncludeSlotsByUniqueChar);</span>
<span id="cb62-64"></span>
<span id="cb62-65">     //</span>
<span id="cb62-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Generate a mask, count the number of bits, and initialize the search</span></span>
<span id="cb62-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // length.</span></span>
<span id="cb62-68"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // Generate a mask.</span></span>
<span id="cb62-69">     //</span>
<span id="cb62-70"></span>
<span id="cb62-71">     Bitmap = _mm_movemask_epi8(IncludeSlots);</span>
<span id="cb62-72"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -222,31 +211,26 @@</span></span>
<span id="cb62-73"></span>
<span id="cb62-74">     SearchLength = min(String-&gt;Length, 16);</span>
<span id="cb62-75"></span>
<span id="cb62-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb62-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb62-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // thus, need to compare.</span></span>
<span id="cb62-79"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb62-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb62-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Count = __popcnt(Bitmap);</span></span>
<span id="cb62-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb62-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    do {</span></span>
<span id="cb62-84"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    while (Bitmap) {</span></span>
<span id="cb62-85"></span>
<span id="cb62-86">         //</span>
<span id="cb62-87">         // Extract the next index by counting the number of trailing zeros left</span>
<span id="cb62-88"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb62-89"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // in the bitmap.</span></span>
<span id="cb62-90">         //</span>
<span id="cb62-91"></span>
<span id="cb62-92"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        NumberOfTrailingZeros = _tzcnt_u32(Bitmap);</span></span>
<span id="cb62-93"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        Index = NumberOfTrailingZeros + Shift;</span></span>
<span id="cb62-94"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        Index = _tzcnt_u32(Bitmap);</span></span>
<span id="cb62-95"></span>
<span id="cb62-96">         //</span>
<span id="cb62-97"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb62-98"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb62-99"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // the shift count accordingly.</span></span>
<span id="cb62-100"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // Clear the bitmap's lowest set bit, such that it's ready for the next</span></span>
<span id="cb62-101"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // loop's tzcnt if no match is found in this iteration.  Equivalent to</span></span>
<span id="cb62-102"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb62-103"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //      Bitmap &amp;= Bitmap - 1;</span></span>
<span id="cb62-104"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb62-105"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // (Which the optimizer will convert into a blsr instruction anyway in</span></span>
<span id="cb62-106"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //  non-debug builds.  But it's nice to be explicit.)</span></span>
<span id="cb62-107">         //</span>
<span id="cb62-108"></span>
<span id="cb62-109"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        Bitmap &gt;&gt;= (NumberOfTrailingZeros + 1);</span></span>
<span id="cb62-110"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        Shift = Index + 1;</span></span>
<span id="cb62-111"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        Bitmap = _blsr_u32(Bitmap);</span></span>
<span id="cb62-112"></span>
<span id="cb62-113">         //</span>
<span id="cb62-114">         // Load the slot and its length.</span>
<span id="cb62-115"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -329,7 +313,7 @@</span></span>
<span id="cb62-116"></span>
<span id="cb62-117">         return (STRING_TABLE_INDEX)Index;</span>
<span id="cb62-118"></span>
<span id="cb62-119"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    } while (--Count);</span></span>
<span id="cb62-120"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    }</span></span>
<span id="cb62-121"></span>
<span id="cb62-122">     //</span>
<span id="cb62-123">     // If we get here, we didn't find a match.</span></code></pre></div>
</div>
<div id="tabset-18-3" class="tab-pane" aria-labelledby="tabset-18-3-tab">
<div class="sourceCode" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb63-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb63-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb63-3">IsPrefixOfStringInTable_14<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb63-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb63-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb63-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb63-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb63-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb63-9"></span>
<span id="cb63-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb63-11"></span>
<span id="cb63-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb63-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb63-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb63-15"></span>
<span id="cb63-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This version combines the altered bitmap logic from version 13 with the</span></span>
<span id="cb63-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    fast-path _mm_testc_si128() exit from version 12.</span></span>
<span id="cb63-18"></span>
<span id="cb63-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb63-20"></span>
<span id="cb63-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb63-22"></span>
<span id="cb63-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb63-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb63-25"></span>
<span id="cb63-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb63-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb63-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb63-29"></span>
<span id="cb63-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb63-31"></span>
<span id="cb63-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb63-33"></span>
<span id="cb63-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb63-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb63-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-43">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-44">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-45">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-47">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-48">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-49">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-53"></span>
<span id="cb63-54">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb63-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb63-57">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-58">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb63-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb63-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb63-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb63-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb63-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb63-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb63-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb63-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb63-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb63-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb63-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb63-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb63-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb63-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb63-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb63-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb63-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb63-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb63-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb63-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb63-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb63-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-87"></span>
<span id="cb63-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb63-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-91"></span>
<span id="cb63-92">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-93"></span>
<span id="cb63-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb63-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb63-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-98"></span>
<span id="cb63-99">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb63-100">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-101"></span>
<span id="cb63-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb63-104">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-105"></span>
<span id="cb63-106">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-107"></span>
<span id="cb63-108">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb63-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-111"></span>
<span id="cb63-112">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-113"></span>
<span id="cb63-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb63-116">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-117"></span>
<span id="cb63-118">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-119">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-120"></span>
<span id="cb63-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-122">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb63-123">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb63-124">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb63-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb63-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb63-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-128"></span>
<span id="cb63-129">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-130"></span>
<span id="cb63-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb63-133">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb63-134">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-135">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb63-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb63-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb63-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb63-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-140"></span>
<span id="cb63-141">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-142"></span>
<span id="cb63-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We can do a fast-path test for no match here via _mm_testc_si128(),</span></span>
<span id="cb63-145">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// which is essentially equivalent to the following logic, just with</span></span>
<span id="cb63-146">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// fewer instructions:</span></span>
<span id="cb63-147">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      IncludeSlots = _mm_andnot_si128(IgnoreSlotsByLength,</span></span>
<span id="cb63-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//                                      IncludeSlotsByUniqueChar);</span></span>
<span id="cb63-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      if (!IncludeSlots) {</span></span>
<span id="cb63-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//          return NO_MATCH_FOUND;</span></span>
<span id="cb63-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      }</span></span>
<span id="cb63-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-156"></span>
<span id="cb63-157">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_testc_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb63-158"></span>
<span id="cb63-159">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-160">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No remaining slots were left after we intersected the slots with</span></span>
<span id="cb63-161">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// matching unique characters with the inverted slots to ignore due</span></span>
<span id="cb63-162">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to length.  Thus, no prefix match was found.</span></span>
<span id="cb63-163">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-164"></span>
<span id="cb63-165">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-166">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb63-167"></span>
<span id="cb63-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-169">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Continue with the remaining logic, including actually generating the</span></span>
<span id="cb63-170">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// IncludeSlots, which we need for bitmap generation as part of our</span></span>
<span id="cb63-171">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// comparison loop.</span></span>
<span id="cb63-172">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-173">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// As the IgnoreSlotsByLength XMM register is the inverse of what we want</span></span>
<span id="cb63-174">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// at the moment (we want 0xff for slots to include, and 0x00 for slots</span></span>
<span id="cb63-175">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to ignore; it's currently the other way around), we use _mm_andnot_si128</span></span>
<span id="cb63-176">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// instead of just _mm_and_si128.</span></span>
<span id="cb63-177">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-178"></span>
<span id="cb63-179">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_andnot_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb63-180">                                    IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-181"></span>
<span id="cb63-182">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-183">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb63-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-185"></span>
<span id="cb63-186">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-187"></span>
<span id="cb63-188">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-189">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb63-190">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb63-191">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-192"></span>
<span id="cb63-193">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-194"></span>
<span id="cb63-195">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb63-196"></span>
<span id="cb63-197">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-198">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb63-199">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap.</span></span>
<span id="cb63-200">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-201"></span>
<span id="cb63-202">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-203"></span>
<span id="cb63-204">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-205">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clear the bitmap's lowest set bit, such that it's ready for the next</span></span>
<span id="cb63-206">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// loop's tzcnt if no match is found in this iteration.  Equivalent to</span></span>
<span id="cb63-207">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-208">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      Bitmap &amp;= Bitmap - 1;</span></span>
<span id="cb63-209">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-210">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (Which the optimizer will convert into a blsr instruction anyway in</span></span>
<span id="cb63-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  non-debug builds.  But it's nice to be explicit.)</span></span>
<span id="cb63-212">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-213"></span>
<span id="cb63-214">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_blsr_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-215"></span>
<span id="cb63-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb63-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-219"></span>
<span id="cb63-220">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-221">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb63-222"></span>
<span id="cb63-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb63-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-226"></span>
<span id="cb63-227">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-228"></span>
<span id="cb63-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb63-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb63-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb63-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb63-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb63-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb63-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb63-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb63-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb63-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-240"></span>
<span id="cb63-241">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-242"></span>
<span id="cb63-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb63-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-246"></span>
<span id="cb63-247">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-248"></span>
<span id="cb63-249">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb63-250"></span>
<span id="cb63-251">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-252">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The slot length is longer than the number of characters matched</span></span>
<span id="cb63-253">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// from the search string; this isn't a prefix match.  Continue.</span></span>
<span id="cb63-254">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-255"></span>
<span id="cb63-256">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-257">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb63-258"></span>
<span id="cb63-259">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb63-260"></span>
<span id="cb63-261">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-262">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb63-263">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb63-264">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb63-265">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-266"></span>
<span id="cb63-267">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb63-268"></span>
<span id="cb63-269">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-270"></span>
<span id="cb63-271">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb63-272"></span>
<span id="cb63-273">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-274">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb63-275">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-276"></span>
<span id="cb63-277">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-278">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb63-279">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb63-280"></span>
<span id="cb63-281">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-282">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb63-283">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb63-284">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb63-285">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-286"></span>
<span id="cb63-287">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb63-288"></span>
<span id="cb63-289">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-290">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-291">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb63-292"></span>
<span id="cb63-293">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb63-294"></span>
<span id="cb63-295">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-296"></span>
<span id="cb63-297">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb63-298"></span>
<span id="cb63-299">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-300">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb63-301">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-302"></span>
<span id="cb63-303">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb63-304"></span>
<span id="cb63-305">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-306"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
<p>We’re really clutching at straws here obviously with regards to trying to eke out more performance. The <code>_mm_testc_si128()</code> alteration was a tiny bit slower for version 12 across the board. However, the <code>vptest</code> (which is the underlying assembly instruction that maps to the <code>_mm_testc_si128()</code> intrinsic) version 4 of our assembly was definitely a little bit faster than the other versions. Let’s see how our final C version performs.</p>
</section>
<section id="benchmark-14" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-14">Benchmark 14</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-14-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-14-v1.svg" class="img-fluid figure-img" alt="Benchmark 14"></a></p>
<figcaption>Benchmark 14</figcaption>
</figure>
</div>
<p>Welp, at least it’s consistent! Like version 12, the <code>_mm_testc_si128()</code> change doesn’t really offer a compelling improvement for version 14. That makes version 13 officially our fastest C implementation for round 2.</p>
</section>
<section id="IsPrefixOfStringInTable_x64_5" class="level4">
<h4 class="anchored" data-anchor-id="IsPrefixOfStringInTable_x64_5"><code>IsPrefixOfStringInTable_x64_5</code></h4>
<!-- vim:set ts=8 sw=2 sts=2 expandtab tw=78 -->


</section>
</section>
</section>
</section>

 ]]></description>
  <category>AVX2</category>
  <category>C</category>
  <category>Assembly</category>
  <category>SIMD</category>
  <guid>https://trent.me/articles/is-prefix-of-string-in-table/</guid>
  <pubDate>Fri, 04 May 2018 07:00:00 GMT</pubDate>
</item>
</channel>
</rss>
