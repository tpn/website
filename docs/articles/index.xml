<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Trent Nelson</title>
<link>https://trent.me/articles/</link>
<atom:link href="https://trent.me/articles/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.6.40</generator>
<lastBuildDate>Fri, 04 May 2018 07:00:00 GMT</lastBuildDate>
<item>
  <title>Is Prefix Of String In Table?</title>
  <dc:creator>Trent Nelson</dc:creator>
  <link>https://trent.me/articles/is-prefix-of-string-in-table/</link>
  <description><![CDATA[ 




<p><small> Published: 4th May, 2018. Last updated: 1st November, 2024.</small></p><small>
<p>Thanks to <a href="https://twitter.com/rygorous">Fabian Giesen</a>, <a href="https://twitter.com/pshufb">Wojciech Muła</a>, <a href="https://twitter.com/geofflangdale">Geoff Langdale</a>, <a href="https://twitter.com/lemire">Daniel Lemire</a>, and <a href="https://twitter.com/KendallWillets">Kendall Willets</a> for their valuable <a href="https://twitter.com/trentnelson/status/985715037934440448">feedback</a> on an early draft of this article.</p>
<!-- 15.6 + 48.53 + 2.42 + 33.85 + 42 + 49.67 + 11.55 + 9.12 + 12.95 + 4.87 -->
<p>Hours spent on this article to date: 230.56. Hours spent porting this article from raw HTML to Markdown in 2024: about 16-20. See Colophon for more details.</p>
</small><p><small><a href="https://news.ycombinator.com/item?id=17065991">Hacker News discussion</a> | <a href="https://www.reddit.com/r/programming/comments/8hns4s/a_journey_into_simd_string_processing_and_micro/">Reddit discussion</a> </small></p>
<hr>
<section id="tldr" class="level1">
<h1>TL;DR</h1>
<p>I wrote some C and assembly code that uses SIMD instructions to perform prefix matching of strings. The C code was between 4-7x faster than the baseline implementation for prefix matching. The assembly code was 9-12x faster than the baseline specifically for the negative match case (determining that an incoming string definitely does <strong>not</strong> prefix match any of our known strings). The fastest negative match could be done in around 6 CPU cycles, which is pretty quick. (Integer division, for example, takes about 90 cycles.)</p>
</section>
<section id="overview" class="level1">
<h1>Overview</h1>
<p>Goal: given a string, determine if it prefix-matches a set of known strings as fast as possible. That is, in a set of known strings, do any of them prefix match the incoming search string?</p>
<p>A reference implementation was written in C as a baseline, which simply looped through an array of strings, comparing each one, byte-by-byte, looking for a prefix match. Prefix match performance ranged from 28 CPU cycles to 130, and negative match performance was around 74 cycles.</p>
<p>A SIMD-friendly C structure called <code>STRING_TABLE</code> was derived. It is optimized for up to 16 strings, ideally of length less than or equal to 16 characters. The table is created from the set of known strings up-front; it is sorted by length, ascending, and a unique character (with regards to other characters at the same byte offset) is then extracted, along with its index. A 16-byte character array, <code>STRING_SLOT</code>, is used to capture the unique characters. A 16-element array of unsigned characters, <code>SLOT_INDEX</code>, is used to capture the index. Similarly, lengths are stored in the same fashion via <code>SLOT_LENGTHS</code>. Finally, a 16-element array of <code>STRING_SLOTs</code> is used to capture up to the first 16 bytes of each string in the set.</p>
<p>An example of the memory layout of the <code>STRING_TABLE</code> structure at run time, using sample test data, is depicted below. Note the width of each row is 16 bytes (128 bits), which is the size of an XMM register.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/StringTable.svg" id="fig-stringtable"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/StringTable.svg" class="img-fluid figure-img" alt="The STRING_TABLE Structure"></a></p>
<figcaption>The STRING_TABLE Structure</figcaption>
</figure>
</div>
<p>The layout of the <code>STRING_TABLE</code> structure allows us to determine if a given search string does <strong>not</strong> prefix match all 16 strings at once in 12 assembly instructions. This breaks down into 18 μops, with a block throughput of 3.48 cycles on Intel’s Skylake architecture. (In practice, this clocks in at around 6 CPU cycles.)</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Assembly</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">IACA</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>  String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load address of string buffer.</span></span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast string length.</span></span>
<span id="cb1-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load table lengths.</span></span>
<span id="cb1-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string buffer.</span></span>
<span id="cb1-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>                           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify slots &gt; string len.</span></span>
<span id="cb1-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Rearrange string by unique index.</span></span>
<span id="cb1-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare rearranged to unique.</span></span>
<span id="cb1-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Unique slots AND (!long slots).</span></span>
<span id="cb1-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnc</span>      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; CY=0, continue with routine.</span></span>
<span id="cb1-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; CY=1, no match.</span></span>
<span id="cb1-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                                         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1 (NO_MATCH_FOUND).</span></span>
<span id="cb1-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return NO_MATCH_FOUND.</span></span></code></pre></div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">S:</span>\Source\tracer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>iaca x64\Release\StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dll</span>
<span id="cb2-2">Intel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>R<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> Architecture Code Analyzer</span>
<span id="cb2-3">Version <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>  v3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>g1ba2cbb build date<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2017</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;17:30:24</span></span>
<span id="cb2-4">Analyzed File <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>  x64\Release\StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dll</span>
<span id="cb2-5">Binary Format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">Bit</span></span>
<span id="cb2-6">Architecture  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>  SKL</span>
<span id="cb2-7">Analysis Type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Throughput</span>
<span id="cb2-8"></span>
<span id="cb2-9">Throughput Analysis Report</span>
<span id="cb2-10">--------------------------</span>
<span id="cb2-11">Block Throughput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.48</span> Cycles       Throughput Bottleneck<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> FrontEnd</span>
<span id="cb2-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Loop</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span></span>
<span id="cb2-13">Port Binding In Cycles Per Iteration<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-14">----------------------------------------------------------------------------</span>
<span id="cb2-15">| Port   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> DV  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> D   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> D   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb2-16">----------------------------------------------------------------------------</span>
<span id="cb2-17">| Cycles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb2-18">----------------------------------------------------------------------------</span>
<span id="cb2-19"></span>
<span id="cb2-20">DV <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Divider pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>on port <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-21">D <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Data fetch pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>on ports <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> and <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-22">* - instruction micro<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>ops not bound to a port</span>
<span id="cb2-23">^ - Micro Fusion occurred</span>
<span id="cb2-24"></span>
<span id="cb2-25">|    | Ports pressure in cycles        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb2-26">|μops<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">D</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">V</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> D <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> D <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb2-27">-------------------------------------------</span>
<span id="cb2-28">| 1  |   |   |0.5 0.5|0.5 0.5| |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb2-29">| 2  |   |   |0.5 0.5|0.5 0.5| |1.0|   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb2-30">| 1  |   |   |0.5 0.5|0.5 0.5| |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb2-31">| 1  |   |   |0.5 0.5|0.5 0.5| |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb2-32">| 1  |1.0|   |       |       | |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span></span>
<span id="cb2-33">| 2^ |   |   |0.5 0.5|0.5 0.5| |1.0|   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb2-34">| 2^ |   |1.0|0.5 0.5|0.5 0.5| |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb2-35">| 2  |1.0|   |       |       | |1.0|   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span></span>
<span id="cb2-36">| 1  |   |   |       |       | |   |1.0| | <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnb</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x10</span></span>
<span id="cb2-37">| 1* |   |   |       |       | |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span></span>
<span id="cb2-38">| 1  |   |   |       |       | |   |1.0| | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb2-39">| 3^ |   |   |0.5 0.5|0.5 0.5| |   |   | | <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb2-40">Total Num Of μops<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span></span></code></pre></div>
</div>
</div>
</div>
<p>Here’s a simplified walk-through of a negative match in action, using the search string “CAT”:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/StringTable-NegativeMatch-v3.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/StringTable-NegativeMatch-v3.svg" class="img-fluid figure-img" alt="StringTable Negative Match"></a></p>
<figcaption>StringTable Negative Match</figcaption>
</figure>
</div>
<p>Ten iterations of a function named <code>IsPrefixOfStringInTable</code> were authored. The tenth and final iteration was the fastest, prefix matching in as little as 19 cycles—a 4x improvement over the baseline. Negative matching took 11 cycles—a 6.7x improvement.</p>
<p>An assembly version of the algorithm was authored specifically to optimize for the negative match case, and was able to do so in as little as 8 cycles, representing a 9x improvement over the baseline. (It was a little bit slower than the fastest C routine in the case of prefix matches, though, as can be seen below.)</p>
<p>Feedback for an early draft of this article was then solicited via <a href="https://twitter.com/trentnelson/status/985715037934440448">Twitter</a>, resulting in four more iterations of the C version, and three more iterations of the assembly version. The PGO build of the fastest C version prefix matched in about 16 cycles (and also had the best “worst case input string” performance where three slots needed comparison), negative matching in about 26 cycles. The fifth iteration of the assembly version negative matched in about 6 cycles, a 3 and 1 cycle improvement, respectively.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-Overview-v2.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-Overview-v2.svg" class="img-fluid figure-img" alt="Benchmark Overview"></a></p>
<figcaption>Benchmark Overview</figcaption>
</figure>
</div>
<p>We were then ready to publish, but felt compelled to investigate an odd performance quirk we’d noticed with one of the assembly routines, which yielded 7 more assembly versions. Were any of them faster? Let’s find out.</p>
</section>
<section id="the-background" class="level1">
<h1>The Background</h1>
<section id="the-tracer-project" class="level2">
<h2 class="anchored" data-anchor-id="the-tracer-project">The Tracer Project</h2>
<p>One of the frustrations I had with existing Python profilers was that there was no easy or efficient means to filter or exclude trace information based on the module name of the code being executed. I tackled this in my <a href="https://github.com/tpn/tracer">tracer</a> project, which allows you to set an environment variable named <code>TRACER_MODULE_NAMES</code> to restrict which modules should be traced, e.g.:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode cmd code-with-copy"><code class="sourceCode dosbat"><span id="cb3-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">TRACER_MODULE_NAMES</span>=myproject1;myproject2;myproject3.subproject;numpy;pandas;scipy</span></code></pre></div>
<p>If the code being executed is coming from the module <code>myproject3.subproject.foo</code>, then we need to trace it, as that string <strong>prefix matches</strong> the third entry on our list.</p>
<p>This article details the custom data structure and algorithm I came up with in order to try and solve the prefix matching problem more optimally with a SIMD approach. The resulting <a href="https://github.com/tpn/tracer/tree/master/StringTable2">StringTable</a> component is used extensively within the tracer project, and as such, must conform to unique constraints such as no use of the C runtime library and allocating all memory through TraceStore-backed allocators. Thus, it’s not really something you’d drop in to your current project in its current form. Hopefully, the article still proves to be interesting.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The code samples provided herein are copied directly from the tracer project, which is written in C and assembly, and uses the Pascal-esque <em>Cutler Normal Form</em> style for C. If you’re used to the more UNIX-style <a href="https://www.freebsd.org/cgi/man.cgi?query=style&amp;sektion=9"><em>Kernel Normal Form</em></a> of C, it’s quite like that, except that it’s absolutely nothing like that, and all these code samples will probably be very jarring.</p>
</div>
</div>
</section>
<section id="baseline-c-implementation" class="level2">
<h2 class="anchored" data-anchor-id="baseline-c-implementation">Baseline C Implementation</h2>
<p>The simplest way of solving this in C is to have an array of C strings (i.e., NULL-terminated byte arrays), then for each string, loop through byte by byte and see if it prefix matches the search string.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Baseline (Cutler Normal Form)</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Baseline (Kernel Normal Form)</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Declare a set of module names to be used as a string array.</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> ModuleNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myproject1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myproject2"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myproject3.subproject"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"numpy"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pandas"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-11">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scipy"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb4-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the function pointer typedef.</span></span>
<span id="cb4-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span></span>
<span id="cb4-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb4-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IS_PREFIX_OF_CSTR_IN_ARRAY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span></span>
<span id="cb4-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Out_opt_</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb4-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> IS_PREFIX_OF_CSTR_IN_ARRAY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PIS_PREFIX_OF_CSTR_IN_ARRAY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-27"></span>
<span id="cb4-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb4-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Forward declaration.</span></span>
<span id="cb4-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb4-31"></span>
<span id="cb4-32">IS_PREFIX_OF_CSTR_IN_ARRAY IsPrefixOfCStrInArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-33"></span>
<span id="cb4-34"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb4-35"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb4-36">IsPrefixOfCStrInArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb4-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-39">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb4-40">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-41"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-46">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-47"></span>
<span id="cb4-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++,</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-49">        Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-50">        Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-51">        Right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-52"></span>
<span id="cb4-53">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-54">            Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb4-55">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-56"></span>
<span id="cb4-57">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!*</span>Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-58">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-59">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-60">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-61">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-62">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-63">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-64">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-65">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-66"></span>
<span id="cb4-67">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-68"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb5-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>module_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myproject1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myproject2"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myproject3.subproject"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"numpy"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pandas"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scipy"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-8">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> string_match <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* Index of the match. */</span></span>
<span id="cb5-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-14"></span>
<span id="cb5-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* Number of characters matched. */</span></span>
<span id="cb5-16">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> number_of_chars_matched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-17"></span>
<span id="cb5-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* Pad out to an 8-byte boundary. */</span></span>
<span id="cb5-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb5-20"></span>
<span id="cb5-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* Pointer to the string that was matched. */</span></span>
<span id="cb5-22">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb5-24"></span>
<span id="cb5-25"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span></span>
<span id="cb5-26">is_prefix_of_c_str_in_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-27">                            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-28">                            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> string_match <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-29"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-30">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-31">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-32"></span>
<span id="cb5-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-34">        c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-35">        left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-36">        right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-38">            c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb5-39">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-40">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!*</span>right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-41">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-42">                match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-43">                match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>chars_matched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-44">                match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb5-45">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-46">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-47">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-48">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-49"></span>
<span id="cb5-50">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-51"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
<p>Another type of code pattern that the string table attempts to replace is anything that does a lot of <code>if/else if/else if</code>-type string comparisons to look for keywords. For example, in the <a href="https://github.com/id-Software/Quake-III-Arena/blob/dbe4ddb10315479fc00086f08e25d968b4b43c49/q3asm/q3asm.c#L609">Quake III</a> source, there’s some symbol/string processing logic that looks like this:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// call instructions reset currentArgOffset</span></span>
<span id="cb6-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>strncmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CALL"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-3">    EmitByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>segment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>CODESEG<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> OP_CALL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-4">    instructionCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-5">    currentArgOffset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-8"></span>
<span id="cb6-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// arg is converted to a reversed store</span></span>
<span id="cb6-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>strncmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ARG"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-11">    EmitByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>segment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>CODESEG<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> OP_ARG <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-12">    instructionCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> currentArgOffset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-14">        CodeError<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"currentArgOffset &gt;= 256"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-17">    EmitByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>segment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>CODESEG<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> currentArgOffset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-18">    currentArgOffset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-21"></span>
<span id="cb6-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// ret just leaves something on the op stack</span></span>
<span id="cb6-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>strncmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RET"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-24">    EmitByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>segment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>CODESEG<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> OP_LEAVE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-25">    instructionCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-26">    EmitInt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>segment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>CODESEG<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> currentLocals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> currentArgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-28"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-29"></span>
<span id="cb6-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// pop is needed to discard the return value of</span></span>
<span id="cb6-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a function</span></span>
<span id="cb6-32"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>strncmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pop"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-33">    EmitByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>segment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>CODESEG<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> OP_POP <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-34">    instructionCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-36"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-37"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span></span></code></pre></div>
<p>An example of using the string table approach for this problem is discussed in the Other Applications section.</p>
</section>
<section id="the-proposed-interface" class="level2">
<h2 class="anchored" data-anchor-id="the-proposed-interface">The Proposed Interface</h2>
<p>Let’s take a look at the interface we’re proposing, the <code>IsPrefixOfStringInTable</code> function, that this article is based upon:</p>
<section id="the-isprefixofstringintable-function" class="level3">
<h3 class="anchored" data-anchor-id="the-isprefixofstringintable-function">The IsPrefixOfStringInTable Function</h3>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Our string table index is simply a char, with -1 indicating no match found.</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">CHAR</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-6"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define NO_MATCH_FOUND </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span></span>
<span id="cb7-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb7-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">IS_PREFIX_OF_STRING_IN_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span></span>
<span id="cb7-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb7-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb7-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Out_opt_</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> StringMatch</span>
<span id="cb7-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">IS_PREFIX_OF_STRING_IN_TABLE</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-16"></span>
<span id="cb7-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">IS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-18"></span>
<span id="cb7-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb7-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb7-21">IsPrefixOfStringInTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb7-22">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb7-23">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb7-24">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb7-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb7-27"></span>
<span id="cb7-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb7-29"></span>
<span id="cb7-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb7-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb7-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb7-33"></span>
<span id="cb7-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb7-35"></span>
<span id="cb7-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb7-37"></span>
<span id="cb7-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb7-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb7-40"></span>
<span id="cb7-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb7-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb7-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb7-44"></span>
<span id="cb7-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb7-46"></span>
<span id="cb7-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb7-48"></span>
<span id="cb7-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span></code></pre></div>
<p>All implementations discussed in this article adhere to that function signature. The <code>STRING_TABLE</code> structure will be discussed shortly.</p>
</section>
<section id="the-string_match-structure" class="level3">
<h3 class="anchored" data-anchor-id="the-string_match-structure">The STRING_MATCH Structure</h3>
<p>The <code>STRING_MATCH</code> structure is used to optionally communicate information about the prefix match back to the caller. The index and characters matched fields are often very useful when using the string table for text parsing; see the other applications section below for an example.</p>
<p>The structure is defined as follows:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This structure is used to communicate matches back to the caller.</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> _STRING_MATCH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-6"></span>
<span id="cb8-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Index of the match.</span></span>
<span id="cb8-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-10"></span>
<span id="cb8-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-12"></span>
<span id="cb8-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Number of characters matched.</span></span>
<span id="cb8-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-16"></span>
<span id="cb8-17">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> NumberOfMatchedCharacters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-18"></span>
<span id="cb8-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pad out to 8-bytes.</span></span>
<span id="cb8-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-22"></span>
<span id="cb8-23">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> Padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb8-24"></span>
<span id="cb8-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pointer to the string that was matched.  The underlying buffer will</span></span>
<span id="cb8-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// stay valid for as long as the STRING_TABLE struct persists.</span></span>
<span id="cb8-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb8-29"></span>
<span id="cb8-30">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-31"></span>
<span id="cb8-32"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_MATCH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>PPSTRING_MATCH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_MATCH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
</section>
</section>
<section id="the-test-data" class="level2">
<h2 class="anchored" data-anchor-id="the-test-data">The Test Data</h2>
<p>Instead of using some arbitrary Python module names, this article is going to focus on a string table constructed out of a set of 16 strings that represent reserved names of the NTFS file system, at least when it was first released way back in the early 90s.</p>
<p>This list is desirable as it has good distribution of characters, there is a good mix of both short and long entries, plus one oversized one (<code>$INDEX_ALLOCATION</code>, which clocks in at 17 characters), and almost all strings lead with a common character (the dollar sign), preventing a simple <em>first character</em> optimization used by <a href="https://github.com/tpn/tracer/blob/2018-04-18.1/StringTable/StringTable.h#L324">the initial version of the StringTable component I wrote in 2016</a>.</p>
<p>So the scenario we’ll be emulating, in this case, is that we’ve just been passed a filename for creation, and we need to check if it prefix matches any of the reserved names.</p>
<p>Here’s the full list of NTFS names we’ll be using. We’re assuming 8-bit ASCII encoding (no UTF-8) and case sensitive. (If this were actually the NT kernel, we’d need to use wide characters with UTF-16 encoding, and be case-insensitive.)</p>
<section id="ntfs-reserved-names" class="level3">
<h3 class="anchored" data-anchor-id="ntfs-reserved-names">NTFS Reserved Names</h3>
<ul>
<li><code>$AttrDef</code></li>
<li><code>$BadClus</code></li>
<li><code>$Bitmap</code></li>
<li><code>$Boot</code></li>
<li><code>$Extend</code></li>
<li><code>$LogFile</code></li>
<li><code>$MftMirr</code></li>
<li><code>$Mft</code></li>
<li><code>$Secure</code></li>
<li><code>$UpCase</code></li>
<li><code>$Volume</code></li>
<li><code>$Cairo</code></li>
<li><code>$INDEX_ALLOCATION</code></li>
<li><code>$DATA</code></li>
<li><code>????</code></li>
<li><code>.</code></li>
</ul>
<p>The ordering is important in certain cases. For example, when you have overlapping strings, such as <code>$MftMirr</code> and <code>$Mft</code>, you should put the longest strings first. They will be matched first, and as our routine terminates upon the first successful prefix match—if a longer string resided after a shorter one, it would never get detected.</p>
<p>Let’s review some guiding design requirements and cover some of the design decisions I made, which should help shape your understanding of the implementation.</p>
</section>
</section>
</section>
<section id="requirements-and-design-decisions" class="level1">
<h1>Requirements and Design Decisions</h1>
<ol type="1">
<li>The <code>STRING</code> struct will be used to capture incoming search strings as well as the representation of any strings registered in the table (or more accurately, in the corresponding <code>StringArray</code> structure associated with the string table.</li>
</ol>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The STRING structure used by the NT kernel.  Our STRING_ARRAY structure</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// relies on an array of these structures.  We never pass raw 'char *'s</span></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// around, only STRING/PSTRING structs/pointers.</span></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> _STRING <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> MaximumLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span>  Padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCHAR</span> Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">STRING</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">STRING</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PCSTRING<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<ol start="2" type="1">
<li><p>The design should optimize for string lengths less than or equal to 16. Lengths greater than 16 are permitted, up to 128 bytes, but they incur more overhead during the prefix lookup.</p></li>
<li><p>The design should prioritize the fast-path code where there is no match for a given search string. Being able to terminate the search as early as possible is ideal.</p></li>
<li><p>The performance hits taken by unaligned data access are non-negligible, especially when dealing with XMM/YMM loads. Pay special care to alignment constraints and make sure that everything under our control is aligned on a suitable boundary.</p></li>
</ol>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The only thing we can’t really control in the real world is the alignment of the incoming search string buffer, which will often be at undesirable alignments like 2, 4, 6, etc. Our test program explicitly aligns the incoming search strings on 32-byte boundaries to avoid the penalties associated with unaligned access.</p>
</div>
</div>
<p>The string table is geared toward a single-shot build. Once you’ve created it with a given string array or used a delimited environment variable, that’s it. There are no <code>AddString()</code> or <code>RemoveString()</code> routines. The order you provided the strings in will be the same order the table uses—no re-ordering will be done. Thus, for prefix matching purposes, if two strings share a common prefix, the longer one should go first, as the prefix search routine will check it first.</p>
<p>Only single matches are performed; the first match that qualifies as a prefix match (target string in table had length less than or equal to the search string, and all of its characters matched). There is no support for obtaining multiple matches—if you’ve constructed your string tables properly (no duplicate or incorrectly-ordered overlapping fields), you shouldn’t need to.</p>
<p>So, to summarize, the design guidelines are as follows:</p>
<ul>
<li><p>Prioritize fast-path exit in the non-matched case. (I refer to this as <strong>negative matching</strong> in a lot of places.)</p></li>
<li><p>Optimize for up to 16 string slots, where each slot has up to 16 characters, ideally. It can have up to 128 in total; however, any bytes outside of the first sixteen live in the string array structure supporting the string table (accessible via <code>pStringArray</code>).</p></li>
<li><p>If a slot is longer than 16 characters, optimize for the assumption that it won’t be <em>that</em> much longer. For instance, assume a string of length 18 bytes is more common than 120 bytes.</p></li>
</ul>
</section>
<section id="the-data-structures" class="level1">
<h1>The Data Structures</h1>
<p>The primary data structure employed by this solution is the <code>STRING_TABLE</code> structure. It is composed of supporting structures: <code>STRING_SLOT</code>, <code>SLOT_INDEX</code>, and <code>SLOT_LENGTH</code>, and either embeds or points to the originating <code>STRING_ARRAY</code> structure from which it was created.</p>
<section id="string_table" class="level2">
<h2 class="anchored" data-anchor-id="string_table">STRING_TABLE</h2>
<p>Let’s review the <code>STRING_TABLE</code> <a href="https://github.com/tpn/tracer/blob/2018-04-18.2/StringTable2/StringTable.h#L194">view on GitHub</a> structure first and then touch on the supporting structures.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">C (Cutler Normal Form)</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">C (Kernel Normal Form)</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-3" aria-controls="tabset-3-3" aria-selected="false">MASM</a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The STRING_TABLE struct is an optimized structure for testing whether a</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// prefix entry for a string is in a table, with the expectation that the</span></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// strings being compared will be relatively short (ideally &lt;= 16 characters),</span></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and the table of string prefixes to compare to will be relatively small</span></span>
<span id="cb10-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (ideally &lt;= 16 strings).</span></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The overall goal is to be able to prefix match a string with the lowest</span></span>
<span id="cb10-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// possible (amortized) latency.  Fixed-size, memory-aligned character arrays,</span></span>
<span id="cb10-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and SIMD instructions are used to try and achieve this.</span></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-12"></span>
<span id="cb10-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">_STRING_TABLE</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-14"></span>
<span id="cb10-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A slot where each individual element contains a uniquely-identifying</span></span>
<span id="cb10-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// letter, with respect to the other strings in the table, of each string</span></span>
<span id="cb10-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in an occupied slot.</span></span>
<span id="cb10-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-20"></span>
<span id="cb10-21">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-22"></span>
<span id="cb10-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (16 bytes consumed.)</span></span>
<span id="cb10-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-26"></span>
<span id="cb10-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// For each unique character identified above, the following structure</span></span>
<span id="cb10-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// captures the 0-based index of that character in the underlying string.</span></span>
<span id="cb10-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This is used as an input to vpshufb to rearrange the search string's</span></span>
<span id="cb10-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters such that it can be vpcmpeqb'd against the unique characters</span></span>
<span id="cb10-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// above.</span></span>
<span id="cb10-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-34"></span>
<span id="cb10-35">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_INDEX</span> UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-36"></span>
<span id="cb10-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (32 bytes consumed.)</span></span>
<span id="cb10-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-40"></span>
<span id="cb10-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Length of the underlying string in each slot.</span></span>
<span id="cb10-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-44"></span>
<span id="cb10-45">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-46"></span>
<span id="cb10-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (48 bytes consumed, aligned at 16 bytes.)</span></span>
<span id="cb10-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-50"></span>
<span id="cb10-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-52">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pointer to the STRING_ARRAY associated with this table, which we own</span></span>
<span id="cb10-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (we create it and copy the caller's contents at creation time and</span></span>
<span id="cb10-54">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// deallocate it when we get destroyed).</span></span>
<span id="cb10-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B.  We use pStringArray here instead of StringArray because the</span></span>
<span id="cb10-57">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//       latter is a field name at the end of the struct.</span></span>
<span id="cb10-58">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-60"></span>
<span id="cb10-61">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-62"></span>
<span id="cb10-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (56 bytes consumed, aligned at 8 bytes.)</span></span>
<span id="cb10-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-66"></span>
<span id="cb10-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// String table flags.</span></span>
<span id="cb10-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-70"></span>
<span id="cb10-71">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_FLAGS</span> Flags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-72"></span>
<span id="cb10-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (60 bytes consumed, aligned at 4 bytes.)</span></span>
<span id="cb10-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-76"></span>
<span id="cb10-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A 16-bit bitmap indicating which slots are occupied.</span></span>
<span id="cb10-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-80"></span>
<span id="cb10-81">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> OccupiedBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-82"></span>
<span id="cb10-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A 16-bit bitmap indicating which slots have strings longer than 16 chars.</span></span>
<span id="cb10-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-86"></span>
<span id="cb10-87">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> ContinuationBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-88"></span>
<span id="cb10-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (64 bytes consumed, aligned at 64 bytes.)</span></span>
<span id="cb10-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-92"></span>
<span id="cb10-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The 16-element array of STRING_SLOT structs.  We want this to be aligned</span></span>
<span id="cb10-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// on a 64-byte boundary, and it consumes 256-bytes of memory.</span></span>
<span id="cb10-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-97"></span>
<span id="cb10-98">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb10-99"></span>
<span id="cb10-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (320 bytes consumed, aligned at 64 bytes.)</span></span>
<span id="cb10-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-103"></span>
<span id="cb10-104">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We want the structure size to be a power of 2 such that an even number</span></span>
<span id="cb10-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can fit into a 4KB page (and reducing the likelihood of crossing page</span></span>
<span id="cb10-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// boundaries, which complicates SIMD boundary handling), so we have an</span></span>
<span id="cb10-108">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// extra 192-bytes to play with here.  The CopyStringArray() routine is</span></span>
<span id="cb10-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// special-cased to allocate the backing STRING_ARRAY structure plus the</span></span>
<span id="cb10-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// accommodating buffers in this space if it can fit.</span></span>
<span id="cb10-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (You can test whether or not this occurred by checking the invariant</span></span>
<span id="cb10-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  `StringTable-&gt;pStringArray == &amp;StringTable-&gt;StringArray`, if this</span></span>
<span id="cb10-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  is true, the array was allocated within this remaining padding space.)</span></span>
<span id="cb10-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-116"></span>
<span id="cb10-117">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">union</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-118">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-119">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">CHAR</span> Padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb10-120">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb10-121"></span>
<span id="cb10-122"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PPSTRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-123"></span>
<span id="cb10-124"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-125"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Assert critical size and alignment invariants at compile time.</span></span>
<span id="cb10-126"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb10-127"></span>
<span id="cb10-128"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FIELD_OFFSET</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-129"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FIELD_OFFSET</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-130"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FIELD_OFFSET</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-131"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FIELD_OFFSET</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-132"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FIELD_OFFSET</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">320</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-133"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb11-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> string_table <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-2">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>                       unique_chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb11-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>              unique_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb11-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>              slot_lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb11-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> string_array       <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>string_array_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> string_table_flags  flags<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span>             occupied_bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span>             continuation_bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>                       slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">][</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb11-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">union</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> string_array    string_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-12">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>                   padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">184</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb11-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span></code></pre></div>
</div>
<div id="tabset-3-3" class="tab-pane" aria-labelledby="tabset-3-3-tab">
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb12-1">STRING_TABLE struct</span>
<span id="cb12-2">    UniqueChars         CHAR <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> dup  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(?)</span></span>
<span id="cb12-3">    UniqueIndex         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> dup  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(?)</span></span>
<span id="cb12-4">    Lengths             <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> dup  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(?)</span></span>
<span id="cb12-5">    pStringArray        PSTRING_ARRAY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb12-6">    Flags               ULONG         <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb12-7">    OccupiedBitmap      USHORT        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb12-8">    ContinuationBitmap  USHORT        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb12-9">    Slots               STRING_SLOT <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> dup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">({</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">})</span></span>
<span id="cb12-10">    union</span>
<span id="cb12-11">        StringArray STRING_ARRAY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{?}</span></span>
<span id="cb12-12">        Padding CHAR <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span> dup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(?)</span></span>
<span id="cb12-13">    ends</span>
<span id="cb12-14">STRING_TABLE ends</span>
<span id="cb12-15"></span>
<span id="cb12-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Assert our critical field offsets and structure size as per the same approach</span></span>
<span id="cb12-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; taken in StringTable.h.</span></span>
<span id="cb12-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-20"></span>
<span id="cb12-21">.erre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex  eq  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> @CatStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&lt;</span>UnexpectedOffset STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-22">.erre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths      eq  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> @CatStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&lt;</span>UnexpectedOffset STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-23">.erre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray eq  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> @CatStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&lt;</span>UnexpectedOffset STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-24">.erre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots        eq  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> @CatStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&lt;</span>UnexpectedOffset STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-25">.erre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Padding      eq <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">320</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> @CatStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&lt;</span>UnexpectedOffset STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(</span>STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-26">.erre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>size STRING_TABLE eq <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> @CatStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&lt;</span>IncorrectStructSize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%(</span>size STRING_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-27"></span>
<span id="cb12-28">PSTRING_TABLE typedef <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> STRING_TABLE</span>
<span id="cb12-29"></span>
<span id="cb12-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; CamelCase typedefs that are nicer to work with in assembly</span></span>
<span id="cb12-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; than their uppercase counterparts.</span></span>
<span id="cb12-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-34"></span>
<span id="cb12-35">StringTable typedef STRING_TABLE</span></code></pre></div>
</div>
</div>
</div>
<p>The following diagram depicts an in-memory representation of the <code>STRING_TABLE</code> structure using our NTFS reserved prefix names. It is created via the <code>CreateStringTable</code> routine, which we feature in the appendix of this article.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/StringTable.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/StringTable.svg" class="img-fluid figure-img" alt="STRING_TABLE Diagram"></a></p>
<figcaption>STRING_TABLE Diagram</figcaption>
</figure>
</div>
<p>In order to improve the uniqueness of the unique characters selected from each string, the strings are sorted by length during string table creation and enumerated in this order while identifying unique characters. The rationale behind this is that shorter strings simply have fewer characters to choose from, while longer strings have more to choose from. If we identified unique characters in the order they appear in the string table, we may have longer strings preceding shorter ones, such that toward the end of the table, nothing unique can be extracted from the short ones.</p>
<p>The utility of the string table is maximized by ensuring a unique character is selected from every string; thus, we sort by length first. Note that the uniqueness is actually determined by offset:character pairs, with the offsets becoming the indices stored in the <em>UniqueIndex</em> slot. If you trace through the diagram above, you’ll see that the unique character in each slot matches the character in the corresponding string slot, indicated by the underlying index.</p>
</section>
<section id="string_array" class="level2">
<h2 class="anchored" data-anchor-id="string_array">STRING_ARRAY</h2>
<p>The string array captures a raw array representation of the underlying strings making up the string table. It is either embedded within the padding area at the end of the string table, or a separate allocation is made during string table creation. The main interface to creating a string table is via a <code>STRING_ARRAY</code> structure. The helper functions, <a href="https://github.com/tpn/tracer/blob/2018-04-18.2/StringTable2/CreateStringTable.c#L471"><code>CreateStringTableFromDelimitedString</code></a> and <a href="https://github.com/tpn/tracer/blob/2018-04-18.2/StringTable2/CreateStringTable.c#L595"><code>CreateStringTableFromDelimitedEnvironmentVariable</code></a>, simply break down their input into a <code>STRING_ARRAY</code> representation first before calling <a href="https://github.com/tpn/tracer/blob/2018-04-18.2/StringTable2/CreateStringTable.c#L51"><code>CreateStringTable</code></a>.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb13-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Struct_size_bytes_</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SizeInQuadwords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">_STRING_ARRAY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-2"></span>
<span id="cb13-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Size of the structure, in quadwords.  Why quadwords?  It allows us to</span></span>
<span id="cb13-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// keep this size field to a USHORT, which helps with the rest of the</span></span>
<span id="cb13-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// alignment in this struct (we want the STRING Strings[] array to start</span></span>
<span id="cb13-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// on an 8-byte boundary).</span></span>
<span id="cb13-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B.  We can't express the exact field size in the SAL annotation</span></span>
<span id="cb13-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//       below, because the array of buffer sizes are inexpressible;</span></span>
<span id="cb13-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//       however, we know the maximum length, so we can use the implicit</span></span>
<span id="cb13-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//       invariant that the total buffer size can't exceed whatever num</span></span>
<span id="cb13-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//       elements * max size is.</span></span>
<span id="cb13-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-15"></span>
<span id="cb13-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Field_range_</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&lt;=,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb13-17">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">_STRING_ARRAY</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-18">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>NumberOfElements <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">STRING</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-19">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>MaximumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb13-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb13-21">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> SizeInQuadwords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-22"></span>
<span id="cb13-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Number of elements in the array.</span></span>
<span id="cb13-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-26"></span>
<span id="cb13-27">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-28"></span>
<span id="cb13-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Minimum and maximum lengths for the String-&gt;Length fields.  Optional.</span></span>
<span id="cb13-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-32"></span>
<span id="cb13-33">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> MinimumLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-34">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> MaximumLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-35"></span>
<span id="cb13-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A pointer to the STRING_TABLE structure that "owns" us.</span></span>
<span id="cb13-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-39"></span>
<span id="cb13-40">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">_STRING_TABLE</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-41"></span>
<span id="cb13-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The string array.  Number of elements in the array is governed by the</span></span>
<span id="cb13-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// NumberOfElements field above.</span></span>
<span id="cb13-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb13-46"></span>
<span id="cb13-47">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">STRING</span> Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ANYSIZE_ARRAY</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb13-48"></span>
<span id="cb13-49"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_ARRAY</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>PPSTRING_ARRAY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The odd-looking macros <a href="https://github.com/tpn/winsdk-10/blob/master/Include/10.0.16299.0/shared/sal.h#L597"><code>_Struct_size_bytes_</code></a> and <a href="https://github.com/tpn/winsdk-10/blob/master/Include/10.0.16299.0/shared/sal.h#L615"><code>_Field_range_</code></a> are <a href="https://docs.microsoft.com/en-us/visualstudio/code-quality/annotating-structs-and-classes">SAL Annotations</a>. There’s a neat deck called <a href="https://github.com/tpn/pdfs/blob/master/Program%20Analysis%20with%20PREfast%20and%20SAL%20-%20Erik%20Poll%20-%20Slides%20(3_StaticAnalysisPREfast).pdf">Engineering Better Software at Microsoft</a> which captures some interesting details about SAL, for those wanting to read more. The Code Analysis engine that uses the annotations is built upon the <a href="https://github.com/Z3Prover/z3">Z3 Theorem Prover</a>, which is a fascinating little project in its own right.</p>
</div>
</div>
<p>And finally, we’re left with the smaller helper structs that we use to encapsulate the various innards of the string table. (I use unions that feature <code>XMMWORD</code> representations (which is a typedef of <code>__m128i</code>, representing an XMM register) as well as underlying byte/character representations, as I personally find it makes the resulting C code a bit nicer.)</p>
</section>
<section id="string_slot" class="level2">
<h2 class="anchored" data-anchor-id="string_slot">STRING_SLOT</h2>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// String tables are composed of a 16 element array of 16 byte string "slots",</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// which represent a unique character (with respect to other strings in the</span></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table) for a string in a given slot index. The STRING_SLOT structure</span></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// provides a convenient wrapper around this construct.</span></span>
<span id="cb14-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb14-7"></span>
<span id="cb14-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">union</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DECLSPEC_ALIGN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> _STRING_SLOT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">CHAR</span> Char<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb14-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_SLOT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PPSTRING_SLOT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
</section>
<section id="slot_index" class="level2">
<h2 class="anchored" data-anchor-id="slot_index">SLOT_INDEX</h2>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb15-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A 16 element array of 1 byte unsigned integers, used to capture the length</span></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// of each string slot in a single XMM 128-bit register.</span></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb15-5"></span>
<span id="cb15-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">union</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DECLSPEC_ALIGN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> _SLOT_LENGTHS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb15-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PSLOT_LENGTHS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PPSLOT_LENGTHS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
</section>
<section id="createstringtable" class="level2">
<h2 class="anchored" data-anchor-id="createstringtable">String Table Construction</h2>
<p>The <a href="https://github.com/tpn/tracer/blob/2018-04-18.2/StringTable2/CreateStringTable.c#L147"><code>CreateSingleStringTable</code></a> routine is responsible for the construction of a new <code>STRING_TABLE</code>. It is here that we identify the unique set of characters (and their indices) to store in the first two fields of the string table.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define private types used by this module.</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-4"></span>
<span id="cb16-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">_LENGTH_INDEX_ENTRY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LENGTH_INDEX_ENTRY</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LENGTH_INDEX_ENTRY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PLENGTH_INDEX_ENTRY</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-10"></span>
<span id="cb16-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">_LENGTH_INDEX_TABLE</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-12">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LENGTH_INDEX_ENTRY</span> Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LENGTH_INDEX_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LENGTH_INDEX_TABLE</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PLENGTH_INDEX_TABLE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-15"></span>
<span id="cb16-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">union</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DECLSPEC_ALIGN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> _CHARACTER_BITMAP <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-17">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">YMMWORD</span> Ymm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-18">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> Xmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">LONG</span> Bits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))];</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 8</span></span>
<span id="cb16-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">CHARACTER_BITMAP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C_ASSERT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">CHARACTER_BITMAP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">CHARACTER_BITMAP</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PCHARACTER_BITMAP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-23"></span>
<span id="cb16-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">_SLOT_BITMAPS</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-25">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">CHARACTER_BITMAP</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_BITMAPS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_BITMAPS</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSLOT_BITMAPS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-28"></span>
<span id="cb16-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Function implementation.</span></span>
<span id="cb16-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-32"></span>
<span id="cb16-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb16-34"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span></span>
<span id="cb16-35">CreateSingleStringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb16-36">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PRTL</span> Rtl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-37">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PALLOCATOR</span> StringTableAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-38">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PALLOCATOR</span> StringArrayAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-39">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BOOL</span> CopyArray</span>
<span id="cb16-41">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb16-43"></span>
<span id="cb16-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb16-45"></span>
<span id="cb16-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Allocates space for a STRING_TABLE structure using the provided allocators,</span></span>
<span id="cb16-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    then initializes it using the provided STRING_ARRAY.  If CopyArray is set</span></span>
<span id="cb16-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    to TRUE, the routine will copy the string array such that the caller is</span></span>
<span id="cb16-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    free to destroy it after the table has been successfully created.  If it</span></span>
<span id="cb16-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    is set to FALSE and StringArray-&gt;StringTable has a non-NULL value, it is</span></span>
<span id="cb16-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    assumed that sufficient space has already been allocated for the string</span></span>
<span id="cb16-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    table and this pointer will be used to initialize the rest of the structure.</span></span>
<span id="cb16-53"></span>
<span id="cb16-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    DestroyStringTable() must be called against the returned PSTRING_TABLE when</span></span>
<span id="cb16-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the structure is no longer needed in order to ensure resources are released.</span></span>
<span id="cb16-56"></span>
<span id="cb16-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb16-58"></span>
<span id="cb16-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Rtl - Supplies a pointer to an initialized RTL structure.</span></span>
<span id="cb16-60"></span>
<span id="cb16-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTableAllocator - Supplies a pointer to an ALLOCATOR structure which</span></span>
<span id="cb16-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        will be used for creating the STRING_TABLE.</span></span>
<span id="cb16-63"></span>
<span id="cb16-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringArrayAllocator - Supplies a pointer to an ALLOCATOR structure which</span></span>
<span id="cb16-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        may be used to create the STRING_ARRAY if it cannot fit within the</span></span>
<span id="cb16-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        padding of the STRING_TABLE structure.  This is kept separate from the</span></span>
<span id="cb16-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        StringTableAllocator due to the stringent alignment requirements of the</span></span>
<span id="cb16-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        string table.</span></span>
<span id="cb16-69"></span>
<span id="cb16-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringArray - Supplies a pointer to an initialized STRING_ARRAY structure</span></span>
<span id="cb16-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        that contains the STRING structures that are to be added to the table.</span></span>
<span id="cb16-72"></span>
<span id="cb16-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    CopyArray - Supplies a boolean value indicating whether or not the</span></span>
<span id="cb16-74"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        StringArray structure should be deep-copied during creation.  This is</span></span>
<span id="cb16-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        typically set when the caller wants to be able to free the structure</span></span>
<span id="cb16-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        as soon as this call returns (or can't guarantee it will persist past</span></span>
<span id="cb16-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        this function's invocation, i.e. if it was stack allocated).</span></span>
<span id="cb16-78"></span>
<span id="cb16-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb16-80"></span>
<span id="cb16-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    A pointer to a valid PSTRING_TABLE structure on success, NULL on failure.</span></span>
<span id="cb16-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Call DestroyStringTable() on the returned structure when it is no longer</span></span>
<span id="cb16-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    needed in order to ensure resources are cleaned up appropriately.</span></span>
<span id="cb16-84"></span>
<span id="cb16-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb16-86"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-87">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Byte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-88">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-89">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-90">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-91">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-92">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> HighestBit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-93">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> OccupiedMask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-94">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PULONG</span> Bits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-95">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> OccupiedBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-96">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> ContinuationBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-97">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-98">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-99">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-100">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-101">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-102">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_INDEX</span> UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-103">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_INDEX</span> LengthIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-104">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-105">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LENGTH_INDEX_TABLE</span> LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-106">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PCHARACTER_BITMAP</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-107">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_BITMAPS</span> SlotBitmaps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-108">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PLENGTH_INDEX_ENTRY</span> Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-109"></span>
<span id="cb16-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Validate arguments.</span></span>
<span id="cb16-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-113"></span>
<span id="cb16-114">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringTableAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-115">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-116">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-117"></span>
<span id="cb16-118">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArrayAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-119">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-120">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-121"></span>
<span id="cb16-122">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SourceStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-123">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-124">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-125"></span>
<span id="cb16-126">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SourceStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfElements <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-127">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-128">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-129"></span>
<span id="cb16-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the incoming string array if applicable.</span></span>
<span id="cb16-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-133"></span>
<span id="cb16-134">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CopyArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-135"></span>
<span id="cb16-136">        StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CopyStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb16-137">            StringTableAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-138">            StringArrayAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-139">            SourceStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-140">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FIELD_OFFSET</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span></span>
<span id="cb16-141">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span></span>
<span id="cb16-142">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable</span>
<span id="cb16-143">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-144"></span>
<span id="cb16-145">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-146">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-147">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-148"></span>
<span id="cb16-149">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-150"></span>
<span id="cb16-151">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-152">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're not copying the array, so initialize StringArray to point at</span></span>
<span id="cb16-153">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the caller's SourceStringArray, and StringTable to point at the</span></span>
<span id="cb16-154">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// array's StringTable field (which will be non-NULL if sufficient</span></span>
<span id="cb16-155">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// space has been allocated).</span></span>
<span id="cb16-156">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-157"></span>
<span id="cb16-158">        StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SourceStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-159">        StringTable <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-160"></span>
<span id="cb16-161">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-162"></span>
<span id="cb16-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-164">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If StringTable has no value, we've either been called with CopyArray set</span></span>
<span id="cb16-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to FALSE, or CopyStringArray() wasn't able to allocate sufficient space</span></span>
<span id="cb16-166">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// for both the table and itself.  Either way, we need to allocate space for</span></span>
<span id="cb16-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the table.</span></span>
<span id="cb16-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-169"></span>
<span id="cb16-170">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-171"></span>
<span id="cb16-172">        StringTable <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span></span>
<span id="cb16-173">            StringTableAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>AlignedCalloc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb16-174">                StringTableAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Context<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-175">                <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-176">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span></span>
<span id="cb16-177">                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_ALIGNMENT</span></span>
<span id="cb16-178">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-179">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-180"></span>
<span id="cb16-181">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-182">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-183">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-184">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-185"></span>
<span id="cb16-186">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-187">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Make sure the fields that are sensitive to alignment are, in fact,</span></span>
<span id="cb16-188">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// aligned correctly.</span></span>
<span id="cb16-189">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-190"></span>
<span id="cb16-191">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>AssertStringTableFieldAlignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-192">        DestroyStringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringTableAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-193">                           StringArrayAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb16-194">                           StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-195">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-196">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-197"></span>
<span id="cb16-198">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-199">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// At this point, we have copied the incoming StringArray if necessary,</span></span>
<span id="cb16-200">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and we've allocated sufficient space for the StringTable structure.</span></span>
<span id="cb16-201">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Enumerate over all of the strings, set the continuation bit if the</span></span>
<span id="cb16-202">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// length &gt; 16, set the relevant slot length, set the relevant unique</span></span>
<span id="cb16-203">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// character entry, then move the first 16-bytes of the string into the</span></span>
<span id="cb16-204">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// relevant slot via an aligned SSE mov.</span></span>
<span id="cb16-205">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-206"></span>
<span id="cb16-207">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-208">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize pointers and counters, clear stack-based structures.</span></span>
<span id="cb16-209">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-210"></span>
<span id="cb16-211">    Slot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-212">    String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-213"></span>
<span id="cb16-214">    OccupiedBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-215">    ContinuationBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-216">    NumberOfElements <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-217">    UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_setzero_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-218">    UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_setzero_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-219">    LengthIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_setzero_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-220"></span>
<span id="cb16-221">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-222">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set all the slot lengths to 0x7f up front instead of defaulting</span></span>
<span id="cb16-223">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to zero.  This allows for simpler logic when searching for a prefix</span></span>
<span id="cb16-224">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// string, which involves broadcasting a search string's length to an XMM</span></span>
<span id="cb16-225">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register, then doing _mm_cmpgt_epi8() against the lengths array and</span></span>
<span id="cb16-226">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the string length.  If we left the lengths as 0 for unused slots, they</span></span>
<span id="cb16-227">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// would get included in the resulting comparison register (i.e. the high</span></span>
<span id="cb16-228">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// bits would be set to 1), so we'd have to do a subsequent masking of</span></span>
<span id="cb16-229">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the result at some point using the OccupiedBitmap.  By defaulting the</span></span>
<span id="cb16-230">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// lengths to 0x7f, we ensure they'll never get included in any cmpgt-type</span></span>
<span id="cb16-231">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// SIMD matches.  (We use 0x7f instead of 0xff because the _mm_cmpgt_epi8()</span></span>
<span id="cb16-232">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// intrinsic assumes packed signed integers.)</span></span>
<span id="cb16-233">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-234"></span>
<span id="cb16-235">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x7f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-236"></span>
<span id="cb16-237">    ZeroStruct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-238">    ZeroStruct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SlotBitmaps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-239"></span>
<span id="cb16-240">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-241"></span>
<span id="cb16-242">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-243"></span>
<span id="cb16-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the string length for the slot.</span></span>
<span id="cb16-246">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-247"></span>
<span id="cb16-248">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-249"></span>
<span id="cb16-250">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-251">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the appropriate bit in the continuation bitmap if the string is</span></span>
<span id="cb16-252">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// longer than 16 bytes.</span></span>
<span id="cb16-253">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-254"></span>
<span id="cb16-255">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-256">            ContinuationBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb16-257">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-258"></span>
<span id="cb16-259">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-260"></span>
<span id="cb16-261">            Entry <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-262">            Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-263">            Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-264"></span>
<span id="cb16-265">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-266"></span>
<span id="cb16-267">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-268">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Perform a linear scan of the length-index table in order to</span></span>
<span id="cb16-269">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// identify an appropriate insertion point.</span></span>
<span id="cb16-270">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-271"></span>
<span id="cb16-272">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-273">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-274">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-275">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-276">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-277"></span>
<span id="cb16-278">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-279"></span>
<span id="cb16-280">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-281">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// New entry doesn't go at the end of the table, so shuffle</span></span>
<span id="cb16-282">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// everything else down.</span></span>
<span id="cb16-283">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-284"></span>
<span id="cb16-285">                Rtl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>RtlMoveMemory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span></span>
<span id="cb16-286">                                   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span></span>
<span id="cb16-287">                                   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb16-288">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-289"></span>
<span id="cb16-290">            Entry <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-291">            Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-292">            Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-293">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-294"></span>
<span id="cb16-295">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-296">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the first 16-bytes of the string into the relevant slot.  We</span></span>
<span id="cb16-297">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// have taken care to ensure everything is 16-byte aligned by this</span></span>
<span id="cb16-298">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// stage, so we can use SSE intrinsics here.</span></span>
<span id="cb16-299">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-300"></span>
<span id="cb16-301">        CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-302">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_store_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;(*</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-303"></span>
<span id="cb16-304">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-305">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Advance our pointers.</span></span>
<span id="cb16-306">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-307"></span>
<span id="cb16-308">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-309">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-310"></span>
<span id="cb16-311">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-312"></span>
<span id="cb16-313">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-314">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store the slot lengths.</span></span>
<span id="cb16-315">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-316"></span>
<span id="cb16-317">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_store_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;(</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-318"></span>
<span id="cb16-319">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-320">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Loop through the strings in order of shortest to longest and construct</span></span>
<span id="cb16-321">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the uniquely-identifying character table with corresponding index.</span></span>
<span id="cb16-322">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-323"></span>
<span id="cb16-324"></span>
<span id="cb16-325">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-326">        Entry <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>LengthIndexTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-327">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-328">        Slot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-329"></span>
<span id="cb16-330">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-331">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate over each character in the slot and find the first one</span></span>
<span id="cb16-332">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// without a corresponding bit set.</span></span>
<span id="cb16-333">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-334"></span>
<span id="cb16-335">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-336">            Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>SlotBitmaps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-337">            Bits <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PULONG</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&amp;</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Bits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-338">            Byte <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Char<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-339">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>BitTestAndSet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Byte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-340">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-341">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-342">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-343"></span>
<span id="cb16-344">        UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Char<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Byte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-345">        UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-346">        LengthIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-347">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-348"></span>
<span id="cb16-349">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-350">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Loop through the elements again such that the unique chars are stored</span></span>
<span id="cb16-351">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the order they appear in the table.</span></span>
<span id="cb16-352">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-353"></span>
<span id="cb16-354">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-355">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-356">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-357">                StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Char<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Char<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-358">                StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-359">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-360">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-361">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-362">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-363"></span>
<span id="cb16-364">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-365">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate and store the occupied bitmap.  Each bit, from low to high,</span></span>
<span id="cb16-366">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// corresponds to the index of a slot.  When set, the slot is occupied.</span></span>
<span id="cb16-367">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// When clear, it is not.  So, fill bits from the highest bit set down.</span></span>
<span id="cb16-368">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-369"></span>
<span id="cb16-370">    HighestBit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb16-371">    OccupiedMask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_blsmsk_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>HighestBit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-372">    StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>OccupiedBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>OccupiedMask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-373"></span>
<span id="cb16-374">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-375">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store the continuation bitmap.</span></span>
<span id="cb16-376">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-377"></span>
<span id="cb16-378">    StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ContinuationBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>ContinuationBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-379"></span>
<span id="cb16-380">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-381">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Wire up the string array to the table.</span></span>
<span id="cb16-382">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-383"></span>
<span id="cb16-384">    StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-385"></span>
<span id="cb16-386">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-387">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// And we're done, return the table.</span></span>
<span id="cb16-388">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb16-389"></span>
<span id="cb16-390">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-391"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="the-benchmark" class="level1">
<h1>The Benchmark</h1>
<p>The performance comparison graphs in the subsequent sections were generated in Excel, using CSV data output by the creatively-named program <a href="https://github.com/tpn/tracer/blob/2018-04-18.2/StringTable2BenchmarkExe/main.c#L227"><code>StringTable2BenchmarkExe</code></a>.</p>
<p>Modern CPUs are fast, and timing is challenging, especially when you’re dealing with CPU cycle comparisons. No approach is perfect. Here’s what I settled on:</p>
<ol type="1">
<li><p>The benchmark utility has <code>#pragma optimize("", off)</code> at the start of the file, which disables global optimizations, even in release (optimized) builds. This prevents the compiler from doing clever things regarding the scheduling of the timestamping logic, which affects reported times.</p></li>
<li><p>The benchmark utility pins itself to a single core and sets its thread priority to the highest permissible value at startup. (Turbo is disabled on the computer, so the frequency is pinned to 3.68GHz.)</p></li>
<li><p>The benchmark utility is fed an array of function pointers and test inputs. It iterates over each test input, then iterates over each function, calling it with the test input and potentially verifying the result (some functions are included for comparison but don’t produce correct results, so they don’t have their results verified).</p></li>
<li><p>The test input string is copied into a local buffer aligned on a 32-byte boundary. This ensures that all test inputs are being compared fairly. (The natural alignment of the buffers varies anywhere from 2 to 512 bytes, and unaligned buffers have a significant impact on the timings.)</p></li>
<li><p>The function is run once, with the result captured. If verification has been requested, the result is verified. We <code>__debugbreak()</code> immediately if there’s a mismatch, which is handy during development.</p></li>
<li><p><code>NtDelayExecution(TRUE, 1)</code> is called, which results in a sleep of approximately 100 nanoseconds. This forces a context switch, giving the thread a new scheduling quantum before each function is run.</p></li>
<li><p>The function is executed 100 times for warmup.</p></li>
<li><p>Timings are taken for 1000 iterations of the function using the given test input. The <code>__rdtscp()</code> intrinsic is used (which forces some serialization) to capture the timestamp counter before and after the iterations.</p></li>
<li><p>This process is repeated 100 times. The minimum time observed to perform 1000 iterations (out of 100 attempts) is captured as the function’s best time.</p></li>
</ol>
<section id="release-vs-pgo-oddities" class="level2">
<h2 class="anchored" data-anchor-id="release-vs-pgo-oddities">Release vs PGO Oddities</h2>
<p>All of the times in the graphs come from the profile-guided optimization (PGO) build of the <code>StringTable</code> component. The PGO build is faster than the normal release build in every case except one, where it is notably slower.</p>
<p>It’s… odd. I haven’t investigated it. The following graph depicts the affected function, <code>IsPrefixOfStringInTable_1</code>, and a few other versions for reference, showing the performance of the PGO build compared to the release build on the input strings <code>"$INDEX_ALLOCATION"</code> and <code>"$Bai123456789012"</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-Release-vs-PGO-v3.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-Release-vs-PGO-v3.svg" class="img-fluid figure-img" alt="Benchmark Release vs PGO"></a></p>
<figcaption>Benchmark Release vs PGO</figcaption>
</figure>
</div>
<p>Only that function is affected, and the problem mainly manifests with the two example test strings shown. As this routine essentially serves as one of the initial baseline implementations, it would be misleading to compare all optimized PGO versions to the abnormally slow baseline implementation. Therefore, the release and PGO timings were blended into a single CSV, and the Excel PivotTables select the minimum time for a given function and test input.</p>
<p>Thus, you’re always looking at the PGO timings, except for this outlier case where the release versions are faster.</p>
</section>
</section>
<section id="implementations" class="level1">
<h1>The Implementations</h1>
<section id="round1" class="level2">
<h2 class="anchored" data-anchor-id="round1">Round 1</h2>
<p>In this section, we’ll take a look at the various implementations I experimented with on the first pass, prior to soliciting any feedback. I figured there were a couple of ways I could present this information. First, I could hand-pick what I choose to show and hide, creating a rosy picture that makes it seem like I effortlessly arrived at the fastest implementation without much actual effort whatsoever.</p>
<p>Or I could show the gritty reality of how everything <strong>actually</strong> went down in chronological fashion, errors and all. And there were definitely some errors! For better or worse, I’ve chosen this route, so you’ll get to see some pretty tedious tweaks (changing a single line, for example) before the juicy stuff really kicks in.</p>
<p>Additionally, with the benefit of writing this section introduction retroactively, iterations 4 and 5 aren’t testing what I initially thought they were testing. I’ve left them in as is; if anything, it demonstrates the importance of only changing one thing at a time and making sure you’re testing what you think you’re testing. I’ll discuss the errors with those iterations later in the article.</p>
<section id="c-implementations" class="level3">
<h3 class="anchored" data-anchor-id="c-implementations">C Implementations</h3>
<section id="isprefixofcstrinarray" class="level4">
<h4 class="anchored" data-anchor-id="isprefixofcstrinarray">IsPrefixOfCStrInArray</h4>
<p>IsPrefixOfStringInTable_1 →</p>
<p>Let’s review the baseline implementation again, as that’s what we’re ultimately comparing ourselves against. This version enumerates the string array (and thus has a slightly different function signature than the <code>STRING_TABLE</code>-based functions) looking for prefix matches. No SIMD instructions are used. The timings captured should be proportional to the location of the test input string in the array. That is, it should take less time to prefix match strings that occur earlier in the array versus those that appear later.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb17-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb17-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb17-3">IsPrefixOfCStrInArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb17-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb17-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb17-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb17-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb17-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-14"></span>
<span id="cb17-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++,</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-16">        Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-17">        Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-18">        Right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-19"></span>
<span id="cb17-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(*</span>Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-21">            Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb17-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-23"></span>
<span id="cb17-24">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!*</span>Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-25">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-26">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-27">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-28">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-29">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-31">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-32">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-33"></span>
<span id="cb17-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="isprefixofstringintable_1" class="level4">
<h4 class="anchored" data-anchor-id="isprefixofstringintable_1">IsPrefixOfStringInTable_1</h4>
<p>← IsPrefixOfCStrInArray | IsPrefixOfStringInTable_2 →</p>
<p>This version is similar to the <code>IsPrefixOfCStrInArray</code> implementation, except it utilizes the slot length information provided by the <code>STRING_ARRAY</code> structure and conforms to our standard <code>IsPrefixOfStringInTable</code> function signature. It uses no SIMD instructions.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb18-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb18-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb18-3">IsPrefixOfStringInTable_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb18-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb18-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb18-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb18-9"></span>
<span id="cb18-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb18-11"></span>
<span id="cb18-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb18-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb18-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb18-15"></span>
<span id="cb18-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine performs a simple linear scan of the string table looking for</span></span>
<span id="cb18-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    a prefix match against each slot.</span></span>
<span id="cb18-18"></span>
<span id="cb18-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb18-20"></span>
<span id="cb18-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb18-22"></span>
<span id="cb18-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb18-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb18-25"></span>
<span id="cb18-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb18-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb18-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb18-29"></span>
<span id="cb18-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb18-31"></span>
<span id="cb18-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb18-33"></span>
<span id="cb18-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb18-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-40">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-42"></span>
<span id="cb18-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_START();</span></span>
<span id="cb18-44"></span>
<span id="cb18-45">    StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-46"></span>
<span id="cb18-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>MinimumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-48">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-49">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-50"></span>
<span id="cb18-51">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-52"></span>
<span id="cb18-53">        TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb18-54"></span>
<span id="cb18-55">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-56">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-57">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-58"></span>
<span id="cb18-59">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-60">            Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb18-61">            Right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb18-62">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-63">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-64">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-65">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-66"></span>
<span id="cb18-67">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-68"></span>
<span id="cb18-69">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-70"></span>
<span id="cb18-71">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-72">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-73">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-74"></span>
<span id="cb18-75">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-76"></span>
<span id="cb18-77">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-78">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-79"></span>
<span id="cb18-80">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-81"></span>
<span id="cb18-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-83"></span>
<span id="cb18-84">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-85"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="benchmark-1" class="level4 unlisted">
<h4 class="unlisted anchored" data-anchor-id="benchmark-1">Benchmark 1</h4>
<p>Here’s the performance of these two baseline routines:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-01-v6.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-01-v6.svg" class="img-fluid figure-img" alt="Benchmark 1"></a></p>
<figcaption>Benchmark 1</figcaption>
</figure>
</div>
<p>That’s an interesting result! Even without using any SIMD instructions, version 1, the <code>IsPrefixOfStringInTable_1</code> routine, is faster (in all but one case) than the baseline <code>IsPrefixOfCStrInArray</code> routine, thanks to a more sophisticated data structure.</p>
<p>(And really, it’s not even using the sophisticated parts of the <code>STRING_TABLE</code>; it’s just leveraging the fact that we’ve captured the lengths of each string in the backing <code>STRING_ARRAY</code> structure by virtue of using the <code>STRING</code> structure to wrap our strings (instead of relying on the standard NULL-terminated C string approach).)</p>
<hr>
<p>Before we look at <code>IsPrefixOfStringInTable_2</code>, which is the first of the routines to use SIMD instructions, it’s helpfu to know some backstory. The <code>_2</code> version is based on the prefix matching routine I wrote for the first version of the <code>StringTable</code> component back in 2016. The layout of the <code>STRING_TABLE</code> struct differed in the first version; only the first character of each slot was used to do the initial exclusion (as opposed to the unique character), and lengths were unsigned shorts instead of chars (16 bits instead of 8 bits), so the match bitmap had to be constructed slightly differently.</p>
<p>None of those details really apply to our second attempt at the <code>StringTable</code> component, detailed in this article. Our lengths are 8 bits, and we use unique characters in the initial negative match fast-path. However, the first version used an elaborate AVX2 prefix match routine geared toward matching long strings, attempting to use non-temporal streaming load instructions where possible (which would only make sense for a large number of long strings in specific cache-thrashing scenarios).</p>
<p>Compare our simpler implementation, <code>IsPrefixMatch</code>, used from version 3 onward, to the far more elaborate (and unnecessary) <code>IsPrefixMatchAvx2</code>:</p>
</section>
<section id="isprefixmatch" class="level4">
<h4 class="anchored" data-anchor-id="isprefixmatch">IsPrefixMatch</h4>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb19-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FORCEINLINE</span></span>
<span id="cb19-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span></span>
<span id="cb19-3">IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb19-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> PCSTRING SearchString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb19-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> PCSTRING TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb19-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Offset</span>
<span id="cb19-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb19-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PBYTE</span> Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PBYTE</span> Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Matched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> Remaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-13"></span>
<span id="cb19-14">    Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PBYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">RtlOffsetToPointer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-15">    Right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PBYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">RtlOffsetToPointer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-16"></span>
<span id="cb19-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Remaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-18">        Matched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb19-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb19-20"></span>
<span id="cb19-21">    Matched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Matched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-24">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb19-25"></span>
<span id="cb19-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> Matched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-27"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="isprefixmatchavx2" class="level4">
<h4 class="anchored" data-anchor-id="isprefixmatchavx2">IsPrefixMatchAvx2</h4>
<p>The AVX2 routine is overkill, especially considering the emphasis we put on favoring short strings over longer ones in the requirements section. However, we want to put broad statements like that to the test, so let’s include it as our first SIMD implementation to see how it stacks up against the simpler versions.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb20-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FORCEINLINE</span></span>
<span id="cb20-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span></span>
<span id="cb20-3">IsPrefixMatchAvx2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb20-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> PCSTRING SearchString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> PCSTRING TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> Offset</span>
<span id="cb20-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb20-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> SearchStringRemaining<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> TargetStringRemaining<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONGLONG</span> SearchStringAlignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONGLONG</span> TargetStringAlignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-14"></span>
<span id="cb20-15">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">LONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-16">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">LONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-17"></span>
<span id="cb20-18">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCHAR</span> SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCHAR</span> TargetBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-20"></span>
<span id="cb20-21">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> SearchSlot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-22"></span>
<span id="cb20-23">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> SearchXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-24">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TargetXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-25">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> ResultXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-26"></span>
<span id="cb20-27">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">YMMWORD</span> SearchYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-28">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">YMMWORD</span> TargetYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-29">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">YMMWORD</span> ResultYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-30"></span>
<span id="cb20-31">    SearchStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SearchString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-32">    TargetStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-33"></span>
<span id="cb20-34">    SearchBuffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCHAR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">RtlOffsetToPointer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-35">    TargetBuffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCHAR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">RtlOffsetToPointer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-36"></span>
<span id="cb20-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This routine is only called in the final stage of a prefix match when</span></span>
<span id="cb20-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// we've already verified the slot's corresponding original string length</span></span>
<span id="cb20-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (referred in this routine as the target string) is less than or equal</span></span>
<span id="cb20-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to the length of the search string.</span></span>
<span id="cb20-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We attempt as many 32-byte comparisons as we can, then as many 16-byte</span></span>
<span id="cb20-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// comparisons as we can, then a final &lt; 16-byte comparison if necessary.</span></span>
<span id="cb20-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-46">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We use aligned loads if possible, falling back to unaligned if not.</span></span>
<span id="cb20-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-48"></span>
<span id="cb20-49">StartYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb20-50"></span>
<span id="cb20-51">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> TargetStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-52"></span>
<span id="cb20-53">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-54">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We have at least 32 bytes to compare for each string.  Check the</span></span>
<span id="cb20-55">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// alignment for each buffer and do an aligned streaming load (non-</span></span>
<span id="cb20-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// temporal hint) if our alignment is at a 32-byte boundary or better;</span></span>
<span id="cb20-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// reverting to an unaligned load when not.</span></span>
<span id="cb20-58">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-59"></span>
<span id="cb20-60">        SearchStringAlignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GetAddressAlignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-61">        TargetStringAlignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GetAddressAlignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TargetBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-62"></span>
<span id="cb20-63">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchStringAlignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-64">            SearchYmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm256_loadu_si256</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PYMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-65">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-66">            SearchYmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm256_stream_load_si256</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PYMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-67">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-68"></span>
<span id="cb20-69">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TargetStringAlignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-70">            TargetYmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm256_loadu_si256</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PYMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>TargetBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-71">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-72">            TargetYmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm256_stream_load_si256</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PYMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>TargetBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-73">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-74"></span>
<span id="cb20-75">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-76">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the two vectors.</span></span>
<span id="cb20-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-78"></span>
<span id="cb20-79">        ResultYmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm256_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-80"></span>
<span id="cb20-81">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-82">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask from the result of the comparison.</span></span>
<span id="cb20-83">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-84"></span>
<span id="cb20-85">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm256_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ResultYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-86"></span>
<span id="cb20-87">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-88">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// There were at least 32 characters remaining in each string buffer,</span></span>
<span id="cb20-89">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, every character needs to have matched in order for this search</span></span>
<span id="cb20-90">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to continue.  If there were less than 32 characters, we can terminate</span></span>
<span id="cb20-91">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this prefix search here.  (-1 == 0xffffffff == all bits set == all</span></span>
<span id="cb20-92">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters matched.)</span></span>
<span id="cb20-93">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-94"></span>
<span id="cb20-95">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-96"></span>
<span id="cb20-97">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-98">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not all characters were matched, terminate the prefix search.</span></span>
<span id="cb20-99">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-100"></span>
<span id="cb20-101">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-102">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-103"></span>
<span id="cb20-104">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-105">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// All 32 characters were matched.  Update counters and pointers</span></span>
<span id="cb20-106">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// accordingly and jump back to the start of the 32-byte processing.</span></span>
<span id="cb20-107">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-108"></span>
<span id="cb20-109">        SearchStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-110">        TargetStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-111"></span>
<span id="cb20-112">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-113"></span>
<span id="cb20-114">        SearchBuffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-115">        TargetBuffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-116"></span>
<span id="cb20-117">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> StartYmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-118">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-119"></span>
<span id="cb20-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Intentional follow-on to StartXmm.</span></span>
<span id="cb20-122">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-123"></span>
<span id="cb20-124">StartXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb20-125"></span>
<span id="cb20-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the search string's alignment.</span></span>
<span id="cb20-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-129"></span>
<span id="cb20-130">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> TargetStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-131"></span>
<span id="cb20-132">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-133">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We have at least 16 bytes to compare for each string.  Check the</span></span>
<span id="cb20-134">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// alignment for each buffer and do an aligned streaming load (non-</span></span>
<span id="cb20-135">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// temporal hint) if our alignment is at a 16-byte boundary or better;</span></span>
<span id="cb20-136">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// reverting to an unaligned load when not.</span></span>
<span id="cb20-137">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-138"></span>
<span id="cb20-139">        SearchStringAlignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GetAddressAlignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-140"></span>
<span id="cb20-141">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchStringAlignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-142">            SearchXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*)</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-143">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-144">            SearchXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_stream_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*)</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-145">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-146"></span>
<span id="cb20-147">        TargetXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_stream_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*)</span>TargetBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-148"></span>
<span id="cb20-149">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-150">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the two vectors.</span></span>
<span id="cb20-151">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-152"></span>
<span id="cb20-153">        ResultXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-154"></span>
<span id="cb20-155">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-156">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask from the result of the comparison.</span></span>
<span id="cb20-157">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-158"></span>
<span id="cb20-159">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ResultXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-160"></span>
<span id="cb20-161">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-162">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// There were at least 16 characters remaining in each string buffer,</span></span>
<span id="cb20-163">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, every character needs to have matched in order for this search</span></span>
<span id="cb20-164">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to continue.  If there were less than 16 characters, we can terminate</span></span>
<span id="cb20-165">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this prefix search here.  (-1 == 0xffff -&gt; all bits set -&gt; all chars</span></span>
<span id="cb20-166">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// matched.)</span></span>
<span id="cb20-167">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-168"></span>
<span id="cb20-169">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">SHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">SHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-170"></span>
<span id="cb20-171">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-172">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not all characters were matched, terminate the prefix search.</span></span>
<span id="cb20-173">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-174"></span>
<span id="cb20-175">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-176">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-177"></span>
<span id="cb20-178">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-179">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// All 16 characters were matched.  Update counters and pointers</span></span>
<span id="cb20-180">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// accordingly and jump back to the start of the 16-byte processing.</span></span>
<span id="cb20-181">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-182"></span>
<span id="cb20-183">        SearchStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-184">        TargetStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-185"></span>
<span id="cb20-186">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-187"></span>
<span id="cb20-188">        SearchBuffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-189">        TargetBuffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-190"></span>
<span id="cb20-191">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> StartXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-192">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-193"></span>
<span id="cb20-194">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TargetStringRemaining <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-195"></span>
<span id="cb20-196">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-197">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We'll get here if we successfully prefix matched the search string</span></span>
<span id="cb20-198">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and all our buffers were aligned (i.e. we don't have a trailing</span></span>
<span id="cb20-199">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// &lt; 16 bytes comparison to perform).</span></span>
<span id="cb20-200">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-201"></span>
<span id="cb20-202">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-203">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-204"></span>
<span id="cb20-205">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-206">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we have less than 16 bytes to compare.  Our target</span></span>
<span id="cb20-207">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// strings are guaranteed to be 16-byte aligned, so we can load them</span></span>
<span id="cb20-208">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// using an aligned stream load as in the previous cases.</span></span>
<span id="cb20-209">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-210"></span>
<span id="cb20-211">    TargetXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_stream_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>TargetBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-212"></span>
<span id="cb20-213">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-214">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Loading the remainder of our search string's buffer is a little more</span></span>
<span id="cb20-215">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// complicated.  It could reside within 15 bytes of the end of the page</span></span>
<span id="cb20-216">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// boundary, which would mean that a 128-bit load would cross a page</span></span>
<span id="cb20-217">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// boundary.</span></span>
<span id="cb20-218">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-219">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// At best, the page will belong to our process and we'll take a performance</span></span>
<span id="cb20-220">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// hit.  At worst, we won't own the page, and we'll end up triggering a hard</span></span>
<span id="cb20-221">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// page fault.</span></span>
<span id="cb20-222">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-223">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// So, see if the current search buffer address plus 16 bytes crosses a page</span></span>
<span id="cb20-224">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// boundary.  If it does, take the safe but slower approach of a ranged</span></span>
<span id="cb20-225">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// memcpy (movsb) into a local stack-allocated STRING_SLOT structure.</span></span>
<span id="cb20-226">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-227"></span>
<span id="cb20-228">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>PointerToOffsetCrossesPageBoundary<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-229"></span>
<span id="cb20-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No page boundary is crossed, so just do an unaligned 128-bit move</span></span>
<span id="cb20-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// into our Xmm register.  (We could do the aligned/unaligned dance</span></span>
<span id="cb20-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// here, but it's the last load we'll be doing (i.e. it's not</span></span>
<span id="cb20-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// potentially on a loop path), so I don't think it's worth the extra</span></span>
<span id="cb20-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// branch cost, although I haven't measured this empirically.)</span></span>
<span id="cb20-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-237"></span>
<span id="cb20-238">        SearchXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*)</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-239"></span>
<span id="cb20-240">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-241"></span>
<span id="cb20-242">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We cross a page boundary, so only copy the the bytes we need via</span></span>
<span id="cb20-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// __movsb(), then do an aligned stream load into the Xmm register</span></span>
<span id="cb20-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// we'll use in the comparison.</span></span>
<span id="cb20-246">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-247"></span>
<span id="cb20-248">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__movsb</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PBYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&amp;</span>SearchSlot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Char<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-249">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PBYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>SearchBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-250">                SearchStringRemaining<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-251"></span>
<span id="cb20-252">        SearchXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_stream_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>SearchSlot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-253">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-254"></span>
<span id="cb20-255">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-256">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the final vectors.</span></span>
<span id="cb20-257">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-258"></span>
<span id="cb20-259">    ResultXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SearchXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-260"></span>
<span id="cb20-261">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-262">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask from the result of the comparison, but mask off (zero</span></span>
<span id="cb20-263">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// out) high bits from the target string's remaining length.</span></span>
<span id="cb20-264">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-265"></span>
<span id="cb20-266">    Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ResultXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> TargetStringRemaining<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-267"></span>
<span id="cb20-268">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-269">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters were matched and determine if we were a</span></span>
<span id="cb20-270">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// successful prefix match or not.</span></span>
<span id="cb20-271">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-272"></span>
<span id="cb20-273">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-274"></span>
<span id="cb20-275">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> TargetStringRemaining<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-276"></span>
<span id="cb20-277">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-278">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we matched the same amount of characters as remaining in the</span></span>
<span id="cb20-279">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// target string, we've successfully prefix matched the search string.</span></span>
<span id="cb20-280">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Return the total number of characters we matched.</span></span>
<span id="cb20-281">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-282"></span>
<span id="cb20-283">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-284">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-285">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-286"></span>
<span id="cb20-287">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-288">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// After all that work, our string match failed at the final stage!  Return</span></span>
<span id="cb20-289">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to the caller indicating we were unable to make a prefix match.</span></span>
<span id="cb20-290">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb20-291"></span>
<span id="cb20-292">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-293"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="isprefixofstringintable_2" class="level4">
<h4 class="anchored" data-anchor-id="isprefixofstringintable_2">IsPrefixOfStringInTable_2</h4>
<p>← IsPrefixOfStringInTable_1 | IsPrefixOfStringInTable_3 →</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>This is is the first time we’re seeing the full body of the SIMD-style <code>IsPrefixOfStringInTable</code> implementation. It’s heavily commented, and generally, the core algorithm doesn’t fundamentally change across iterations (just slight tweaks). I’d recommend reading through it thoroughly to build a mental model of how the matching algorithm works. It’s straightforward, and the subsequent iterations will make much more sense, as they’re typically presented as diffs against the previous version.</p>
</div>
</div>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb21-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb21-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb21-3">IsPrefixOfStringInTable_2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb21-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb21-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb21-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb21-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb21-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb21-9"></span>
<span id="cb21-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb21-11"></span>
<span id="cb21-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb21-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb21-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb21-15"></span>
<span id="cb21-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This is our first AVX-optimized version of the routine.</span></span>
<span id="cb21-17"></span>
<span id="cb21-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb21-19"></span>
<span id="cb21-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb21-21"></span>
<span id="cb21-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb21-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb21-24"></span>
<span id="cb21-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb21-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb21-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb21-28"></span>
<span id="cb21-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb21-30"></span>
<span id="cb21-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb21-32"></span>
<span id="cb21-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb21-34"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-35">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-45">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-58"></span>
<span id="cb21-59">    StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-60"></span>
<span id="cb21-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the minimum length of the string array is greater than the length of</span></span>
<span id="cb21-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// our search string, there can't be a prefix match.</span></span>
<span id="cb21-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-65"></span>
<span id="cb21-66">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>MinimumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-67">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-68">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-69"></span>
<span id="cb21-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb21-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb21-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb21-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb21-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb21-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb21-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb21-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb21-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb21-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb21-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb21-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb21-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb21-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb21-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb21-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb21-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb21-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb21-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb21-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb21-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb21-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb21-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb21-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb21-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-103"></span>
<span id="cb21-104">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb21-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-107"></span>
<span id="cb21-108">    LoadSearchStringIntoXmmRegister<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-109"></span>
<span id="cb21-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb21-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb21-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-114"></span>
<span id="cb21-115">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb21-116">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-117"></span>
<span id="cb21-118">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb21-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-121"></span>
<span id="cb21-122">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-123"></span>
<span id="cb21-124">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb21-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-127"></span>
<span id="cb21-128">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-129"></span>
<span id="cb21-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb21-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-133"></span>
<span id="cb21-134">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-135">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-136"></span>
<span id="cb21-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb21-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb21-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb21-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb21-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb21-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-144"></span>
<span id="cb21-145">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-146"></span>
<span id="cb21-147">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb21-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb21-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb21-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb21-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb21-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb21-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-156"></span>
<span id="cb21-157">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-158"></span>
<span id="cb21-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb21-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb21-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb21-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-164"></span>
<span id="cb21-165">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-166"></span>
<span id="cb21-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb21-169">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb21-170">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb21-171">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb21-172">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-173"></span>
<span id="cb21-174">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb21-175">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-176"></span>
<span id="cb21-177">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-178">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb21-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-180"></span>
<span id="cb21-181">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-182"></span>
<span id="cb21-183">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-184"></span>
<span id="cb21-185">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-186">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb21-187">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb21-188">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb21-189">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-190"></span>
<span id="cb21-191">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-192">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-193"></span>
<span id="cb21-194">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-195">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb21-196">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb21-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-198"></span>
<span id="cb21-199">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-200"></span>
<span id="cb21-201">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-202"></span>
<span id="cb21-203">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-204">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb21-205">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb21-206">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-207"></span>
<span id="cb21-208">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-209">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-210"></span>
<span id="cb21-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-212">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb21-213">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb21-214">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb21-215">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-216"></span>
<span id="cb21-217">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-218">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-219"></span>
<span id="cb21-220">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-221">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb21-222">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-223"></span>
<span id="cb21-224">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-225">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb21-226"></span>
<span id="cb21-227">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-228">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb21-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-230"></span>
<span id="cb21-231">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-232"></span>
<span id="cb21-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb21-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb21-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb21-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb21-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb21-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb21-240">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb21-241">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb21-242">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb21-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-244"></span>
<span id="cb21-245">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-246"></span>
<span id="cb21-247">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-248">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb21-249">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-250"></span>
<span id="cb21-251">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-252"></span>
<span id="cb21-253">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-254"></span>
<span id="cb21-255">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-256">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb21-257">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb21-258">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb21-259">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-260"></span>
<span id="cb21-261">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb21-262"></span>
<span id="cb21-263">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatchAvx2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-264"></span>
<span id="cb21-265">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-266"></span>
<span id="cb21-267">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-268">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb21-269">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-270"></span>
<span id="cb21-271">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-272"></span>
<span id="cb21-273">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-274"></span>
<span id="cb21-275">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-276">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb21-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb21-278">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb21-279">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb21-280">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb21-281">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-282"></span>
<span id="cb21-283">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-284">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-285">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-286"></span>
<span id="cb21-287">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-288"></span>
<span id="cb21-289">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb21-290"></span>
<span id="cb21-291">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-292">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb21-293">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb21-294">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb21-295">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-296"></span>
<span id="cb21-297"></span>
<span id="cb21-298">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-299"></span>
<span id="cb21-300">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-301">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-302">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb21-303"></span>
<span id="cb21-304">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-305"></span>
<span id="cb21-306">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-307">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-308"></span>
<span id="cb21-309">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-310">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb21-311">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-312"></span>
<span id="cb21-313">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-314"></span>
<span id="cb21-315">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-316">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb21-317">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb21-318"></span>
<span id="cb21-319">NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb21-320"></span>
<span id="cb21-321">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb21-322"></span>
<span id="cb21-323">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-324"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="benchmark-2" class="level4 unlisted">
<h4 class="unlisted anchored" data-anchor-id="benchmark-2">Benchmark 2</h4>
<p>Let’s see how version 2, our first SIMD attempt, performs in comparison to the two baselines.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-02-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-02-v1.svg" class="img-fluid figure-img" alt="Benchmark 2"></a></p>
<figcaption>Benchmark 2</figcaption>
</figure>
</div>
<p>Eek! Our first SIMD attempt actually has worse prefix matching performance in most cases! The only area where it shows a performance improvement is in negative matching.</p>
</section>
<section id="isprefixofstringintable_3" class="level4">
<h4 class="anchored" data-anchor-id="isprefixofstringintable_3">IsPrefixOfStringInTable_3</h4>
<p>← IsPrefixOfStringInTable_2 | IsPrefixOfStringInTable_4 →</p>
<p>For version 3, let’s replace the call to <code>IsPrefixMatchAvx2</code> with our simpler version, <code>IsPrefixMatch</code>:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-4-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-1" aria-controls="tabset-4-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-2" aria-controls="tabset-4-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-4-1" class="tab-pane active" aria-labelledby="tabset-4-1-tab">
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb22-1">% diff -u IsPrefixOfStringInTable_2.c IsPrefixOfStringInTable_3.c</span>
<span id="cb22-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_2.c 2018-04-15 22:35:55.458773500 -0400</span></span>
<span id="cb22-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_3.c 2018-04-15 22:35:55.456274700 -0400</span></span>
<span id="cb22-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,7 +18,7 @@</span></span>
<span id="cb22-5"></span>
<span id="cb22-6"> _Use_decl_annotations_</span>
<span id="cb22-7"> STRING_TABLE_INDEX</span>
<span id="cb22-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_2(</span></span>
<span id="cb22-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_3(</span></span>
<span id="cb22-10">     PSTRING_TABLE StringTable,</span>
<span id="cb22-11">     PSTRING String,</span>
<span id="cb22-12">     PSTRING_MATCH Match</span>
<span id="cb22-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -278,7 +278,7 @@</span></span>
<span id="cb22-14"></span>
<span id="cb22-15">             TargetString = &amp;StringTable-&gt;pStringArray-&gt;Strings[Index];</span>
<span id="cb22-16"></span>
<span id="cb22-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            CharactersMatched = IsPrefixMatchAvx2(String, TargetString, 16);</span></span>
<span id="cb22-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            CharactersMatched = IsPrefixMatch(String, TargetString, 16);</span></span>
<span id="cb22-19"></span>
<span id="cb22-20">             if (CharactersMatched == NO_MATCH_FOUND) {</span></code></pre></div>
</div>
<div id="tabset-4-2" class="tab-pane" aria-labelledby="tabset-4-2-tab">
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb23-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb23-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb23-3">IsPrefixOfStringInTable_3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb23-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb23-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb23-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb23-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb23-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb23-9"></span>
<span id="cb23-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb23-11"></span>
<span id="cb23-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb23-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb23-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb23-15"></span>
<span id="cb23-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This is our first AVX-optimized version of the routine.</span></span>
<span id="cb23-17"></span>
<span id="cb23-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb23-19"></span>
<span id="cb23-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb23-21"></span>
<span id="cb23-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb23-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb23-24"></span>
<span id="cb23-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb23-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb23-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb23-28"></span>
<span id="cb23-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb23-30"></span>
<span id="cb23-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb23-32"></span>
<span id="cb23-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb23-34"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-35">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-45">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-58"></span>
<span id="cb23-59">    StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-60"></span>
<span id="cb23-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the minimum length of the string array is greater than the length of</span></span>
<span id="cb23-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// our search string, there can't be a prefix match.</span></span>
<span id="cb23-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-65"></span>
<span id="cb23-66">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>MinimumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-67">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-68">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-69"></span>
<span id="cb23-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb23-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb23-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb23-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb23-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb23-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb23-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb23-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb23-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb23-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb23-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb23-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb23-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb23-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb23-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb23-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb23-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb23-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb23-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb23-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb23-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb23-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb23-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb23-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb23-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-103"></span>
<span id="cb23-104">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb23-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-107"></span>
<span id="cb23-108">    LoadSearchStringIntoXmmRegister<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-109"></span>
<span id="cb23-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb23-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb23-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-114"></span>
<span id="cb23-115">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb23-116">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-117"></span>
<span id="cb23-118">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb23-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-121"></span>
<span id="cb23-122">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-123"></span>
<span id="cb23-124">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb23-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-127"></span>
<span id="cb23-128">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-129"></span>
<span id="cb23-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb23-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-133"></span>
<span id="cb23-134">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-135">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-136"></span>
<span id="cb23-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb23-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb23-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb23-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb23-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb23-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-144"></span>
<span id="cb23-145">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-146"></span>
<span id="cb23-147">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb23-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb23-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb23-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb23-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb23-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb23-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-156"></span>
<span id="cb23-157">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-158"></span>
<span id="cb23-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb23-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb23-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb23-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-164"></span>
<span id="cb23-165">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-166"></span>
<span id="cb23-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb23-169">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb23-170">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb23-171">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb23-172">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-173"></span>
<span id="cb23-174">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb23-175">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-176"></span>
<span id="cb23-177">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-178">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb23-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-180"></span>
<span id="cb23-181">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-182"></span>
<span id="cb23-183">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-184"></span>
<span id="cb23-185">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-186">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb23-187">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb23-188">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb23-189">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-190"></span>
<span id="cb23-191">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-192">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-193"></span>
<span id="cb23-194">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-195">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb23-196">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb23-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-198"></span>
<span id="cb23-199">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-200"></span>
<span id="cb23-201">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-202"></span>
<span id="cb23-203">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-204">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb23-205">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb23-206">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-207"></span>
<span id="cb23-208">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-209">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-210"></span>
<span id="cb23-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-212">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb23-213">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb23-214">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb23-215">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-216"></span>
<span id="cb23-217">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-218">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-219"></span>
<span id="cb23-220">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-221">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb23-222">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-223"></span>
<span id="cb23-224">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-225">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb23-226"></span>
<span id="cb23-227">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-228">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb23-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-230"></span>
<span id="cb23-231">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-232"></span>
<span id="cb23-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb23-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb23-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb23-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb23-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb23-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb23-240">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb23-241">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb23-242">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb23-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-244"></span>
<span id="cb23-245">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-246"></span>
<span id="cb23-247">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-248">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb23-249">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-250"></span>
<span id="cb23-251">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-252"></span>
<span id="cb23-253">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-254"></span>
<span id="cb23-255">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-256">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb23-257">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb23-258">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb23-259">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-260"></span>
<span id="cb23-261">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb23-262"></span>
<span id="cb23-263">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-264"></span>
<span id="cb23-265">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-266"></span>
<span id="cb23-267">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-268">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb23-269">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-270"></span>
<span id="cb23-271">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-272"></span>
<span id="cb23-273">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-274"></span>
<span id="cb23-275">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-276">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb23-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb23-278">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb23-279">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb23-280">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb23-281">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-282"></span>
<span id="cb23-283">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-284">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-285">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-286"></span>
<span id="cb23-287">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-288"></span>
<span id="cb23-289">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb23-290"></span>
<span id="cb23-291">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-292">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb23-293">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb23-294">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb23-295">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-296"></span>
<span id="cb23-297"></span>
<span id="cb23-298">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-299"></span>
<span id="cb23-300">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-301">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-302">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb23-303"></span>
<span id="cb23-304">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-305"></span>
<span id="cb23-306">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-307">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-308"></span>
<span id="cb23-309">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-310">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb23-311">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-312"></span>
<span id="cb23-313">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-314"></span>
<span id="cb23-315">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-316">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb23-317">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb23-318"></span>
<span id="cb23-319">NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb23-320"></span>
<span id="cb23-321">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb23-322"></span>
<span id="cb23-323">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-324"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="benchmark-3" class="level4 unlisted">
<h4 class="unlisted anchored" data-anchor-id="benchmark-3">Benchmark 3</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-03-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-03-v1.svg" class="img-fluid figure-img" alt="Benchmark 3"></a></p>
<figcaption>Benchmark 3</figcaption>
</figure>
</div>
<p>Phew! We finally see superior performance across the board. This ends the short-lived tenure of version 2, which is demonstrably worse in every case.</p>
<p>We’ll also omit the <code>IsPrefixOfCStrInArray</code> routine from the graphs for now (for the most part), as it has served its initial baseline purpose.</p>
</section>
<section id="isprefixofstringintable_4" class="level4">
<h4 class="anchored" data-anchor-id="isprefixofstringintable_4">IsPrefixOfStringInTable_4</h4>
<p>← IsPrefixOfStringInTable_3 | IsPrefixOfStringInTable_5 →</p>
<p>When I first wrote the initial string table code, I was experimenting with different strategies for loading the initial search string buffer. That resulted in the file <a href="https://github.com/tpn/tracer/blob/v0.1.11/StringTable2/StringLoadStoreOperations.h"><code>StringLoadStoreOperations.h</code></a>, which defined a bunch of helper macros. I’ve included them below, but don’t spend too much time absorbing them—they’re not good practice, and they all become irrelevant as soon as we switch to <code>_mm_loadu_si128()</code> in a few versions. I’m including them because they set the scene for versions 4, 5, and 6.</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb24-2"></span>
<span id="cb24-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    VOID</span></span>
<span id="cb24-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LoadSearchStringIntoXmmRegister_SEH(</span></span>
<span id="cb24-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ STRING_SLOT Slot,</span></span>
<span id="cb24-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ PSTRING String,</span></span>
<span id="cb24-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ USHORT LengthVar</span></span>
<span id="cb24-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        );</span></span>
<span id="cb24-9"></span>
<span id="cb24-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb24-11"></span>
<span id="cb24-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Attempts an aligned 128-bit load of String-&gt;Buffer into Slot.CharXmm via</span></span>
<span id="cb24-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the _mm_load_si128() intrinsic.  The intrinsic is surrounded in a __try/</span></span>
<span id="cb24-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    __except block that catches EXCEPTION_ACCESS_VIOLATION exceptions.</span></span>
<span id="cb24-15"></span>
<span id="cb24-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    If such an exception is caught, the routine will check to see if the string</span></span>
<span id="cb24-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    buffer's address will cross a page boundary if 16-bytes are loaded.  If a</span></span>
<span id="cb24-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    page boundary would be crossed, a __movsb() intrinsic is used to copy only</span></span>
<span id="cb24-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the bytes specified by String-&gt;Length, otherwise, an unaligned 128-bit load</span></span>
<span id="cb24-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    is attemped via the _mm_loadu_si128() intrinsic.</span></span>
<span id="cb24-21"></span>
<span id="cb24-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb24-23"></span>
<span id="cb24-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Slot - Supplies the STRING_SLOT local variable name within the calling</span></span>
<span id="cb24-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        function that will receive the results of the load operation.</span></span>
<span id="cb24-26"></span>
<span id="cb24-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies the name of the PSTRING variable that is to be loaded</span></span>
<span id="cb24-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        into the slot.  This will usually be one of the function parameters.</span></span>
<span id="cb24-29"></span>
<span id="cb24-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LengthVar - Supplies the name of a USHORT local variable that will receive</span></span>
<span id="cb24-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        the value of min(String-&gt;Length, 16).</span></span>
<span id="cb24-32"></span>
<span id="cb24-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb24-34"></span>
<span id="cb24-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    None.</span></span>
<span id="cb24-36"></span>
<span id="cb24-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb24-38"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define LoadSearchStringIntoXmmRegister_SEH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">   </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-39"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span>LengthVar<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                               </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-40"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    TRY_SSE42_ALIGNED </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                                </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-41"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">CharsXmm </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">      </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-42"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> CATCH_EXCEPTION_ACCESS_VIOLATION </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                               </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-43"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">PointerToOffsetCrossesPageBoundary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">  </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-44"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__movsb</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">             </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-45"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                                       </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-46"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">            Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">CharsXmm </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-47"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                                              </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-48"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-49"></span>
<span id="cb24-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb24-51"></span>
<span id="cb24-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    VOID</span></span>
<span id="cb24-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LoadSearchStringIntoXmmRegister_AlignmentCheck(</span></span>
<span id="cb24-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ STRING_SLOT Slot,</span></span>
<span id="cb24-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ PSTRING String,</span></span>
<span id="cb24-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ USHORT LengthVar</span></span>
<span id="cb24-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        );</span></span>
<span id="cb24-58"></span>
<span id="cb24-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb24-60"></span>
<span id="cb24-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine checks to see if a page boundary will be crossed if 16-bytes</span></span>
<span id="cb24-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    are loaded from the address supplied by String-&gt;Buffer.  If a page boundary</span></span>
<span id="cb24-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    will be crossed, a __movsb() intrinsic is used to only copy String-&gt;Length</span></span>
<span id="cb24-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    bytes into the given Slot.</span></span>
<span id="cb24-65"></span>
<span id="cb24-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    If no page boundary will be crossed by a 128-bit load, the alignment of</span></span>
<span id="cb24-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the address supplied by String-&gt;Buffer is checked.  If the alignment isn't</span></span>
<span id="cb24-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    at least on a 16-byte boundary, an unaligned load will be issued via the</span></span>
<span id="cb24-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    _mm_loadu_si128() intrinsic, otherwise, an _mm_load_si128() will be used.</span></span>
<span id="cb24-70"></span>
<span id="cb24-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb24-72"></span>
<span id="cb24-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Slot - Supplies the STRING_SLOT local variable name within the calling</span></span>
<span id="cb24-74"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        function that will receive the results of the load operation.</span></span>
<span id="cb24-75"></span>
<span id="cb24-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies the name of the PSTRING variable that is to be loaded</span></span>
<span id="cb24-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        into the slot.  This will usually be one of the function parameters.</span></span>
<span id="cb24-78"></span>
<span id="cb24-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LengthVar - Supplies the name of a USHORT local variable that will receive</span></span>
<span id="cb24-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        the value of min(String-&gt;Length, 16).</span></span>
<span id="cb24-81"></span>
<span id="cb24-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb24-83"></span>
<span id="cb24-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    None.</span></span>
<span id="cb24-85"></span>
<span id="cb24-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb24-87"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define LoadSearchStringIntoXmmRegister_AlignmentCheck</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-88"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span>LengthVar<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                       </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-89"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">PointerToOffsetCrossesPageBoundary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">              </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-90"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__movsb</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                         </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-91"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">GetAddressAlignment</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                     </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-92"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">CharsXmm </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">             </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-93"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                                                   </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-94"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">CharsXmm </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">              </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-95"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-96"></span>
<span id="cb24-97"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb24-98"></span>
<span id="cb24-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    VOID</span></span>
<span id="cb24-100"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LoadSearchStringIntoXmmRegister_AlwaysUnaligned(</span></span>
<span id="cb24-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ STRING_SLOT Slot,</span></span>
<span id="cb24-102"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ PSTRING String,</span></span>
<span id="cb24-103"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ USHORT LengthVar</span></span>
<span id="cb24-104"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        );</span></span>
<span id="cb24-105"></span>
<span id="cb24-106"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb24-107"></span>
<span id="cb24-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine performs an unaligned 128-bit load of the address supplied by</span></span>
<span id="cb24-109"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String-&gt;Buffer into the given Slot via the _mm_loadu_si128() intrinsic.</span></span>
<span id="cb24-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    No checks are done regarding whether or not a page boundary will be crossed.</span></span>
<span id="cb24-111"></span>
<span id="cb24-112"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb24-113"></span>
<span id="cb24-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Slot - Supplies the STRING_SLOT local variable name within the calling</span></span>
<span id="cb24-115"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        function that will receive the results of the load operation.</span></span>
<span id="cb24-116"></span>
<span id="cb24-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies the name of the PSTRING variable that is to be loaded</span></span>
<span id="cb24-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        into the slot.  This will usually be one of the function parameters.</span></span>
<span id="cb24-119"></span>
<span id="cb24-120"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LengthVar - Supplies the name of a USHORT local variable that will receive</span></span>
<span id="cb24-121"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        the value of min(String-&gt;Length, 16).</span></span>
<span id="cb24-122"></span>
<span id="cb24-123"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb24-124"></span>
<span id="cb24-125"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    None.</span></span>
<span id="cb24-126"></span>
<span id="cb24-127"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb24-128"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define LoadSearchStringIntoXmmRegister_Unaligned</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-129"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span>LengthVar<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                   </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-130"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">PointerToOffsetCrossesPageBoundary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">          </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-131"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__movsb</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                     </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-132"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">GetAddressAlignment</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                 </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-133"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">CharsXmm </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                   </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-134"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                                               </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-135"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">CharsXmm </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-136"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-137"></span>
<span id="cb24-138"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb24-139"></span>
<span id="cb24-140"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    VOID</span></span>
<span id="cb24-141"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LoadSearchStringIntoXmmRegister_AlwaysMovsb(</span></span>
<span id="cb24-142"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ STRING_SLOT Slot,</span></span>
<span id="cb24-143"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ PSTRING String,</span></span>
<span id="cb24-144"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        _In_ USHORT LengthVar</span></span>
<span id="cb24-145"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        );</span></span>
<span id="cb24-146"></span>
<span id="cb24-147"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb24-148"></span>
<span id="cb24-149"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine copies min(String-&gt;Length, 16) bytes from String-&gt;Buffer</span></span>
<span id="cb24-150"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    into the given Slot via the __movsb() intrinsic.  The memory referenced by</span></span>
<span id="cb24-151"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the Slot is not cleared first via SecureZeroMemory().</span></span>
<span id="cb24-152"></span>
<span id="cb24-153"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb24-154"></span>
<span id="cb24-155"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Slot - Supplies the STRING_SLOT local variable name within the calling</span></span>
<span id="cb24-156"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        function that will receive the results of the load operation.</span></span>
<span id="cb24-157"></span>
<span id="cb24-158"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies the name of the PSTRING variable that is to be loaded</span></span>
<span id="cb24-159"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        into the slot.  This will usually be one of the function parameters.</span></span>
<span id="cb24-160"></span>
<span id="cb24-161"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    LengthVar - Supplies the name of a USHORT local variable that will receive</span></span>
<span id="cb24-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        the value of min(String-&gt;Length, 16).</span></span>
<span id="cb24-163"></span>
<span id="cb24-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb24-165"></span>
<span id="cb24-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    None.</span></span>
<span id="cb24-167"></span>
<span id="cb24-168"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb24-169"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define LoadSearchStringIntoXmmRegister_AlwaysMovsb</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-170"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span>LengthVar<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                     </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-171"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__movsb</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Slot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Buffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>LengthVar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
<p>In our <a href="https://github.com/tpn/tracer/blob/v0.1.11/StringTable2/StringTable2.vcxproj#L52"><code>StringTable2.vcxproj</code></a> file, we have the following:</p>
<hr>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode xml code-with-copy"><code class="sourceCode xml"><span id="cb25-1">  &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">PropertyGroup</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> Label=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Globals"</span>&gt;</span>
<span id="cb25-2">    ...</span>
<span id="cb25-3">    &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">LoadSearchStringStrategy</span>&gt;AlwaysMovsb&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">LoadSearchStringStrategy</span>&gt;</span>
<span id="cb25-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!--</span></span>
<span id="cb25-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    &lt;LoadSearchStringStrategy&gt;SEH&lt;/LoadSearchStringStrategy&gt;</span></span>
<span id="cb25-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    &lt;LoadSearchStringStrategy&gt;AlignmentCheck&lt;/LoadSearchStringStrategy&gt;</span></span>
<span id="cb25-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    &lt;LoadSearchStringStrategy&gt;AlwaysUnaligned&lt;/LoadSearchStringStrategy&gt;</span></span>
<span id="cb25-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    --&gt;</span></span></code></pre></div>
<p>This setup allowed me to toggle which strategy I wanted to use for loading the search string into an XMM register. As shown above, the default is to use the <code>AlwaysMovsb</code> approach*; so, for version 4, let’s swap that out for the <code>SEH</code> approach, which wraps the aligned load in a structured exception handler that falls back to <code>__movsb()</code> if the aligned load fails and the pointer plus 16 bytes crosses a page boundary.</p>
<p><small> [*]: Or was it?</small></p><small>
<p>Narrator: <a href="https://github.com/tpn/tracer/blob/v0.1.11/StringTable2/StringLoadStoreOperations.h#L226">it wasn’t</a>.</p>
</small><p><small></small></p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-5-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-1" aria-controls="tabset-5-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-5-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-2" aria-controls="tabset-5-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-5-1" class="tab-pane active" aria-labelledby="tabset-5-1-tab">
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb26-1">% diff -u IsPrefixOfStringInTable_4.c IsPrefixOfStringInTable_3.c</span>
<span id="cb26-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_3.c 2018-04-15 22:35:55.456274700 -0400</span></span>
<span id="cb26-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_4.c 2018-04-15 22:35:55.453274200 -0400</span></span>
<span id="cb26-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,7 +18,7 @@</span></span>
<span id="cb26-5"></span>
<span id="cb26-6"> _Use_decl_annotations_</span>
<span id="cb26-7"> STRING_TABLE_INDEX</span>
<span id="cb26-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_3(</span></span>
<span id="cb26-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_4(</span></span>
<span id="cb26-10">     PSTRING_TABLE StringTable,</span>
<span id="cb26-11">     PSTRING String,</span>
<span id="cb26-12">     PSTRING_MATCH Match</span>
<span id="cb26-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,7 +31,8 @@</span></span>
<span id="cb26-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb26-15">     or is equal to" the search string.</span>
<span id="cb26-16"></span>
<span id="cb26-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This is our first AVX-optimized version of the routine.</span></span>
<span id="cb26-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This routine is a variant of version 3 that uses a structured exception</span></span>
<span id="cb26-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    handler for loading the initial search string.</span></span>
<span id="cb26-20"></span>
<span id="cb26-21"> Arguments:</span>
<span id="cb26-22"></span>
<span id="cb26-23"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -123,7 +124,7 @@</span></span>
<span id="cb26-24">     // Load the first 16-bytes of the search string into an XMM register.</span>
<span id="cb26-25">     //</span>
<span id="cb26-26"></span>
<span id="cb26-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    LoadSearchStringIntoXmmRegister(Search, String, SearchLength);</span></span>
<span id="cb26-28"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    LoadSearchStringIntoXmmRegister_SEH(Search, String, SearchLength);</span></span>
<span id="cb26-29"></span>
<span id="cb26-30">     //</span>
<span id="cb26-31">     // Broadcast the search string's unique characters according to the string</span></code></pre></div>
</div>
<div id="tabset-5-2" class="tab-pane" aria-labelledby="tabset-5-2-tab">
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb27-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb27-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb27-3">IsPrefixOfStringInTable_4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb27-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb27-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb27-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb27-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb27-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb27-9"></span>
<span id="cb27-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb27-11"></span>
<span id="cb27-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb27-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb27-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb27-15"></span>
<span id="cb27-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine is a variant of version 3 that uses a structured exception</span></span>
<span id="cb27-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    handler for loading the initial search string.</span></span>
<span id="cb27-18"></span>
<span id="cb27-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb27-20"></span>
<span id="cb27-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb27-22"></span>
<span id="cb27-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb27-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb27-25"></span>
<span id="cb27-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb27-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb27-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb27-29"></span>
<span id="cb27-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb27-31"></span>
<span id="cb27-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb27-33"></span>
<span id="cb27-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb27-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-50">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-58">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-59"></span>
<span id="cb27-60">    StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-61"></span>
<span id="cb27-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the minimum length of the string array is greater than the length of</span></span>
<span id="cb27-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// our search string, there can't be a prefix match.</span></span>
<span id="cb27-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-66"></span>
<span id="cb27-67">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>MinimumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-68">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-69">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-70"></span>
<span id="cb27-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb27-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb27-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb27-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb27-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb27-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb27-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb27-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb27-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb27-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb27-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb27-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb27-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb27-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb27-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb27-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb27-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb27-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb27-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb27-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb27-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb27-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb27-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb27-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb27-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-104"></span>
<span id="cb27-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb27-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-108"></span>
<span id="cb27-109">    LoadSearchStringIntoXmmRegister_SEH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-110"></span>
<span id="cb27-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb27-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb27-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-115"></span>
<span id="cb27-116">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb27-117">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-118"></span>
<span id="cb27-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb27-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-122"></span>
<span id="cb27-123">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-124"></span>
<span id="cb27-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb27-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-128"></span>
<span id="cb27-129">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-130"></span>
<span id="cb27-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb27-133">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-134"></span>
<span id="cb27-135">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-136">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-137"></span>
<span id="cb27-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb27-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb27-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb27-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb27-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb27-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-145"></span>
<span id="cb27-146">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-147"></span>
<span id="cb27-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb27-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb27-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb27-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb27-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb27-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb27-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-157"></span>
<span id="cb27-158">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-159"></span>
<span id="cb27-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb27-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb27-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb27-164">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-165"></span>
<span id="cb27-166">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-167"></span>
<span id="cb27-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-169">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb27-170">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb27-171">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb27-172">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb27-173">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-174"></span>
<span id="cb27-175">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb27-176">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-177"></span>
<span id="cb27-178">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb27-180">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-181"></span>
<span id="cb27-182">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-183"></span>
<span id="cb27-184">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-185"></span>
<span id="cb27-186">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-187">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb27-188">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb27-189">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb27-190">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-191"></span>
<span id="cb27-192">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-193">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-194"></span>
<span id="cb27-195">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-196">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb27-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb27-198">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-199"></span>
<span id="cb27-200">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-201"></span>
<span id="cb27-202">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-203"></span>
<span id="cb27-204">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-205">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb27-206">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb27-207">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-208"></span>
<span id="cb27-209">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-210">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-211"></span>
<span id="cb27-212">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-213">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb27-214">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb27-215">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb27-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-217"></span>
<span id="cb27-218">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-219">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-220"></span>
<span id="cb27-221">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-222">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb27-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-224"></span>
<span id="cb27-225">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-226">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb27-227"></span>
<span id="cb27-228">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb27-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-231"></span>
<span id="cb27-232">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-233"></span>
<span id="cb27-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb27-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb27-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb27-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb27-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb27-240">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb27-241">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb27-242">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb27-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb27-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-245"></span>
<span id="cb27-246">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-247"></span>
<span id="cb27-248">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-249">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb27-250">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-251"></span>
<span id="cb27-252">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-253"></span>
<span id="cb27-254">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-255"></span>
<span id="cb27-256">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-257">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb27-258">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb27-259">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb27-260">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-261"></span>
<span id="cb27-262">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb27-263"></span>
<span id="cb27-264">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-265"></span>
<span id="cb27-266">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-267"></span>
<span id="cb27-268">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-269">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb27-270">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-271"></span>
<span id="cb27-272">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-273"></span>
<span id="cb27-274">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-275"></span>
<span id="cb27-276">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb27-278">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb27-279">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb27-280">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb27-281">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb27-282">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-283"></span>
<span id="cb27-284">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-285">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-286">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-287"></span>
<span id="cb27-288">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-289"></span>
<span id="cb27-290">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb27-291"></span>
<span id="cb27-292">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-293">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb27-294">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb27-295">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb27-296">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-297"></span>
<span id="cb27-298"></span>
<span id="cb27-299">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-300"></span>
<span id="cb27-301">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-302">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-303">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb27-304"></span>
<span id="cb27-305">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-306"></span>
<span id="cb27-307">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-308">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-309"></span>
<span id="cb27-310">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-311">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb27-312">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-313"></span>
<span id="cb27-314">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-315"></span>
<span id="cb27-316">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-317">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb27-318">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb27-319"></span>
<span id="cb27-320">NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb27-321"></span>
<span id="cb27-322">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb27-323"></span>
<span id="cb27-324">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-325"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="benchmark-4" class="level4 unlisted">
<h4 class="unlisted anchored" data-anchor-id="benchmark-4">Benchmark 4</h4>
<p>The performance of version 4 was slightly worse than 3 in every case:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-04-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-04-v1.svg" class="img-fluid figure-img" alt="Benchmark 4"></a></p>
<figcaption>Benchmark 4</figcaption>
</figure>
</div>
<p>Version 3 is still in the lead with the <code>AlwaysMovsb</code>-based search string loading approach.</p>
<p><small> <em>Narrator</em>: except the <a href="https://github.com/tpn/tracer/blob/v0.1.11/StringTable2/StringLoadStoreOperations.h#L112"><code>AlignmentCheck</code></a> macro was actually active, not the <a href="https://github.com/tpn/tracer/blob/v0.1.11/StringTable2/StringLoadStoreOperations.h#L112"><code>AlwaysMovsb</code></a> one. </small></p>
</section>
<section id="isprefixofstringintable_5" class="level4">
<h4 class="anchored" data-anchor-id="isprefixofstringintable_5">IsPrefixOfStringInTable_5</h4>
<p>← IsPrefixOfStringInTable_4 | IsPrefixOfStringInTable_6 →</p>
<p>Version 5 is an interesting one. It’s the first time we attempt to validate our claim that it’s more efficient to give the CPU a bunch of independent things to do up front, rather than adding more branches and attempting to terminate as early as possible.</p>
<p>Note: we’ll also explicitly use the <code>LoadSearchStringIntoXmmRegister_AlwaysMovsb</code> macro here, instead of <code>LoadSearchStringIntoXmmRegister</code>, to make it clear that we’re actually relying on the <code>__movsb()</code>-based string loading routine.</p>
<p><small> <em>Narrator</em>: can anyone spot the mistake with this logic? </small></p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-6-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-6-1" aria-controls="tabset-6-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-6-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-6-2" aria-controls="tabset-6-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-6-1" class="tab-pane active" aria-labelledby="tabset-6-1-tab">
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb28-1">% diff -u IsPrefixOfStringInTable_3.c IsPrefixOfStringInTable_5.c</span>
<span id="cb28-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_3.c 2018-04-15 22:35:55.456274700 -0400</span></span>
<span id="cb28-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_5.c 2018-04-15 13:24:52.480972900 -0400</span></span>
<span id="cb28-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -16,9 +16,13 @@</span></span>
<span id="cb28-5"></span>
<span id="cb28-6"> #include "stdafx.h"</span>
<span id="cb28-7"></span>
<span id="cb28-8"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+//</span></span>
<span id="cb28-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+// Variant of v3 with early-exits.</span></span>
<span id="cb28-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+//</span></span>
<span id="cb28-11"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-12"> _Use_decl_annotations_</span>
<span id="cb28-13"> STRING_TABLE_INDEX</span>
<span id="cb28-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_3(</span></span>
<span id="cb28-15"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_5(</span></span>
<span id="cb28-16">     PSTRING_TABLE StringTable,</span>
<span id="cb28-17">     PSTRING String,</span>
<span id="cb28-18">     PSTRING_MATCH Match</span>
<span id="cb28-19"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,7 +35,11 @@</span></span>
<span id="cb28-20">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb28-21">     or is equal to" the search string.</span>
<span id="cb28-22"></span>
<span id="cb28-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This is our first AVX-optimized version of the routine.</span></span>
<span id="cb28-24"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This routine is a variant of version 3 that uses early exits (i.e.</span></span>
<span id="cb28-25"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    returning NO_MATCH_FOUND as early as we can).  It is designed to evaluate</span></span>
<span id="cb28-26"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    the assertion we've been making that it's more optimal to give the CPU</span></span>
<span id="cb28-27"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    to do a bunch of things up front versus doing something, then potentially</span></span>
<span id="cb28-28"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    branching, doing the next thing, potentially branching, etc.</span></span>
<span id="cb28-29"></span>
<span id="cb28-30"> Arguments:</span>
<span id="cb28-31"></span>
<span id="cb28-32"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -51,6 +59,8 @@</span></span>
<span id="cb28-33"> --*/</span>
<span id="cb28-34"> {</span>
<span id="cb28-35">     ULONG Bitmap;</span>
<span id="cb28-36"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    ULONG CharBitmap;</span></span>
<span id="cb28-37"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    ULONG LengthBitmap;</span></span>
<span id="cb28-38">     ULONG Mask;</span>
<span id="cb28-39">     ULONG Count;</span>
<span id="cb28-40">     ULONG Length;</span>
<span id="cb28-41"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -71,7 +81,6 @@</span></span>
<span id="cb28-42">     XMMWORD IncludeSlotsByUniqueChar;</span>
<span id="cb28-43">     XMMWORD IgnoreSlotsByLength;</span>
<span id="cb28-44">     XMMWORD IncludeSlotsByLength;</span>
<span id="cb28-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    XMMWORD IncludeSlots;</span></span>
<span id="cb28-46">     const XMMWORD AllOnesXmm = _mm_set1_epi8(0xff);</span>
<span id="cb28-47"></span>
<span id="cb28-48">     StringArray = StringTable-&gt;pStringArray;</span>
<span id="cb28-49"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -123,7 +132,7 @@</span></span>
<span id="cb28-50">     // Load the first 16-bytes of the search string into an XMM register.</span>
<span id="cb28-51">     //</span>
<span id="cb28-52"></span>
<span id="cb28-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    LoadSearchStringIntoXmmRegister(Search, String, SearchLength);</span></span>
<span id="cb28-54"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    LoadSearchStringIntoXmmRegister_AlwaysMovsb(Search, String, SearchLength);</span></span>
<span id="cb28-55"></span>
<span id="cb28-56">     //</span>
<span id="cb28-57">     // Broadcast the search string's unique characters according to the string</span>
<span id="cb28-58"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -133,11 +142,6 @@</span></span>
<span id="cb28-59">     UniqueChar = _mm_shuffle_epi8(Search.CharsXmm,</span>
<span id="cb28-60">                                   StringTable-&gt;UniqueIndex.IndexXmm);</span>
<span id="cb28-61"></span>
<span id="cb28-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Load the slot length array into an XMM register.</span></span>
<span id="cb28-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb28-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Lengths.SlotsXmm = _mm_load_si128(&amp;StringTable-&gt;Lengths.SlotsXmm);</span></span>
<span id="cb28-67"></span>
<span id="cb28-68">     //</span>
<span id="cb28-69">     // Load the string table's unique character array into an XMM register.</span>
<span id="cb28-70"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -146,13 +150,6 @@</span></span>
<span id="cb28-71">     TableUniqueChars = _mm_load_si128(&amp;StringTable-&gt;UniqueChars.CharsXmm);</span>
<span id="cb28-72"></span>
<span id="cb28-73">     //</span>
<span id="cb28-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Broadcast the search string's length into an XMM register.</span></span>
<span id="cb28-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb28-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    LengthXmm.m128i_u8[0] = (BYTE)String-&gt;Length;</span></span>
<span id="cb28-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    LengthXmm = _mm_broadcastb_epi8(LengthXmm);</span></span>
<span id="cb28-79"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb28-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-81">     // Compare the search string's unique character with all of the unique</span>
<span id="cb28-82">     // characters of strings in the table, saving the results into an XMM</span>
<span id="cb28-83">     // register.  This comparison will indicate which slots we can ignore</span>
<span id="cb28-84"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -162,6 +159,25 @@</span></span>
<span id="cb28-85"></span>
<span id="cb28-86">     IncludeSlotsByUniqueChar = _mm_cmpeq_epi8(UniqueChar, TableUniqueChars);</span>
<span id="cb28-87"></span>
<span id="cb28-88"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    CharBitmap = _mm_movemask_epi8(IncludeSlotsByUniqueChar);</span></span>
<span id="cb28-89"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-90"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    if (!CharBitmap) {</span></span>
<span id="cb28-91"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        return NO_MATCH_FOUND;</span></span>
<span id="cb28-92"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    }</span></span>
<span id="cb28-93"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-94"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb28-95"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // Load the slot length array into an XMM register.</span></span>
<span id="cb28-96"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb28-97"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-98"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Lengths.SlotsXmm = _mm_load_si128(&amp;StringTable-&gt;Lengths.SlotsXmm);</span></span>
<span id="cb28-99"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-100"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb28-101"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // Broadcast the search string's length into an XMM register.</span></span>
<span id="cb28-102"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb28-103"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-104"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    LengthXmm.m128i_u8[0] = (BYTE)String-&gt;Length;</span></span>
<span id="cb28-105"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    LengthXmm = _mm_broadcastb_epi8(LengthXmm);</span></span>
<span id="cb28-106"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-107">     //</span>
<span id="cb28-108">     // Find all slots that are longer than the incoming string length, as these</span>
<span id="cb28-109">     // are the ones we're going to exclude from any prefix match.</span>
<span id="cb28-110"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -182,31 +198,16 @@</span></span>
<span id="cb28-111"></span>
<span id="cb28-112">     IncludeSlotsByLength = _mm_xor_si128(IgnoreSlotsByLength, AllOnesXmm);</span>
<span id="cb28-113"></span>
<span id="cb28-114"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-115"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb28-116"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb28-117"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // the exact same unique character as the string and a length less than or</span></span>
<span id="cb28-118"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // equal to the length of the search string).</span></span>
<span id="cb28-119"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-120"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb28-121"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    IncludeSlots = _mm_and_si128(IncludeSlotsByUniqueChar,</span></span>
<span id="cb28-122"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                                 IncludeSlotsByLength);</span></span>
<span id="cb28-123"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    LengthBitmap = _mm_movemask_epi8(IncludeSlotsByLength);</span></span>
<span id="cb28-124"></span>
<span id="cb28-125"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-126"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Generate a mask.</span></span>
<span id="cb28-127"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb28-128"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    if (!LengthBitmap) {</span></span>
<span id="cb28-129"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        return NO_MATCH_FOUND;</span></span>
<span id="cb28-130"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    }</span></span>
<span id="cb28-131"></span>
<span id="cb28-132"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Bitmap = _mm_movemask_epi8(IncludeSlots);</span></span>
<span id="cb28-133"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Bitmap = CharBitmap &amp; LengthBitmap;</span></span>
<span id="cb28-134"></span>
<span id="cb28-135">     if (!Bitmap) {</span>
<span id="cb28-136"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb28-137"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        //</span></span>
<span id="cb28-138"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // No bits were set, so there are no strings in this table starting</span></span>
<span id="cb28-139"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // with the same character and of a lesser or equal length as the</span></span>
<span id="cb28-140"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // search string.</span></span>
<span id="cb28-141"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        //</span></span>
<span id="cb28-142"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb28-143"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        goto NoMatch;</span></span>
<span id="cb28-144"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        return NO_MATCH_FOUND;</span></span>
<span id="cb28-145">     }</span>
<span id="cb28-146"></span>
<span id="cb28-147">     //</span></code></pre></div>
</div>
<div id="tabset-6-2" class="tab-pane" aria-labelledby="tabset-6-2-tab">
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb29-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb29-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb29-3">IsPrefixOfStringInTable_5<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb29-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb29-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb29-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb29-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb29-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb29-9"></span>
<span id="cb29-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb29-11"></span>
<span id="cb29-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb29-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb29-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb29-15"></span>
<span id="cb29-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine is a variant of version 3 that uses early exits (i.e.</span></span>
<span id="cb29-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    returning NO_MATCH_FOUND as early as we can).  It is designed to evaluate</span></span>
<span id="cb29-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the assertion we've been making that it's more optimal to give the CPU</span></span>
<span id="cb29-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    to do a bunch of things up front versus doing something, then potentially</span></span>
<span id="cb29-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    branching, doing the next thing, potentially branching, etc.</span></span>
<span id="cb29-21"></span>
<span id="cb29-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb29-23"></span>
<span id="cb29-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb29-25"></span>
<span id="cb29-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb29-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb29-28"></span>
<span id="cb29-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb29-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb29-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb29-32"></span>
<span id="cb29-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb29-34"></span>
<span id="cb29-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb29-36"></span>
<span id="cb29-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb29-38"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> LengthBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-46">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-47">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-48">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-49">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-51">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-52">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-53">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-54">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-55">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-58">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-59">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-60">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-61">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-62">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-63"></span>
<span id="cb29-64">    StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-65"></span>
<span id="cb29-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the minimum length of the string array is greater than the length of</span></span>
<span id="cb29-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// our search string, there can't be a prefix match.</span></span>
<span id="cb29-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-70"></span>
<span id="cb29-71">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>MinimumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-72">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-73">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-74"></span>
<span id="cb29-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb29-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb29-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb29-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb29-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb29-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb29-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb29-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb29-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb29-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb29-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb29-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb29-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb29-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb29-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb29-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb29-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb29-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb29-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb29-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb29-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb29-104">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb29-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb29-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb29-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-108"></span>
<span id="cb29-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb29-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-112"></span>
<span id="cb29-113">    LoadSearchStringIntoXmmRegister_AlwaysMovsb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-114"></span>
<span id="cb29-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-116">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb29-117">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb29-118">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-119"></span>
<span id="cb29-120">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb29-121">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-122"></span>
<span id="cb29-123"></span>
<span id="cb29-124">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb29-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-127"></span>
<span id="cb29-128">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-129"></span>
<span id="cb29-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb29-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb29-133">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb29-134">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb29-135">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb29-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-137"></span>
<span id="cb29-138">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-139"></span>
<span id="cb29-140">    CharBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-141"></span>
<span id="cb29-142">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>CharBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-143">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-144">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-145"></span>
<span id="cb29-146">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-147">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb29-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-149"></span>
<span id="cb29-150">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-151"></span>
<span id="cb29-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb29-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-155"></span>
<span id="cb29-156">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-157">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-158"></span>
<span id="cb29-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb29-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb29-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb29-164">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb29-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb29-166">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb29-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-168"></span>
<span id="cb29-169">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-170"></span>
<span id="cb29-171">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-172">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb29-173">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb29-174">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb29-175">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-176"></span>
<span id="cb29-177">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-178"></span>
<span id="cb29-179">    LengthBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-180"></span>
<span id="cb29-181">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>LengthBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-182">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-183">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-184"></span>
<span id="cb29-185">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CharBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> LengthBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-186"></span>
<span id="cb29-187">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-188">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-189">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-190"></span>
<span id="cb29-191">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-192">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb29-193">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb29-194">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-195"></span>
<span id="cb29-196">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-197"></span>
<span id="cb29-198">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-199"></span>
<span id="cb29-200">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-201">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb29-202">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb29-203">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-204"></span>
<span id="cb29-205">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-206">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-207"></span>
<span id="cb29-208">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-209">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb29-210">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb29-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb29-212">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-213"></span>
<span id="cb29-214">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-215">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-216"></span>
<span id="cb29-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb29-219">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-220"></span>
<span id="cb29-221">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-222">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb29-223"></span>
<span id="cb29-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb29-226">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-227"></span>
<span id="cb29-228">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-229"></span>
<span id="cb29-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb29-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb29-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb29-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb29-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb29-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb29-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb29-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb29-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb29-240">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-241"></span>
<span id="cb29-242">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-243"></span>
<span id="cb29-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb29-246">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-247"></span>
<span id="cb29-248">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-249"></span>
<span id="cb29-250">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-251"></span>
<span id="cb29-252">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-253">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb29-254">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb29-255">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb29-256">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-257"></span>
<span id="cb29-258">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb29-259"></span>
<span id="cb29-260">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-261"></span>
<span id="cb29-262">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-263"></span>
<span id="cb29-264">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-265">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb29-266">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-267"></span>
<span id="cb29-268">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-269"></span>
<span id="cb29-270">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-271"></span>
<span id="cb29-272">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-273">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb29-274">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb29-275">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb29-276">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb29-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb29-278">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-279"></span>
<span id="cb29-280">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-281">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-282">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-283"></span>
<span id="cb29-284">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-285"></span>
<span id="cb29-286">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb29-287"></span>
<span id="cb29-288">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-289">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb29-290">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb29-291">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb29-292">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-293"></span>
<span id="cb29-294"></span>
<span id="cb29-295">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-296"></span>
<span id="cb29-297">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-298">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-299">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb29-300"></span>
<span id="cb29-301">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-302"></span>
<span id="cb29-303">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-304">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-305"></span>
<span id="cb29-306">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-307">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb29-308">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-309"></span>
<span id="cb29-310">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-311"></span>
<span id="cb29-312">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-313">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb29-314">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb29-315"></span>
<span id="cb29-316">NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb29-317"></span>
<span id="cb29-318">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb29-319"></span>
<span id="cb29-320">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-321"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="benchmark-5" class="level4 unlisted">
<h4 class="unlisted anchored" data-anchor-id="benchmark-5">Benchmark 5</h4>
<p>If our theory is correct, the performance of this version should be worse, due to all the extra branches in the initial test. Let’s see if we’re right:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-05-v2.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-05-v2.svg" class="img-fluid figure-img" alt="Benchmark 5"></a></p>
<figcaption>Benchmark 5</figcaption>
</figure>
</div>
<p>Holy smokes, version 5 <strong>is</strong> bad! It’s so bad it’s actually closest in performance to the failed version 2 with the elaborate AVX2 prefix matching routine.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>It was actually so close I double-checked the two routines to ensure they were correct; they were, so this is just a coincidence.</p>
</div>
</div>
<p>That’s good news, though, as it validates the assumption we’ve been working with since inception:</p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb30-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb30-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb30-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb30-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb30-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb30-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb30-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb30-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span></code></pre></div>
<p>That’s the end of version 5’s tenure. TL;DR: fewer branches &gt; more branches.</p>
<p><small> <em>Narrator</em>: more accurate TL;DR: <code>__movsb()</code> is slow, and always make sure you’re testing what you think you’re testing.] </small></p>
</section>
<section id="isprefixofstringintable_6" class="level4">
<h4 class="anchored" data-anchor-id="isprefixofstringintable_6">IsPrefixOfStringInTable_6</h4>
<p>← IsPrefixOfStringInTable_5 | IsPrefixOfStringInTable_7 →</p>
<p>Version 6 is boring. We tweak the initial loading of the search string, explicitly loading it via an unaligned load. If the underlying buffer is aligned on a 16-byte boundary, this is just as fast as an aligned load. If not, at least it doesn’t crash—it’s just slow.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you attempt an aligned load on an address that isn’t aligned at a 16-byte boundary, the processor will generate an exception, causing your program to crash (assuming you don’t have any structured exception handlers in place to catch the error).</p>
</div>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-7-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-7-1" aria-controls="tabset-7-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-7-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-7-2" aria-controls="tabset-7-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-7-1" class="tab-pane active" aria-labelledby="tabset-7-1-tab">
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb31-1">% diff -u IsPrefixOfStringInTable_3.c IsPrefixOfStringInTable_6.c</span>
<span id="cb31-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_3.c 2018-04-15 22:35:55.456274700 -0400</span></span>
<span id="cb31-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_6.c 2018-04-26 18:29:40.594556800 -0400</span></span>
<span id="cb31-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,7 +18,7 @@</span></span>
<span id="cb31-5"></span>
<span id="cb31-6"> _Use_decl_annotations_</span>
<span id="cb31-7"> STRING_TABLE_INDEX</span>
<span id="cb31-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_3(</span></span>
<span id="cb31-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_6(</span></span>
<span id="cb31-10">     PSTRING_TABLE StringTable,</span>
<span id="cb31-11">     PSTRING String,</span>
<span id="cb31-12">     PSTRING_MATCH Match</span>
<span id="cb31-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,7 +31,8 @@</span></span>
<span id="cb31-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb31-15">     or is equal to" the search string.</span>
<span id="cb31-16"></span>
<span id="cb31-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This is our first AVX-optimized version of the routine.</span></span>
<span id="cb31-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This routine differs from version 3 in that we do an unaligned load of</span></span>
<span id="cb31-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    the search string buffer without any SEH wrappers or alignment checks.</span></span>
<span id="cb31-20"></span>
<span id="cb31-21"> Arguments:</span>
<span id="cb31-22"></span>
<span id="cb31-23"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -123,7 +124,8 @@</span></span>
<span id="cb31-24">     // Load the first 16-bytes of the search string into an XMM register.</span>
<span id="cb31-25">     //</span>
<span id="cb31-26"></span>
<span id="cb31-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    LoadSearchStringIntoXmmRegister(Search, String, SearchLength);</span></span>
<span id="cb31-28"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    SearchLength = min(String-&gt;Length, 16);</span></span>
<span id="cb31-29"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Search.CharsXmm = _mm_loadu_si128((PXMMWORD)String-&gt;Buffer);</span></span>
<span id="cb31-30"></span>
<span id="cb31-31">     //</span>
<span id="cb31-32">     // Broadcast the search string's unique characters according to the string</span></code></pre></div>
</div>
<div id="tabset-7-2" class="tab-pane" aria-labelledby="tabset-7-2-tab">
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb32-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb32-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb32-3">IsPrefixOfStringInTable_6<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb32-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb32-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb32-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb32-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb32-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb32-9"></span>
<span id="cb32-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb32-11"></span>
<span id="cb32-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb32-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb32-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb32-15"></span>
<span id="cb32-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine differs from version 3 in that we do an unaligned load of</span></span>
<span id="cb32-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the search string buffer without any SEH wrappers or alignment checks.</span></span>
<span id="cb32-18"></span>
<span id="cb32-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb32-20"></span>
<span id="cb32-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb32-22"></span>
<span id="cb32-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb32-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb32-25"></span>
<span id="cb32-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb32-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb32-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb32-29"></span>
<span id="cb32-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb32-31"></span>
<span id="cb32-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb32-33"></span>
<span id="cb32-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb32-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-50">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-58">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-59"></span>
<span id="cb32-60">    StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-61"></span>
<span id="cb32-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the minimum length of the string array is greater than the length of</span></span>
<span id="cb32-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// our search string, there can't be a prefix match.</span></span>
<span id="cb32-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-66"></span>
<span id="cb32-67">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>MinimumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-68">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-69">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-70"></span>
<span id="cb32-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb32-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb32-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb32-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb32-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb32-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb32-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb32-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb32-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb32-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb32-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb32-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb32-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb32-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb32-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb32-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb32-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb32-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb32-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb32-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb32-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb32-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb32-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb32-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb32-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-104"></span>
<span id="cb32-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb32-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-108"></span>
<span id="cb32-109">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-110">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-111"></span>
<span id="cb32-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb32-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb32-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-116"></span>
<span id="cb32-117">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb32-118">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-119"></span>
<span id="cb32-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb32-122">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-123"></span>
<span id="cb32-124">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-125"></span>
<span id="cb32-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb32-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-129"></span>
<span id="cb32-130">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-131"></span>
<span id="cb32-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-133">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb32-134">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-135"></span>
<span id="cb32-136">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-137">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-138"></span>
<span id="cb32-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb32-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb32-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb32-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb32-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb32-145">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-146"></span>
<span id="cb32-147">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-148"></span>
<span id="cb32-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb32-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb32-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb32-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb32-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb32-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb32-157">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-158"></span>
<span id="cb32-159">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-160"></span>
<span id="cb32-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb32-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb32-164">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb32-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-166"></span>
<span id="cb32-167">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-168"></span>
<span id="cb32-169">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-170">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb32-171">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb32-172">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb32-173">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb32-174">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-175"></span>
<span id="cb32-176">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb32-177">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-178"></span>
<span id="cb32-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-180">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb32-181">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-182"></span>
<span id="cb32-183">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-184"></span>
<span id="cb32-185">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-186"></span>
<span id="cb32-187">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-188">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb32-189">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb32-190">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb32-191">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-192"></span>
<span id="cb32-193">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-194">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-195"></span>
<span id="cb32-196">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb32-198">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb32-199">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-200"></span>
<span id="cb32-201">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-202"></span>
<span id="cb32-203">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-204"></span>
<span id="cb32-205">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-206">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb32-207">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb32-208">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-209"></span>
<span id="cb32-210">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-211">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-212"></span>
<span id="cb32-213">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-214">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb32-215">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb32-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb32-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-218"></span>
<span id="cb32-219">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-220">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-221"></span>
<span id="cb32-222">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb32-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-225"></span>
<span id="cb32-226">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-227">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb32-228"></span>
<span id="cb32-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb32-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-232"></span>
<span id="cb32-233">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-234"></span>
<span id="cb32-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb32-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb32-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb32-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb32-240">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb32-241">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb32-242">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb32-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb32-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb32-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-246"></span>
<span id="cb32-247">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-248"></span>
<span id="cb32-249">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-250">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb32-251">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-252"></span>
<span id="cb32-253">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-254"></span>
<span id="cb32-255">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-256"></span>
<span id="cb32-257">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-258">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb32-259">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb32-260">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb32-261">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-262"></span>
<span id="cb32-263">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb32-264"></span>
<span id="cb32-265">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-266"></span>
<span id="cb32-267">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-268"></span>
<span id="cb32-269">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-270">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb32-271">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-272"></span>
<span id="cb32-273">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-274"></span>
<span id="cb32-275">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-276"></span>
<span id="cb32-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-278">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb32-279">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb32-280">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb32-281">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb32-282">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb32-283">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-284"></span>
<span id="cb32-285">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-286">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-287">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-288"></span>
<span id="cb32-289">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-290"></span>
<span id="cb32-291">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb32-292"></span>
<span id="cb32-293">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-294">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb32-295">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb32-296">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb32-297">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-298"></span>
<span id="cb32-299"></span>
<span id="cb32-300">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-301"></span>
<span id="cb32-302">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-303">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-304">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb32-305"></span>
<span id="cb32-306">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-307"></span>
<span id="cb32-308">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-309">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-310"></span>
<span id="cb32-311">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-312">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb32-313">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-314"></span>
<span id="cb32-315">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-316"></span>
<span id="cb32-317">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-318">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb32-319">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb32-320"></span>
<span id="cb32-321">NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb32-322"></span>
<span id="cb32-323">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb32-324"></span>
<span id="cb32-325">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-326"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="benchmark-6" class="level4 unlisted">
<h4 class="unlisted anchored" data-anchor-id="benchmark-6">Benchmark 6</h4>
<p>Version 6 should be faster than version 3; we omit alignment checks, all of our input buffers are aligned at 32 bytes, and an unaligned XMM load of an aligned buffer should definitely be faster than a <code>__movsb()</code>. Let’s see:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-06-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-06-v1.svg" class="img-fluid figure-img" alt="Benchmark 6"></a></p>
<figcaption>Benchmark 6</figcaption>
</figure>
</div>
<p>We have a new winner! Version 3 had a good run, but it’s time to retire. Let’s tweak version 6 going forward.</p>
<p><small> <em>Narrator</em>: this is actually testing <code>_mm_loadu_si128()</code> against the <code>AlignmentCheck</code> routine, which first calls <code>PointerToOffsetCrossesPageBoundary()</code>, and then checks the address alignment before calling <code>_mm_load_si128()</code>. Since unaligned loads are just as fast as aligned loads as long as the underlying buffer is aligned, all this shows is that it’s slightly faster to skip the pointer boundary and address alignment checks, which isn’t too surprising. </small></p>
</section>
<section id="isprefixofstringintable_7" class="level4">
<h4 class="anchored" data-anchor-id="isprefixofstringintable_7">IsPrefixOfStringInTable_7</h4>
<p>← IsPrefixOfStringInTable_6 | IsPrefixOfStringInTable_8 →</p>
<p>Version 7 tweaks version 6 a little bit. We don’t need the search string length calculated so early in the routine. Let’s move it to later.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-8-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-8-1" aria-controls="tabset-8-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-8-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-8-2" aria-controls="tabset-8-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-8-1" class="tab-pane active" aria-labelledby="tabset-8-1-tab">
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb33-1">% diff -u IsPrefixOfStringInTable_6.c IsPrefixOfStringInTable_7.c</span>
<span id="cb33-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_6.c 2018-04-15 22:35:55.450273700 -0400</span></span>
<span id="cb33-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_7.c 2018-04-26 10:00:53.905933700 -0400</span></span>
<span id="cb33-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,7 +18,7 @@</span></span>
<span id="cb33-5"></span>
<span id="cb33-6"> _Use_decl_annotations_</span>
<span id="cb33-7"> STRING_TABLE_INDEX</span>
<span id="cb33-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_6(</span></span>
<span id="cb33-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_7(</span></span>
<span id="cb33-10">     PSTRING_TABLE StringTable,</span>
<span id="cb33-11">     PSTRING String,</span>
<span id="cb33-12">     PSTRING_MATCH Match</span>
<span id="cb33-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,9 +31,10 @@</span></span>
<span id="cb33-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb33-15">     or is equal to" the search string.</span>
<span id="cb33-16"></span>
<span id="cb33-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This routine differs from version 3 in that we do an aligned load of the</span></span>
<span id="cb33-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    search string buffer without any SEH wrappers or alignment checks.  (Thus,</span></span>
<span id="cb33-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    this routine will fault if the buffer is unaligned.)</span></span>
<span id="cb33-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This routine is based off version 6, but alters when we calculate the</span></span>
<span id="cb33-21"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    "search length" for the given string, which is done via the expression</span></span>
<span id="cb33-22"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    'min(String-&gt;Length, 16)'.  We don't need this value until later in the</span></span>
<span id="cb33-23"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    routine, when we're ready to start comparing strings.</span></span>
<span id="cb33-24"></span>
<span id="cb33-25"> Arguments:</span>
<span id="cb33-26"></span>
<span id="cb33-27"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -125,7 +126,6 @@</span></span>
<span id="cb33-28">     // Load the first 16-bytes of the search string into an XMM register.</span>
<span id="cb33-29">     //</span>
<span id="cb33-30"></span>
<span id="cb33-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    SearchLength = min(String-&gt;Length, 16);</span></span>
<span id="cb33-32">     Search.CharsXmm = _mm_loadu_si128((PXMMWORD)String-&gt;Buffer);</span>
<span id="cb33-33"></span>
<span id="cb33-34">     //</span>
<span id="cb33-35"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -213,6 +213,13 @@</span></span>
<span id="cb33-36">     }</span>
<span id="cb33-37"></span>
<span id="cb33-38">     //</span>
<span id="cb33-39"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb33-40"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // only compare up to the first 16 characters.</span></span>
<span id="cb33-41"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb33-42"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-43"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    SearchLength = min(String-&gt;Length, 16);</span></span>
<span id="cb33-44"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-45"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb33-46">     // A popcount against the mask will tell us how many slots we matched, and</span>
<span id="cb33-47">     // thus, need to compare.</span>
<span id="cb33-48">     //</span></code></pre></div>
</div>
<div id="tabset-8-2" class="tab-pane" aria-labelledby="tabset-8-2-tab">
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb34-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb34-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb34-3">IsPrefixOfStringInTable_7<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb34-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb34-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb34-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb34-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb34-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb34-9"></span>
<span id="cb34-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb34-11"></span>
<span id="cb34-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb34-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb34-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb34-15"></span>
<span id="cb34-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine is based off version 6, but alters when we calculate the</span></span>
<span id="cb34-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    "search length" for the given string, which is done via the expression</span></span>
<span id="cb34-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    'min(String-&gt;Length, 16)'.  We don't need this value until later in the</span></span>
<span id="cb34-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    routine, when we're ready to start comparing strings.</span></span>
<span id="cb34-20"></span>
<span id="cb34-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb34-22"></span>
<span id="cb34-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb34-24"></span>
<span id="cb34-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb34-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb34-27"></span>
<span id="cb34-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb34-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb34-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb34-31"></span>
<span id="cb34-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb34-33"></span>
<span id="cb34-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb34-35"></span>
<span id="cb34-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb34-37"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-46">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-47">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_ARRAY</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-50">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-51">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-52">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-58">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-59">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-60">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-61"></span>
<span id="cb34-62">    StringArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-63"></span>
<span id="cb34-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the minimum length of the string array is greater than the length of</span></span>
<span id="cb34-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// our search string, there can't be a prefix match.</span></span>
<span id="cb34-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-68"></span>
<span id="cb34-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>MinimumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-70">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-71">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-72"></span>
<span id="cb34-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb34-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb34-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb34-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb34-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb34-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb34-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb34-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb34-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb34-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb34-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb34-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb34-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb34-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb34-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb34-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb34-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb34-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb34-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb34-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb34-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb34-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb34-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb34-104">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb34-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-106"></span>
<span id="cb34-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-108">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb34-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-110"></span>
<span id="cb34-111">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-112"></span>
<span id="cb34-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb34-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb34-116">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-117"></span>
<span id="cb34-118">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb34-119">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-120"></span>
<span id="cb34-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-122">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb34-123">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-124"></span>
<span id="cb34-125">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-126"></span>
<span id="cb34-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb34-129">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-130"></span>
<span id="cb34-131">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-132"></span>
<span id="cb34-133">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-134">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb34-135">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-136"></span>
<span id="cb34-137">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-138">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-139"></span>
<span id="cb34-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb34-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb34-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb34-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb34-145">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb34-146">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-147"></span>
<span id="cb34-148">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-149"></span>
<span id="cb34-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb34-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb34-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb34-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb34-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb34-157">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb34-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-159"></span>
<span id="cb34-160">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-161"></span>
<span id="cb34-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb34-164">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb34-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb34-166">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-167"></span>
<span id="cb34-168">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-169"></span>
<span id="cb34-170">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-171">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb34-172">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb34-173">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb34-174">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb34-175">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-176"></span>
<span id="cb34-177">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb34-178">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-179"></span>
<span id="cb34-180">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-181">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb34-182">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-183"></span>
<span id="cb34-184">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-185"></span>
<span id="cb34-186">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-187"></span>
<span id="cb34-188">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-189">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb34-190">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb34-191">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb34-192">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-193"></span>
<span id="cb34-194">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-195">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-196"></span>
<span id="cb34-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-198">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb34-199">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb34-200">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-201"></span>
<span id="cb34-202">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-203"></span>
<span id="cb34-204">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-205">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb34-206">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb34-207">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-208"></span>
<span id="cb34-209">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-210"></span>
<span id="cb34-211">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-212"></span>
<span id="cb34-213">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-214">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb34-215">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb34-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-217"></span>
<span id="cb34-218">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-219">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-220"></span>
<span id="cb34-221">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-222">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb34-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb34-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb34-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-226"></span>
<span id="cb34-227">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-228">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-229"></span>
<span id="cb34-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb34-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-233"></span>
<span id="cb34-234">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-235">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb34-236"></span>
<span id="cb34-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb34-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-240"></span>
<span id="cb34-241">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-242"></span>
<span id="cb34-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb34-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb34-246">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb34-247">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb34-248">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb34-249">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb34-250">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb34-251">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb34-252">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb34-253">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-254"></span>
<span id="cb34-255">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-256"></span>
<span id="cb34-257">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-258">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb34-259">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-260"></span>
<span id="cb34-261">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-262"></span>
<span id="cb34-263">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-264"></span>
<span id="cb34-265">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-266">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb34-267">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb34-268">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb34-269">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-270"></span>
<span id="cb34-271">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb34-272"></span>
<span id="cb34-273">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-274"></span>
<span id="cb34-275">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-276"></span>
<span id="cb34-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-278">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb34-279">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-280"></span>
<span id="cb34-281">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-282"></span>
<span id="cb34-283">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-284"></span>
<span id="cb34-285">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-286">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb34-287">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb34-288">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb34-289">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb34-290">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb34-291">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-292"></span>
<span id="cb34-293">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-294">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-295">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-296"></span>
<span id="cb34-297">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-298"></span>
<span id="cb34-299">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb34-300"></span>
<span id="cb34-301">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-302">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb34-303">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb34-304">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb34-305">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-306"></span>
<span id="cb34-307"></span>
<span id="cb34-308">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-309"></span>
<span id="cb34-310">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-311">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-312">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb34-313"></span>
<span id="cb34-314">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-315"></span>
<span id="cb34-316">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-317">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-318"></span>
<span id="cb34-319">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-320">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb34-321">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-322"></span>
<span id="cb34-323">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-324"></span>
<span id="cb34-325">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-326">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb34-327">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb34-328"></span>
<span id="cb34-329">NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb34-330"></span>
<span id="cb34-331">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb34-332"></span>
<span id="cb34-333">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-334"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
<p>This is a tiny change; if it shows any performance difference, it should lean towards a positive change, although it’s possible the compiler deferred scheduling until after the initial negative match logic since the expression wasn’t used immediately. Let’s see.</p>
</section>
<section id="benchmark-7" class="level4 unlisted">
<h4 class="unlisted anchored" data-anchor-id="benchmark-7">Benchmark 7</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-07-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-07-v1.svg" class="img-fluid figure-img" alt="Benchmark 7"></a></p>
<figcaption>Benchmark 7</figcaption>
</figure>
</div>
<p>Tiny change, tiny performance improvement! Looks like this saves a couple of cycles, thus ending the short-lived reign of version 6.</p>
</section>
<section id="isprefixofstringintable_8" class="level4">
<h4 class="anchored" data-anchor-id="isprefixofstringintable_8">IsPrefixOfStringInTable_8</h4>
<p>← IsPrefixOfStringInTable_7 | IsPrefixOfStringInTable_9 →</p>
<p>Version 8 is based off version 7, but omits the initial length test. Again, it’s another small change, but if version 5 was anything to go off, the less branches, the better.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-9-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-9-1" aria-controls="tabset-9-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-9-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-9-2" aria-controls="tabset-9-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-9-1" class="tab-pane active" aria-labelledby="tabset-9-1-tab">
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb35-1"></span>
<span id="cb35-2">% diff -u IsPrefixOfStringInTable_7.c IsPrefixOfStringInTable_8.c</span>
<span id="cb35-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_7.c 2018-04-26 10:21:43.253466500 -0400</span></span>
<span id="cb35-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_8.c 2018-04-26 10:21:27.109761800 -0400</span></span>
<span id="cb35-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,7 +18,7 @@</span></span>
<span id="cb35-6"></span>
<span id="cb35-7"> _Use_decl_annotations_</span>
<span id="cb35-8"> STRING_TABLE_INDEX</span>
<span id="cb35-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_7(</span></span>
<span id="cb35-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_8(</span></span>
<span id="cb35-11">     PSTRING_TABLE StringTable,</span>
<span id="cb35-12">     PSTRING String,</span>
<span id="cb35-13">     PSTRING_MATCH Match</span>
<span id="cb35-14"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,10 +31,8 @@</span></span>
<span id="cb35-15">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb35-16">     or is equal to" the search string.</span>
<span id="cb35-17"></span>
<span id="cb35-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This routine is based off version 6, but alters when we calculate the</span></span>
<span id="cb35-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    "search length" for the given string, which is done via the expression</span></span>
<span id="cb35-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    'min(String-&gt;Length, 16)'.  We don't need this value until later in the</span></span>
<span id="cb35-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    routine, when we're ready to start comparing strings.</span></span>
<span id="cb35-22"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This routine is based off version 7, but omits the initial minimum</span></span>
<span id="cb35-23"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    length test of the string array.</span></span>
<span id="cb35-24"></span>
<span id="cb35-25"> Arguments:</span>
<span id="cb35-26"></span>
<span id="cb35-27"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -63,7 +61,6 @@</span></span>
<span id="cb35-28">     ULONG NumberOfTrailingZeros;</span>
<span id="cb35-29">     ULONG SearchLength;</span>
<span id="cb35-30">     PSTRING TargetString;</span>
<span id="cb35-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    PSTRING_ARRAY StringArray;</span></span>
<span id="cb35-32">     STRING_SLOT Slot;</span>
<span id="cb35-33">     STRING_SLOT Search;</span>
<span id="cb35-34">     STRING_SLOT Compare;</span>
<span id="cb35-35"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -77,17 +74,6 @@</span></span>
<span id="cb35-36">     XMMWORD IncludeSlots;</span>
<span id="cb35-37">     const XMMWORD AllOnesXmm = _mm_set1_epi8(0xff);</span>
<span id="cb35-38"></span>
<span id="cb35-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    StringArray = StringTable-&gt;pStringArray;</span></span>
<span id="cb35-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb35-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb35-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // If the minimum length of the string array is greater than the length of</span></span>
<span id="cb35-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // our search string, there can't be a prefix match.</span></span>
<span id="cb35-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb35-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb35-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    if (StringArray-&gt;MinimumLength &gt; String-&gt;Length) {</span></span>
<span id="cb35-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        goto NoMatch;</span></span>
<span id="cb35-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    }</span></span>
<span id="cb35-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb35-50">     //</span>
<span id="cb35-51">     // Unconditionally do the following five operations before checking any of</span>
<span id="cb35-52">     // the results and determining how the search should proceed:</span></code></pre></div>
</div>
<div id="tabset-9-2" class="tab-pane" aria-labelledby="tabset-9-2-tab">
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb36-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb36-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb36-3">IsPrefixOfStringInTable_8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb36-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb36-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb36-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb36-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb36-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb36-9"></span>
<span id="cb36-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb36-11"></span>
<span id="cb36-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb36-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb36-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb36-15"></span>
<span id="cb36-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This routine is based off version 7, but omits the initial minimum</span></span>
<span id="cb36-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    length test of the string array.</span></span>
<span id="cb36-18"></span>
<span id="cb36-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb36-20"></span>
<span id="cb36-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb36-22"></span>
<span id="cb36-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb36-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb36-25"></span>
<span id="cb36-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb36-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb36-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb36-29"></span>
<span id="cb36-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb36-31"></span>
<span id="cb36-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb36-33"></span>
<span id="cb36-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb36-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-58"></span>
<span id="cb36-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb36-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb36-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb36-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb36-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb36-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb36-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb36-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb36-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb36-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb36-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb36-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb36-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb36-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb36-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb36-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb36-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb36-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb36-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb36-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb36-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb36-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb36-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb36-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb36-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-92"></span>
<span id="cb36-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb36-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-96"></span>
<span id="cb36-97">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-98"></span>
<span id="cb36-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb36-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb36-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-103"></span>
<span id="cb36-104">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb36-105">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-106"></span>
<span id="cb36-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-108">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb36-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-110"></span>
<span id="cb36-111">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-112"></span>
<span id="cb36-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb36-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-116"></span>
<span id="cb36-117">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-118"></span>
<span id="cb36-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb36-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-122"></span>
<span id="cb36-123">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-124">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-125"></span>
<span id="cb36-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb36-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb36-129">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb36-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb36-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb36-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-133"></span>
<span id="cb36-134">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-135"></span>
<span id="cb36-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb36-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb36-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb36-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb36-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb36-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb36-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-145"></span>
<span id="cb36-146">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-147"></span>
<span id="cb36-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb36-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb36-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb36-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-153"></span>
<span id="cb36-154">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-155"></span>
<span id="cb36-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-157">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb36-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb36-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb36-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb36-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-162"></span>
<span id="cb36-163">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb36-164">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-165"></span>
<span id="cb36-166">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb36-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-169"></span>
<span id="cb36-170">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-171"></span>
<span id="cb36-172">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-173"></span>
<span id="cb36-174">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-175">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb36-176">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb36-177">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb36-178">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-179"></span>
<span id="cb36-180">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-181">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-182"></span>
<span id="cb36-183">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb36-185">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb36-186">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-187"></span>
<span id="cb36-188">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-189"></span>
<span id="cb36-190">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-191">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb36-192">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb36-193">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-194"></span>
<span id="cb36-195">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-196"></span>
<span id="cb36-197">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-198"></span>
<span id="cb36-199">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-200">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb36-201">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb36-202">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-203"></span>
<span id="cb36-204">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-205">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-206"></span>
<span id="cb36-207">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-208">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb36-209">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb36-210">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb36-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-212"></span>
<span id="cb36-213">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-214">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-215"></span>
<span id="cb36-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb36-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-219"></span>
<span id="cb36-220">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-221">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb36-222"></span>
<span id="cb36-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb36-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-226"></span>
<span id="cb36-227">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-228"></span>
<span id="cb36-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb36-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb36-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb36-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb36-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb36-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb36-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb36-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb36-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb36-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-240"></span>
<span id="cb36-241">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-242"></span>
<span id="cb36-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb36-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-246"></span>
<span id="cb36-247">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-248"></span>
<span id="cb36-249">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-250"></span>
<span id="cb36-251">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-252">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb36-253">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb36-254">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb36-255">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-256"></span>
<span id="cb36-257">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb36-258"></span>
<span id="cb36-259">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-260"></span>
<span id="cb36-261">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-262"></span>
<span id="cb36-263">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-264">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb36-265">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-266"></span>
<span id="cb36-267">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-268"></span>
<span id="cb36-269">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-270"></span>
<span id="cb36-271">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-272">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb36-273">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb36-274">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb36-275">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb36-276">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb36-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-278"></span>
<span id="cb36-279">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-280">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-281">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-282"></span>
<span id="cb36-283">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-284"></span>
<span id="cb36-285">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb36-286"></span>
<span id="cb36-287">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-288">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb36-289">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb36-290">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb36-291">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-292"></span>
<span id="cb36-293"></span>
<span id="cb36-294">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-295"></span>
<span id="cb36-296">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-297">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-298">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb36-299"></span>
<span id="cb36-300">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-301"></span>
<span id="cb36-302">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-303">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-304"></span>
<span id="cb36-305">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-306">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb36-307">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-308"></span>
<span id="cb36-309">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-310"></span>
<span id="cb36-311">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-312">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb36-313">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb36-314"></span>
<span id="cb36-315">NoMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb36-316"></span>
<span id="cb36-317">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb36-318"></span>
<span id="cb36-319">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-320"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="benchmark-8" class="level4 unlisted">
<h4 class="unlisted anchored" data-anchor-id="benchmark-8">Benchmark 8</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-08-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-08-v1.svg" class="img-fluid figure-img" alt="Benchmark 8"></a></p>
<figcaption>Benchmark 8</figcaption>
</figure>
</div>
<p>Hey, look at that, another win across the board! Omitting the length test shaves off a few more cycles for both prefix and negative matching. Version 7’s one-round reign has come to a timely end.</p>
</section>
<section id="isprefixofstringintable_9" class="level4">
<h4 class="anchored" data-anchor-id="isprefixofstringintable_9">IsPrefixOfStringInTable_9</h4>
<p>← IsPrefixOfStringInTable_8 | IsPrefixOfStringInTable_10 →</p>
<p>Version 9 tweaks version 8 by simply using <code>return NO_MATCH_FOUND</code> after the initial bitmap check instead of <code>goto NoMatch</code>. (The use of <code>goto</code> was a bit peculiar there anyway. We’re going to rewrite the body similarly for version 10, but let’s try to stick to making one change at a time.)</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-10-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-10-1" aria-controls="tabset-10-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-10-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-10-2" aria-controls="tabset-10-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-10-1" class="tab-pane active" aria-labelledby="tabset-10-1-tab">
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb37-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_8.c 2018-04-26 10:30:52.337935400 -0400</span></span>
<span id="cb37-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_9.c 2018-04-26 10:32:04.986734400 -0400</span></span>
<span id="cb37-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,7 +18,7 @@</span></span>
<span id="cb37-4"></span>
<span id="cb37-5"> _Use_decl_annotations_</span>
<span id="cb37-6"> STRING_TABLE_INDEX</span>
<span id="cb37-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_8(</span></span>
<span id="cb37-8"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_9(</span></span>
<span id="cb37-9">     PSTRING_TABLE StringTable,</span>
<span id="cb37-10">     PSTRING String,</span>
<span id="cb37-11">     PSTRING_MATCH Match</span>
<span id="cb37-12"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,8 +31,8 @@</span></span>
<span id="cb37-13">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb37-14">     or is equal to" the search string.</span>
<span id="cb37-15"></span>
<span id="cb37-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This routine is based off version 7, but omits the initial minimum</span></span>
<span id="cb37-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    length test of the string array.</span></span>
<span id="cb37-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This is a tweaked version of version 8 that does 'return NO_MATCH_FOUND'</span></span>
<span id="cb37-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    after the initial bitmap check versus 'goto NoMatch'.</span></span>
<span id="cb37-20"></span>
<span id="cb37-21"> Arguments:</span>
<span id="cb37-22"></span>
<span id="cb37-23"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -195,7 +195,7 @@</span></span>
<span id="cb37-24">         // search string.</span>
<span id="cb37-25">         //</span>
<span id="cb37-26"></span>
<span id="cb37-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        goto NoMatch;</span></span>
<span id="cb37-28"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        return NO_MATCH_FOUND;</span></span>
<span id="cb37-29">     }</span>
<span id="cb37-30"></span>
<span id="cb37-31">     //</span>
<span id="cb37-32"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -330,8 +330,6 @@</span></span>
<span id="cb37-33">     // If we get here, we didn't find a match.</span>
<span id="cb37-34">     //</span>
<span id="cb37-35"></span>
<span id="cb37-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-NoMatch:</span></span>
<span id="cb37-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb37-38">     //IACA_VC_END();</span>
<span id="cb37-39"></span>
<span id="cb37-40">     return NO_MATCH_FOUND;</span></code></pre></div>
</div>
<div id="tabset-10-2" class="tab-pane" aria-labelledby="tabset-10-2-tab">
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb38-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb38-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb38-3">IsPrefixOfStringInTable_9<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb38-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb38-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb38-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb38-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb38-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb38-9"></span>
<span id="cb38-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb38-11"></span>
<span id="cb38-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb38-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb38-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb38-15"></span>
<span id="cb38-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This is a tweaked version of version 9 that does 'return NO_MATCH_FOUND'</span></span>
<span id="cb38-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    after the initial bitmap check versus 'goto NoMatch'.</span></span>
<span id="cb38-18"></span>
<span id="cb38-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb38-20"></span>
<span id="cb38-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb38-22"></span>
<span id="cb38-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb38-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb38-25"></span>
<span id="cb38-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb38-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb38-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb38-29"></span>
<span id="cb38-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb38-31"></span>
<span id="cb38-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb38-33"></span>
<span id="cb38-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb38-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-58"></span>
<span id="cb38-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb38-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb38-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb38-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb38-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb38-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb38-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb38-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb38-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb38-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb38-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb38-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb38-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb38-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb38-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb38-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb38-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb38-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb38-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb38-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb38-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb38-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb38-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb38-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb38-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-92"></span>
<span id="cb38-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb38-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-96"></span>
<span id="cb38-97">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-98"></span>
<span id="cb38-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb38-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb38-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-103"></span>
<span id="cb38-104">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb38-105">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-106"></span>
<span id="cb38-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-108">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb38-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-110"></span>
<span id="cb38-111">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-112"></span>
<span id="cb38-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb38-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-116"></span>
<span id="cb38-117">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-118"></span>
<span id="cb38-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb38-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-122"></span>
<span id="cb38-123">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-124">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-125"></span>
<span id="cb38-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb38-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb38-129">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb38-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb38-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb38-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-133"></span>
<span id="cb38-134">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-135"></span>
<span id="cb38-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb38-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb38-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb38-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb38-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb38-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb38-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-145"></span>
<span id="cb38-146">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-147"></span>
<span id="cb38-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb38-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb38-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb38-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-153"></span>
<span id="cb38-154">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-155"></span>
<span id="cb38-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-157">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb38-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb38-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb38-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb38-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-162"></span>
<span id="cb38-163">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb38-164">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-165"></span>
<span id="cb38-166">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb38-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-169"></span>
<span id="cb38-170">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-171"></span>
<span id="cb38-172">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-173"></span>
<span id="cb38-174">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-175">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb38-176">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb38-177">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb38-178">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-179"></span>
<span id="cb38-180">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-181">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-182"></span>
<span id="cb38-183">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb38-185">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb38-186">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-187"></span>
<span id="cb38-188">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-189"></span>
<span id="cb38-190">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-191">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb38-192">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb38-193">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-194"></span>
<span id="cb38-195">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-196"></span>
<span id="cb38-197">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-198"></span>
<span id="cb38-199">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-200">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb38-201">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb38-202">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-203"></span>
<span id="cb38-204">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-205">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-206"></span>
<span id="cb38-207">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-208">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb38-209">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb38-210">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb38-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-212"></span>
<span id="cb38-213">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-214">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-215"></span>
<span id="cb38-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb38-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-219"></span>
<span id="cb38-220">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-221">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb38-222"></span>
<span id="cb38-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb38-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-226"></span>
<span id="cb38-227">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-228"></span>
<span id="cb38-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb38-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb38-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb38-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb38-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb38-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb38-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb38-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb38-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb38-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-240"></span>
<span id="cb38-241">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-242"></span>
<span id="cb38-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb38-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-246"></span>
<span id="cb38-247">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-248"></span>
<span id="cb38-249">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-250"></span>
<span id="cb38-251">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-252">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb38-253">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb38-254">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb38-255">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-256"></span>
<span id="cb38-257">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb38-258"></span>
<span id="cb38-259">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-260"></span>
<span id="cb38-261">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-262"></span>
<span id="cb38-263">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-264">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb38-265">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-266"></span>
<span id="cb38-267">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-268"></span>
<span id="cb38-269">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-270"></span>
<span id="cb38-271">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-272">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We successfully prefix matched the search string against</span></span>
<span id="cb38-273">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this slot.  The code immediately following us deals with</span></span>
<span id="cb38-274">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// handling a successful prefix match at the initial slot</span></span>
<span id="cb38-275">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb38-276">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// directly into it.</span></span>
<span id="cb38-277">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-278"></span>
<span id="cb38-279">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-280">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-281">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-282"></span>
<span id="cb38-283">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-284"></span>
<span id="cb38-285">FoundMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb38-286"></span>
<span id="cb38-287">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-288">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb38-289">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb38-290">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb38-291">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-292"></span>
<span id="cb38-293"></span>
<span id="cb38-294">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-295"></span>
<span id="cb38-296">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-297">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-298">                Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb38-299"></span>
<span id="cb38-300">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-301"></span>
<span id="cb38-302">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-303">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-304"></span>
<span id="cb38-305">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-306">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Not enough characters matched, so continue the loop.</span></span>
<span id="cb38-307">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-308"></span>
<span id="cb38-309">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-310"></span>
<span id="cb38-311">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-312">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb38-313">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb38-314"></span>
<span id="cb38-315">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb38-316"></span>
<span id="cb38-317">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-318"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="benchmark-9" class="level4 unlisted">
<h4 class="unlisted anchored" data-anchor-id="benchmark-9">Benchmark 9</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-09-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-09-v1.svg" class="img-fluid figure-img" alt="Benchmark 09"></a></p>
<figcaption>Benchmark 09</figcaption>
</figure>
</div>
<p>This is an interesting one. The <code>return</code> versus <code>goto</code> appears to have cost us a tiny bit with the first few test inputs—only about 0.2 more cycles, which is negligible in the grand scheme of things. (Though let’s not pull on that thread too much, or the entire premise of the article might start to unravel!)</p>
<p>Version 9 improves the negative match performance by a few cycles, so let’s keep it.</p>
</section>
<section id="isprefixofstringintable_10" class="level4">
<h4 class="anchored" data-anchor-id="isprefixofstringintable_10">IsPrefixOfStringInTable_10</h4>
<p>← IsPrefixOfStringInTable_9 | IsPrefixOfStringInTable_11 →</p>
<p>At this point, we’ve exhausted all the small, easy tweaks. Let’s rewrite the inner loop that performs the character comparison and see how that affects performance.</p>
<p>This should be an interesting one because the way it’s written now is… a bit odd. (I’ve clearly made some assumptions about optimal branch organization, to say the least.)</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-11-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-11-1" aria-controls="tabset-11-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-11-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-11-2" aria-controls="tabset-11-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-11-1" class="tab-pane active" aria-labelledby="tabset-11-1-tab">
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb39-1">% diff -u IsPrefixOfStringInTable_9.c IsPrefixOfStringInTable_10.c</span>
<span id="cb39-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_9.c 2018-04-26 10:32:04.986734400 -0400</span></span>
<span id="cb39-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_10.c        2018-04-26 10:38:09.357890400 -0400</span></span>
<span id="cb39-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,7 +18,7 @@</span></span>
<span id="cb39-5"></span>
<span id="cb39-6"> _Use_decl_annotations_</span>
<span id="cb39-7"> STRING_TABLE_INDEX</span>
<span id="cb39-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_9(</span></span>
<span id="cb39-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_10(</span></span>
<span id="cb39-10">     PSTRING_TABLE StringTable,</span>
<span id="cb39-11">     PSTRING String,</span>
<span id="cb39-12">     PSTRING_MATCH Match</span>
<span id="cb39-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,8 +31,8 @@</span></span>
<span id="cb39-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb39-15">     or is equal to" the search string.</span>
<span id="cb39-16"></span>
<span id="cb39-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This is a tweaked version of version 8 that does 'return NO_MATCH_FOUND'</span></span>
<span id="cb39-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    after the initial bitmap check versus 'goto NoMatch'.</span></span>
<span id="cb39-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This version is based off version 9, but rewrites the inner loop that</span></span>
<span id="cb39-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    checks for comparisons.</span></span>
<span id="cb39-21"></span>
<span id="cb39-22"> Arguments:</span>
<span id="cb39-23"></span>
<span id="cb39-24"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -264,7 +264,17 @@</span></span>
<span id="cb39-25"></span>
<span id="cb39-26">         CharactersMatched = __popcnt(Mask);</span>
<span id="cb39-27"></span>
<span id="cb39-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        if ((USHORT)CharactersMatched == 16 &amp;&amp; Length &gt; 16) {</span></span>
<span id="cb39-29"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        if ((USHORT)CharactersMatched &lt; Length &amp;&amp; Length &lt;= 16) {</span></span>
<span id="cb39-30"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-31"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            //</span></span>
<span id="cb39-32"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            // The slot length is longer than the number of characters matched</span></span>
<span id="cb39-33"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            // from the search string; this isn't a prefix match.  Continue.</span></span>
<span id="cb39-34"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            //</span></span>
<span id="cb39-35"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-36"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            continue;</span></span>
<span id="cb39-37"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        }</span></span>
<span id="cb39-38"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-39"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        if (Length &gt; 16) {</span></span>
<span id="cb39-40"></span>
<span id="cb39-41">             //</span>
<span id="cb39-42">             // The first 16 characters in the string matched against this</span>
<span id="cb39-43"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -283,46 +293,24 @@</span></span>
<span id="cb39-44">                 //</span>
<span id="cb39-45"></span>
<span id="cb39-46">                 continue;</span>
<span id="cb39-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb39-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            } else {</span></span>
<span id="cb39-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb39-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                //</span></span>
<span id="cb39-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                // We successfully prefix matched the search string against</span></span>
<span id="cb39-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                // this slot.  The code immediately following us deals with</span></span>
<span id="cb39-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                // handling a successful prefix match at the initial slot</span></span>
<span id="cb39-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                // level; let's avoid an unnecessary branch and just jump</span></span>
<span id="cb39-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                // directly into it.</span></span>
<span id="cb39-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                //</span></span>
<span id="cb39-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb39-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                goto FoundMatch;</span></span>
<span id="cb39-59">             }</span>
<span id="cb39-60">         }</span>
<span id="cb39-61"></span>
<span id="cb39-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        if ((USHORT)CharactersMatched == Length) {</span></span>
<span id="cb39-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb39-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-FoundMatch:</span></span>
<span id="cb39-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb39-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            //</span></span>
<span id="cb39-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            // This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb39-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            // caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb39-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            // match.</span></span>
<span id="cb39-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            //</span></span>
<span id="cb39-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb39-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb39-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            if (ARGUMENT_PRESENT(Match)) {</span></span>
<span id="cb39-74"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb39-75"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb39-76"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb39-77"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // match.</span></span>
<span id="cb39-78"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb39-79"></span>
<span id="cb39-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                Match-&gt;Index = (BYTE)Index;</span></span>
<span id="cb39-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                Match-&gt;NumberOfMatchedCharacters = (BYTE)CharactersMatched;</span></span>
<span id="cb39-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                Match-&gt;String = &amp;StringTable-&gt;pStringArray-&gt;Strings[Index];</span></span>
<span id="cb39-83"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        if (ARGUMENT_PRESENT(Match)) {</span></span>
<span id="cb39-84"></span>
<span id="cb39-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            }</span></span>
<span id="cb39-86"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            Match-&gt;Index = (BYTE)Index;</span></span>
<span id="cb39-87"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            Match-&gt;NumberOfMatchedCharacters = (BYTE)CharactersMatched;</span></span>
<span id="cb39-88"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+            Match-&gt;String = &amp;StringTable-&gt;pStringArray-&gt;Strings[Index];</span></span>
<span id="cb39-89"></span>
<span id="cb39-90"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-            return (STRING_TABLE_INDEX)Index;</span></span>
<span id="cb39-91">         }</span>
<span id="cb39-92"></span>
<span id="cb39-93"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        //</span></span>
<span id="cb39-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // Not enough characters matched, so continue the loop.</span></span>
<span id="cb39-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        //</span></span>
<span id="cb39-96"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        return (STRING_TABLE_INDEX)Index;</span></span>
<span id="cb39-97"></span>
<span id="cb39-98">     } while (--Count);</span></code></pre></div>
</div>
<div id="tabset-11-2" class="tab-pane" aria-labelledby="tabset-11-2-tab">
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb40-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb40-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb40-3">IsPrefixOfStringInTable_10<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb40-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb40-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb40-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb40-9"></span>
<span id="cb40-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb40-11"></span>
<span id="cb40-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb40-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb40-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb40-15"></span>
<span id="cb40-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This version is based off version 8, but rewrites the inner loop that</span></span>
<span id="cb40-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    checks for comparisons.</span></span>
<span id="cb40-18"></span>
<span id="cb40-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb40-20"></span>
<span id="cb40-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb40-22"></span>
<span id="cb40-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb40-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb40-25"></span>
<span id="cb40-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb40-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb40-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb40-29"></span>
<span id="cb40-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb40-31"></span>
<span id="cb40-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb40-33"></span>
<span id="cb40-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb40-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-58"></span>
<span id="cb40-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb40-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb40-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb40-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb40-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb40-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb40-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb40-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb40-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb40-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb40-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb40-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb40-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb40-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb40-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb40-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb40-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb40-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb40-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb40-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb40-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb40-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb40-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb40-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb40-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-92"></span>
<span id="cb40-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb40-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-96"></span>
<span id="cb40-97">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-98"></span>
<span id="cb40-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb40-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb40-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-103"></span>
<span id="cb40-104">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-105">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-106"></span>
<span id="cb40-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-108">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb40-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-110"></span>
<span id="cb40-111">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-112"></span>
<span id="cb40-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb40-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-116"></span>
<span id="cb40-117">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-118"></span>
<span id="cb40-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb40-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-122"></span>
<span id="cb40-123">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-124">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-125"></span>
<span id="cb40-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb40-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb40-129">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb40-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb40-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb40-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-133"></span>
<span id="cb40-134">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-135"></span>
<span id="cb40-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb40-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb40-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb40-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb40-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb40-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb40-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-145"></span>
<span id="cb40-146">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-147"></span>
<span id="cb40-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb40-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb40-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb40-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-153"></span>
<span id="cb40-154">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-155"></span>
<span id="cb40-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-157">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb40-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb40-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb40-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb40-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-162"></span>
<span id="cb40-163">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-164">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-165"></span>
<span id="cb40-166">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb40-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-169"></span>
<span id="cb40-170">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-171"></span>
<span id="cb40-172">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-173"></span>
<span id="cb40-174">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-175">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb40-176">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb40-177">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb40-178">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-179"></span>
<span id="cb40-180">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-181">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-182"></span>
<span id="cb40-183">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb40-185">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb40-186">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-187"></span>
<span id="cb40-188">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-189"></span>
<span id="cb40-190">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-191">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb40-192">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb40-193">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-194"></span>
<span id="cb40-195">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-196"></span>
<span id="cb40-197">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-198"></span>
<span id="cb40-199">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-200">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb40-201">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb40-202">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-203"></span>
<span id="cb40-204">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-205">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-206"></span>
<span id="cb40-207">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-208">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb40-209">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb40-210">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb40-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-212"></span>
<span id="cb40-213">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-214">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-215"></span>
<span id="cb40-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb40-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-219"></span>
<span id="cb40-220">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-221">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb40-222"></span>
<span id="cb40-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb40-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-226"></span>
<span id="cb40-227">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-228"></span>
<span id="cb40-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb40-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb40-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb40-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb40-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb40-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb40-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb40-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb40-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb40-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-240"></span>
<span id="cb40-241">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-242"></span>
<span id="cb40-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb40-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-246"></span>
<span id="cb40-247">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-248"></span>
<span id="cb40-249">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-250"></span>
<span id="cb40-251">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-252">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The slot length is longer than the number of characters matched</span></span>
<span id="cb40-253">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// from the search string; this isn't a prefix match.  Continue.</span></span>
<span id="cb40-254">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-255"></span>
<span id="cb40-256">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-257">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-258"></span>
<span id="cb40-259">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-260"></span>
<span id="cb40-261">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-262">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb40-263">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb40-264">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb40-265">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-266"></span>
<span id="cb40-267">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb40-268"></span>
<span id="cb40-269">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-270"></span>
<span id="cb40-271">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-272"></span>
<span id="cb40-273">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-274">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb40-275">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-276"></span>
<span id="cb40-277">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-278">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-279">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-280"></span>
<span id="cb40-281">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-282">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb40-283">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb40-284">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb40-285">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-286"></span>
<span id="cb40-287">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-288"></span>
<span id="cb40-289">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-290">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-291">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb40-292"></span>
<span id="cb40-293">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-294"></span>
<span id="cb40-295">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-296"></span>
<span id="cb40-297">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-298"></span>
<span id="cb40-299">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-300">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb40-301">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb40-302"></span>
<span id="cb40-303">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb40-304"></span>
<span id="cb40-305">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-306"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
<p>That’s a nicer bit of logic—more C-like, less assembly-like, and arguably clearer. Let’s see how they compare. (This is an interesting one, as I genuinely don’t have a strong hunch about what kind of performance impact this will have; obviously, I thought the initial way of structuring the loop was optimal, and I had it in place for two years before deciding to embark on this article, which led to the rework we just saw. )</p>
</section>
<section id="benchmark-10" class="level4 unlisted">
<h4 class="unlisted anchored" data-anchor-id="benchmark-10">Benchmark 10</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-10-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-10-v1.svg" class="img-fluid figure-img" alt="Benchmark 10"></a></p>
<figcaption>Benchmark 10</figcaption>
</figure>
</div>
<p>Hey, look at that! We’ve shaved off a few more cycles in most cases, especially for the negative matches!</p>
</section>
</section>
<section id="speeding-up-negative-matches-with-assembly" class="level3">
<h3 class="anchored" data-anchor-id="speeding-up-negative-matches-with-assembly">Speeding Up Negative Matches with Assembly</h3>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p><small><small></small></small></p><small><small>
<p>If you build the <a href="https://github.com/tpn/tracer">Tracer</a> project, you can run a helper batch file in the root directory called <code>cdb-simple.bat</code>, which uses <code>cdb</code> to launch one of the project’s executables, <code>ModuleLoader.exe</code>. This will start up, load all of our tracing project’s DLLs, then allow the debugger to break in, yielding a debugger prompt from which we can easily disassemble functions, inspect runtime function entries, etc. This is the approach I used for capturing the output over the next couple of sections.</p>
</small></small><p><small><small></small></small></p>
</div>
</div>
<p>Now for the fun part! Let’s take a look at the disassembly of the initial part of version 10 responsible for the negative match logic and see if there are any improvements we can make.</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb41-1">0:000&gt; uf StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_10</span>
<span id="cb41-2">StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_10<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb41-3">00007fff`f69c1df0 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48896</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">c2418</span>      mov     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">18h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rbp</span></span>
<span id="cb41-4">00007fff`f69c1df5 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4889742420</span>      mov     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">20h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span></span>
<span id="cb41-5">00007fff`f69c1dfa <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4155</span>            push    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r13</span></span>
<span id="cb41-6">00007fff`f69c1dfc <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4156</span>            push    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r14</span></span>
<span id="cb41-7">00007fff`f69c1dfe <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4157</span>            push    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r15</span></span>
<span id="cb41-8">00007fff`f69c1e00 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4883</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">ec20</span>        sub     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">20h</span></span>
<span id="cb41-9">00007fff`f69c1e04 c5fa6f5920      vmovdqu <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">20h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb41-10">00007fff`f69c1e09 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">c8b6a08</span>        mov     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r13</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb41-11">00007fff`f69c1e0d <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">d</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">8bf0</span>          mov     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r14</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span></span>
<span id="cb41-12">00007fff`f69c1e10 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">440</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">fb63a</span>        movzx   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r15d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb41-13">00007fff`f69c1e14 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">ed</span>            xor     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ebp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ebp</span></span>
<span id="cb41-14">00007fff`f69c1e16 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44883</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">c24</span>        mov     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r15b</span></span>
<span id="cb41-15">00007fff`f69c1e1a <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">488</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">bf1</span>          mov     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span></span>
<span id="cb41-16">00007fff`f69c1e1d c4e279780c24    vpbroadcastb <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb41-17">00007fff`f69c1e23 c4c17a6f6500    vmovdqu <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r13</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb41-18">00007fff`f69c1e29 c4e259004110    vpshufb <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">10h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb41-19">00007fff`f69c1e2f c5f97411        vpcmpeqb <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb41-20">00007fff`f69c1e33 c5e164c9        vpcmpgtb <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb41-21">00007fff`f69c1e37 c5f1ef0d41320000 vpxor   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>_xmmffffffffffffffffffffffffffffffff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00007</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">fff</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`f69c5080)]</span></span>
<span id="cb41-22">00007fff`f69c1e3f c5e9dbd1        vpand   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb41-23">00007fff`f69c1e43 c579d7c2        vpmovmskb <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span></span>
<span id="cb41-24">00007fff`f69c1e47 c5fa7f5c2410    vmovdqu <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">10h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span></span>
<span id="cb41-25">00007fff`f69c1e4d <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4585</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">c0</span>          test    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span></span>
<span id="cb41-26">00007fff`f69c1e50 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">f849a000000</span>    je      StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_10<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x100</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00007</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">fff</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`f69c1ef0)</span></span></code></pre></div>
<p>There’s a bit of cruft at the start regarding setting up the function’s prologue (pushing non-volatile registers to the stack, etc. ). That’s to be expected for C (and C++, and basically every language); as the programmer, you don’t have any <strong>direct</strong> control over how many registers a compiler uses for a routine, how much stack space it uses, which registers it uses when, etc.</p>
<p>However, with assembly, we’re on the opposite end of the spectrum: we can control everything! We also have a little trick up our sleeves: the venerable <code>LEAF_ENTRY</code>.</p>
<section id="windows-x64-abi-calling-conventions" class="level4">
<h4 class="anchored" data-anchor-id="windows-x64-abi-calling-conventions">Windows x64 ABI Calling Conventions</h4>
<p>First, some background. The Windows x64 ABI and calling convention dictate two types of functions: <a href="https://github.com/tpn/winsdk-10/blob/master/Include/10.0.16299.0/shared/macamd64.inc#L524"><code>NESTED_ENTRY</code></a> and <a href="https://github.com/tpn/winsdk-10/blob/master/Include/10.0.16299.0/shared/macamd64.inc#L353"><code>LEAF_ENTRY</code></a>.</p>
<section id="nested_entry" class="level5">
<h5 class="anchored" data-anchor-id="nested_entry">NESTED_ENTRY</h5>
<p><code>NESTED_ENTRY</code> is by far the most common; C and C++ functions are all implicitly <code>NESTED_ENTRY</code> functions. (The <code>LEAF_ENTRY</code> and <code>NESTED_ENTRY</code> symbols are MASM (<code>ml64.exe</code>) macro names, but the concept applies to all languages.)</p>
</section>
<section id="leaf_entry" class="level5">
<h5 class="anchored" data-anchor-id="leaf_entry">LEAF_ENTRY</h5>
<p>A <code>LEAF_ENTRY</code> can only be implemented in assembly. It is constrained in that it may not manipulate any of the non-volatile x64 registers (<code>rbx</code>, <code>rdi</code>, <code>rsi</code>, <code>rsp</code>, <code>rbp</code>, <code>r12</code>, <code>r13</code>, <code>r14</code>, <code>r15</code>, <code>xmm6-15</code>), nor may it <code>call</code> any other functions (since <code>call</code> implicitly modifies the stack pointer), nor may it have a structured exception handler (since handling an exception for a given stack frame also manipulates the stack pointer).</p>
<p>The reason for these constraints is that <code>LEAF_ENTRY</code> routines do not have any unwind information generated for them in their runtime function entries. Unwind information is used by the kernel to, well, unwind the modifications made to non-volatile registers while traversing back up through the call stack looking for an exception handler in the event of an exception.</p>
<p>For example, here’s the function entry and associated unwind information for the PGO build of the <code>IsPrefixOfStringInTable_10</code> function:</p>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb42-1">0:000&gt; .fnent StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_10</span>
<span id="cb42-2">Debugger function entry <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">000001</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">d</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`2ea03cf8 for:</span></span>
<span id="cb42-3">(00007fff`f8411df0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>   StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_10</span>
<span id="cb42-4">Exact matches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb42-5">    StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_10 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>struct _STRING_TABLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*,</span></span>
<span id="cb42-6">                                             struct _STRING <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*,</span></span>
<span id="cb42-7">                                             struct _STRING_MATCH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*)</span></span>
<span id="cb42-8"></span>
<span id="cb42-9">BeginAddress      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00000000</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`00001df0</span></span>
<span id="cb42-10">EndAddress        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00000000</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`00001e59</span></span>
<span id="cb42-11">UnwindInfoAddress <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00000000</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`000054f8</span></span>
<span id="cb42-12"></span>
<span id="cb42-13">Unwind info <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">at</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00007</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">fff</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`f84154f8, 14 bytes</span></span>
<span id="cb42-14">  version <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> flags <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> prolog <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> codes <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb42-15">  00: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>   UWOP_SAVE_NONVOL FrameOffset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">58</span> reg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb42-16">  02: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>   UWOP_SAVE_NONVOL FrameOffset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> reg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rbp</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb42-17">  04: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>   UWOP_ALLOC_SMALL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb42-18">  05: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info f   UWOP_PUSH_NONVOL reg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r15</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb42-19">  06: offs e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info e    UWOP_PUSH_NONVOL reg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r14</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb42-20">  07: offs c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info d    UWOP_PUSH_NONVOL reg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r13</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.</span></span></code></pre></div>
<p>We can see that this routine manipulates six non-volatile registers in total, including the stack pointer. The first instructions of the routine constitute the function’s prologue; in the disassembly, you can see that three of the <code>rxx</code> registers are pushed to the stack, followed by the allocation of 0x20 (32) bytes of stack space:</p>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb43-1">0:000&gt; uf StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_10</span>
<span id="cb43-2">StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_10<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb43-3">00007fff`f69c1df0 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48896</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">c2418</span>      mov     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">18h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rbp</span></span>
<span id="cb43-4">00007fff`f69c1df5 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4889742420</span>      mov     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">20h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span></span>
<span id="cb43-5">00007fff`f69c1dfa <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4155</span>            push    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r13</span></span>
<span id="cb43-6">00007fff`f69c1dfc <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4156</span>            push    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r14</span></span>
<span id="cb43-7">00007fff`f69c1dfe <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4157</span>            push    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r15</span></span>
<span id="cb43-8">00007fff`f69c1e00 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4883</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">ec20</span>        sub     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">20h</span></span></code></pre></div>
<p>It also cheekily uses the home parameter space for stashing <code>rbp</code> and <code>rsi</code> instead of pushing them to the stack. That’s fair game, though—this is the PGO build, so I’d expect it to use some extra tricks to shave off a few cycles here and there. I’d do the same if I were writing assembly. <em>(Side note: if you view the source of this page, there’s a commented-out section below that shows the runtime function entry for the release build of version 10; it uses nine registers instead of six and 40 bytes of stack space instead of 32. I wrote it before switching to using the PGO build for everything.)</em></p>
<p>The home parameter space is a 32-byte area that immediately follows the return address (i.e., the value of <code>rsp</code> when the function is entered); it is mandated by the x64 calling convention on Windows and is primarily intended to provide scratch space for a routine to <em>home</em> its parameter registers (i.e., the registers used for the first four arguments of a function: <code>rcx</code>, <code>rdx</code>, <code>r8</code>, and <code>r9</code>). This allows the four volatile registers to be repurposed within a routine while still providing a way to refer to the parameters if needed. That’s its intended use—however, it’s not strictly enforced, so you can essentially treat this area as a free 32-byte scratch space if you’re writing assembly.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>On a semi-related note, I’d highly recommend reading <a href="https://github.com/tpn/pdfs/blob/4d2296269d3737b649def585a19eb103cda9c3d0/A%20History%20of%20Modern%2064-bit%20Computing%20-%20Feb%202007%20(CSEP590A).pdf">A History of Modern 64-bit Computing</a> if you have some spare time. It’s a fascinating insight into contemporary x64 conventions we often take for granted, drawing on numerous interviews with industry luminaries like Dave Cutler and Linus Torvalds. I found it incredibly useful for understanding the <em>why</em> behind concepts like home parameter space, structured exception handling, runtime function entries, and why you can’t write inline assembly for x64 with MSVC anymore—apparently, it provides a direct vector for disrupting the mechanisms relied upon by the kernel stack unwinding functionality. (At least, I think that’s the reason—can anyone from Microsoft confirm?))</p>
</div>
</div>
<!--
    This is the runtime function entry for the release build of version 10, including follow-up
    commentary.  I wrote this before switching to the PGO version for everything.

<small><pre>
0:000&gt; .fnent StringTable2!IsPrefixOfStringInTable_10
Debugger function entry 000001f9`048edf98 for:
Exact matches:
    StringTable2!IsPrefixOfStringInTable_10 (struct _STRING_TABLE *, struct _STRING *, struct _STRING_MATCH *)

BeginAddress      = 00000000`00001fe0
EndAddress        = 00000000`00002165
UnwindInfoAddress = 00000000`00004370

Unwind info at 00007ffd`15594370, 1e bytes
  version 1, flags 0, prolog 81, codes d
  00: offs 81, unwind op 4, op info 7   UWOP_SAVE_NONVOL FrameOffset: 20 reg: rdi.
  02: offs 7c, unwind op 4, op info 6   UWOP_SAVE_NONVOL FrameOffset: 60 reg: rsi.
  04: offs 77, unwind op 4, op info 5   UWOP_SAVE_NONVOL FrameOffset: 58 reg: rbp.
  06: offs 72, unwind op 4, op info 3   UWOP_SAVE_NONVOL FrameOffset: 50 reg: rbx.
  08: offs c, unwind op 2, op info 4    UWOP_ALLOC_SMALL.
  09: offs 8, unwind op 0, op info f    UWOP_PUSH_NONVOL reg: r15.
  0a: offs 6, unwind op 0, op info e    UWOP_PUSH_NONVOL reg: r14.
  0b: offs 4, unwind op 0, op info d    UWOP_PUSH_NONVOL reg: r13.
  0c: offs 2, unwind op 0, op info c    UWOP_PUSH_NONVOL reg: r12.
0:000&gt;
</pre></small>
                <hr/>

                <p>

                    We can see that the C version of our routine manipulates 9 non-volatile
                    registers in total, including the stack pointer.  The first instructions
                    of the C version constitute the function's prologue; in the disassembly,
                    you can see that four of the rxx registers are pushed to the stack and then
                    0x28 (40) bytes of stack space is allocated:

                </p>

                <hr/>
<small><pre>
0:000&gt; uf StringTable2!IsPrefixOfStringInTable_10
StringTable2!IsPrefixOfStringInTable_10:
00007ffd`15591fe0 4154            push    r12
00007ffd`15591fe2 4155            push    r13
00007ffd`15591fe4 4156            push    r14
00007ffd`15591fe6 4157            push    r15
00007ffd`15591fe8 4883ec28        sub     rsp,28h
--- END OF PROLOGUE ---
00007ffd`15591fec c5fa6f5920      vmovdqu xmm3,xmmword ptr [rcx+20h]
</pre></small>
                <hr/>
-->
<hr>
</section>
</section>
</section>
<section id="assembly-implementations" class="level3">
<h3 class="anchored" data-anchor-id="assembly-implementations">Assembly Implementations</h3>
<section id="isprefixofstringintable_x64_1" class="level4">
<h4 class="anchored" data-anchor-id="isprefixofstringintable_x64_1">IsPrefixOfStringInTable_x64_1</h4>
<p>IsPrefixOfStringInTable_x64_2 →</p>
<p>So, knowing what we now know about the venerable little <code>LEAF_ENTRY</code> trick, let’s see if we can construct a simple routine in assembly that just deals with the negative match case.</p>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb44-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;++</span></span>
<span id="cb44-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; STRING_TABLE_INDEX</span></span>
<span id="cb44-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; IsPrefixOfStringInTable_x64_*(</span></span>
<span id="cb44-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING_TABLE StringTable,</span></span>
<span id="cb44-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING String,</span></span>
<span id="cb44-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _Out_opt_ PSTRING_MATCH Match</span></span>
<span id="cb44-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     )</span></span>
<span id="cb44-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Routine Description:</span></span>
<span id="cb44-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb44-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb44-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   or is equal to" the search string.</span></span>
<span id="cb44-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Arguments:</span></span>
<span id="cb44-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb44-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb44-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       search for.</span></span>
<span id="cb44-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb44-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb44-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb44-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return Value:</span></span>
<span id="cb44-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb44-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;--</span></span>
<span id="cb44-32"></span>
<span id="cb44-33">        LEAF_ENTRY IsPrefixOfStringInTable_x64_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb44-34"></span>
<span id="cb44-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_START</span></span>
<span id="cb44-36"></span>
<span id="cb44-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string buffer into xmm0, and the unique indexes from the string table</span></span>
<span id="cb44-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span></span>
<span id="cb44-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; result back into xmm0.</span></span>
<span id="cb44-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-42"></span>
<span id="cb44-43">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb44-44">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb44-45">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load indexes.</span></span>
<span id="cb44-46">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb44-47"></span>
<span id="cb44-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string table's unique character array into xmm2, and the lengths for</span></span>
<span id="cb44-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; each string slot into xmm3.</span></span>
<span id="cb44-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-52"></span>
<span id="cb44-53">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load chars.</span></span>
<span id="cb44-54">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load lengths.</span></span>
<span id="cb44-55"></span>
<span id="cb44-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm5 to all ones.  This is used later.</span></span>
<span id="cb44-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-59"></span>
<span id="cb44-60">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqq</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm5 to all ones.</span></span>
<span id="cb44-61"></span>
<span id="cb44-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb44-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-65"></span>
<span id="cb44-66">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast length.</span></span>
<span id="cb44-67"></span>
<span id="cb44-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's unique character array (xmm0) against the string</span></span>
<span id="cb44-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table's unique chars (xmm2), saving the result back into xmm0.</span></span>
<span id="cb44-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-72"></span>
<span id="cb44-73">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare unique chars.</span></span>
<span id="cb44-74"></span>
<span id="cb44-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb44-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb44-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table, to find those that are greater in length.  Invert the result, such</span></span>
<span id="cb44-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; that we're left with a masked register where each 0xff element indicates</span></span>
<span id="cb44-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; a slot with a length less than or equal to our search string's length.</span></span>
<span id="cb44-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-82"></span>
<span id="cb44-83">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb44-84">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Invert the result.</span></span>
<span id="cb44-85"></span>
<span id="cb44-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect-via-test xmm0 and xmm1 to identify string slots of a suitable</span></span>
<span id="cb44-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length with a matching unique character.</span></span>
<span id="cb44-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-90"></span>
<span id="cb44-91">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Check for no match.</span></span>
<span id="cb44-92">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;jnz        short @F                    ; There was a match.</span></span>
<span id="cb44-93">                                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (Not yet implemented.)</span></span>
<span id="cb44-94"></span>
<span id="cb44-95"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-96"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match, set rax to -1 and return.</span></span>
<span id="cb44-97"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-98"></span>
<span id="cb44-99">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-100">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; rax = -1</span></span>
<span id="cb44-101">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb44-102"></span>
<span id="cb44-103">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb44-104"></span>
<span id="cb44-105">        LEAF_END   IsPrefixOfStringInTable_x64_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb44-106"></span>
<span id="cb44-107"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></span></code></pre></div>
<p>Note how we don’t need to push anything to the stack since we didn’t manipulate any non-volatile registers. If an exception occurs within the body of our implementation (say we dereference a NULL pointer), the kernel knows it doesn’t have to undo any non-volatile register modifications (using offsets specified by the unwind information) because there isn’t any unwind information. It can simply advance to the frame before us (e. g. , <code>rsp</code> at the time of the fault, minus 8 bytes) as it continues its search for runtime function entries and associated unwind information. As you can see, the unwind info is effectively empty:</p>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb45-1">0:000&gt; .fnent StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_x64_1</span>
<span id="cb45-2">Debugger function entry <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">000001</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">f9</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`048edf98 for:</span></span>
<span id="cb45-3">Exact matches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb45-4">    StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_x64_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>void<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb45-5"></span>
<span id="cb45-6">BeginAddress      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00000000</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`00003290</span></span>
<span id="cb45-7">EndAddress        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00000000</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`000032cb</span></span>
<span id="cb45-8">UnwindInfoAddress <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00000000</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`00004468</span></span>
<span id="cb45-9"></span>
<span id="cb45-10">Unwind info <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">at</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00007</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">ffd</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`15594468, 4 bytes</span></span>
<span id="cb45-11">  version <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> flags <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> prolog <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> codes <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="benchmark-x64-1" class="level4 unlisted">
<h4 class="unlisted anchored" data-anchor-id="benchmark-x64-1">Benchmark x64 1</h4>
<p>Let’s see how this scrappy little fellow (who always returns <code>NO_MATCH_FOUND</code> but still mimics the steps required to successfully negative match) does against the leading C implementation at this point, version 10:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-01-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-01-v1.svg" class="img-fluid figure-img" alt="Benchmark x64 1"></a></p>
<figcaption>Benchmark x64 1</figcaption>
</figure>
</div>
<p>Fwoah, look at that, we’ve shaved about three cycles off the C version!</p>
<p><small> (Note that when I first wrote this, I was comparing the assembly version against the release build (not the PGO build), which was clocking in at about 13-14 cycles for negative matching. So getting it down to ~7.5 from 13-14 was a bit more exciting. Damn the PGO build and its 10.9-ish cycles for negative matching!) </small></p>
<p>The good news is that our theory about the performance of the <code>LEAF_ENTRY</code> looks like it’s paid off: we can reliably get about 7.5 cycles for negative matching.</p>
</section>
<section id="isprefixofstringintable_x64_2" class="level4">
<h4 class="anchored" data-anchor-id="isprefixofstringintable_x64_2">IsPrefixOfStringInTable_x64_2</h4>
<p>← IsPrefixOfStringInTable_x64_1 | IsPrefixOfStringInTable_x64_3 →</p>
<p>The bad news is that we now need to implement the rest of the functionality within the constraints of a <code>LEAF_ENTRY</code>!</p>
<p>The problem with a <code>LEAF_ENTRY</code> for anything more than a trivial bit of code is that you only have a handful of volatile registers to work with, and no stack space can be used for register spilling or temporaries. (Technically I could use the home parameter space, but, eh, we’re already avoiding stack spills, why not make life harder for ourselves and try to avoid <strong>all</strong> memory spilling.)</p>
<p>If you can’t spill to memory, your only option is really spilling to XMM registers via <code>vpinsr</code> and <code>vpextr</code> combinations, which, as you can see in the implementation of version 2 below, I have to do a lot.</p>
<p><small> (Also note: when I wrote this version, I didn’t use the disassembly from the C routines for guidance. I find that as soon as you start to grok the disassembly for a given routine, it becomes harder to think of ways to approach it from a fresh angle. Also, the <code>LEAF_ENTRY</code> aspect significantly limited what I could do anyway, so I figured I may as well just give it a crack from scratch and see what I could come up with. It would be an interesting point of reference compared to a future iteration that tries to improve on the disassembly of an optimized PGO version, for example.) </small></p>
<p>The diff view for this routine is less useful given the vast majority of the code is new, so I’ve put the full version of the code first. It’s based more or less on the approach used by version 8 of the C routine (I actually wrote it after I wrote version 8; versions 9 and 10 of the C routine (with the latter having the improved loop logic) came after).</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-12-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-12-1" aria-controls="tabset-12-1" aria-selected="true">Full</a></li><li class="nav-item"><a class="nav-link" id="tabset-12-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-12-2" aria-controls="tabset-12-2" aria-selected="false">Diff</a></li></ul>
<div class="tab-content">
<div id="tabset-12-1" class="tab-pane active" aria-labelledby="tabset-12-1-tab">
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb46-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;++</span></span>
<span id="cb46-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; STRING_TABLE_INDEX</span></span>
<span id="cb46-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; IsPrefixOfStringInTable_x64_*(</span></span>
<span id="cb46-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING_TABLE StringTable,</span></span>
<span id="cb46-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING String,</span></span>
<span id="cb46-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _Out_opt_ PSTRING_MATCH Match</span></span>
<span id="cb46-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     )</span></span>
<span id="cb46-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Routine Description:</span></span>
<span id="cb46-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb46-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb46-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   or is equal to" the search string.</span></span>
<span id="cb46-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Arguments:</span></span>
<span id="cb46-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb46-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb46-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       search for.</span></span>
<span id="cb46-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb46-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb46-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb46-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return Value:</span></span>
<span id="cb46-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb46-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;--</span></span>
<span id="cb46-32"></span>
<span id="cb46-33">        LEAF_ENTRY IsPrefixOfStringInTable_x64_2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb46-34"></span>
<span id="cb46-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string buffer into xmm0, and the unique indexes from the string table</span></span>
<span id="cb46-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span></span>
<span id="cb46-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; result into xmm5.</span></span>
<span id="cb46-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-40"></span>
<span id="cb46-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_START</span></span>
<span id="cb46-42"></span>
<span id="cb46-43">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb46-44">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb46-45">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load indexes.</span></span>
<span id="cb46-46">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb46-47"></span>
<span id="cb46-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string table's unique character array into xmm2.</span></span>
<span id="cb46-50"></span>
<span id="cb46-51">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load chars.</span></span>
<span id="cb46-52"></span>
<span id="cb46-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb46-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb46-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-57"></span>
<span id="cb46-58">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare unique chars.</span></span>
<span id="cb46-59"></span>
<span id="cb46-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb46-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-63">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load lengths.</span></span>
<span id="cb46-64"></span>
<span id="cb46-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.  We use this later to invert the length comparison.</span></span>
<span id="cb46-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-68"></span>
<span id="cb46-69">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqq</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.</span></span>
<span id="cb46-70"></span>
<span id="cb46-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb46-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-74"></span>
<span id="cb46-75">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast length.</span></span>
<span id="cb46-76"></span>
<span id="cb46-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb46-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb46-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table, to find those that are greater in length.  Invert the result, such</span></span>
<span id="cb46-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; that we're left with a masked register where each 0xff element indicates</span></span>
<span id="cb46-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; a slot with a length less than or equal to our search string's length.</span></span>
<span id="cb46-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-84"></span>
<span id="cb46-85">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb46-86">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Invert the result.</span></span>
<span id="cb46-87"></span>
<span id="cb46-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect-and-test the unique character match xmm mask register (xmm5) with</span></span>
<span id="cb46-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the length match mask xmm register (xmm1).  This affects flags, allowing us</span></span>
<span id="cb46-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do a fast-path exit for the no-match case (where ZF = 1).</span></span>
<span id="cb46-92"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-93"></span>
<span id="cb46-94">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Check for no match.</span></span>
<span id="cb46-95">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; There was a match.</span></span>
<span id="cb46-96"></span>
<span id="cb46-97"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-98"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match, set rax to -1 and return.</span></span>
<span id="cb46-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-100"></span>
<span id="cb46-101">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb46-102">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb46-103">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb46-104"></span>
<span id="cb46-105">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb46-106"></span>
<span id="cb46-107"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (There was at least one match, continue with processing.)</span></span>
<span id="cb46-109"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-110"></span>
<span id="cb46-111"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-112"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Calculate the "search length" for the incoming search string, which is</span></span>
<span id="cb46-113"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equivalent of 'min(String-&gt;Length, 16)'.  (The search string's length</span></span>
<span id="cb46-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; currently lives in xmm4, albeit as a byte-value broadcasted across the</span></span>
<span id="cb46-115"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; entire register, so extract that first.)</span></span>
<span id="cb46-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Once the search length is calculated, deposit it back at the second byte</span></span>
<span id="cb46-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location of xmm4.</span></span>
<span id="cb46-119"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-120"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 and xmm4[15:8] - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb46-121"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-122"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length (String-&gt;Length)</span></span>
<span id="cb46-123"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-124"></span>
<span id="cb46-125"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx10:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load length.</span></span>
<span id="cb46-126">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load 16 into rax.</span></span>
<span id="cb46-127">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy into r10.</span></span>
<span id="cb46-128">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against 16.</span></span>
<span id="cb46-129">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmova</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Use 16 if length is greater.</span></span>
<span id="cb46-130">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save back to xmm4b[1].</span></span>
<span id="cb46-131"></span>
<span id="cb46-132"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-133"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our parameter registers into xmm registers instead of their stack-backed</span></span>
<span id="cb46-134"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location, to avoid memory writes.</span></span>
<span id="cb46-135"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-136"></span>
<span id="cb46-137">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm2.</span></span>
<span id="cb46-138">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rcx into xmm2q[0].</span></span>
<span id="cb46-139">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rdx into xmm2q[1].</span></span>
<span id="cb46-140"></span>
<span id="cb46-141"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-142"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm5, xmm1'),</span></span>
<span id="cb46-143"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; yielding a mask identifying indices we need to perform subsequent matches</span></span>
<span id="cb46-144"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; upon.  Convert this into a bitmap and save in xmm2d[2].</span></span>
<span id="cb46-145"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-146"></span>
<span id="cb46-147">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpand</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect unique + lengths.</span></span>
<span id="cb46-148">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Generate a bitmap from mask.</span></span>
<span id="cb46-149"></span>
<span id="cb46-150"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-151"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We're finished with xmm5; repurpose it in the same vein as xmm2 above.</span></span>
<span id="cb46-152"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-153"></span>
<span id="cb46-154">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm5.</span></span>
<span id="cb46-155">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save r8 into xmm5q[0].</span></span>
<span id="cb46-156"></span>
<span id="cb46-157"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-158"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Summary of xmm register stashing for the rest of the routine:</span></span>
<span id="cb46-159"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-160"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm2:</span></span>
<span id="cb46-161"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        0:63   (vpinsrq 0)     rcx (1st function parameter, StringTable)</span></span>
<span id="cb46-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       64:127  (vpinsrq 1)     rdx (2nd function paramter, String)</span></span>
<span id="cb46-163"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm4:</span></span>
<span id="cb46-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:7     (vpinsrb 0)     length of search string</span></span>
<span id="cb46-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16)</span></span>
<span id="cb46-167"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      16:23    (vpinsrb 2)     loop counter (when doing long string compares)</span></span>
<span id="cb46-168"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      24:31    (vpinsrb 3)     shift count</span></span>
<span id="cb46-169"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-170"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm5:</span></span>
<span id="cb46-171"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span></span>
<span id="cb46-172"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      64:95    (vpinsrd 2)     bitmap of slots to compare</span></span>
<span id="cb46-173"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      96:127   (vpinsrd 3)     index of slot currently being processed</span></span>
<span id="cb46-174"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-175"></span>
<span id="cb46-176"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-177"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Initialize rcx as our counter register by doing a popcnt against the bitmap</span></span>
<span id="cb46-178"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we just generated in edx, and clear our shift count register (r9).</span></span>
<span id="cb46-179"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-180"></span>
<span id="cb46-181">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits in bitmap.</span></span>
<span id="cb46-182">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear r9.</span></span>
<span id="cb46-183"></span>
<span id="cb46-184">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb46-185"></span>
<span id="cb46-186"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-187"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span></span>
<span id="cb46-188"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; trailing zeros of the bitmap, and then add in the shift count, producing an</span></span>
<span id="cb46-189"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; index (rax) we can use to load the corresponding slot.</span></span>
<span id="cb46-190"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-191"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Register usage at top of loop:</span></span>
<span id="cb46-192"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-193"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index.</span></span>
<span id="cb46-194"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-195"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - Loop counter.</span></span>
<span id="cb46-196"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-197"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rdx - Bitmap initially, then slot length.</span></span>
<span id="cb46-198"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-199"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - Shift count.</span></span>
<span id="cb46-200"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-201"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 - Search length.</span></span>
<span id="cb46-202"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-203"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length.</span></span>
<span id="cb46-204"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-205"></span>
<span id="cb46-206"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx20:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tzcnt</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count trailing zeros.</span></span>
<span id="cb46-207">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy tzcnt to rax,</span></span>
<span id="cb46-208">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Add shift to create index.</span></span>
<span id="cb46-209">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; tzcnt + 1</span></span>
<span id="cb46-210">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shrx</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Reposition bitmap.</span></span>
<span id="cb46-211">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store bitmap, free up rdx.</span></span>
<span id="cb46-212">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear edx.</span></span>
<span id="cb46-213">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy index back to shift.</span></span>
<span id="cb46-214">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shift = Index + 1</span></span>
<span id="cb46-215">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store the raw index xmm5d[3].</span></span>
<span id="cb46-216"></span>
<span id="cb46-217"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-218"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span></span>
<span id="cb46-219"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span></span>
<span id="cb46-220"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-221"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, load the string table slot at this index into xmm1, then shift rax back.</span></span>
<span id="cb46-222"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-223"></span>
<span id="cb46-224">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb46-225">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb46-226">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span></span>
<span id="cb46-227">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb46-228"></span>
<span id="cb46-229"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-230"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The search string's first 16 characters are already in xmm0.  Compare this</span></span>
<span id="cb46-231"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; against the slot that has just been loaded into xmm1, storing the result back</span></span>
<span id="cb46-232"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.</span></span>
<span id="cb46-233"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-234"></span>
<span id="cb46-235">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare search string to slot.</span></span>
<span id="cb46-236"></span>
<span id="cb46-237"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-238"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert the XMM mask into a 32-bit representation, then zero high bits after</span></span>
<span id="cb46-239"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; our "search length", which allows us to ignore the results of the comparison</span></span>
<span id="cb46-240"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; above for bytes that were after the search string's length, if applicable.</span></span>
<span id="cb46-241"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, count the number of bits remaining, which tells us how many characters</span></span>
<span id="cb46-242"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we matched.</span></span>
<span id="cb46-243"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-244"></span>
<span id="cb46-245">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert into mask.</span></span>
<span id="cb46-246">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bzhi</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Zero high bits.</span></span>
<span id="cb46-247">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits.</span></span>
<span id="cb46-248"></span>
<span id="cb46-249"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-250"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the slot length into rdx.  As xmm3 already has all the slot lengths in</span></span>
<span id="cb46-251"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it, we can load rax (the current index) into xmm1 and use it to extract the</span></span>
<span id="cb46-252"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; slot length via shuffle.  (The length will be in the lowest byte of xmm1</span></span>
<span id="cb46-253"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; after the shuffle, which we can then vpextrb.)</span></span>
<span id="cb46-254"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-255"></span>
<span id="cb46-256">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">movd</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load index into xmm1.</span></span>
<span id="cb46-257">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle lengths.</span></span>
<span id="cb46-258">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract target length to rdx.</span></span>
<span id="cb46-259"></span>
<span id="cb46-260"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-261"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If 16 characters matched, and the search string's length is longer than 16,</span></span>
<span id="cb46-262"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we're going to need to do a comparison of the remaining strings.</span></span>
<span id="cb46-263"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-264"></span>
<span id="cb46-265">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare chars matched to 16.</span></span>
<span id="cb46-266">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 chars matched.</span></span>
<span id="cb46-267">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx30                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than 16 matched.</span></span>
<span id="cb46-268"></span>
<span id="cb46-269"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-270"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All 16 characters matched.  If the slot length is greater than 16, we need</span></span>
<span id="cb46-271"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do an inline memory comparison of the remaining bytes.  If it's 16 exactly,</span></span>
<span id="cb46-272"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then great, that's a slot match, we're done.</span></span>
<span id="cb46-273"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-274"></span>
<span id="cb46-275">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare length to 16.</span></span>
<span id="cb46-276">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ja</span>          Pfx50                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length is &gt; 16.</span></span>
<span id="cb46-277">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Lengths match!</span></span>
<span id="cb46-278">                                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length &lt;= 16, fall through...</span></span>
<span id="cb46-279"></span>
<span id="cb46-280"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-281"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than or equal to 16 characters were matched.  Compare this against the</span></span>
<span id="cb46-282"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length of the slot; if equal, this is a match, if not, no match, continue.</span></span>
<span id="cb46-283"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-284"></span>
<span id="cb46-285"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx30:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against slot length.</span></span>
<span id="cb46-286">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jne</span>         @F                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match found.</span></span>
<span id="cb46-287">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Match found!</span></span>
<span id="cb46-288"></span>
<span id="cb46-289"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-290"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match against this slot, decrement counter and either continue the loop</span></span>
<span id="cb46-291"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; or terminate the search and return no match.</span></span>
<span id="cb46-292"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-293"></span>
<span id="cb46-294">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb46-295">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb46-296">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; cx != 0, continue.</span></span>
<span id="cb46-297"></span>
<span id="cb46-298">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb46-299">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb46-300">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb46-301"></span>
<span id="cb46-302"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-303"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span></span>
<span id="cb46-304"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; former is used when we need to copy the number of characters matched from r8</span></span>
<span id="cb46-305"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back to rax.  The latter jump target doesn't require this.</span></span>
<span id="cb46-306"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-307"></span>
<span id="cb46-308"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx35:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy numbers of chars matched.</span></span>
<span id="cb46-309"></span>
<span id="cb46-310"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-311"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the match parameter back into r8 and test to see if it's not-NULL, in</span></span>
<span id="cb46-312"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; which case we need to fill out a STRING_MATCH structure for the match.</span></span>
<span id="cb46-313"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-314"></span>
<span id="cb46-315"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx40:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringMatch.</span></span>
<span id="cb46-316">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is NULL?</span></span>
<span id="cb46-317">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not zero, need to fill out.</span></span>
<span id="cb46-318"></span>
<span id="cb46-319"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-320"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is NULL, we're done. Extract index of match back into rax and ret.</span></span>
<span id="cb46-321"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-322"></span>
<span id="cb46-323">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb46-324">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch == NULL, finish.</span></span>
<span id="cb46-325"></span>
<span id="cb46-326"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-327"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span></span>
<span id="cb46-328"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; reload the index from xmm5 into rax and save.</span></span>
<span id="cb46-329"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-330"></span>
<span id="cb46-331">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>NumberOfMatchedCharacters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb46-332">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb46-333">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb46-334"></span>
<span id="cb46-335"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-336"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb46-337"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; involves going through the StringTable, so we need to load that parameter</span></span>
<span id="cb46-338"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back into rcx, then resolving the string array address via pStringArray,</span></span>
<span id="cb46-339"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then the relevant STRING offset within the StringArray.Strings structure.</span></span>
<span id="cb46-340"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-341"></span>
<span id="cb46-342">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into rcx.</span></span>
<span id="cb46-343">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb46-344"></span>
<span id="cb46-345">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb46-346">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb46-347">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save STRING ptr.</span></span>
<span id="cb46-348">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Revert the scaling.</span></span>
<span id="cb46-349"></span>
<span id="cb46-350">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb46-351"></span>
<span id="cb46-352"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-353"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb46-354"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb46-355"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string is a prefix match.</span></span>
<span id="cb46-356"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-357"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The slot length is stored in rax at this point, and the search string's</span></span>
<span id="cb46-358"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length is stored in r11.  We know that the search string's length will</span></span>
<span id="cb46-359"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; always be longer than or equal to the slot length at this point, so, we</span></span>
<span id="cb46-360"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; can subtract 16 (currently stored in r10) from rax, and use the resulting</span></span>
<span id="cb46-361"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; value as a loop counter, comparing the search string with the underlying</span></span>
<span id="cb46-362"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string slot byte-by-byte to determine if there's a match.</span></span>
<span id="cb46-363"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-364"></span>
<span id="cb46-365"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx50:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sub</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Subtract 16 from search length.</span></span>
<span id="cb46-366"></span>
<span id="cb46-367"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-368"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up some registers by stashing their values into various xmm offsets.</span></span>
<span id="cb46-369"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-370"></span>
<span id="cb46-371">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rcx register.</span></span>
<span id="cb46-372">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rdx, rcx is now counter.</span></span>
<span id="cb46-373"></span>
<span id="cb46-374"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-375"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the search string buffer and advance it 16 bytes.</span></span>
<span id="cb46-376"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-377"></span>
<span id="cb46-378">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract String into r11.</span></span>
<span id="cb46-379">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer address.</span></span>
<span id="cb46-380">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb46-381"></span>
<span id="cb46-382"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-383"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Loading the slot is more involved as we have to go to the string table, then</span></span>
<span id="cb46-384"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the pStringArray pointer, then the relevant STRING offset within the string</span></span>
<span id="cb46-385"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; array (which requires re-loading the index from xmm5d[3]), then the string</span></span>
<span id="cb46-386"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; buffer from that structure.</span></span>
<span id="cb46-387"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-388"></span>
<span id="cb46-389">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into r8.</span></span>
<span id="cb46-390">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb46-391"></span>
<span id="cb46-392">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb46-393"></span>
<span id="cb46-394">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb46-395">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string table buffer address.</span></span>
<span id="cb46-396">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb46-397"></span>
<span id="cb46-398">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear eax.</span></span>
<span id="cb46-399"></span>
<span id="cb46-400"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-401"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span></span>
<span id="cb46-402"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Do a byte-by-byte comparison.</span></span>
<span id="cb46-403"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-404"></span>
<span id="cb46-405">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb46-406">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load byte from search string.</span></span>
<span id="cb46-407">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against target.</span></span>
<span id="cb46-408">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jne</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx60                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If not equal, jump.</span></span>
<span id="cb46-409"></span>
<span id="cb46-410"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-411"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The two bytes were equal, update rax, decrement rcx and potentially continue</span></span>
<span id="cb46-412"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the loop.</span></span>
<span id="cb46-413"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-414"></span>
<span id="cb46-415">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Increment index.</span></span>
<span id="cb46-416">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">loopnz</span>      @B                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement cx and loop back.</span></span>
<span id="cb46-417"></span>
<span id="cb46-418"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-419"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span></span>
<span id="cb46-420"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; how many characters we matched, and then jump to Pfx40 for finalization.</span></span>
<span id="cb46-421"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-422"></span>
<span id="cb46-423">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span></span>
<span id="cb46-424">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx40</span>
<span id="cb46-425"></span>
<span id="cb46-426"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-427"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Byte comparisons were not equal.  Restore the rcx loop counter and decrement</span></span>
<span id="cb46-428"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it.  If it's zero, we have no more strings to compare, so we can do a quick</span></span>
<span id="cb46-429"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; exit.  If there are still comparisons to be made, restore the other registers</span></span>
<span id="cb46-430"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we trampled then jump back to the start of the loop Pfx20.</span></span>
<span id="cb46-431"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-432"></span>
<span id="cb46-433"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx60:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rcx counter.</span></span>
<span id="cb46-434">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb46-435">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Jump forward if not zero.</span></span>
<span id="cb46-436"></span>
<span id="cb46-437"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-438"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No more comparisons remaining, return.</span></span>
<span id="cb46-439"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-440"></span>
<span id="cb46-441">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb46-442">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb46-443">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb46-444"></span>
<span id="cb46-445"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-446"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; More comparisons remain; restore the registers we clobbered and continue loop.</span></span>
<span id="cb46-447"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-448"></span>
<span id="cb46-449">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r10.</span></span>
<span id="cb46-450">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r11.</span></span>
<span id="cb46-451">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb46-452">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Continue comparisons.</span></span>
<span id="cb46-453"></span>
<span id="cb46-454">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb46-455"></span>
<span id="cb46-456">        LEAF_END   IsPrefixOfStringInTable_x64_2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb46-457"></span>
<span id="cb46-458"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></span></code></pre></div>
</div>
<div id="tabset-12-2" class="tab-pane" aria-labelledby="tabset-12-2-tab">
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb47-1">% diff -u IsPrefixOfStringInTable_x64_1.asm IsPrefixOfStringInTable_x64_2.asm</span>
<span id="cb47-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_x64_1.asm   2018-04-29 11:03:46.403568800 -0400</span></span>
<span id="cb47-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_x64_2.asm   2018-04-26 14:15:53.805409700 -0400</span></span>
<span id="cb47-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -50,12 +50,12 @@</span></span>
<span id="cb47-5"> ;</span>
<span id="cb47-6"> ;--</span>
<span id="cb47-7"></span>
<span id="cb47-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_ENTRY IsPrefixOfStringInTable_x64_1, _TEXT$00</span></span>
<span id="cb47-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_ENTRY IsPrefixOfStringInTable_x64_2, _TEXT$00</span></span>
<span id="cb47-10"></span>
<span id="cb47-11"> ;</span>
<span id="cb47-12"> ; Load the string buffer into xmm0, and the unique indexes from the string table</span>
<span id="cb47-13"> ; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span>
<span id="cb47-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; result back into xmm0.</span></span>
<span id="cb47-15"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; result into xmm5.</span></span>
<span id="cb47-16"> ;</span>
<span id="cb47-17"></span>
<span id="cb47-18">         ;IACA_VC_START</span>
<span id="cb47-19"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -63,34 +63,36 @@</span></span>
<span id="cb47-20">         mov     rax, String.Buffer[rdx]</span>
<span id="cb47-21">         vmovdqu xmm0, xmmword ptr [rax]                 ; Load search buffer.</span>
<span id="cb47-22">         vmovdqa xmm1, xmmword ptr StringTable.UniqueIndex[rcx] ; Load indexes.</span>
<span id="cb47-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpshufb xmm0, xmm0, xmm1</span></span>
<span id="cb47-24"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpshufb xmm5, xmm0, xmm1</span></span>
<span id="cb47-25"></span>
<span id="cb47-26"> ;</span>
<span id="cb47-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Load the string table's unique character array into xmm2, and the lengths for</span></span>
<span id="cb47-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; each string slot into xmm3.</span></span>
<span id="cb47-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb47-30"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the string table's unique character array into xmm2.</span></span>
<span id="cb47-31"></span>
<span id="cb47-32">         vmovdqa xmm2, xmmword ptr StringTable.UniqueChars[rcx]  ; Load chars.</span>
<span id="cb47-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vmovdqa xmm3, xmmword ptr StringTable.Lengths[rcx]      ; Load lengths.</span></span>
<span id="cb47-34"></span>
<span id="cb47-35"> ;</span>
<span id="cb47-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Set xmm5 to all ones.  This is used later.</span></span>
<span id="cb47-37"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb47-38"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb47-39"> ;</span>
<span id="cb47-40"></span>
<span id="cb47-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpcmpeqq    xmm5, xmm5, xmm5                    ; Set xmm5 to all ones.</span></span>
<span id="cb47-42"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpcmpeqb    xmm5, xmm5, xmm2            ; Compare unique chars.</span></span>
<span id="cb47-43"></span>
<span id="cb47-44"> ;</span>
<span id="cb47-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb47-46"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb47-47"> ;</span>
<span id="cb47-48"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vmovdqa xmm3, xmmword ptr StringTable.Lengths[rcx]      ; Load lengths.</span></span>
<span id="cb47-49"></span>
<span id="cb47-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpbroadcastb xmm4, byte ptr String.Length[rdx]  ; Broadcast length.</span></span>
<span id="cb47-51"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-52"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Set xmm2 to all ones.  We use this later to invert the length comparison.</span></span>
<span id="cb47-53"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-54"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-55"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpcmpeqq    xmm2, xmm2, xmm2            ; Set xmm2 to all ones.</span></span>
<span id="cb47-56"></span>
<span id="cb47-57"> ;</span>
<span id="cb47-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Compare the search string's unique character array (xmm0) against the string</span></span>
<span id="cb47-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; table's unique chars (xmm2), saving the result back into xmm0.</span></span>
<span id="cb47-60"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb47-61"> ;</span>
<span id="cb47-62"></span>
<span id="cb47-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpcmpeqb    xmm0, xmm0, xmm2            ; Compare unique chars.</span></span>
<span id="cb47-64"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpbroadcastb xmm4, byte ptr String.Length[rdx]  ; Broadcast length.</span></span>
<span id="cb47-65"></span>
<span id="cb47-66"> ;</span>
<span id="cb47-67"> ; Compare the search string's length, which we've broadcasted to all 8-byte</span>
<span id="cb47-68"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -100,30 +102,378 @@</span></span>
<span id="cb47-69"> ; a slot with a length less than or equal to our search string's length.</span>
<span id="cb47-70"> ;</span>
<span id="cb47-71"></span>
<span id="cb47-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpcmpgtb    xmm1, xmm4, xmm3            ; Identify long slots.</span></span>
<span id="cb47-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpxor       xmm1, xmm1, xmm5            ; Invert the result.</span></span>
<span id="cb47-74"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpcmpgtb    xmm1, xmm3, xmm4            ; Identify long slots.</span></span>
<span id="cb47-75"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpxor       xmm1, xmm1, xmm2            ; Invert the result.</span></span>
<span id="cb47-76"></span>
<span id="cb47-77"> ;</span>
<span id="cb47-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Intersect-and-test the unique character match xmm mask register (xmm0) with</span></span>
<span id="cb47-79"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Intersect-and-test the unique character match xmm mask register (xmm5) with</span></span>
<span id="cb47-80"> ; the length match mask xmm register (xmm1).  This affects flags, allowing us</span>
<span id="cb47-81"> ; to do a fast-path exit for the no-match case (where ZF = 1).</span>
<span id="cb47-82"> ;</span>
<span id="cb47-83"></span>
<span id="cb47-84"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vptest      xmm0, xmm1                  ; Check for no match.</span></span>
<span id="cb47-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ;jnz        short @F                    ; There was a match.</span></span>
<span id="cb47-86"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                                                ; (Not yet implemented.)</span></span>
<span id="cb47-87"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vptest      xmm5, xmm1                  ; Check for no match.</span></span>
<span id="cb47-88"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnz         short Pfx10                 ; There was a match.</span></span>
<span id="cb47-89"></span>
<span id="cb47-90"> ;</span>
<span id="cb47-91"> ; No match, set rax to -1 and return.</span>
<span id="cb47-92"> ;</span>
<span id="cb47-93"></span>
<span id="cb47-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        xor         eax, eax                    ;</span></span>
<span id="cb47-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        not         al                          ; rax = -1</span></span>
<span id="cb47-96"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        xor         eax, eax                    ; Clear rax.</span></span>
<span id="cb47-97"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        not         al                          ; al = -1</span></span>
<span id="cb47-98"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; Return.</span></span>
<span id="cb47-99"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-100"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ;IACA_VC_END</span></span>
<span id="cb47-101"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-102"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-103"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; (There was at least one match, continue with processing.)</span></span>
<span id="cb47-104"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-105"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-106"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-107"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Calculate the "search length" for the incoming search string, which is</span></span>
<span id="cb47-108"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; equivalent of 'min(String-&gt;Length, 16)'.  (The search string's length</span></span>
<span id="cb47-109"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; currently lives in xmm4, albeit as a byte-value broadcasted across the</span></span>
<span id="cb47-110"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; entire register, so extract that first.)</span></span>
<span id="cb47-111"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-112"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Once the search length is calculated, deposit it back at the second byte</span></span>
<span id="cb47-113"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; location of xmm4.</span></span>
<span id="cb47-114"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-115"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r10 and xmm4[15:8] - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb47-116"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-117"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r11 - String length (String-&gt;Length)</span></span>
<span id="cb47-118"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-119"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-120"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx10:  vpextrb     r11, xmm4, 0                ; Load length.</span></span>
<span id="cb47-121"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rax, 16                     ; Load 16 into rax.</span></span>
<span id="cb47-122"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r10, r11                    ; Copy into r10.</span></span>
<span id="cb47-123"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmp         r10w, ax                    ; Compare against 16.</span></span>
<span id="cb47-124"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmova       r10w, ax                    ; Use 16 if length is greater.</span></span>
<span id="cb47-125"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrb     xmm4, xmm4, r10d, 1         ; Save back to xmm4b[1].</span></span>
<span id="cb47-126"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-127"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-128"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Home our parameter registers into xmm registers instead of their stack-backed</span></span>
<span id="cb47-129"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; location, to avoid memory writes.</span></span>
<span id="cb47-130"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-131"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-132"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpxor       xmm2, xmm2, xmm2            ; Clear xmm2.</span></span>
<span id="cb47-133"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrq     xmm2, xmm2, rcx, 0          ; Save rcx into xmm2q[0].</span></span>
<span id="cb47-134"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrq     xmm2, xmm2, rdx, 1          ; Save rdx into xmm2q[1].</span></span>
<span id="cb47-135"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-136"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-137"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm5, xmm1'),</span></span>
<span id="cb47-138"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; yielding a mask identifying indices we need to perform subsequent matches</span></span>
<span id="cb47-139"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; upon.  Convert this into a bitmap and save in xmm2d[2].</span></span>
<span id="cb47-140"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-141"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-142"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpand       xmm5, xmm5, xmm1            ; Intersect unique + lengths.</span></span>
<span id="cb47-143"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpmovmskb   edx, xmm5                   ; Generate a bitmap from mask.</span></span>
<span id="cb47-144"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-145"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-146"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; We're finished with xmm5; repurpose it in the same vein as xmm2 above.</span></span>
<span id="cb47-147"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-148"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-149"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpxor       xmm5, xmm5, xmm5            ; Clear xmm5.</span></span>
<span id="cb47-150"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrq     xmm5, xmm5, r8, 0           ; Save r8 into xmm5q[0].</span></span>
<span id="cb47-151"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-152"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-153"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Summary of xmm register stashing for the rest of the routine:</span></span>
<span id="cb47-154"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-155"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; xmm2:</span></span>
<span id="cb47-156"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;        0:63   (vpinsrq 0)     rcx (1st function parameter, StringTable)</span></span>
<span id="cb47-157"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;       64:127  (vpinsrq 1)     rdx (2nd function paramter, String)</span></span>
<span id="cb47-158"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-159"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; xmm4:</span></span>
<span id="cb47-160"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;       0:7     (vpinsrb 0)     length of search string</span></span>
<span id="cb47-161"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16)</span></span>
<span id="cb47-162"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      16:23    (vpinsrb 2)     loop counter (when doing long string compares)</span></span>
<span id="cb47-163"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      24:31    (vpinsrb 3)     shift count</span></span>
<span id="cb47-164"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-165"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; xmm5:</span></span>
<span id="cb47-166"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span></span>
<span id="cb47-167"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      64:95    (vpinsrd 2)     bitmap of slots to compare</span></span>
<span id="cb47-168"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      96:127   (vpinsrd 3)     index of slot currently being processed</span></span>
<span id="cb47-169"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-170"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-171"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-172"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Initialize rcx as our counter register by doing a popcnt against the bitmap</span></span>
<span id="cb47-173"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; we just generated in edx, and clear our shift count register (r9).</span></span>
<span id="cb47-174"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-175"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-176"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        popcnt      ecx, edx                    ; Count bits in bitmap.</span></span>
<span id="cb47-177"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        xor         r9, r9                      ; Clear r9.</span></span>
<span id="cb47-178"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-179"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        align 16</span></span>
<span id="cb47-180"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-181"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-182"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span></span>
<span id="cb47-183"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; trailing zeros of the bitmap, and then add in the shift count, producing an</span></span>
<span id="cb47-184"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; index (rax) we can use to load the corresponding slot.</span></span>
<span id="cb47-185"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-186"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Register usage at top of loop:</span></span>
<span id="cb47-187"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-188"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rax - Index.</span></span>
<span id="cb47-189"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-190"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rcx - Loop counter.</span></span>
<span id="cb47-191"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-192"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rdx - Bitmap initially, then slot length.</span></span>
<span id="cb47-193"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-194"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r9 - Shift count.</span></span>
<span id="cb47-195"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-196"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r10 - Search length.</span></span>
<span id="cb47-197"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-198"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r11 - String length.</span></span>
<span id="cb47-199"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-200"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-201"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx20:  tzcnt       r8d, edx                    ; Count trailing zeros.</span></span>
<span id="cb47-202"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         eax, r8d                    ; Copy tzcnt to rax,</span></span>
<span id="cb47-203"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        add         rax, r9                     ; Add shift to create index.</span></span>
<span id="cb47-204"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        inc         r8                          ; tzcnt + 1</span></span>
<span id="cb47-205"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        shrx        rdx, rdx, r8                ; Reposition bitmap.</span></span>
<span id="cb47-206"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrd     xmm5, xmm5, edx, 2          ; Store bitmap, free up rdx.</span></span>
<span id="cb47-207"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        xor         edx, edx                    ; Clear edx.</span></span>
<span id="cb47-208"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r9, rax                     ; Copy index back to shift.</span></span>
<span id="cb47-209"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        inc         r9                          ; Shift = Index + 1</span></span>
<span id="cb47-210"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrd     xmm5, xmm5, eax, 3          ; Store the raw index xmm5d[3].</span></span>
<span id="cb47-211"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-212"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-213"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span></span>
<span id="cb47-214"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span></span>
<span id="cb47-215"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-216"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Then, load the string table slot at this index into xmm1, then shift rax back.</span></span>
<span id="cb47-217"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-218"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-219"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        shl         eax, 4</span></span>
<span id="cb47-220"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrq     r8, xmm2, 0</span></span>
<span id="cb47-221"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vmovdqa     xmm1, xmmword ptr [rax + StringTable.Slots[r8]]</span></span>
<span id="cb47-222"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        shr         eax, 4</span></span>
<span id="cb47-223"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-224"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-225"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; The search string's first 16 characters are already in xmm0.  Compare this</span></span>
<span id="cb47-226"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; against the slot that has just been loaded into xmm1, storing the result back</span></span>
<span id="cb47-227"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; into xmm1.</span></span>
<span id="cb47-228"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-229"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-230"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpcmpeqb    xmm1, xmm1, xmm0            ; Compare search string to slot.</span></span>
<span id="cb47-231"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-232"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-233"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Convert the XMM mask into a 32-bit representation, then zero high bits after</span></span>
<span id="cb47-234"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; our "search length", which allows us to ignore the results of the comparison</span></span>
<span id="cb47-235"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; above for bytes that were after the search string's length, if applicable.</span></span>
<span id="cb47-236"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Then, count the number of bits remaining, which tells us how many characters</span></span>
<span id="cb47-237"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; we matched.</span></span>
<span id="cb47-238"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-239"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-240"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpmovmskb   r8d, xmm1                   ; Convert into mask.</span></span>
<span id="cb47-241"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        bzhi        r8d, r8d, r10d              ; Zero high bits.</span></span>
<span id="cb47-242"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        popcnt      r8d, r8d                    ; Count bits.</span></span>
<span id="cb47-243"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-244"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-245"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the slot length into rdx.  As xmm3 already has all the slot lengths in</span></span>
<span id="cb47-246"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; it, we can load rax (the current index) into xmm1 and use it to extract the</span></span>
<span id="cb47-247"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; slot length via shuffle.  (The length will be in the lowest byte of xmm1</span></span>
<span id="cb47-248"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; after the shuffle, which we can then vpextrb.)</span></span>
<span id="cb47-249"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-250"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-251"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        movd        xmm1, rax                   ; Load index into xmm1.</span></span>
<span id="cb47-252"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpshufb     xmm1, xmm3, xmm1            ; Shuffle lengths.</span></span>
<span id="cb47-253"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrb     rdx, xmm1, 0                ; Extract target length to rdx.</span></span>
<span id="cb47-254"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-255"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-256"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; If 16 characters matched, and the search string's length is longer than 16,</span></span>
<span id="cb47-257"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; we're going to need to do a comparison of the remaining strings.</span></span>
<span id="cb47-258"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-259"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-260"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmp         r8w, 16                     ; Compare chars matched to 16.</span></span>
<span id="cb47-261"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        je          short @F                    ; 16 chars matched.</span></span>
<span id="cb47-262"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         Pfx30                       ; Less than 16 matched.</span></span>
<span id="cb47-263"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-264"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-265"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; All 16 characters matched.  If the slot length is greater than 16, we need</span></span>
<span id="cb47-266"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; to do an inline memory comparison of the remaining bytes.  If it's 16 exactly,</span></span>
<span id="cb47-267"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; then great, that's a slot match, we're done.</span></span>
<span id="cb47-268"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-269"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-270"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+@@:     cmp         dl, 16                      ; Compare length to 16.</span></span>
<span id="cb47-271"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ja          Pfx50                       ; Length is &gt; 16.</span></span>
<span id="cb47-272"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        je          short Pfx35                 ; Lengths match!</span></span>
<span id="cb47-273"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+                                                ; Length &lt;= 16, fall through...</span></span>
<span id="cb47-274"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-275"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-276"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Less than or equal to 16 characters were matched.  Compare this against the</span></span>
<span id="cb47-277"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; length of the slot; if equal, this is a match, if not, no match, continue.</span></span>
<span id="cb47-278"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-279"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-280"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx30:  cmp         r8b, dl                     ; Compare against slot length.</span></span>
<span id="cb47-281"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jne         @F                          ; No match found.</span></span>
<span id="cb47-282"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         short Pfx35                 ; Match found!</span></span>
<span id="cb47-283"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-284"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-285"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; No match against this slot, decrement counter and either continue the loop</span></span>
<span id="cb47-286"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; or terminate the search and return no match.</span></span>
<span id="cb47-287"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-288"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-289"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+@@:     vpextrd     edx, xmm5, 2                ; Restore rdx bitmap.</span></span>
<span id="cb47-290"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        dec         cx                          ; Decrement counter.</span></span>
<span id="cb47-291"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnz         Pfx20                       ; cx != 0, continue.</span></span>
<span id="cb47-292"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-293"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        xor         eax, eax                    ; Clear rax.</span></span>
<span id="cb47-294"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        not         al                          ; al = -1</span></span>
<span id="cb47-295"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; Return.</span></span>
<span id="cb47-296"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-297"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-298"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span></span>
<span id="cb47-299"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; former is used when we need to copy the number of characters matched from r8</span></span>
<span id="cb47-300"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; back to rax.  The latter jump target doesn't require this.</span></span>
<span id="cb47-301"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-302"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-303"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx35:  mov         rax, r8                     ; Copy numbers of chars matched.</span></span>
<span id="cb47-304"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-305"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-306"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the match parameter back into r8 and test to see if it's not-NULL, in</span></span>
<span id="cb47-307"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; which case we need to fill out a STRING_MATCH structure for the match.</span></span>
<span id="cb47-308"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-309"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-310"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx40:  vpextrq     r8, xmm5, 0                 ; Extract StringMatch.</span></span>
<span id="cb47-311"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        test        r8, r8                      ; Is NULL?</span></span>
<span id="cb47-312"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnz         short @F                    ; Not zero, need to fill out.</span></span>
<span id="cb47-313"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-314"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-315"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; StringMatch is NULL, we're done. Extract index of match back into rax and ret.</span></span>
<span id="cb47-316"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-317"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-318"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrd     eax, xmm5, 3                ; Extract raw index for match.</span></span>
<span id="cb47-319"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; StringMatch == NULL, finish.</span></span>
<span id="cb47-320"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-321"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-322"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span></span>
<span id="cb47-323"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; reload the index from xmm5 into rax and save.</span></span>
<span id="cb47-324"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-325"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-326"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+@@:     mov         byte ptr StringMatch.NumberOfMatchedCharacters[r8], al</span></span>
<span id="cb47-327"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrd     eax, xmm5, 3                ; Extract raw index for match.</span></span>
<span id="cb47-328"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         byte ptr StringMatch.Index[r8], al</span></span>
<span id="cb47-329"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-330"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-331"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb47-332"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; involves going through the StringTable, so we need to load that parameter</span></span>
<span id="cb47-333"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; back into rcx, then resolving the string array address via pStringArray,</span></span>
<span id="cb47-334"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; then the relevant STRING offset within the StringArray.Strings structure.</span></span>
<span id="cb47-335"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-336"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-337"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrq     rcx, xmm2, 0            ; Extract StringTable into rcx.</span></span>
<span id="cb47-338"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rcx, StringTable.pStringArray[rcx] ; Load string array.</span></span>
<span id="cb47-339"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-340"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        shl         eax, 4                  ; Scale the index; sizeof STRING=16.</span></span>
<span id="cb47-341"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        lea         rdx, [rax + StringArray.Strings[rcx]] ; Resolve address.</span></span>
<span id="cb47-342"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         qword ptr StringMatch.String[r8], rdx ; Save STRING ptr.</span></span>
<span id="cb47-343"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        shr         eax, 4                  ; Revert the scaling.</span></span>
<span id="cb47-344"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-345">         ret</span>
<span id="cb47-346"></span>
<span id="cb47-347"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-348"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb47-349"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb47-350"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; string is a prefix match.</span></span>
<span id="cb47-351"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-352"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; The slot length is stored in rax at this point, and the search string's</span></span>
<span id="cb47-353"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; length is stored in r11.  We know that the search string's length will</span></span>
<span id="cb47-354"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; always be longer than or equal to the slot length at this point, so, we</span></span>
<span id="cb47-355"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; can subtract 16 (currently stored in r10) from rax, and use the resulting</span></span>
<span id="cb47-356"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; value as a loop counter, comparing the search string with the underlying</span></span>
<span id="cb47-357"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; string slot byte-by-byte to determine if there's a match.</span></span>
<span id="cb47-358"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-359"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-360"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx50:  sub         rdx, r10                ; Subtract 16 from search length.</span></span>
<span id="cb47-361"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-362"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-363"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Free up some registers by stashing their values into various xmm offsets.</span></span>
<span id="cb47-364"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-365"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-366"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrb     xmm4, xmm4, ecx, 2      ; Free up rcx register.</span></span>
<span id="cb47-367"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rcx, rdx                ; Free up rdx, rcx is now counter.</span></span>
<span id="cb47-368"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-369"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-370"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the search string buffer and advance it 16 bytes.</span></span>
<span id="cb47-371"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-372"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-373"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrq     r11, xmm2, 1            ; Extract String into r11.</span></span>
<span id="cb47-374"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r11, String.Buffer[r11] ; Load buffer address.</span></span>
<span id="cb47-375"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        add         r11, r10                ; Advance buffer 16 bytes.</span></span>
<span id="cb47-376"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-377"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-378"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Loading the slot is more involved as we have to go to the string table, then</span></span>
<span id="cb47-379"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; the pStringArray pointer, then the relevant STRING offset within the string</span></span>
<span id="cb47-380"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; array (which requires re-loading the index from xmm5d[3]), then the string</span></span>
<span id="cb47-381"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; buffer from that structure.</span></span>
<span id="cb47-382"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-383"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-384"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrq     r8, xmm2, 0             ; Extract StringTable into r8.</span></span>
<span id="cb47-385"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r8, StringTable.pStringArray[r8] ; Load string array.</span></span>
<span id="cb47-386"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-387"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        shl         eax, 4                  ; Scale the index; sizeof STRING=16.</span></span>
<span id="cb47-388"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-389"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        lea         r8, [rax + StringArray.Strings[r8]] ; Resolve address.</span></span>
<span id="cb47-390"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r8, String.Buffer[r8]   ; Load string table buffer address.</span></span>
<span id="cb47-391"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        add         r8, r10                 ; Advance buffer 16 bytes.</span></span>
<span id="cb47-392"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-393"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        xor         eax, eax                ; Clear eax.</span></span>
<span id="cb47-394"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-395"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-396"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span></span>
<span id="cb47-397"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Do a byte-by-byte comparison.</span></span>
<span id="cb47-398"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-399"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-400"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        align 16</span></span>
<span id="cb47-401"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+@@:     mov         dl, byte ptr [rax + r11]    ; Load byte from search string.</span></span>
<span id="cb47-402"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmp         dl, byte ptr [rax + r8]     ; Compare against target.</span></span>
<span id="cb47-403"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jne         short Pfx60                 ; If not equal, jump.</span></span>
<span id="cb47-404"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-405"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-406"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; The two bytes were equal, update rax, decrement rcx and potentially continue</span></span>
<span id="cb47-407"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; the loop.</span></span>
<span id="cb47-408"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-409"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-410"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        inc         ax                          ; Increment index.</span></span>
<span id="cb47-411"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        loopnz      @B                          ; Decrement cx and loop back.</span></span>
<span id="cb47-412"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-413"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-414"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span></span>
<span id="cb47-415"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; how many characters we matched, and then jump to Pfx40 for finalization.</span></span>
<span id="cb47-416"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-417"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-418"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        add         rax, r10</span></span>
<span id="cb47-419"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         Pfx40</span></span>
<span id="cb47-420"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-421"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-422"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Byte comparisons were not equal.  Restore the rcx loop counter and decrement</span></span>
<span id="cb47-423"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; it.  If it's zero, we have no more strings to compare, so we can do a quick</span></span>
<span id="cb47-424"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; exit.  If there are still comparisons to be made, restore the other registers</span></span>
<span id="cb47-425"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; we trampled then jump back to the start of the loop Pfx20.</span></span>
<span id="cb47-426"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-427"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-428"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx60:  vpextrb     rcx, xmm4, 2                ; Restore rcx counter.</span></span>
<span id="cb47-429"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        dec         cx                          ; Decrement counter.</span></span>
<span id="cb47-430"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnz         short @F                    ; Jump forward if not zero.</span></span>
<span id="cb47-431"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-432"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-433"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; No more comparisons remaining, return.</span></span>
<span id="cb47-434"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-435"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-436"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        xor         eax, eax                    ; Clear rax.</span></span>
<span id="cb47-437"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        not         al                          ; al = -1</span></span>
<span id="cb47-438"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; Return.</span></span>
<span id="cb47-439"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-440"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-441"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; More comparisons remain; restore the registers we clobbered and continue loop.</span></span>
<span id="cb47-442"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb47-443"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-444"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+@@:     vpextrb     r10, xmm4, 1                ; Restore r10.</span></span>
<span id="cb47-445"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrb     r11, xmm4, 0                ; Restore r11.</span></span>
<span id="cb47-446"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrd     edx, xmm5, 2                ; Restore rdx bitmap.</span></span>
<span id="cb47-447"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         Pfx20                       ; Continue comparisons.</span></span>
<span id="cb47-448"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb47-449">         ;IACA_VC_END</span>
<span id="cb47-450"></span>
<span id="cb47-451"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_END   IsPrefixOfStringInTable_x64_1, _TEXT$00</span></span>
<span id="cb47-452"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_END   IsPrefixOfStringInTable_x64_2, _TEXT$00</span></span>
<span id="cb47-453"></span>
<span id="cb47-454"> ; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></code></pre></div>
</div>
</div>
</div>
<p>Looking back on my time logs (shout out to my favorite iPhone app, <a href="https://itunes.apple.com/us/app/hourstracker-hours-and-pay/id336456412?mt=8">HoursTracker</a>!), the routine above took about 8 hours to implement over the course of about two days, give or take. Writing assembly is slow; writing correct assembly is even slower. I generally find that there’s a noticeable hump I need to get over in the first, say, 30 minutes of any assembly programming session, but once you get into the zone, things can start flowing quite nicely. I’m an aggressive debugger user; often, to get started, I’ll write a simple <code>LEAF_ENTRY</code> that looks like this:</p>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb48-1">    LEAF_ENTRY Foo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb48-2">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb48-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span></span>
<span id="cb48-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb48-5">    LEAF_END Foo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span></code></pre></div>
<p>That’ll allow me to attach the debugger and at least inspect the parameter registers so I can write the next couple of instructions. I find it definitely helps get me into the zone quicker.</p>
<p>Anyway, enough about that. Let’s look at performance. Again, this will be an interesting one—other than the optimal negative match logic that I copied from version 1, the sole focus was on getting a working assembly version; I wasn’t giving any thought to performance at this stage.</p>
<p>So, it’ll be interesting to see how it compares to a) version 1 in the negative matching case (it should be very close), and b) against the C versions in the prefix matching case (it hopefully won’t be prohibitively worse).</p>
</section>
<section id="benchmark-x64-2-negative-matching" class="level4 unlisted">
<h4 class="unlisted anchored" data-anchor-id="benchmark-x64-2-negative-matching">Benchmark x64 2: Negative Matching</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-02-Negative-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-02-Negative-v1.svg" class="img-fluid figure-img" alt="Benchmark Negative Match"></a></p>
<figcaption>Benchmark Negative Match</figcaption>
</figure>
</div>
<p>Hmmm, that’s not too bad! We’re very close to version 1 for negative matching, within about 0.5 cycles or so. That sounds about right, given that our initial logic had to be tweaked a bit to play nicer with the rest of the implementation. And we’re still about 3-4 cycles faster than the fastest C version.</p>
<p>What about prefix matching performance?</p>
</section>
<section id="benchmark-x64-2-prefix-matching" class="level4 unlisted">
<h4 class="unlisted anchored" data-anchor-id="benchmark-x64-2-prefix-matching">Benchmark x64 2: Prefix Matching</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-02-v2.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-02-v2.svg" class="img-fluid figure-img" alt="Benchmark Prefix Match"></a></p>
<figcaption>Benchmark Prefix Match</figcaption>
</figure>
</div>
<p>The prefix matching performance isn’t too bad either! We’re definitely slower than the C version, ranging from about 4 cycles to 10 cycles in most cases, with the <code>$INDEX_ALLOCATION</code> input about 13 cycles slower.</p>
<p><a id="oddities"></a> <small> (I’ve just noticed the pattern with regards to the first 8 entries, <code>$AttrDef</code> to <code>$Mft</code>, clocking in at about 18 and 24 cycles respectively. But the next four entries, <code>$Secure</code> to <code>$Cairo</code>, consistently clock in at about 24 and 34 cycles respectively. <code>$Secure</code> is the 9th slot, which puts it at memory offset 192 bytes from the start of the string table. And then the 18 and 24 cycle behavior returns for the last two items, <code>????</code> and <code>.</code>, which are at the end of the string table’s inner slot array. This pattern is prevalent in all of our iterations. Very peculiar! We’ll investigate later.) </small></p>
</section>
<section id="isprefixofstringintable_x64_3" class="level4">
<h4 class="anchored" data-anchor-id="isprefixofstringintable_x64_3">IsPrefixOfStringInTable_x64_3</h4>
<p>← IsPrefixOfStringInTable_x64_2 | IsPrefixOfStringInTable_x64_4 →</p>
<p><small>(We’re nearly at the end of the first round of iterations, I promise!)</small></p>
<p>Seeing the performance of the second version in assembly, I decided to try whipping up a third version, which would switch from a <code>LEAF_ENTRY</code> to <code>NESTED_ENTRY</code> and use <code>rep cmps</code> for the byte comparison for long strings (instead of the byte-by-byte approach used now).</p>
<p>In order to use <code>rep cmps</code>, you need to use two non-volatile registers, <code>rsi</code> (the source index) and <code>rdi</code> (the destination index). You also need to specify the direction of the comparison, which means mutating the flags, which are also classed as non-volatile, so they need to be pushed to the stack in the prologue and popped back off in the epilogue.</p>
<p>I didn’t really expect this to offer a measurable speedup, but it was a tangible reason to use a <code>NESTED_ENTRY</code>, and otherwise allowed me to stay within the confines of the version 2 implementation.</p>
<p>Let’s take a look at the implementation. At the very least, it’s useful to see how you can go about organizing your prologue in MASM. For <code>NESTED_ENTRY</code> routines, I always define a <code>Locals</code> structure that incorporates the return address and home parameter space for easy access. Mainly because it allows me to write code like this:</p>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb49-1">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>HomeRcx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our first param.</span></span>
<span id="cb49-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>HomeRdx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our second param.</span></span>
<span id="cb49-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRsi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rsi.</span></span>
<span id="cb49-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRdi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdi.</span></span></code></pre></div>
<p>Instead of working wiht offsets like this:</p>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb50-1">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">30h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our first param.</span></span>
<span id="cb50-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">38h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our second param.</span></span>
<span id="cb50-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">10h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rsi.</span></span>
<span id="cb50-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdi.</span></span></code></pre></div>
<p>This routine was written last, after version 10 of the C routine, so it incorporates the slightly re-arranged loop logic that proved to be faster for that version. Other than that, the main changes involved converting all the early exit returns in the body of the function to jump to a single exit point, <code>Pfx90</code>, mainly to simplify epilogue exit code.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-13-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-13-1" aria-controls="tabset-13-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-13-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-13-2" aria-controls="tabset-13-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-13-1" class="tab-pane active" aria-labelledby="tabset-13-1-tab">
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb51-1"> % diff -u IsPrefixOfStringInTable_x64_2.asm IsPrefixOfStringInTable_x64_3.asm</span>
<span id="cb51-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_x64_2.asm   2018-04-26 14:15:53.805409700 -0400</span></span>
<span id="cb51-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_x64_3.asm   2018-04-29 16:01:10.033827200 -0400</span></span>
<span id="cb51-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,6 +18,31 @@</span></span>
<span id="cb51-5"></span>
<span id="cb51-6"> include StringTable.inc</span>
<span id="cb51-7"></span>
<span id="cb51-8"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb51-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Define a locals struct for saving flags, rsi and rdi.</span></span>
<span id="cb51-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb51-11"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-12"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Locals struct</span></span>
<span id="cb51-13"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-14"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Padding             dq      ?</span></span>
<span id="cb51-15"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    SavedRdi            dq      ?</span></span>
<span id="cb51-16"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    SavedRsi            dq      ?</span></span>
<span id="cb51-17"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    SavedFlags          dq      ?</span></span>
<span id="cb51-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    ReturnAddress       dq      ?</span></span>
<span id="cb51-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    HomeRcx             dq      ?</span></span>
<span id="cb51-21"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    HomeRdx             dq      ?</span></span>
<span id="cb51-22"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    HomeR8              dq      ?</span></span>
<span id="cb51-23"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    HomeR9              dq      ?</span></span>
<span id="cb51-24"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-25"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Locals ends</span></span>
<span id="cb51-26"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-27"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb51-28"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Exclude the return address onward from the frame calculation size.</span></span>
<span id="cb51-29"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb51-30"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-31"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+LOCALS_SIZE  equ ((sizeof Locals) + (Locals.ReturnAddress - (sizeof Locals)))</span></span>
<span id="cb51-32"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-33"> ;++</span>
<span id="cb51-34"> ;</span>
<span id="cb51-35"> ; STRING_TABLE_INDEX</span>
<span id="cb51-36"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -33,6 +58,14 @@</span></span>
<span id="cb51-37"> ;   search string.  That is, whether any string in the table "starts with</span>
<span id="cb51-38"> ;   or is equal to" the search string.</span>
<span id="cb51-39"> ;</span>
<span id="cb51-40"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   This routine is based off version 2.  It has been converted into a nested</span></span>
<span id="cb51-41"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   entry (version 2 is a leaf entry), and uses 'repe cmpsb' to do the string</span></span>
<span id="cb51-42"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   comparison for long strings (instead of the byte-by-byte comparison used</span></span>
<span id="cb51-43"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   in version 2).  This requires use of the rsi and rdi registers, and the</span></span>
<span id="cb51-44"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   direction flag.  These are all non-volatile registers and thus, must be</span></span>
<span id="cb51-45"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   saved to the stack in the function prologue (hence the need to make this</span></span>
<span id="cb51-46"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   a nested entry).</span></span>
<span id="cb51-47"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb51-48"> ; Arguments:</span>
<span id="cb51-49"> ;</span>
<span id="cb51-50"> ;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span>
<span id="cb51-51"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -50,7 +83,19 @@</span></span>
<span id="cb51-52"> ;</span>
<span id="cb51-53"> ;--</span>
<span id="cb51-54"></span>
<span id="cb51-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_ENTRY IsPrefixOfStringInTable_x64_2, _TEXT$00</span></span>
<span id="cb51-56"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        NESTED_ENTRY IsPrefixOfStringInTable_x64_3, _TEXT$00</span></span>
<span id="cb51-57"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-58"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb51-59"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Begin prologue.  Allocate stack space and save non-volatile registers.</span></span>
<span id="cb51-60"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb51-61"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-62"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        alloc_stack LOCALS_SIZE                     ; Allocate stack space.</span></span>
<span id="cb51-63"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-64"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        push_eflags                                 ; Save flags.</span></span>
<span id="cb51-65"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        save_reg    rsi, Locals.SavedRsi            ; Save non-volatile rsi.</span></span>
<span id="cb51-66"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        save_reg    rdi, Locals.SavedRdi            ; Save non-volatile rdi.</span></span>
<span id="cb51-67"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-68"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        END_PROLOGUE</span></span>
<span id="cb51-69"></span>
<span id="cb51-70"> ;</span>
<span id="cb51-71"> ; Load the string buffer into xmm0, and the unique indexes from the string table</span>
<span id="cb51-72"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -120,7 +165,7 @@</span></span>
<span id="cb51-73"></span>
<span id="cb51-74">         xor         eax, eax                    ; Clear rax.</span>
<span id="cb51-75">         not         al                          ; al = -1</span>
<span id="cb51-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ret                                     ; Return.</span></span>
<span id="cb51-77"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         Pfx90                       ; Return.</span></span>
<span id="cb51-78"></span>
<span id="cb51-79">         ;IACA_VC_END</span>
<span id="cb51-80"></span>
<span id="cb51-81"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -214,7 +259,7 @@</span></span>
<span id="cb51-82"> ;</span>
<span id="cb51-83"> ;   rcx - Loop counter.</span>
<span id="cb51-84"> ;</span>
<span id="cb51-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   rdx - Bitmap initially, then slot length.</span></span>
<span id="cb51-86"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rdx - Bitmap.</span></span>
<span id="cb51-87"> ;</span>
<span id="cb51-88"> ;   r9 - Shift count.</span>
<span id="cb51-89"> ;</span>
<span id="cb51-90"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -228,8 +273,6 @@</span></span>
<span id="cb51-91">         add         rax, r9                     ; Add shift to create index.</span>
<span id="cb51-92">         inc         r8                          ; tzcnt + 1</span>
<span id="cb51-93">         shrx        rdx, rdx, r8                ; Reposition bitmap.</span>
<span id="cb51-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpinsrd     xmm5, xmm5, edx, 2          ; Store bitmap, free up rdx.</span></span>
<span id="cb51-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        xor         edx, edx                    ; Clear edx.</span></span>
<span id="cb51-96">         mov         r9, rax                     ; Copy index back to shift.</span>
<span id="cb51-97">         inc         r9                          ; Shift = Index + 1</span>
<span id="cb51-98">         vpinsrd     xmm5, xmm5, eax, 3          ; Store the raw index xmm5d[3].</span>
<span id="cb51-99"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -252,7 +295,7 @@</span></span>
<span id="cb51-100"> ; into xmm1.</span>
<span id="cb51-101"> ;</span>
<span id="cb51-102"></span>
<span id="cb51-103"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpcmpeqb    xmm1, xmm1, xmm0            ; Compare search string to slot.</span></span>
<span id="cb51-104"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpcmpeqb    xmm1, xmm0, xmm1            ; Compare search string to slot.</span></span>
<span id="cb51-105"></span>
<span id="cb51-106"> ;</span>
<span id="cb51-107"> ; Convert the XMM mask into a 32-bit representation, then zero high bits after</span>
<span id="cb51-108"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -267,17 +310,6 @@</span></span>
<span id="cb51-109">         popcnt      r8d, r8d                    ; Count bits.</span>
<span id="cb51-110"></span>
<span id="cb51-111"> ;</span>
<span id="cb51-112"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Load the slot length into rdx.  As xmm3 already has all the slot lengths in</span></span>
<span id="cb51-113"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; it, we can load rax (the current index) into xmm1 and use it to extract the</span></span>
<span id="cb51-114"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; slot length via shuffle.  (The length will be in the lowest byte of xmm1</span></span>
<span id="cb51-115"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; after the shuffle, which we can then vpextrb.)</span></span>
<span id="cb51-116"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb51-117"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb51-118"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        movd        xmm1, rax                   ; Load index into xmm1.</span></span>
<span id="cb51-119"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpshufb     xmm1, xmm3, xmm1            ; Shuffle lengths.</span></span>
<span id="cb51-120"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpextrb     rdx, xmm1, 0                ; Extract target length to rdx.</span></span>
<span id="cb51-121"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb51-122"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb51-123"> ; If 16 characters matched, and the search string's length is longer than 16,</span>
<span id="cb51-124"> ; we're going to need to do a comparison of the remaining strings.</span>
<span id="cb51-125"> ;</span>
<span id="cb51-126"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -287,37 +319,38 @@</span></span>
<span id="cb51-127">         jmp         Pfx30                       ; Less than 16 matched.</span>
<span id="cb51-128"></span>
<span id="cb51-129"> ;</span>
<span id="cb51-130"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; All 16 characters matched.  If the slot length is greater than 16, we need</span></span>
<span id="cb51-131"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; to do an inline memory comparison of the remaining bytes.  If it's 16 exactly,</span></span>
<span id="cb51-132"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; then great, that's a slot match, we're done.</span></span>
<span id="cb51-133"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; All 16 characters matched.  Load the underlying slot's length from the</span></span>
<span id="cb51-134"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; relevant offset in the xmm3 register, then check to see if it's greater than,</span></span>
<span id="cb51-135"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; equal or less than 16.</span></span>
<span id="cb51-136"> ;</span>
<span id="cb51-137"></span>
<span id="cb51-138"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-@@:     cmp         dl, 16                      ; Compare length to 16.</span></span>
<span id="cb51-139"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+@@:     movd        xmm1, rax                   ; Load into xmm1.</span></span>
<span id="cb51-140"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpshufb     xmm1, xmm3, xmm1            ; Shuffle length...</span></span>
<span id="cb51-141"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrb     rax, xmm1, 0                ; And extract back into rax.</span></span>
<span id="cb51-142"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmp         al, 16                      ; Compare length to 16.</span></span>
<span id="cb51-143">         ja          Pfx50                       ; Length is &gt; 16.</span>
<span id="cb51-144">         je          short Pfx35                 ; Lengths match!</span>
<span id="cb51-145">                                                 ; Length &lt;= 16, fall through...</span>
<span id="cb51-146"></span>
<span id="cb51-147"> ;</span>
<span id="cb51-148"> ; Less than or equal to 16 characters were matched.  Compare this against the</span>
<span id="cb51-149"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; length of the slot; if equal, this is a match, if not, no match, continue.</span></span>
<span id="cb51-150"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; length of the search string; if equal, this is a match.</span></span>
<span id="cb51-151"> ;</span>
<span id="cb51-152"></span>
<span id="cb51-153"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Pfx30:  cmp         r8b, dl                     ; Compare against slot length.</span></span>
<span id="cb51-154"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jne         @F                          ; No match found.</span></span>
<span id="cb51-155"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jmp         short Pfx35                 ; Match found!</span></span>
<span id="cb51-156"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx30:  cmp         r8d, r10d                   ; Compare against search string.</span></span>
<span id="cb51-157"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        je          short Pfx35                 ; Match found!</span></span>
<span id="cb51-158"></span>
<span id="cb51-159"> ;</span>
<span id="cb51-160"> ; No match against this slot, decrement counter and either continue the loop</span>
<span id="cb51-161"> ; or terminate the search and return no match.</span>
<span id="cb51-162"> ;</span>
<span id="cb51-163"></span>
<span id="cb51-164"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-@@:     vpextrd     edx, xmm5, 2                ; Restore rdx bitmap.</span></span>
<span id="cb51-165">         dec         cx                          ; Decrement counter.</span>
<span id="cb51-166">         jnz         Pfx20                       ; cx != 0, continue.</span>
<span id="cb51-167"></span>
<span id="cb51-168">         xor         eax, eax                    ; Clear rax.</span>
<span id="cb51-169">         not         al                          ; al = -1</span>
<span id="cb51-170"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ret                                     ; Return.</span></span>
<span id="cb51-171"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         Pfx90                       ; Return.</span></span>
<span id="cb51-172"></span>
<span id="cb51-173"> ;</span>
<span id="cb51-174"> ; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span>
<span id="cb51-175"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -341,7 +374,7 @@</span></span>
<span id="cb51-176"> ;</span>
<span id="cb51-177"></span>
<span id="cb51-178">         vpextrd     eax, xmm5, 3                ; Extract raw index for match.</span>
<span id="cb51-179"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ret                                     ; StringMatch == NULL, finish.</span></span>
<span id="cb51-180"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         Pfx90                       ; StringMatch == NULL, finish.</span></span>
<span id="cb51-181"></span>
<span id="cb51-182"> ;</span>
<span id="cb51-183"> ; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span>
<span id="cb51-184"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -367,7 +400,7 @@</span></span>
<span id="cb51-185">         mov         qword ptr StringMatch.String[r8], rdx ; Save STRING ptr.</span>
<span id="cb51-186">         shr         eax, 4                  ; Revert the scaling.</span>
<span id="cb51-187"></span>
<span id="cb51-188"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ret</span></span>
<span id="cb51-189"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         Pfx90</span></span>
<span id="cb51-190"></span>
<span id="cb51-191"> ;</span>
<span id="cb51-192"> ; 16 characters matched and the length of the underlying slot is greater than</span>
<span id="cb51-193"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -382,14 +415,15 @@</span></span>
<span id="cb51-194"> ; string slot byte-by-byte to determine if there's a match.</span>
<span id="cb51-195"> ;</span>
<span id="cb51-196"></span>
<span id="cb51-197"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Pfx50:  sub         rdx, r10                ; Subtract 16 from search length.</span></span>
<span id="cb51-198"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx50:  sub         rax, r10                ; Subtract 16 from search length.</span></span>
<span id="cb51-199"></span>
<span id="cb51-200"> ;</span>
<span id="cb51-201"> ; Free up some registers by stashing their values into various xmm offsets.</span>
<span id="cb51-202"> ;</span>
<span id="cb51-203"></span>
<span id="cb51-204"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpinsrd     xmm5, xmm5, edx, 2      ; Free up rdx register.</span></span>
<span id="cb51-205">         vpinsrb     xmm4, xmm4, ecx, 2      ; Free up rcx register.</span>
<span id="cb51-206"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         rcx, rdx                ; Free up rdx, rcx is now counter.</span></span>
<span id="cb51-207"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rcx, rax                ; Free up rax, rcx is now counter.</span></span>
<span id="cb51-208"></span>
<span id="cb51-209"> ;</span>
<span id="cb51-210"> ; Load the search string buffer and advance it 16 bytes.</span>
<span id="cb51-211"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -409,31 +443,27 @@</span></span>
<span id="cb51-212">         vpextrq     r8, xmm2, 0             ; Extract StringTable into r8.</span>
<span id="cb51-213">         mov         r8, StringTable.pStringArray[r8] ; Load string array.</span>
<span id="cb51-214"></span>
<span id="cb51-215"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrd     eax, xmm5, 3            ; Extract index from xmm5.</span></span>
<span id="cb51-216">         shl         eax, 4                  ; Scale the index; sizeof STRING=16.</span>
<span id="cb51-217"></span>
<span id="cb51-218">         lea         r8, [rax + StringArray.Strings[r8]] ; Resolve address.</span>
<span id="cb51-219">         mov         r8, String.Buffer[r8]   ; Load string table buffer address.</span>
<span id="cb51-220">         add         r8, r10                 ; Advance buffer 16 bytes.</span>
<span id="cb51-221"></span>
<span id="cb51-222"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        xor         eax, eax                ; Clear eax.</span></span>
<span id="cb51-223"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rax, rcx                ; Copy counter.</span></span>
<span id="cb51-224"></span>
<span id="cb51-225"> ;</span>
<span id="cb51-226"> ; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span>
<span id="cb51-227"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Do a byte-by-byte comparison.</span></span>
<span id="cb51-228"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Set up rsi/rdi so we can do a 'rep cmps'.</span></span>
<span id="cb51-229"> ;</span>
<span id="cb51-230"></span>
<span id="cb51-231"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        align 16</span></span>
<span id="cb51-232"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-@@:     mov         dl, byte ptr [rax + r11]    ; Load byte from search string.</span></span>
<span id="cb51-233"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        cmp         dl, byte ptr [rax + r8]     ; Compare against target.</span></span>
<span id="cb51-234"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jne         short Pfx60                 ; If not equal, jump.</span></span>
<span id="cb51-235"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb51-236"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb51-237"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; The two bytes were equal, update rax, decrement rcx and potentially continue</span></span>
<span id="cb51-238"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; the loop.</span></span>
<span id="cb51-239"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb51-240"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cld</span></span>
<span id="cb51-241"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rsi, r11</span></span>
<span id="cb51-242"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rdi, r8</span></span>
<span id="cb51-243"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        repe        cmpsb</span></span>
<span id="cb51-244"></span>
<span id="cb51-245"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        inc         ax                          ; Increment index.</span></span>
<span id="cb51-246"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        loopnz      @B                          ; Decrement cx and loop back.</span></span>
<span id="cb51-247"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        test        cl, 0</span></span>
<span id="cb51-248"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnz         short Pfx60                 ; Not all bytes compared, jump.</span></span>
<span id="cb51-249"></span>
<span id="cb51-250"> ;</span>
<span id="cb51-251"> ; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span>
<span id="cb51-252"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -460,7 +490,7 @@</span></span>
<span id="cb51-253"></span>
<span id="cb51-254">         xor         eax, eax                    ; Clear rax.</span>
<span id="cb51-255">         not         al                          ; al = -1</span>
<span id="cb51-256"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ret                                     ; Return.</span></span>
<span id="cb51-257"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp Pfx90                               ; Return.</span></span>
<span id="cb51-258"></span>
<span id="cb51-259"> ;</span>
<span id="cb51-260"> ; More comparisons remain; restore the registers we clobbered and continue loop.</span>
<span id="cb51-261"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -473,7 +503,17 @@</span></span>
<span id="cb51-262"></span>
<span id="cb51-263">         ;IACA_VC_END</span>
<span id="cb51-264"></span>
<span id="cb51-265"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_END   IsPrefixOfStringInTable_x64_2, _TEXT$00</span></span>
<span id="cb51-266"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        align   16</span></span>
<span id="cb51-267"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-268"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx90:  mov     rsi, Locals.SavedRsi[rsp]       ; Restore rsi.</span></span>
<span id="cb51-269"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov     rdi, Locals.SavedRdi[rsp]       ; Restore rdi.</span></span>
<span id="cb51-270"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        popfq                                   ; Restore flags.</span></span>
<span id="cb51-271"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        add     rsp, LOCALS_SIZE                ; Deallocate stack space.</span></span>
<span id="cb51-272"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-273"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret</span></span>
<span id="cb51-274"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-275"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        NESTED_END   IsPrefixOfStringInTable_x64_3, _TEXT$00</span></span>
<span id="cb51-276"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb51-277"></span>
<span id="cb51-278"> ; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></code></pre></div>
</div>
<div id="tabset-13-2" class="tab-pane" aria-labelledby="tabset-13-2-tab">
<div class="sourceCode" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb52-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Define a locals struct for saving flags, rsi and rdi.</span></span>
<span id="cb52-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-4"></span>
<span id="cb52-5">Locals struct</span>
<span id="cb52-6"></span>
<span id="cb52-7">    Padding             <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-8">    SavedRdi            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-9">    SavedRsi            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-10">    SavedFlags          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-11"></span>
<span id="cb52-12">    ReturnAddress       <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-13">    HomeRcx             <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-14">    HomeRdx             <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-15">    HomeR8              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-16">    HomeR9              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb52-17"></span>
<span id="cb52-18">Locals ends</span>
<span id="cb52-19"></span>
<span id="cb52-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Exclude the return address onward from the frame calculation size.</span></span>
<span id="cb52-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-23"></span>
<span id="cb52-24">LOCALS_SIZE  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">equ</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>sizeof Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>ReturnAddress <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sizeof Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)))</span></span>
<span id="cb52-25"></span>
<span id="cb52-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;++</span></span>
<span id="cb52-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; STRING_TABLE_INDEX</span></span>
<span id="cb52-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; IsPrefixOfStringInTable_x64_*(</span></span>
<span id="cb52-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING_TABLE StringTable,</span></span>
<span id="cb52-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING String,</span></span>
<span id="cb52-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _Out_opt_ PSTRING_MATCH Match</span></span>
<span id="cb52-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     )</span></span>
<span id="cb52-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Routine Description:</span></span>
<span id="cb52-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb52-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb52-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   or is equal to" the search string.</span></span>
<span id="cb52-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   This routine is based off version 2.  It has been converted into a nested</span></span>
<span id="cb52-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   entry (version 2 is a leaf entry), and uses 'rep cmpsb' to do the string</span></span>
<span id="cb52-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   comparison for long strings (instead of the byte-by-byte comparison used</span></span>
<span id="cb52-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   in version 2).  This requires use of the rsi and rdi registers, and the</span></span>
<span id="cb52-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   direction flag.  These are all non-volatile registers and thus, must be</span></span>
<span id="cb52-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   saved to the stack in the function prologue (hence the need to make this</span></span>
<span id="cb52-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   a nested entry).</span></span>
<span id="cb52-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Arguments:</span></span>
<span id="cb52-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb52-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb52-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       search for.</span></span>
<span id="cb52-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb52-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb52-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb52-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return Value:</span></span>
<span id="cb52-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb52-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;--</span></span>
<span id="cb52-65"></span>
<span id="cb52-66">        NESTED_ENTRY IsPrefixOfStringInTable_x64_3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb52-67"></span>
<span id="cb52-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Begin prologue.  Allocate stack space and save non-volatile registers.</span></span>
<span id="cb52-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-71"></span>
<span id="cb52-72">        alloc_stack LOCALS_SIZE                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Allocate stack space.</span></span>
<span id="cb52-73"></span>
<span id="cb52-74">        push_eflags                                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save flags.</span></span>
<span id="cb52-75">        save_reg    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRsi            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save non-volatile rsi.</span></span>
<span id="cb52-76">        save_reg    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRdi            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save non-volatile rdi.</span></span>
<span id="cb52-77"></span>
<span id="cb52-78">        END_PROLOGUE</span>
<span id="cb52-79"></span>
<span id="cb52-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string buffer into xmm0, and the unique indexes from the string table</span></span>
<span id="cb52-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span></span>
<span id="cb52-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; result into xmm5.</span></span>
<span id="cb52-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-85"></span>
<span id="cb52-86">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_START</span></span>
<span id="cb52-87"></span>
<span id="cb52-88">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb52-89">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb52-90">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load indexes.</span></span>
<span id="cb52-91">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb52-92"></span>
<span id="cb52-93"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-94"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string table's unique character array into xmm2.</span></span>
<span id="cb52-95"></span>
<span id="cb52-96">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load chars.</span></span>
<span id="cb52-97"></span>
<span id="cb52-98"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb52-100"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb52-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-102"></span>
<span id="cb52-103">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare unique chars.</span></span>
<span id="cb52-104"></span>
<span id="cb52-105"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-106"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb52-107"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-108">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load lengths.</span></span>
<span id="cb52-109"></span>
<span id="cb52-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-111"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.  We use this later to invert the length comparison.</span></span>
<span id="cb52-112"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-113"></span>
<span id="cb52-114">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqq</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.</span></span>
<span id="cb52-115"></span>
<span id="cb52-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb52-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-119"></span>
<span id="cb52-120">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast length.</span></span>
<span id="cb52-121"></span>
<span id="cb52-122"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-123"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb52-124"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb52-125"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table, to find those that are greater in length.  Invert the result, such</span></span>
<span id="cb52-126"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; that we're left with a masked register where each 0xff element indicates</span></span>
<span id="cb52-127"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; a slot with a length less than or equal to our search string's length.</span></span>
<span id="cb52-128"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-129"></span>
<span id="cb52-130">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb52-131">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Invert the result.</span></span>
<span id="cb52-132"></span>
<span id="cb52-133"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-134"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect-and-test the unique character match xmm mask register (xmm5) with</span></span>
<span id="cb52-135"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the length match mask xmm register (xmm1).  This affects flags, allowing us</span></span>
<span id="cb52-136"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do a fast-path exit for the no-match case (where ZF = 1).</span></span>
<span id="cb52-137"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-138"></span>
<span id="cb52-139">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Check for no match.</span></span>
<span id="cb52-140">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; There was a match.</span></span>
<span id="cb52-141"></span>
<span id="cb52-142"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-143"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match, set rax to -1 and return.</span></span>
<span id="cb52-144"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-145"></span>
<span id="cb52-146">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb52-147">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb52-148">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb52-149"></span>
<span id="cb52-150">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb52-151"></span>
<span id="cb52-152"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-153"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (There was at least one match, continue with processing.)</span></span>
<span id="cb52-154"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-155"></span>
<span id="cb52-156"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-157"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Calculate the "search length" for the incoming search string, which is</span></span>
<span id="cb52-158"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equivalent of 'min(String-&gt;Length, 16)'.  (The search string's length</span></span>
<span id="cb52-159"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; currently lives in xmm4, albeit as a byte-value broadcasted across the</span></span>
<span id="cb52-160"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; entire register, so extract that first.)</span></span>
<span id="cb52-161"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Once the search length is calculated, deposit it back at the second byte</span></span>
<span id="cb52-163"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location of xmm4.</span></span>
<span id="cb52-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 and xmm4[15:8] - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb52-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-167"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length (String-&gt;Length)</span></span>
<span id="cb52-168"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-169"></span>
<span id="cb52-170"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx10:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load length.</span></span>
<span id="cb52-171">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load 16 into rax.</span></span>
<span id="cb52-172">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy into r10.</span></span>
<span id="cb52-173">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against 16.</span></span>
<span id="cb52-174">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmova</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Use 16 if length is greater.</span></span>
<span id="cb52-175">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save back to xmm4b[1].</span></span>
<span id="cb52-176"></span>
<span id="cb52-177"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-178"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our parameter registers into xmm registers instead of their stack-backed</span></span>
<span id="cb52-179"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location, to avoid memory writes.</span></span>
<span id="cb52-180"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-181"></span>
<span id="cb52-182">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm2.</span></span>
<span id="cb52-183">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rcx into xmm2q[0].</span></span>
<span id="cb52-184">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rdx into xmm2q[1].</span></span>
<span id="cb52-185"></span>
<span id="cb52-186"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-187"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm5, xmm1'),</span></span>
<span id="cb52-188"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; yielding a mask identifying indices we need to perform subsequent matches</span></span>
<span id="cb52-189"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; upon.  Convert this into a bitmap and save in xmm2d[2].</span></span>
<span id="cb52-190"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-191"></span>
<span id="cb52-192">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpand</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect unique + lengths.</span></span>
<span id="cb52-193">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Generate a bitmap from mask.</span></span>
<span id="cb52-194"></span>
<span id="cb52-195"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-196"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We're finished with xmm5; repurpose it in the same vein as xmm2 above.</span></span>
<span id="cb52-197"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-198"></span>
<span id="cb52-199">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm5.</span></span>
<span id="cb52-200">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save r8 into xmm5q[0].</span></span>
<span id="cb52-201"></span>
<span id="cb52-202"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-203"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Summary of xmm register stashing for the rest of the routine:</span></span>
<span id="cb52-204"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-205"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm2:</span></span>
<span id="cb52-206"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        0:63   (vpinsrq 0)     rcx (1st function parameter, StringTable)</span></span>
<span id="cb52-207"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       64:127  (vpinsrq 1)     rdx (2nd function paramter, String)</span></span>
<span id="cb52-208"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-209"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm4:</span></span>
<span id="cb52-210"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:7     (vpinsrb 0)     length of search string</span></span>
<span id="cb52-211"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16)</span></span>
<span id="cb52-212"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      16:23    (vpinsrb 2)     loop counter (when doing long string compares)</span></span>
<span id="cb52-213"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      24:31    (vpinsrb 3)     shift count</span></span>
<span id="cb52-214"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-215"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm5:</span></span>
<span id="cb52-216"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span></span>
<span id="cb52-217"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      64:95    (vpinsrd 2)     bitmap of slots to compare</span></span>
<span id="cb52-218"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      96:127   (vpinsrd 3)     index of slot currently being processed</span></span>
<span id="cb52-219"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-220"></span>
<span id="cb52-221"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-222"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Initialize rcx as our counter register by doing a popcnt against the bitmap</span></span>
<span id="cb52-223"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we just generated in edx, and clear our shift count register (r9).</span></span>
<span id="cb52-224"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-225"></span>
<span id="cb52-226">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits in bitmap.</span></span>
<span id="cb52-227">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear r9.</span></span>
<span id="cb52-228"></span>
<span id="cb52-229">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb52-230"></span>
<span id="cb52-231"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-232"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span></span>
<span id="cb52-233"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; trailing zeros of the bitmap, and then add in the shift count, producing an</span></span>
<span id="cb52-234"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; index (rax) we can use to load the corresponding slot.</span></span>
<span id="cb52-235"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-236"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Register usage at top of loop:</span></span>
<span id="cb52-237"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-238"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index.</span></span>
<span id="cb52-239"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-240"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - Loop counter.</span></span>
<span id="cb52-241"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-242"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rdx - Bitmap.</span></span>
<span id="cb52-243"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-244"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - Shift count.</span></span>
<span id="cb52-245"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-246"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 - Search length.</span></span>
<span id="cb52-247"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-248"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length.</span></span>
<span id="cb52-249"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-250"></span>
<span id="cb52-251"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx20:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tzcnt</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count trailing zeros.</span></span>
<span id="cb52-252">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy tzcnt to rax,</span></span>
<span id="cb52-253">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Add shift to create index.</span></span>
<span id="cb52-254">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; tzcnt + 1</span></span>
<span id="cb52-255">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shrx</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Reposition bitmap.</span></span>
<span id="cb52-256">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy index back to shift.</span></span>
<span id="cb52-257">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shift = Index + 1</span></span>
<span id="cb52-258">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store the raw index xmm5d[3].</span></span>
<span id="cb52-259"></span>
<span id="cb52-260"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-261"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span></span>
<span id="cb52-262"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span></span>
<span id="cb52-263"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-264"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, load the string table slot at this index into xmm1, then shift rax back.</span></span>
<span id="cb52-265"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-266"></span>
<span id="cb52-267">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb52-268">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb52-269">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span></span>
<span id="cb52-270">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb52-271"></span>
<span id="cb52-272"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-273"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The search string's first 16 characters are already in xmm0.  Compare this</span></span>
<span id="cb52-274"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; against the slot that has just been loaded into xmm1, storing the result back</span></span>
<span id="cb52-275"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.</span></span>
<span id="cb52-276"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-277"></span>
<span id="cb52-278">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare search string to slot.</span></span>
<span id="cb52-279"></span>
<span id="cb52-280"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-281"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert the XMM mask into a 32-bit representation, then zero high bits after</span></span>
<span id="cb52-282"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; our "search length", which allows us to ignore the results of the comparison</span></span>
<span id="cb52-283"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; above for bytes that were after the search string's length, if applicable.</span></span>
<span id="cb52-284"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, count the number of bits remaining, which tells us how many characters</span></span>
<span id="cb52-285"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we matched.</span></span>
<span id="cb52-286"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-287"></span>
<span id="cb52-288">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert into mask.</span></span>
<span id="cb52-289">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bzhi</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Zero high bits.</span></span>
<span id="cb52-290">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits.</span></span>
<span id="cb52-291"></span>
<span id="cb52-292"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-293"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If 16 characters matched, and the search string's length is longer than 16,</span></span>
<span id="cb52-294"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we're going to need to do a comparison of the remaining strings.</span></span>
<span id="cb52-295"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-296"></span>
<span id="cb52-297">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare chars matched to 16.</span></span>
<span id="cb52-298">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 chars matched.</span></span>
<span id="cb52-299">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx30                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than 16 matched.</span></span>
<span id="cb52-300"></span>
<span id="cb52-301"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-302"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All 16 characters matched.  Load the underlying slot's length from the</span></span>
<span id="cb52-303"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; relevant offset in the xmm3 register, then check to see if it's greater than,</span></span>
<span id="cb52-304"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equal or less than 16.</span></span>
<span id="cb52-305"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-306"></span>
<span id="cb52-307">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">movd</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load into xmm1.</span></span>
<span id="cb52-308">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle length...</span></span>
<span id="cb52-309">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; And extract back into rax.</span></span>
<span id="cb52-310">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare length to 16.</span></span>
<span id="cb52-311">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ja</span>          Pfx50                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length is &gt; 16.</span></span>
<span id="cb52-312">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Lengths match!</span></span>
<span id="cb52-313">                                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length &lt;= 16, fall through...</span></span>
<span id="cb52-314"></span>
<span id="cb52-315"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-316"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than or equal to 16 characters were matched.  Compare this against the</span></span>
<span id="cb52-317"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length of the search string; if equal, this is a match.</span></span>
<span id="cb52-318"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-319"></span>
<span id="cb52-320"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx30:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against search string.</span></span>
<span id="cb52-321">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Match found!</span></span>
<span id="cb52-322"></span>
<span id="cb52-323"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-324"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match against this slot, decrement counter and either continue the loop</span></span>
<span id="cb52-325"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; or terminate the search and return no match.</span></span>
<span id="cb52-326"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-327"></span>
<span id="cb52-328">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb52-329">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; cx != 0, continue.</span></span>
<span id="cb52-330"></span>
<span id="cb52-331">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb52-332">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb52-333">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb52-334"></span>
<span id="cb52-335"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-336"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span></span>
<span id="cb52-337"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; former is used when we need to copy the number of characters matched from r8</span></span>
<span id="cb52-338"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back to rax.  The latter jump target doesn't require this.</span></span>
<span id="cb52-339"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-340"></span>
<span id="cb52-341"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx35:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy numbers of chars matched.</span></span>
<span id="cb52-342"></span>
<span id="cb52-343"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-344"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the match parameter back into r8 and test to see if it's not-NULL, in</span></span>
<span id="cb52-345"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; which case we need to fill out a STRING_MATCH structure for the match.</span></span>
<span id="cb52-346"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-347"></span>
<span id="cb52-348"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx40:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringMatch.</span></span>
<span id="cb52-349">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is NULL?</span></span>
<span id="cb52-350">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not zero, need to fill out.</span></span>
<span id="cb52-351"></span>
<span id="cb52-352"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-353"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is NULL, we're done. Extract index of match back into rax and ret.</span></span>
<span id="cb52-354"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-355"></span>
<span id="cb52-356">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb52-357">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch == NULL, finish.</span></span>
<span id="cb52-358"></span>
<span id="cb52-359"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-360"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span></span>
<span id="cb52-361"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; reload the index from xmm5 into rax and save.</span></span>
<span id="cb52-362"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-363"></span>
<span id="cb52-364">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>NumberOfMatchedCharacters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb52-365">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb52-366">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb52-367"></span>
<span id="cb52-368"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-369"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb52-370"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; involves going through the StringTable, so we need to load that parameter</span></span>
<span id="cb52-371"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back into rcx, then resolving the string array address via pStringArray,</span></span>
<span id="cb52-372"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then the relevant STRING offset within the StringArray.Strings structure.</span></span>
<span id="cb52-373"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-374"></span>
<span id="cb52-375">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into rcx.</span></span>
<span id="cb52-376">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb52-377"></span>
<span id="cb52-378">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb52-379">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb52-380">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save STRING ptr.</span></span>
<span id="cb52-381">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Revert the scaling.</span></span>
<span id="cb52-382"></span>
<span id="cb52-383">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90</span>
<span id="cb52-384"></span>
<span id="cb52-385"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-386"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb52-387"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb52-388"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string is a prefix match.</span></span>
<span id="cb52-389"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-390"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The slot length is stored in rax at this point, and the search string's</span></span>
<span id="cb52-391"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length is stored in r11.  We know that the search string's length will</span></span>
<span id="cb52-392"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; always be longer than or equal to the slot length at this point, so, we</span></span>
<span id="cb52-393"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; can subtract 16 (currently stored in r10) from rax, and use the resulting</span></span>
<span id="cb52-394"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; value as a loop counter, comparing the search string with the underlying</span></span>
<span id="cb52-395"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string slot byte-by-byte to determine if there's a match.</span></span>
<span id="cb52-396"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-397"></span>
<span id="cb52-398"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx50:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sub</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Subtract 16 from search length.</span></span>
<span id="cb52-399"></span>
<span id="cb52-400"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-401"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up some registers by stashing their values into various xmm offsets.</span></span>
<span id="cb52-402"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-403"></span>
<span id="cb52-404">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rdx register.</span></span>
<span id="cb52-405">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rcx register.</span></span>
<span id="cb52-406">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rax, rcx is now counter.</span></span>
<span id="cb52-407"></span>
<span id="cb52-408"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-409"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the search string buffer and advance it 16 bytes.</span></span>
<span id="cb52-410"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-411"></span>
<span id="cb52-412">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract String into r11.</span></span>
<span id="cb52-413">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer address.</span></span>
<span id="cb52-414">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb52-415"></span>
<span id="cb52-416"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-417"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Loading the slot is more involved as we have to go to the string table, then</span></span>
<span id="cb52-418"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the pStringArray pointer, then the relevant STRING offset within the string</span></span>
<span id="cb52-419"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; array (which requires re-loading the index from xmm5d[3]), then the string</span></span>
<span id="cb52-420"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; buffer from that structure.</span></span>
<span id="cb52-421"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-422"></span>
<span id="cb52-423">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into r8.</span></span>
<span id="cb52-424">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb52-425"></span>
<span id="cb52-426">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract index from xmm5.</span></span>
<span id="cb52-427">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb52-428"></span>
<span id="cb52-429">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb52-430">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string table buffer address.</span></span>
<span id="cb52-431">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb52-432"></span>
<span id="cb52-433">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy counter.</span></span>
<span id="cb52-434"></span>
<span id="cb52-435"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-436"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span></span>
<span id="cb52-437"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set up rsi/rdi so we can do a 'rep cmps'.</span></span>
<span id="cb52-438"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-439"></span>
<span id="cb52-440">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cld</span></span>
<span id="cb52-441">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span></span>
<span id="cb52-442">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span></span>
<span id="cb52-443">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repe</span>        cmpsb</span>
<span id="cb52-444"></span>
<span id="cb52-445">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb52-446">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx60                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not all bytes compared, jump.</span></span>
<span id="cb52-447"></span>
<span id="cb52-448"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-449"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span></span>
<span id="cb52-450"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; how many characters we matched, and then jump to Pfx40 for finalization.</span></span>
<span id="cb52-451"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-452"></span>
<span id="cb52-453">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span></span>
<span id="cb52-454">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx40</span>
<span id="cb52-455"></span>
<span id="cb52-456"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-457"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Byte comparisons were not equal.  Restore the rcx loop counter and decrement</span></span>
<span id="cb52-458"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it.  If it's zero, we have no more strings to compare, so we can do a quick</span></span>
<span id="cb52-459"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; exit.  If there are still comparisons to be made, restore the other registers</span></span>
<span id="cb52-460"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we trampled then jump back to the start of the loop Pfx20.</span></span>
<span id="cb52-461"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-462"></span>
<span id="cb52-463"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx60:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rcx counter.</span></span>
<span id="cb52-464">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb52-465">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Jump forward if not zero.</span></span>
<span id="cb52-466"></span>
<span id="cb52-467"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-468"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No more comparisons remaining, return.</span></span>
<span id="cb52-469"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-470"></span>
<span id="cb52-471">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb52-472">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb52-473">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span> Pfx90                               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb52-474"></span>
<span id="cb52-475"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-476"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; More comparisons remain; restore the registers we clobbered and continue loop.</span></span>
<span id="cb52-477"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-478"></span>
<span id="cb52-479">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r10.</span></span>
<span id="cb52-480">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r11.</span></span>
<span id="cb52-481">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb52-482">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Continue comparisons.</span></span>
<span id="cb52-483"></span>
<span id="cb52-484">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb52-485"></span>
<span id="cb52-486">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb52-487"></span>
<span id="cb52-488"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx90:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRsi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rsi.</span></span>
<span id="cb52-489">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRdi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdi.</span></span>
<span id="cb52-490">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popfq</span>                                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore flags.</span></span>
<span id="cb52-491">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LOCALS_SIZE                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Deallocate stack space.</span></span>
<span id="cb52-492"></span>
<span id="cb52-493">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb52-494"></span>
<span id="cb52-495">        NESTED_END   IsPrefixOfStringInTable_x64_3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb52-496"></span>
<span id="cb52-497"></span>
<span id="cb52-498"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></span></code></pre></div>
</div>
</div>
</div>
<p>I don’t have a strong hunch as to how this will perform; like I said earlier, it was mainly done to set up the scaffolding for using a <code>NESTED_ENTRY</code> in the future, such that we’ll have the glue in place if we want to iterate on the disassembly of the PGO versions. If I had to guess, I suspect it will be slightly slower than version 2, but surely not by much, right? It’s a pretty minor change in the grand scheme of things. Let’s take a look.</p>
</section>
<section id="benchmark-x64-3" class="level4 unlisted">
<h4 class="unlisted anchored" data-anchor-id="benchmark-x64-3">Benchmark x64 3</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-03-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-03-v1.svg" class="img-fluid figure-img" alt="Benchmark x64 3"></a></p>
<figcaption>Benchmark x64 3</figcaption>
</figure>
</div>
<p>Hah! Version 3 is much, much worse! Even its negative matching performance is terrible, which is the one thing the assembly versions have been good at so far. How peculiar.</p>
<p>Now, in the interest of keeping events chronological, as much as I’d like to dive in now and figure out why, I’ll have to defer to my behavior when I encountered this performance gap: I laughed, shelved the version 3 experiment, and moved on.</p>
<p>That’s a decidedly unsatisfying end to the matter, though, I’ll admit. We’ll come back to it later in the article and try and get some closure as to why it was so slow, comparatively.</p>
</section>
</section>
<section id="internet-feedback" class="level3">
<h3 class="anchored" data-anchor-id="internet-feedback">Internet Feedback</h3>
<p>So, at this point, with version 10 of the C routine and version 2 of the assembly version in hand, and a very early draft of this article, I solicited <a href="https://twitter.com/trentnelson/status/985715037934440448">feedback on Twitter</a> and got some great responses. Thanks again to <a href="https://twitter.com/rygorous">Fabian Giesen</a>, <a href="https://twitter.com/pshufb">Wojciech Muła</a>, <a href="https://twitter.com/geofflangdale">Geoff Langdale</a>, <a href="https://twitter.com/lemire">Daniel Lemire</a>, and <a href="https://twitter.com/KendallWillets">Kendall Willets</a> for their discussion and input over the course of a few days!</p>
<hr>
</section>
</section>
<section id="round2" class="level2">
<h2 class="anchored" data-anchor-id="round2">Round 2—Post-Internet Feedback</h2>
<p>Let’s take a look at the iterations that came about after receiving feedback.</p>
<section id="isprefixofstringintable_11" class="level3">
<h3 class="anchored" data-anchor-id="isprefixofstringintable_11">IsPrefixOfStringInTable_11</h3>
<p>← IsPrefixOfStringInTable_10 | IsPrefixOfStringInTable_12 →</p>
<p>Both <a href="https://twitter.com/rygorous">Fabian Giesen</a> and <a href="https://twitter.com/pshufb">Wojciech Muła</a> pointed out that we could use <code>_mm_andnot_si128()</code> to avoid the need to invert the results of the <code>IncludeSlotsByLength</code> XMM register (via <code>_mm_xor_si128()</code>). Let’s try that.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-14-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-14-1" aria-controls="tabset-14-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-14-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-14-2" aria-controls="tabset-14-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-14-1" class="tab-pane active" aria-labelledby="tabset-14-1-tab">
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb53-1">% diff -u IsPrefixOfStringInTable_10.c IsPrefixOfStringInTable_11.c</span>
<span id="cb53-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_10.c        2018-04-26 10:38:09.357890400 -0400</span></span>
<span id="cb53-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_11.c        2018-04-26 12:43:44.184528000 -0400</span></span>
<span id="cb53-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,7 +18,7 @@</span></span>
<span id="cb53-5"></span>
<span id="cb53-6"> _Use_decl_annotations_</span>
<span id="cb53-7"> STRING_TABLE_INDEX</span>
<span id="cb53-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_10(</span></span>
<span id="cb53-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_11(</span></span>
<span id="cb53-10">     PSTRING_TABLE StringTable,</span>
<span id="cb53-11">     PSTRING String,</span>
<span id="cb53-12">     PSTRING_MATCH Match</span>
<span id="cb53-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -31,8 +31,8 @@</span></span>
<span id="cb53-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb53-15">     or is equal to" the search string.</span>
<span id="cb53-16"></span>
<span id="cb53-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This version is based off version 8, but rewrites the inner loop that</span></span>
<span id="cb53-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    checks for comparisons.</span></span>
<span id="cb53-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This version is based off version 10, but with the vpandn used at the</span></span>
<span id="cb53-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    end of the initial test, as suggested by Wojciech Mula (@pshufb).</span></span>
<span id="cb53-21"></span>
<span id="cb53-22"> Arguments:</span>
<span id="cb53-23"></span>
<span id="cb53-24"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -70,9 +70,7 @@</span></span>
<span id="cb53-25">     XMMWORD TableUniqueChars;</span>
<span id="cb53-26">     XMMWORD IncludeSlotsByUniqueChar;</span>
<span id="cb53-27">     XMMWORD IgnoreSlotsByLength;</span>
<span id="cb53-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    XMMWORD IncludeSlotsByLength;</span></span>
<span id="cb53-29">     XMMWORD IncludeSlots;</span>
<span id="cb53-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    const XMMWORD AllOnesXmm = _mm_set1_epi8(0xff);</span></span>
<span id="cb53-31"></span>
<span id="cb53-32">     //</span>
<span id="cb53-33">     // Unconditionally do the following five operations before checking any of</span>
<span id="cb53-34"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -158,28 +156,25 @@</span></span>
<span id="cb53-35">     // N.B. Because we default the length of empty slots to 0x7f, they will</span>
<span id="cb53-36">     //      handily be included in the ignored set (i.e. their words will also</span>
<span id="cb53-37">     //      be set to 0xff), which means they'll also get filtered out when</span>
<span id="cb53-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //      we invert the mask shortly after.</span></span>
<span id="cb53-39"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      we do the "and not" intersection with the include slots next.</span></span>
<span id="cb53-40">     //</span>
<span id="cb53-41"></span>
<span id="cb53-42">     IgnoreSlotsByLength = _mm_cmpgt_epi8(Lengths.SlotsXmm, LengthXmm);</span>
<span id="cb53-43"></span>
<span id="cb53-44">     //</span>
<span id="cb53-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb53-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb53-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb53-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb53-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb53-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    IncludeSlotsByLength = _mm_xor_si128(IgnoreSlotsByLength, AllOnesXmm);</span></span>
<span id="cb53-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb53-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb53-53">     // We're now ready to intersect the two XMM registers to determine which</span>
<span id="cb53-54">     // slots should still be included in the comparison (i.e. which slots have</span>
<span id="cb53-55">     // the exact same unique character as the string and a length less than or</span>
<span id="cb53-56">     // equal to the length of the search string).</span>
<span id="cb53-57">     //</span>
<span id="cb53-58"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // As the IgnoreSlotsByLength XMM register is the inverse of what we want</span></span>
<span id="cb53-59"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // at the moment (we want 0xff for slots to include, and 0x00 for slots</span></span>
<span id="cb53-60"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // to ignore; it's currently the other way around), we use _mm_andnot_si128</span></span>
<span id="cb53-61"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // instead of just _mm_and_si128.</span></span>
<span id="cb53-62"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb53-63"></span>
<span id="cb53-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    IncludeSlots = _mm_and_si128(IncludeSlotsByUniqueChar,</span></span>
<span id="cb53-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                                 IncludeSlotsByLength);</span></span>
<span id="cb53-66"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    IncludeSlots = _mm_andnot_si128(IgnoreSlotsByLength,</span></span>
<span id="cb53-67"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+                                    IncludeSlotsByUniqueChar);</span></span>
<span id="cb53-68"></span>
<span id="cb53-69">     //</span>
<span id="cb53-70">     // Generate a mask.</span></code></pre></div>
</div>
<div id="tabset-14-2" class="tab-pane" aria-labelledby="tabset-14-2-tab">
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb54-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb54-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb54-3">IsPrefixOfStringInTable_11<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb54-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb54-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb54-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb54-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb54-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb54-9"></span>
<span id="cb54-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb54-11"></span>
<span id="cb54-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb54-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb54-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb54-15"></span>
<span id="cb54-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This version is based off version 10, but with the vpandn used at the</span></span>
<span id="cb54-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    end of the initial test, as suggested by Wojciech Mula (@pshufb).</span></span>
<span id="cb54-18"></span>
<span id="cb54-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb54-20"></span>
<span id="cb54-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb54-22"></span>
<span id="cb54-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb54-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb54-25"></span>
<span id="cb54-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb54-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb54-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb54-29"></span>
<span id="cb54-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb54-31"></span>
<span id="cb54-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb54-33"></span>
<span id="cb54-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb54-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-56"></span>
<span id="cb54-57">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-58">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb54-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb54-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb54-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb54-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb54-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb54-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb54-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb54-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb54-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb54-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb54-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb54-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb54-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb54-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb54-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb54-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb54-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb54-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb54-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb54-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb54-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb54-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb54-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb54-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-90"></span>
<span id="cb54-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb54-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-94"></span>
<span id="cb54-95">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-96"></span>
<span id="cb54-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb54-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb54-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-101"></span>
<span id="cb54-102">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb54-103">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-104"></span>
<span id="cb54-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb54-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-108"></span>
<span id="cb54-109">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-110"></span>
<span id="cb54-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb54-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-114"></span>
<span id="cb54-115">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-116"></span>
<span id="cb54-117">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-118">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb54-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-120"></span>
<span id="cb54-121">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-122">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-123"></span>
<span id="cb54-124">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb54-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb54-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb54-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb54-129">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb54-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-131"></span>
<span id="cb54-132">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-133"></span>
<span id="cb54-134">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-135">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb54-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb54-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb54-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb54-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb54-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we do the "and not" intersection with the include slots next.</span></span>
<span id="cb54-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-143"></span>
<span id="cb54-144">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-145"></span>
<span id="cb54-146">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-147">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb54-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb54-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb54-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb54-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// As the IgnoreSlotsByLength XMM register is the inverse of what we want</span></span>
<span id="cb54-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// at the moment (we want 0xff for slots to include, and 0x00 for slots</span></span>
<span id="cb54-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to ignore; it's currently the other way around), we use _mm_andnot_si128</span></span>
<span id="cb54-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// instead of just _mm_and_si128.</span></span>
<span id="cb54-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-157"></span>
<span id="cb54-158">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_andnot_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb54-159">                                    IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-160"></span>
<span id="cb54-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb54-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-164"></span>
<span id="cb54-165">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-166"></span>
<span id="cb54-167">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-168"></span>
<span id="cb54-169">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-170">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb54-171">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb54-172">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb54-173">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-174"></span>
<span id="cb54-175">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-176">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-177"></span>
<span id="cb54-178">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb54-180">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb54-181">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-182"></span>
<span id="cb54-183">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-184"></span>
<span id="cb54-185">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-186">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb54-187">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb54-188">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-189"></span>
<span id="cb54-190">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-191"></span>
<span id="cb54-192">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-193"></span>
<span id="cb54-194">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-195">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb54-196">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb54-197">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-198"></span>
<span id="cb54-199">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-200">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-201"></span>
<span id="cb54-202">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-203">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb54-204">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb54-205">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb54-206">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-207"></span>
<span id="cb54-208">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-209">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-210"></span>
<span id="cb54-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-212">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb54-213">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-214"></span>
<span id="cb54-215">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-216">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb54-217"></span>
<span id="cb54-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-219">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb54-220">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-221"></span>
<span id="cb54-222">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-223"></span>
<span id="cb54-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb54-226">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb54-227">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb54-228">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb54-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb54-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb54-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb54-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb54-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb54-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-235"></span>
<span id="cb54-236">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-237"></span>
<span id="cb54-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb54-240">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-241"></span>
<span id="cb54-242">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-243"></span>
<span id="cb54-244">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-245"></span>
<span id="cb54-246">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-247">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The slot length is longer than the number of characters matched</span></span>
<span id="cb54-248">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// from the search string; this isn't a prefix match.  Continue.</span></span>
<span id="cb54-249">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-250"></span>
<span id="cb54-251">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-252">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-253"></span>
<span id="cb54-254">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-255"></span>
<span id="cb54-256">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-257">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb54-258">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb54-259">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb54-260">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-261"></span>
<span id="cb54-262">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb54-263"></span>
<span id="cb54-264">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-265"></span>
<span id="cb54-266">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-267"></span>
<span id="cb54-268">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-269">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb54-270">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-271"></span>
<span id="cb54-272">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-273">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-274">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-275"></span>
<span id="cb54-276">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-277">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb54-278">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb54-279">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb54-280">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-281"></span>
<span id="cb54-282">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-283"></span>
<span id="cb54-284">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-285">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-286">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb54-287"></span>
<span id="cb54-288">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-289"></span>
<span id="cb54-290">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-291"></span>
<span id="cb54-292">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb54-293"></span>
<span id="cb54-294">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-295">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb54-296">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb54-297"></span>
<span id="cb54-298">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb54-299"></span>
<span id="cb54-300">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-301"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
<p>We’re only shaving one instruction off here, so the performance gain, if any, should be very modest.</p>
</section>
<section id="benchmark-11" class="level3 unlisted">
<h3 class="unlisted anchored" data-anchor-id="benchmark-11">Benchmark 11</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-11-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-11-v1.svg" class="img-fluid figure-img" alt="Benchmark 11"></a></p>
<figcaption>Benchmark 11</figcaption>
</figure>
</div>
<p>Definitely a slight improvement over version 10 in most cases!</p>
<hr>
</section>
<section id="isprefixofstringintable_x64_4" class="level3">
<h3 class="anchored" data-anchor-id="isprefixofstringintable_x64_4">IsPrefixOfStringInTable_x64_4</h3>
<p>← IsPrefixOfStringInTable_x64_3 | IsPrefixOfStringInTable_x64_5 →</p>
<p>Something I didn’t know about <code>vptest</code> that Fabian pointed out is that it actually does two operations. The first essentially does an AND of the two input registers and sets the zero flag (ZF=1) if the result is all 0s. We’ve been using that aspect in the assembly version up to now.</p>
<p>However, it also does the equivalent of <code>(xmm0 and (not xmm1))</code>, and sets the carry flag (CY=1) if that expression evaluates to all zeros. That’s handy, because it’s exactly the expression we want to do!</p>
<p>So, let’s take version 2 of our assembly routine, remove the <code>vpxor</code> bit, and re-arrange the <code>vptest</code> inputs such that we can do a <code>jnc</code> instead of <code>jnz</code>:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-15-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-15-1" aria-controls="tabset-15-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-15-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-15-2" aria-controls="tabset-15-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-15-1" class="tab-pane active" aria-labelledby="tabset-15-1-tab">
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb55-1">% diff -u IsPrefixOfStringInTable_x64_2.asm IsPrefixOfStringInTable_x64_4.asm</span>
<span id="cb55-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_x64_2.asm   2018-04-26 14:15:53.805409700 -0400</span></span>
<span id="cb55-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_x64_4.asm   2018-04-26 14:16:37.909717200 -0400</span></span>
<span id="cb55-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -33,6 +33,10 @@</span></span>
<span id="cb55-5"> ;   search string.  That is, whether any string in the table "starts with</span>
<span id="cb55-6"> ;   or is equal to" the search string.</span>
<span id="cb55-7"> ;</span>
<span id="cb55-8"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   This routine is based off version 2, but leverages the fact that</span></span>
<span id="cb55-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   vptest sets the carry flag if '(xmm0 and (not xmm1))' evaluates</span></span>
<span id="cb55-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   to all 0s, avoiding the the need to do the pxor or pandn steps.</span></span>
<span id="cb55-11"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb55-12"> ; Arguments:</span>
<span id="cb55-13"> ;</span>
<span id="cb55-14"> ;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span>
<span id="cb55-15"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -50,7 +54,7 @@</span></span>
<span id="cb55-16"> ;</span>
<span id="cb55-17"> ;--</span>
<span id="cb55-18"></span>
<span id="cb55-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_ENTRY IsPrefixOfStringInTable_x64_2, _TEXT$00</span></span>
<span id="cb55-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_ENTRY IsPrefixOfStringInTable_x64_4, _TEXT$00</span></span>
<span id="cb55-21"></span>
<span id="cb55-22"> ;</span>
<span id="cb55-23"> ; Load the string buffer into xmm0, and the unique indexes from the string table</span>
<span id="cb55-24"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -83,12 +87,6 @@</span></span>
<span id="cb55-25">         vmovdqa xmm3, xmmword ptr StringTable.Lengths[rcx]      ; Load lengths.</span>
<span id="cb55-26"></span>
<span id="cb55-27"> ;</span>
<span id="cb55-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Set xmm2 to all ones.  We use this later to invert the length comparison.</span></span>
<span id="cb55-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb55-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb55-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpcmpeqq    xmm2, xmm2, xmm2            ; Set xmm2 to all ones.</span></span>
<span id="cb55-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb55-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb55-34"> ; Broadcast the byte-sized string length into xmm4.</span>
<span id="cb55-35"> ;</span>
<span id="cb55-36"></span>
<span id="cb55-37"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -103,16 +101,16 @@</span></span>
<span id="cb55-38"> ;</span>
<span id="cb55-39"></span>
<span id="cb55-40">         vpcmpgtb    xmm1, xmm3, xmm4            ; Identify long slots.</span>
<span id="cb55-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpxor       xmm1, xmm1, xmm2            ; Invert the result.</span></span>
<span id="cb55-42"></span>
<span id="cb55-43"> ;</span>
<span id="cb55-44"> ; Intersect-and-test the unique character match xmm mask register (xmm5) with</span>
<span id="cb55-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; the length match mask xmm register (xmm1).  This affects flags, allowing us</span></span>
<span id="cb55-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; to do a fast-path exit for the no-match case (where ZF = 1).</span></span>
<span id="cb55-47"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; the inverted length match mask xmm register (xmm1).  This will set the carry</span></span>
<span id="cb55-48"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; flag (CY = 1) if the result of 'xmm5 and (not xmm1)' is all 0s, which allows</span></span>
<span id="cb55-49"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; us to do a fast-path exit for the no-match case.</span></span>
<span id="cb55-50"> ;</span>
<span id="cb55-51"></span>
<span id="cb55-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vptest      xmm5, xmm1                  ; Check for no match.</span></span>
<span id="cb55-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jnz         short Pfx10                 ; There was a match.</span></span>
<span id="cb55-54"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vptest      xmm1, xmm5                  ; Check for no match.</span></span>
<span id="cb55-55"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnc         short Pfx10                 ; There was a match.</span></span>
<span id="cb55-56"></span>
<span id="cb55-57"> ;</span>
<span id="cb55-58"> ; No match, set rax to -1 and return.</span>
<span id="cb55-59"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -159,12 +157,12 @@</span></span>
<span id="cb55-60">         vpinsrq     xmm2, xmm2, rdx, 1          ; Save rdx into xmm2q[1].</span>
<span id="cb55-61"></span>
<span id="cb55-62"> ;</span>
<span id="cb55-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm5, xmm1'),</span></span>
<span id="cb55-64"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm1, xmm5'),</span></span>
<span id="cb55-65"> ; yielding a mask identifying indices we need to perform subsequent matches</span>
<span id="cb55-66"> ; upon.  Convert this into a bitmap and save in xmm2d[2].</span>
<span id="cb55-67"> ;</span>
<span id="cb55-68"></span>
<span id="cb55-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpand       xmm5, xmm5, xmm1            ; Intersect unique + lengths.</span></span>
<span id="cb55-70"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpandn      xmm5, xmm1, xmm5            ; Intersect unique + lengths.</span></span>
<span id="cb55-71">         vpmovmskb   edx, xmm5                   ; Generate a bitmap from mask.</span>
<span id="cb55-72"></span>
<span id="cb55-73"> ;</span>
<span id="cb55-74"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -473,7 +471,7 @@</span></span>
<span id="cb55-75"></span>
<span id="cb55-76">         ;IACA_VC_END</span>
<span id="cb55-77"></span>
<span id="cb55-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_END   IsPrefixOfStringInTable_x64_2, _TEXT$00</span></span>
<span id="cb55-79"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_END   IsPrefixOfStringInTable_x64_4, _TEXT$00</span></span>
<span id="cb55-80"></span>
<span id="cb55-81"> ; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></code></pre></div>
</div>
<div id="tabset-15-2" class="tab-pane" aria-labelledby="tabset-15-2-tab">
<div class="sourceCode" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb56-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;++</span></span>
<span id="cb56-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; STRING_TABLE_INDEX</span></span>
<span id="cb56-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; IsPrefixOfStringInTable_x64_*(</span></span>
<span id="cb56-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING_TABLE StringTable,</span></span>
<span id="cb56-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING String,</span></span>
<span id="cb56-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _Out_opt_ PSTRING_MATCH Match</span></span>
<span id="cb56-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     )</span></span>
<span id="cb56-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Routine Description:</span></span>
<span id="cb56-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb56-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb56-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   or is equal to" the search string.</span></span>
<span id="cb56-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   This routine is based off version 2, but leverages the fact that</span></span>
<span id="cb56-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   vptest sets the carry flag if '(xmm0 and (not xmm1))' evaluates</span></span>
<span id="cb56-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   to all 0s, avoiding the the need to do the pxor or pandn steps.</span></span>
<span id="cb56-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Arguments:</span></span>
<span id="cb56-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb56-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb56-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       search for.</span></span>
<span id="cb56-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb56-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb56-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb56-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return Value:</span></span>
<span id="cb56-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb56-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;--</span></span>
<span id="cb56-36"></span>
<span id="cb56-37">        LEAF_ENTRY IsPrefixOfStringInTable_x64_4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb56-38"></span>
<span id="cb56-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string buffer into xmm0, and the unique indexes from the string table</span></span>
<span id="cb56-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span></span>
<span id="cb56-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; result into xmm5.</span></span>
<span id="cb56-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-44"></span>
<span id="cb56-45">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_START</span></span>
<span id="cb56-46"></span>
<span id="cb56-47">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb56-48">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb56-49">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load indexes.</span></span>
<span id="cb56-50">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb56-51"></span>
<span id="cb56-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string table's unique character array into xmm2.</span></span>
<span id="cb56-54"></span>
<span id="cb56-55">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load chars.</span></span>
<span id="cb56-56"></span>
<span id="cb56-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb56-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb56-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-61"></span>
<span id="cb56-62">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare unique chars.</span></span>
<span id="cb56-63"></span>
<span id="cb56-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb56-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-67">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load lengths.</span></span>
<span id="cb56-68"></span>
<span id="cb56-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb56-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-72"></span>
<span id="cb56-73">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast length.</span></span>
<span id="cb56-74"></span>
<span id="cb56-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb56-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb56-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table, to find those that are greater in length.  Invert the result, such</span></span>
<span id="cb56-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; that we're left with a masked register where each 0xff element indicates</span></span>
<span id="cb56-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; a slot with a length less than or equal to our search string's length.</span></span>
<span id="cb56-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-82"></span>
<span id="cb56-83">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb56-84"></span>
<span id="cb56-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect-and-test the unique character match xmm mask register (xmm5) with</span></span>
<span id="cb56-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the inverted length match mask xmm register (xmm1).  This will set the carry</span></span>
<span id="cb56-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; flag (CY = 1) if the result of 'xmm5 and (not xmm1)' is all 0s, which allows</span></span>
<span id="cb56-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; us to do a fast-path exit for the no-match case.</span></span>
<span id="cb56-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-91"></span>
<span id="cb56-92">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Check for no match.</span></span>
<span id="cb56-93">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnc</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; There was a match.</span></span>
<span id="cb56-94"></span>
<span id="cb56-95"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-96"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match, set rax to -1 and return.</span></span>
<span id="cb56-97"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-98"></span>
<span id="cb56-99">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb56-100">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb56-101">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb56-102"></span>
<span id="cb56-103">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb56-104"></span>
<span id="cb56-105"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-106"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (There was at least one match, continue with processing.)</span></span>
<span id="cb56-107"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-108"></span>
<span id="cb56-109"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Calculate the "search length" for the incoming search string, which is</span></span>
<span id="cb56-111"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equivalent of 'min(String-&gt;Length, 16)'.  (The search string's length</span></span>
<span id="cb56-112"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; currently lives in xmm4, albeit as a byte-value broadcasted across the</span></span>
<span id="cb56-113"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; entire register, so extract that first.)</span></span>
<span id="cb56-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-115"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Once the search length is calculated, deposit it back at the second byte</span></span>
<span id="cb56-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location of xmm4.</span></span>
<span id="cb56-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 and xmm4[15:8] - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb56-119"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-120"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length (String-&gt;Length)</span></span>
<span id="cb56-121"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-122"></span>
<span id="cb56-123"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx10:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load length.</span></span>
<span id="cb56-124">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load 16 into rax.</span></span>
<span id="cb56-125">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy into r10.</span></span>
<span id="cb56-126">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against 16.</span></span>
<span id="cb56-127">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmova</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Use 16 if length is greater.</span></span>
<span id="cb56-128">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save back to xmm4b[1].</span></span>
<span id="cb56-129"></span>
<span id="cb56-130"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-131"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our parameter registers into xmm registers instead of their stack-backed</span></span>
<span id="cb56-132"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location, to avoid memory writes.</span></span>
<span id="cb56-133"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-134"></span>
<span id="cb56-135">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm2.</span></span>
<span id="cb56-136">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rcx into xmm2q[0].</span></span>
<span id="cb56-137">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rdx into xmm2q[1].</span></span>
<span id="cb56-138"></span>
<span id="cb56-139"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-140"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm1, xmm5'),</span></span>
<span id="cb56-141"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; yielding a mask identifying indices we need to perform subsequent matches</span></span>
<span id="cb56-142"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; upon.  Convert this into a bitmap and save in xmm2d[2].</span></span>
<span id="cb56-143"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-144"></span>
<span id="cb56-145">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpandn</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect unique + lengths.</span></span>
<span id="cb56-146">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Generate a bitmap from mask.</span></span>
<span id="cb56-147"></span>
<span id="cb56-148"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-149"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We're finished with xmm5; repurpose it in the same vein as xmm2 above.</span></span>
<span id="cb56-150"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-151"></span>
<span id="cb56-152">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm5.</span></span>
<span id="cb56-153">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save r8 into xmm5q[0].</span></span>
<span id="cb56-154"></span>
<span id="cb56-155"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-156"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Summary of xmm register stashing for the rest of the routine:</span></span>
<span id="cb56-157"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-158"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm2:</span></span>
<span id="cb56-159"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        0:63   (vpinsrq 0)     rcx (1st function parameter, StringTable)</span></span>
<span id="cb56-160"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       64:127  (vpinsrq 1)     rdx (2nd function paramter, String)</span></span>
<span id="cb56-161"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm4:</span></span>
<span id="cb56-163"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:7     (vpinsrb 0)     length of search string</span></span>
<span id="cb56-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16)</span></span>
<span id="cb56-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      16:23    (vpinsrb 2)     loop counter (when doing long string compares)</span></span>
<span id="cb56-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      24:31    (vpinsrb 3)     shift count</span></span>
<span id="cb56-167"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-168"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm5:</span></span>
<span id="cb56-169"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span></span>
<span id="cb56-170"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      64:95    (vpinsrd 2)     bitmap of slots to compare</span></span>
<span id="cb56-171"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      96:127   (vpinsrd 3)     index of slot currently being processed</span></span>
<span id="cb56-172"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-173"></span>
<span id="cb56-174"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-175"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Initialize rcx as our counter register by doing a popcnt against the bitmap</span></span>
<span id="cb56-176"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we just generated in edx, and clear our shift count register (r9).</span></span>
<span id="cb56-177"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-178"></span>
<span id="cb56-179">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits in bitmap.</span></span>
<span id="cb56-180">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear r9.</span></span>
<span id="cb56-181"></span>
<span id="cb56-182">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb56-183"></span>
<span id="cb56-184"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-185"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span></span>
<span id="cb56-186"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; trailing zeros of the bitmap, and then add in the shift count, producing an</span></span>
<span id="cb56-187"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; index (rax) we can use to load the corresponding slot.</span></span>
<span id="cb56-188"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-189"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Register usage at top of loop:</span></span>
<span id="cb56-190"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-191"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index.</span></span>
<span id="cb56-192"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-193"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - Loop counter.</span></span>
<span id="cb56-194"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-195"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rdx - Bitmap initially, then slot length.</span></span>
<span id="cb56-196"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-197"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - Shift count.</span></span>
<span id="cb56-198"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-199"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 - Search length.</span></span>
<span id="cb56-200"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-201"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length.</span></span>
<span id="cb56-202"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-203"></span>
<span id="cb56-204"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx20:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tzcnt</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count trailing zeros.</span></span>
<span id="cb56-205">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy tzcnt to rax,</span></span>
<span id="cb56-206">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Add shift to create index.</span></span>
<span id="cb56-207">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; tzcnt + 1</span></span>
<span id="cb56-208">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shrx</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Reposition bitmap.</span></span>
<span id="cb56-209">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store bitmap, free up rdx.</span></span>
<span id="cb56-210">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear edx.</span></span>
<span id="cb56-211">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy index back to shift.</span></span>
<span id="cb56-212">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shift = Index + 1</span></span>
<span id="cb56-213">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store the raw index xmm5d[3].</span></span>
<span id="cb56-214"></span>
<span id="cb56-215"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-216"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span></span>
<span id="cb56-217"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span></span>
<span id="cb56-218"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-219"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, load the string table slot at this index into xmm1, then shift rax back.</span></span>
<span id="cb56-220"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-221"></span>
<span id="cb56-222">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb56-223">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb56-224">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span></span>
<span id="cb56-225">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb56-226"></span>
<span id="cb56-227"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-228"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The search string's first 16 characters are already in xmm0.  Compare this</span></span>
<span id="cb56-229"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; against the slot that has just been loaded into xmm1, storing the result back</span></span>
<span id="cb56-230"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.</span></span>
<span id="cb56-231"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-232"></span>
<span id="cb56-233">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare search string to slot.</span></span>
<span id="cb56-234"></span>
<span id="cb56-235"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-236"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert the XMM mask into a 32-bit representation, then zero high bits after</span></span>
<span id="cb56-237"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; our "search length", which allows us to ignore the results of the comparison</span></span>
<span id="cb56-238"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; above for bytes that were after the search string's length, if applicable.</span></span>
<span id="cb56-239"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, count the number of bits remaining, which tells us how many characters</span></span>
<span id="cb56-240"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we matched.</span></span>
<span id="cb56-241"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-242"></span>
<span id="cb56-243">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert into mask.</span></span>
<span id="cb56-244">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bzhi</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Zero high bits.</span></span>
<span id="cb56-245">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits.</span></span>
<span id="cb56-246"></span>
<span id="cb56-247"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-248"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the slot length into rdx.  As xmm3 already has all the slot lengths in</span></span>
<span id="cb56-249"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it, we can load rax (the current index) into xmm1 and use it to extract the</span></span>
<span id="cb56-250"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; slot length via shuffle.  (The length will be in the lowest byte of xmm1</span></span>
<span id="cb56-251"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; after the shuffle, which we can then vpextrb.)</span></span>
<span id="cb56-252"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-253"></span>
<span id="cb56-254">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">movd</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load index into xmm1.</span></span>
<span id="cb56-255">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle lengths.</span></span>
<span id="cb56-256">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract target length to rdx.</span></span>
<span id="cb56-257"></span>
<span id="cb56-258"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-259"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If 16 characters matched, and the search string's length is longer than 16,</span></span>
<span id="cb56-260"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we're going to need to do a comparison of the remaining strings.</span></span>
<span id="cb56-261"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-262"></span>
<span id="cb56-263">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare chars matched to 16.</span></span>
<span id="cb56-264">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 chars matched.</span></span>
<span id="cb56-265">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx30                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than 16 matched.</span></span>
<span id="cb56-266"></span>
<span id="cb56-267"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-268"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All 16 characters matched.  If the slot length is greater than 16, we need</span></span>
<span id="cb56-269"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do an inline memory comparison of the remaining bytes.  If it's 16 exactly,</span></span>
<span id="cb56-270"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then great, that's a slot match, we're done.</span></span>
<span id="cb56-271"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-272"></span>
<span id="cb56-273">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare length to 16.</span></span>
<span id="cb56-274">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ja</span>          Pfx50                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length is &gt; 16.</span></span>
<span id="cb56-275">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Lengths match!</span></span>
<span id="cb56-276">                                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length &lt;= 16, fall through...</span></span>
<span id="cb56-277"></span>
<span id="cb56-278"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-279"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than or equal to 16 characters were matched.  Compare this against the</span></span>
<span id="cb56-280"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length of the slot; if equal, this is a match, if not, no match, continue.</span></span>
<span id="cb56-281"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-282"></span>
<span id="cb56-283"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx30:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against slot length.</span></span>
<span id="cb56-284">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jne</span>         @F                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match found.</span></span>
<span id="cb56-285">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Match found!</span></span>
<span id="cb56-286"></span>
<span id="cb56-287"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-288"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match against this slot, decrement counter and either continue the loop</span></span>
<span id="cb56-289"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; or terminate the search and return no match.</span></span>
<span id="cb56-290"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-291"></span>
<span id="cb56-292">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb56-293">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb56-294">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; cx != 0, continue.</span></span>
<span id="cb56-295"></span>
<span id="cb56-296">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb56-297">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb56-298">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb56-299"></span>
<span id="cb56-300"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-301"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span></span>
<span id="cb56-302"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; former is used when we need to copy the number of characters matched from r8</span></span>
<span id="cb56-303"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back to rax.  The latter jump target doesn't require this.</span></span>
<span id="cb56-304"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-305"></span>
<span id="cb56-306"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx35:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy numbers of chars matched.</span></span>
<span id="cb56-307"></span>
<span id="cb56-308"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-309"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the match parameter back into r8 and test to see if it's not-NULL, in</span></span>
<span id="cb56-310"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; which case we need to fill out a STRING_MATCH structure for the match.</span></span>
<span id="cb56-311"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-312"></span>
<span id="cb56-313"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx40:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringMatch.</span></span>
<span id="cb56-314">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is NULL?</span></span>
<span id="cb56-315">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not zero, need to fill out.</span></span>
<span id="cb56-316"></span>
<span id="cb56-317"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-318"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is NULL, we're done. Extract index of match back into rax and ret.</span></span>
<span id="cb56-319"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-320"></span>
<span id="cb56-321">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb56-322">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch == NULL, finish.</span></span>
<span id="cb56-323"></span>
<span id="cb56-324"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-325"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span></span>
<span id="cb56-326"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; reload the index from xmm5 into rax and save.</span></span>
<span id="cb56-327"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-328"></span>
<span id="cb56-329">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>NumberOfMatchedCharacters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb56-330">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb56-331">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb56-332"></span>
<span id="cb56-333"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-334"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb56-335"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; involves going through the StringTable, so we need to load that parameter</span></span>
<span id="cb56-336"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back into rcx, then resolving the string array address via pStringArray,</span></span>
<span id="cb56-337"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then the relevant STRING offset within the StringArray.Strings structure.</span></span>
<span id="cb56-338"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-339"></span>
<span id="cb56-340">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into rcx.</span></span>
<span id="cb56-341">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb56-342"></span>
<span id="cb56-343">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb56-344">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb56-345">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save STRING ptr.</span></span>
<span id="cb56-346">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Revert the scaling.</span></span>
<span id="cb56-347"></span>
<span id="cb56-348">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb56-349"></span>
<span id="cb56-350"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-351"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb56-352"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb56-353"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string is a prefix match.</span></span>
<span id="cb56-354"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-355"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The slot length is stored in rax at this point, and the search string's</span></span>
<span id="cb56-356"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length is stored in r11.  We know that the search string's length will</span></span>
<span id="cb56-357"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; always be longer than or equal to the slot length at this point, so, we</span></span>
<span id="cb56-358"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; can subtract 16 (currently stored in r10) from rax, and use the resulting</span></span>
<span id="cb56-359"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; value as a loop counter, comparing the search string with the underlying</span></span>
<span id="cb56-360"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string slot byte-by-byte to determine if there's a match.</span></span>
<span id="cb56-361"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-362"></span>
<span id="cb56-363"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx50:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sub</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Subtract 16 from search length.</span></span>
<span id="cb56-364"></span>
<span id="cb56-365"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-366"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up some registers by stashing their values into various xmm offsets.</span></span>
<span id="cb56-367"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-368"></span>
<span id="cb56-369">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rcx register.</span></span>
<span id="cb56-370">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rdx, rcx is now counter.</span></span>
<span id="cb56-371"></span>
<span id="cb56-372"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-373"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the search string buffer and advance it 16 bytes.</span></span>
<span id="cb56-374"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-375"></span>
<span id="cb56-376">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract String into r11.</span></span>
<span id="cb56-377">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer address.</span></span>
<span id="cb56-378">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb56-379"></span>
<span id="cb56-380"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-381"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Loading the slot is more involved as we have to go to the string table, then</span></span>
<span id="cb56-382"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the pStringArray pointer, then the relevant STRING offset within the string</span></span>
<span id="cb56-383"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; array (which requires re-loading the index from xmm5d[3]), then the string</span></span>
<span id="cb56-384"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; buffer from that structure.</span></span>
<span id="cb56-385"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-386"></span>
<span id="cb56-387">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into r8.</span></span>
<span id="cb56-388">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb56-389"></span>
<span id="cb56-390">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb56-391"></span>
<span id="cb56-392">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb56-393">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string table buffer address.</span></span>
<span id="cb56-394">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb56-395"></span>
<span id="cb56-396">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear eax.</span></span>
<span id="cb56-397"></span>
<span id="cb56-398"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-399"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span></span>
<span id="cb56-400"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Do a byte-by-byte comparison.</span></span>
<span id="cb56-401"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-402"></span>
<span id="cb56-403">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb56-404">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load byte from search string.</span></span>
<span id="cb56-405">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against target.</span></span>
<span id="cb56-406">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jne</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx60                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If not equal, jump.</span></span>
<span id="cb56-407"></span>
<span id="cb56-408"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-409"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The two bytes were equal, update rax, decrement rcx and potentially continue</span></span>
<span id="cb56-410"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the loop.</span></span>
<span id="cb56-411"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-412"></span>
<span id="cb56-413">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Increment index.</span></span>
<span id="cb56-414">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">loopnz</span>      @B                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement cx and loop back.</span></span>
<span id="cb56-415"></span>
<span id="cb56-416"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-417"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span></span>
<span id="cb56-418"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; how many characters we matched, and then jump to Pfx40 for finalization.</span></span>
<span id="cb56-419"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-420"></span>
<span id="cb56-421">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span></span>
<span id="cb56-422">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx40</span>
<span id="cb56-423"></span>
<span id="cb56-424"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-425"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Byte comparisons were not equal.  Restore the rcx loop counter and decrement</span></span>
<span id="cb56-426"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it.  If it's zero, we have no more strings to compare, so we can do a quick</span></span>
<span id="cb56-427"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; exit.  If there are still comparisons to be made, restore the other registers</span></span>
<span id="cb56-428"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we trampled then jump back to the start of the loop Pfx20.</span></span>
<span id="cb56-429"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-430"></span>
<span id="cb56-431"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx60:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rcx counter.</span></span>
<span id="cb56-432">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb56-433">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Jump forward if not zero.</span></span>
<span id="cb56-434"></span>
<span id="cb56-435"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-436"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No more comparisons remaining, return.</span></span>
<span id="cb56-437"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-438"></span>
<span id="cb56-439">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb56-440">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb56-441">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb56-442"></span>
<span id="cb56-443"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-444"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; More comparisons remain; restore the registers we clobbered and continue loop.</span></span>
<span id="cb56-445"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-446"></span>
<span id="cb56-447">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r10.</span></span>
<span id="cb56-448">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r11.</span></span>
<span id="cb56-449">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb56-450">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Continue comparisons.</span></span>
<span id="cb56-451"></span>
<span id="cb56-452">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb56-453"></span>
<span id="cb56-454">        LEAF_END   IsPrefixOfStringInTable_x64_4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span></code></pre></div>
</div>
</div>
</div>
<p>Let’s see how that stacks up against the existing version 2 of the assembly routine.</p>
</section>
<section id="benchmark-x64-4" class="level3 unlisted">
<h3 class="unlisted anchored" data-anchor-id="benchmark-x64-4">Benchmark x64 4</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-04-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-04-v1.svg" class="img-fluid figure-img" alt="Benchmark x64 4"></a></p>
<figcaption>Benchmark x64 4</figcaption>
</figure>
</div>
<p>Nice, we’ve shaved an entire cycle off the negative match path! I say that both seriously and sarcastically. A single cycle, wow, stop the press! On the other hand, going from 8 cycles to 7 cycles is usually a lot harder than, say, going from 100,000 cycles to 80,000 cycles. We’re so close to the lower bound, additional cycle improvements are a lot like trying to get blood out of a stone.</p>
<hr>
</section>
<section id="isprefixofstringintable_12" class="level3">
<h3 class="anchored" data-anchor-id="isprefixofstringintable_12">IsPrefixOfStringInTable_12</h3>
<p>← IsPrefixOfStringInTable_11 | IsPrefixOfStringInTable_13 →</p>
<p>The <code>vptest</code> fast-path exit definitely yielded a repeatable and measurable gain for the assembly version. Let’s replicate it in a C version.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-16-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-16-1" aria-controls="tabset-16-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-16-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-16-2" aria-controls="tabset-16-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-16-1" class="tab-pane active" aria-labelledby="tabset-16-1-tab">
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb57-1">% diff -u IsPrefixOfStringInTable_10.c IsPrefixOfStringInTable_12.c</span>
<span id="cb57-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_10.c        2018-04-26 13:28:06.006627100 -0400</span></span>
<span id="cb57-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_12.c        2018-04-26 17:47:54.970331600 -0400</span></span>
<span id="cb57-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -19,7 +19,7 @@</span></span>
<span id="cb57-5"></span>
<span id="cb57-6"> _Use_decl_annotations_</span>
<span id="cb57-7"> STRING_TABLE_INDEX</span>
<span id="cb57-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_10(</span></span>
<span id="cb57-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_12(</span></span>
<span id="cb57-10">     PSTRING_TABLE StringTable,</span>
<span id="cb57-11">     PSTRING String,</span>
<span id="cb57-12">     PSTRING_MATCH Match</span>
<span id="cb57-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -32,8 +32,15 @@</span></span>
<span id="cb57-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb57-15">     or is equal to" the search string.</span>
<span id="cb57-16"></span>
<span id="cb57-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This version is based off version 8, but rewrites the inner loop that</span></span>
<span id="cb57-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    checks for comparisons.</span></span>
<span id="cb57-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This version is based off version 10, but with factors in the improvements</span></span>
<span id="cb57-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    made to version 4 of the x64 assembly version, thanks to suggestions from</span></span>
<span id="cb57-21"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    both Wojciech Mula (@pshufb) and Fabian Giesen (@rygorous).</span></span>
<span id="cb57-22"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb57-23"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Like version 11, we omit the vpxor to invert the lengths, but instead of</span></span>
<span id="cb57-24"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    an initial vpandn, we leverage the fact that vptest sets the carry flag</span></span>
<span id="cb57-25"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    if all 0s result from the expression: "param1 and (not param2)".  This</span></span>
<span id="cb57-26"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    allows us to do a fast-path early exit (like x64 version 2 does) if no</span></span>
<span id="cb57-27"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    match is found.</span></span>
<span id="cb57-28"></span>
<span id="cb57-29"> Arguments:</span>
<span id="cb57-30"></span>
<span id="cb57-31"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -71,9 +78,7 @@</span></span>
<span id="cb57-32">     XMMWORD TableUniqueChars;</span>
<span id="cb57-33">     XMMWORD IncludeSlotsByUniqueChar;</span>
<span id="cb57-34">     XMMWORD IgnoreSlotsByLength;</span>
<span id="cb57-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    XMMWORD IncludeSlotsByLength;</span></span>
<span id="cb57-36">     XMMWORD IncludeSlots;</span>
<span id="cb57-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    const XMMWORD AllOnesXmm = _mm_set1_epi8(0xff);</span></span>
<span id="cb57-38"></span>
<span id="cb57-39">     //</span>
<span id="cb57-40">     // Unconditionally do the following five operations before checking any of</span>
<span id="cb57-41"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -159,47 +164,58 @@</span></span>
<span id="cb57-42">     // N.B. Because we default the length of empty slots to 0x7f, they will</span>
<span id="cb57-43">     //      handily be included in the ignored set (i.e. their words will also</span>
<span id="cb57-44">     //      be set to 0xff), which means they'll also get filtered out when</span>
<span id="cb57-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //      we invert the mask shortly after.</span></span>
<span id="cb57-46"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      we do the "and not" intersection with the include slots next.</span></span>
<span id="cb57-47">     //</span>
<span id="cb57-48"></span>
<span id="cb57-49">     IgnoreSlotsByLength = _mm_cmpgt_epi8(Lengths.SlotsXmm, LengthXmm);</span>
<span id="cb57-50"></span>
<span id="cb57-51">     //</span>
<span id="cb57-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb57-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb57-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb57-55"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // We can do a fast-path test for no match here via _mm_testc_si128(),</span></span>
<span id="cb57-56"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // which is essentially equivalent to the following logic, just with</span></span>
<span id="cb57-57"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // fewer instructions:</span></span>
<span id="cb57-58">     //</span>
<span id="cb57-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb57-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    IncludeSlotsByLength = _mm_xor_si128(IgnoreSlotsByLength, AllOnesXmm);</span></span>
<span id="cb57-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb57-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb57-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb57-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb57-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // the exact same unique character as the string and a length less than or</span></span>
<span id="cb57-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // equal to the length of the search string).</span></span>
<span id="cb57-67"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      IncludeSlots = _mm_andnot_si128(IgnoreSlotsByLength,</span></span>
<span id="cb57-68"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //                                      IncludeSlotsByUniqueChar);</span></span>
<span id="cb57-69">     //</span>
<span id="cb57-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb57-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    IncludeSlots = _mm_and_si128(IncludeSlotsByUniqueChar,</span></span>
<span id="cb57-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                                 IncludeSlotsByLength);</span></span>
<span id="cb57-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb57-74"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      if (!IncludeSlots) {</span></span>
<span id="cb57-75"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //          return NO_MATCH_FOUND;</span></span>
<span id="cb57-76"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      }</span></span>
<span id="cb57-77">     //</span>
<span id="cb57-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Generate a mask.</span></span>
<span id="cb57-79">     //</span>
<span id="cb57-80"></span>
<span id="cb57-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Bitmap = _mm_movemask_epi8(IncludeSlots);</span></span>
<span id="cb57-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb57-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    if (!Bitmap) {</span></span>
<span id="cb57-84"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    if (_mm_testc_si128(IgnoreSlotsByLength, IncludeSlotsByUniqueChar)) {</span></span>
<span id="cb57-85"></span>
<span id="cb57-86">         //</span>
<span id="cb57-87"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // No bits were set, so there are no strings in this table starting</span></span>
<span id="cb57-88"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // with the same character and of a lesser or equal length as the</span></span>
<span id="cb57-89"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // search string.</span></span>
<span id="cb57-90"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // No remaining slots were left after we intersected the slots with</span></span>
<span id="cb57-91"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // matching unique characters with the inverted slots to ignore due</span></span>
<span id="cb57-92"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // to length.  Thus, no prefix match was found.</span></span>
<span id="cb57-93">         //</span>
<span id="cb57-94"></span>
<span id="cb57-95">         return NO_MATCH_FOUND;</span>
<span id="cb57-96">     }</span>
<span id="cb57-97"></span>
<span id="cb57-98">     //</span>
<span id="cb57-99"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // Continue with the remaining logic, including actually generating the</span></span>
<span id="cb57-100"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // IncludeSlots, which we need for bitmap generation as part of our</span></span>
<span id="cb57-101"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // comparison loop.</span></span>
<span id="cb57-102"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb57-103"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // As the IgnoreSlotsByLength XMM register is the inverse of what we want</span></span>
<span id="cb57-104"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // at the moment (we want 0xff for slots to include, and 0x00 for slots</span></span>
<span id="cb57-105"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // to ignore; it's currently the other way around), we use _mm_andnot_si128</span></span>
<span id="cb57-106"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // instead of just _mm_and_si128.</span></span>
<span id="cb57-107"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb57-108"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb57-109"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    IncludeSlots = _mm_andnot_si128(IgnoreSlotsByLength,</span></span>
<span id="cb57-110"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+                                    IncludeSlotsByUniqueChar);</span></span>
<span id="cb57-111"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb57-112"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb57-113"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // Generate a mask, count the number of bits, and initialize the search</span></span>
<span id="cb57-114"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // length.</span></span>
<span id="cb57-115"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb57-116"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb57-117"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Bitmap = _mm_movemask_epi8(IncludeSlots);</span></span>
<span id="cb57-118"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb57-119"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb57-120">     // Calculate the "search length" of the incoming string, which ensures we</span>
<span id="cb57-121">     // only compare up to the first 16 characters.</span>
<span id="cb57-122">     //</span></code></pre></div>
</div>
<div id="tabset-16-2" class="tab-pane" aria-labelledby="tabset-16-2-tab">
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb58-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb58-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb58-3">IsPrefixOfStringInTable_12<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb58-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb58-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb58-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb58-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb58-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb58-9"></span>
<span id="cb58-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb58-11"></span>
<span id="cb58-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb58-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb58-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb58-15"></span>
<span id="cb58-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This version is based off version 10, but with factors in the improvements</span></span>
<span id="cb58-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    made to version 4 of the x64 assembly version, thanks to suggestions from</span></span>
<span id="cb58-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    both Wojciech Mula (@pshufb) and Fabian Giesen (@rygorous).</span></span>
<span id="cb58-19"></span>
<span id="cb58-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Like version 11, we omit the vpxor to invert the lengths, but instead of</span></span>
<span id="cb58-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    an initial vpandn, we leverage the fact that vptest sets the carry flag</span></span>
<span id="cb58-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    if all 0s result from the expression: "param1 and (not param2)".  This</span></span>
<span id="cb58-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    allows us to do a fast-path early exit (like x64 version 2 does) if no</span></span>
<span id="cb58-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    match is found.</span></span>
<span id="cb58-25"></span>
<span id="cb58-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb58-27"></span>
<span id="cb58-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb58-29"></span>
<span id="cb58-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb58-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb58-32"></span>
<span id="cb58-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb58-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb58-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb58-36"></span>
<span id="cb58-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb58-38"></span>
<span id="cb58-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb58-40"></span>
<span id="cb58-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb58-42"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-46">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-47">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-48">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-49">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfTrailingZeros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-53">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-54">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-55">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-56">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-58">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-59">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-60">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-61">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-62">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-63"></span>
<span id="cb58-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb58-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb58-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb58-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb58-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb58-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb58-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb58-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb58-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb58-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb58-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb58-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb58-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb58-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb58-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb58-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb58-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb58-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb58-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb58-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb58-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb58-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb58-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb58-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb58-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-97"></span>
<span id="cb58-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb58-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-101"></span>
<span id="cb58-102">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-103"></span>
<span id="cb58-104">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-105">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb58-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb58-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-108"></span>
<span id="cb58-109">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb58-110">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-111"></span>
<span id="cb58-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb58-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-115"></span>
<span id="cb58-116">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-117"></span>
<span id="cb58-118">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb58-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-121"></span>
<span id="cb58-122">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-123"></span>
<span id="cb58-124">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb58-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-127"></span>
<span id="cb58-128">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-129">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-130"></span>
<span id="cb58-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb58-133">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb58-134">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb58-135">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb58-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb58-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-138"></span>
<span id="cb58-139">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-140"></span>
<span id="cb58-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb58-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb58-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-145">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb58-146">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb58-147">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb58-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we do the "and not" intersection with the include slots next.</span></span>
<span id="cb58-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-150"></span>
<span id="cb58-151">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-152"></span>
<span id="cb58-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We can do a fast-path test for no match here via _mm_testc_si128(),</span></span>
<span id="cb58-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// which is essentially equivalent to the following logic, just with</span></span>
<span id="cb58-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// fewer instructions:</span></span>
<span id="cb58-157">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      IncludeSlots = _mm_andnot_si128(IgnoreSlotsByLength,</span></span>
<span id="cb58-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//                                      IncludeSlotsByUniqueChar);</span></span>
<span id="cb58-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      if (!IncludeSlots) {</span></span>
<span id="cb58-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//          return NO_MATCH_FOUND;</span></span>
<span id="cb58-163">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      }</span></span>
<span id="cb58-164">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-166"></span>
<span id="cb58-167">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_testc_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-168"></span>
<span id="cb58-169">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-170">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No remaining slots were left after we intersected the slots with</span></span>
<span id="cb58-171">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// matching unique characters with the inverted slots to ignore due</span></span>
<span id="cb58-172">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to length.  Thus, no prefix match was found.</span></span>
<span id="cb58-173">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-174"></span>
<span id="cb58-175">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-176">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb58-177"></span>
<span id="cb58-178">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Continue with the remaining logic, including actually generating the</span></span>
<span id="cb58-180">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// IncludeSlots, which we need for bitmap generation as part of our</span></span>
<span id="cb58-181">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// comparison loop.</span></span>
<span id="cb58-182">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-183">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// As the IgnoreSlotsByLength XMM register is the inverse of what we want</span></span>
<span id="cb58-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// at the moment (we want 0xff for slots to include, and 0x00 for slots</span></span>
<span id="cb58-185">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to ignore; it's currently the other way around), we use _mm_andnot_si128</span></span>
<span id="cb58-186">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// instead of just _mm_and_si128.</span></span>
<span id="cb58-187">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-188"></span>
<span id="cb58-189">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_andnot_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb58-190">                                    IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-191"></span>
<span id="cb58-192">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-193">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask, count the number of bits, and initialize the search</span></span>
<span id="cb58-194">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// length.</span></span>
<span id="cb58-195">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-196"></span>
<span id="cb58-197">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-198"></span>
<span id="cb58-199">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-200">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb58-201">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb58-202">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-203"></span>
<span id="cb58-204">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-205"></span>
<span id="cb58-206">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-207">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb58-208">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thus, need to compare.</span></span>
<span id="cb58-209">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-210"></span>
<span id="cb58-211">    Count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-212"></span>
<span id="cb58-213">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-214"></span>
<span id="cb58-215">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb58-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb58-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-219"></span>
<span id="cb58-220">        NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-221">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-222"></span>
<span id="cb58-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb58-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb58-226">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the shift count accordingly.</span></span>
<span id="cb58-227">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-228"></span>
<span id="cb58-229">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfTrailingZeros <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-230">        Shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-231"></span>
<span id="cb58-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb58-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-235"></span>
<span id="cb58-236">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-237">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb58-238"></span>
<span id="cb58-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-240">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb58-241">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-242"></span>
<span id="cb58-243">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-244"></span>
<span id="cb58-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-246">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb58-247">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb58-248">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb58-249">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb58-250">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb58-251">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb58-252">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb58-253">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb58-254">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb58-255">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-256"></span>
<span id="cb58-257">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-258"></span>
<span id="cb58-259">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-260">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb58-261">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-262"></span>
<span id="cb58-263">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-264"></span>
<span id="cb58-265">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-266"></span>
<span id="cb58-267">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-268">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The slot length is longer than the number of characters matched</span></span>
<span id="cb58-269">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// from the search string; this isn't a prefix match.  Continue.</span></span>
<span id="cb58-270">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-271"></span>
<span id="cb58-272">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-273">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb58-274"></span>
<span id="cb58-275">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-276"></span>
<span id="cb58-277">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-278">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb58-279">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb58-280">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb58-281">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-282"></span>
<span id="cb58-283">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb58-284"></span>
<span id="cb58-285">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-286"></span>
<span id="cb58-287">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-288"></span>
<span id="cb58-289">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-290">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb58-291">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-292"></span>
<span id="cb58-293">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-294">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb58-295">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb58-296"></span>
<span id="cb58-297">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-298">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb58-299">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb58-300">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb58-301">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-302"></span>
<span id="cb58-303">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-304"></span>
<span id="cb58-305">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-306">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-307">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb58-308"></span>
<span id="cb58-309">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb58-310"></span>
<span id="cb58-311">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-312"></span>
<span id="cb58-313">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb58-314"></span>
<span id="cb58-315">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-316">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb58-317">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb58-318"></span>
<span id="cb58-319">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb58-320"></span>
<span id="cb58-321">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-322"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="benchmark-12" class="level3 unlisted">
<h3 class="unlisted anchored" data-anchor-id="benchmark-12">Benchmark 12</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-12-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-12-v1.svg" class="img-fluid figure-img" alt="Benchmark 12"></a></p>
<figcaption>Benchmark 12</figcaption>
</figure>
</div>
<p>Eh, there’s not much in this one. The negative match fast path is basically identical, and the normal prefix matches are a tiny bit slower.</p>
<hr>
</section>
<section id="isprefixofstringintable_13" class="level3">
<h3 class="anchored" data-anchor-id="isprefixofstringintable_13">IsPrefixOfStringInTable_13</h3>
<p>← IsPrefixOfStringInTable_12 | IsPrefixOfStringInTable_14 →</p>
<p><a href="https://twitter.com/rygorous/status/985737342156652544">Another tip from Fabian:</a> we can tweak the loop logic further. Instead of shifting the bitmap right each iteration (and keeping a separate shift count), we can just leverage the <code>blsr</code> intrinsic, which stands for <em>reset lowest set bit</em>, and is equivalent to doing <code>x &amp; (x -1)</code>. This allows us to tweak the loop organization as well, such that we can simply do <code>while (Bitmap) { }</code> instead of the <code>do { } while (--Count)</code> approach we’ve been using.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-17-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-17-1" aria-controls="tabset-17-1" aria-selected="true">Diff</a></li><li class="nav-item"><a class="nav-link" id="tabset-17-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-17-2" aria-controls="tabset-17-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-17-1" class="tab-pane active" aria-labelledby="tabset-17-1-tab">
<div class="sourceCode" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb59-1">% diff -u IsPrefixOfStringInTable_10.c IsPrefixOfStringInTable_13.c</span>
<span id="cb59-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_10.c        2018-04-26 18:22:23.926168500 -0400</span></span>
<span id="cb59-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_13.c        2018-04-26 19:16:34.926170200 -0400</span></span>
<span id="cb59-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -19,7 +19,7 @@</span></span>
<span id="cb59-5"></span>
<span id="cb59-6"> _Use_decl_annotations_</span>
<span id="cb59-7"> STRING_TABLE_INDEX</span>
<span id="cb59-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_10(</span></span>
<span id="cb59-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_13(</span></span>
<span id="cb59-10">     PSTRING_TABLE StringTable,</span>
<span id="cb59-11">     PSTRING String,</span>
<span id="cb59-12">     PSTRING_MATCH Match</span>
<span id="cb59-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -32,8 +32,10 @@</span></span>
<span id="cb59-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb59-15">     or is equal to" the search string.</span>
<span id="cb59-16"></span>
<span id="cb59-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This version is based off version 8, but rewrites the inner loop that</span></span>
<span id="cb59-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    checks for comparisons.</span></span>
<span id="cb59-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This version is based off version 10, but does away with the bitmap</span></span>
<span id="cb59-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    shifting logic and `do { } while (--Count)` loop, instead simply using</span></span>
<span id="cb59-21"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    blsr in conjunction with `while (Bitmap) { }`.  Credit goes to Fabian</span></span>
<span id="cb59-22"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Giesen (@rygorous) for pointing this approach out.</span></span>
<span id="cb59-23"></span>
<span id="cb59-24"> Arguments:</span>
<span id="cb59-25"></span>
<span id="cb59-26"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -54,12 +56,9 @@</span></span>
<span id="cb59-27"> {</span>
<span id="cb59-28">     ULONG Bitmap;</span>
<span id="cb59-29">     ULONG Mask;</span>
<span id="cb59-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    ULONG Count;</span></span>
<span id="cb59-31">     ULONG Length;</span>
<span id="cb59-32">     ULONG Index;</span>
<span id="cb59-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    ULONG Shift = 0;</span></span>
<span id="cb59-34">     ULONG CharactersMatched;</span>
<span id="cb59-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    ULONG NumberOfTrailingZeros;</span></span>
<span id="cb59-36">     ULONG SearchLength;</span>
<span id="cb59-37">     PSTRING TargetString;</span>
<span id="cb59-38">     STRING_SLOT Slot;</span>
<span id="cb59-39"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -206,31 +205,26 @@</span></span>
<span id="cb59-40"></span>
<span id="cb59-41">     SearchLength = min(String-&gt;Length, 16);</span>
<span id="cb59-42"></span>
<span id="cb59-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb59-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb59-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // thus, need to compare.</span></span>
<span id="cb59-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb59-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb59-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Count = __popcnt(Bitmap);</span></span>
<span id="cb59-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb59-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    do {</span></span>
<span id="cb59-51"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    while (Bitmap) {</span></span>
<span id="cb59-52"></span>
<span id="cb59-53">         //</span>
<span id="cb59-54">         // Extract the next index by counting the number of trailing zeros left</span>
<span id="cb59-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb59-56"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // in the bitmap.</span></span>
<span id="cb59-57">         //</span>
<span id="cb59-58"></span>
<span id="cb59-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        NumberOfTrailingZeros = _tzcnt_u32(Bitmap);</span></span>
<span id="cb59-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        Index = NumberOfTrailingZeros + Shift;</span></span>
<span id="cb59-61"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        Index = _tzcnt_u32(Bitmap);</span></span>
<span id="cb59-62"></span>
<span id="cb59-63">         //</span>
<span id="cb59-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb59-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb59-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // the shift count accordingly.</span></span>
<span id="cb59-67"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // Clear the bitmap's lowest set bit, such that it's ready for the next</span></span>
<span id="cb59-68"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // loop's tzcnt if no match is found in this iteration.  Equivalent to</span></span>
<span id="cb59-69"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb59-70"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //      Bitmap &amp;= Bitmap - 1;</span></span>
<span id="cb59-71"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb59-72"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // (Which the optimizer will convert into a blsr instruction anyway in</span></span>
<span id="cb59-73"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //  non-debug builds.  But it's nice to be explicit.)</span></span>
<span id="cb59-74">         //</span>
<span id="cb59-75"></span>
<span id="cb59-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        Bitmap &gt;&gt;= (NumberOfTrailingZeros + 1);</span></span>
<span id="cb59-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        Shift = Index + 1;</span></span>
<span id="cb59-78"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        Bitmap = _blsr_u32(Bitmap);</span></span>
<span id="cb59-79"></span>
<span id="cb59-80">         //</span>
<span id="cb59-81">         // Load the slot and its length.</span>
<span id="cb59-82"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -313,7 +307,7 @@</span></span>
<span id="cb59-83"></span>
<span id="cb59-84">         return (STRING_TABLE_INDEX)Index;</span>
<span id="cb59-85"></span>
<span id="cb59-86"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    } while (--Count);</span></span>
<span id="cb59-87"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    }</span></span>
<span id="cb59-88"></span>
<span id="cb59-89">     //</span>
<span id="cb59-90">     // If we get here, we didn't find a match.</span></code></pre></div>
</div>
<div id="tabset-17-2" class="tab-pane" aria-labelledby="tabset-17-2-tab">
<div class="sourceCode" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb60-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb60-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb60-3">IsPrefixOfStringInTable_13<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb60-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb60-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb60-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb60-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb60-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb60-9"></span>
<span id="cb60-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb60-11"></span>
<span id="cb60-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb60-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb60-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb60-15"></span>
<span id="cb60-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This version is based off version 10, but does away with the bitmap</span></span>
<span id="cb60-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    shifting logic and `do { } while (--Count)` loop, instead simply using</span></span>
<span id="cb60-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    blsr in conjunction with `while (Bitmap) { }`.  Credit goes to Fabian</span></span>
<span id="cb60-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Giesen (@rygorous) for pointing this approach out.</span></span>
<span id="cb60-20"></span>
<span id="cb60-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb60-22"></span>
<span id="cb60-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb60-24"></span>
<span id="cb60-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb60-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb60-27"></span>
<span id="cb60-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb60-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb60-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb60-31"></span>
<span id="cb60-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb60-33"></span>
<span id="cb60-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb60-35"></span>
<span id="cb60-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb60-37"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-45">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-49">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> AllOnesXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_set1_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-57"></span>
<span id="cb60-58">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb60-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb60-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb60-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb60-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb60-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb60-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb60-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb60-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb60-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb60-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb60-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb60-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb60-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb60-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb60-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb60-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb60-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb60-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb60-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb60-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb60-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb60-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb60-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb60-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-91"></span>
<span id="cb60-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb60-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-95"></span>
<span id="cb60-96">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-97"></span>
<span id="cb60-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb60-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb60-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-102"></span>
<span id="cb60-103">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb60-104">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-105"></span>
<span id="cb60-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb60-108">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-109"></span>
<span id="cb60-110">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-111"></span>
<span id="cb60-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb60-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-115"></span>
<span id="cb60-116">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-117"></span>
<span id="cb60-118">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb60-120">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-121"></span>
<span id="cb60-122">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-123">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-124"></span>
<span id="cb60-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb60-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb60-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb60-129">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb60-130">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb60-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-132"></span>
<span id="cb60-133">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-134"></span>
<span id="cb60-135">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb60-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb60-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb60-140">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb60-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb60-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb60-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-144"></span>
<span id="cb60-145">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-146"></span>
<span id="cb60-147">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb60-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb60-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb60-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-152"></span>
<span id="cb60-153">    IncludeSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_xor_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> AllOnesXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-154"></span>
<span id="cb60-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb60-157">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb60-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the exact same unique character as the string and a length less than or</span></span>
<span id="cb60-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// equal to the length of the search string).</span></span>
<span id="cb60-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-161"></span>
<span id="cb60-162">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_and_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb60-163">                                 IncludeSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-164"></span>
<span id="cb60-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-166">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb60-167">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-168"></span>
<span id="cb60-169">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-170"></span>
<span id="cb60-171">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-172"></span>
<span id="cb60-173">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-174">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No bits were set, so there are no strings in this table starting</span></span>
<span id="cb60-175">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the same character and of a lesser or equal length as the</span></span>
<span id="cb60-176">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string.</span></span>
<span id="cb60-177">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-178"></span>
<span id="cb60-179">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-180">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-181"></span>
<span id="cb60-182">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-183">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb60-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb60-185">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-186"></span>
<span id="cb60-187">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-188"></span>
<span id="cb60-189">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-190"></span>
<span id="cb60-191">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-192">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb60-193">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap.</span></span>
<span id="cb60-194">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-195"></span>
<span id="cb60-196">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-197"></span>
<span id="cb60-198">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-199">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clear the bitmap's lowest set bit, such that it's ready for the next</span></span>
<span id="cb60-200">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// loop's tzcnt if no match is found in this iteration.  Equivalent to</span></span>
<span id="cb60-201">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-202">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      Bitmap &amp;= Bitmap - 1;</span></span>
<span id="cb60-203">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-204">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (Which the optimizer will convert into a blsr instruction anyway in</span></span>
<span id="cb60-205">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  non-debug builds.  But it's nice to be explicit.)</span></span>
<span id="cb60-206">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-207"></span>
<span id="cb60-208">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_blsr_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-209"></span>
<span id="cb60-210">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb60-212">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-213"></span>
<span id="cb60-214">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-215">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb60-216"></span>
<span id="cb60-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb60-219">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-220"></span>
<span id="cb60-221">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-222"></span>
<span id="cb60-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb60-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb60-226">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb60-227">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb60-228">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb60-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb60-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb60-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb60-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb60-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-234"></span>
<span id="cb60-235">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-236"></span>
<span id="cb60-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb60-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-240"></span>
<span id="cb60-241">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-242"></span>
<span id="cb60-243">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-244"></span>
<span id="cb60-245">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-246">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The slot length is longer than the number of characters matched</span></span>
<span id="cb60-247">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// from the search string; this isn't a prefix match.  Continue.</span></span>
<span id="cb60-248">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-249"></span>
<span id="cb60-250">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-251">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-252"></span>
<span id="cb60-253">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-254"></span>
<span id="cb60-255">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-256">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb60-257">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb60-258">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb60-259">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-260"></span>
<span id="cb60-261">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb60-262"></span>
<span id="cb60-263">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb60-264"></span>
<span id="cb60-265">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-266"></span>
<span id="cb60-267">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-268">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb60-269">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-270"></span>
<span id="cb60-271">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-272">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-273">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-274"></span>
<span id="cb60-275">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-276">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb60-277">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb60-278">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb60-279">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-280"></span>
<span id="cb60-281">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-282"></span>
<span id="cb60-283">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-284">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-285">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb60-286"></span>
<span id="cb60-287">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-288"></span>
<span id="cb60-289">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-290"></span>
<span id="cb60-291">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-292"></span>
<span id="cb60-293">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-294">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb60-295">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb60-296"></span>
<span id="cb60-297">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb60-298"></span>
<span id="cb60-299">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-300"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
<p>I like this change. It was a great suggestion from Fabian. Let’s see how it performs. Hopefully it’ll do slightly better at prefix matching, given that we’re effectively reducing the number of instructions required as part of the string comparison logic.</p>
</section>
<section id="benchmark-13" class="level3 unlisted">
<h3 class="unlisted anchored" data-anchor-id="benchmark-13">Benchmark 13</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-13-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-13-v1.svg" class="img-fluid figure-img" alt="Benchmark 13"></a></p>
<figcaption>Benchmark 13</figcaption>
</figure>
</div>
<p>Ah! A measurable, repeatable speed-up! Excellent!</p>
<hr>
</section>
<section id="isprefixofstringintable_14" class="level3">
<h3 class="anchored" data-anchor-id="isprefixofstringintable_14">IsPrefixOfStringInTable_14</h3>
<p>← IsPrefixOfStringInTable_13 | IsPrefixOfStringInTable_15 →</p>
<p>Let’s give the C version the same chance as the assembly version with regards to negative matching; we’ll take version 13 above and factor in the <code>vptest</code> logic from version 12.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-18-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-18-1" aria-controls="tabset-18-1" aria-selected="true">Diff (14 vs 13)</a></li><li class="nav-item"><a class="nav-link" id="tabset-18-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-18-2" aria-controls="tabset-18-2" aria-selected="false">Diff (14 vs 12)</a></li><li class="nav-item"><a class="nav-link" id="tabset-18-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-18-3" aria-controls="tabset-18-3" aria-selected="false">Full (14)</a></li></ul>
<div class="tab-content">
<div id="tabset-18-1" class="tab-pane active" aria-labelledby="tabset-18-1-tab">
<div class="sourceCode" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb61-1">% diff -u IsPrefixOfStringInTable_13.c IsPrefixOfStringInTable_14.c</span>
<span id="cb61-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_13.c        2018-04-26 19:16:34.926170200 -0400</span></span>
<span id="cb61-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_14.c        2018-04-26 19:32:30.674199200 -0400</span></span>
<span id="cb61-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -19,7 +19,7 @@</span></span>
<span id="cb61-5"></span>
<span id="cb61-6"> _Use_decl_annotations_</span>
<span id="cb61-7"> STRING_TABLE_INDEX</span>
<span id="cb61-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_13(</span></span>
<span id="cb61-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_14(</span></span>
<span id="cb61-10">     PSTRING_TABLE StringTable,</span>
<span id="cb61-11">     PSTRING String,</span>
<span id="cb61-12">     PSTRING_MATCH Match</span>
<span id="cb61-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -32,10 +32,8 @@</span></span>
<span id="cb61-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb61-15">     or is equal to" the search string.</span>
<span id="cb61-16"></span>
<span id="cb61-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This version is based off version 10, but does away with the bitmap</span></span>
<span id="cb61-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    shifting logic and `do { } while (--Count)` loop, instead simply using</span></span>
<span id="cb61-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    blsr in conjunction with `while (Bitmap) { }`.  Credit goes to Fabian</span></span>
<span id="cb61-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Giesen (@rygorous) for pointing this approach out.</span></span>
<span id="cb61-21"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This version combines the altered bitmap logic from version 13 with the</span></span>
<span id="cb61-22"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    fast-path _mm_testc_si128() exit from version 12.</span></span>
<span id="cb61-23"></span>
<span id="cb61-24"> Arguments:</span>
<span id="cb61-25"></span>
<span id="cb61-26"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -70,9 +68,7 @@</span></span>
<span id="cb61-27">     XMMWORD TableUniqueChars;</span>
<span id="cb61-28">     XMMWORD IncludeSlotsByUniqueChar;</span>
<span id="cb61-29">     XMMWORD IgnoreSlotsByLength;</span>
<span id="cb61-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    XMMWORD IncludeSlotsByLength;</span></span>
<span id="cb61-31">     XMMWORD IncludeSlots;</span>
<span id="cb61-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    const XMMWORD AllOnesXmm = _mm_set1_epi8(0xff);</span></span>
<span id="cb61-33"></span>
<span id="cb61-34">     //</span>
<span id="cb61-35">     // Unconditionally do the following five operations before checking any of</span>
<span id="cb61-36"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -164,22 +160,43 @@</span></span>
<span id="cb61-37">     IgnoreSlotsByLength = _mm_cmpgt_epi8(Lengths.SlotsXmm, LengthXmm);</span>
<span id="cb61-38"></span>
<span id="cb61-39">     //</span>
<span id="cb61-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Invert the result of the comparison; we want 0xff for slots to include</span></span>
<span id="cb61-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // and 0x0 for slots to ignore (it's currently the other way around).  We</span></span>
<span id="cb61-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // can achieve this by XOR'ing the result against our all-ones XMM register.</span></span>
<span id="cb61-43"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // We can do a fast-path test for no match here via _mm_testc_si128(),</span></span>
<span id="cb61-44"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // which is essentially equivalent to the following logic, just with</span></span>
<span id="cb61-45"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // fewer instructions:</span></span>
<span id="cb61-46">     //</span>
<span id="cb61-47"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      IncludeSlots = _mm_andnot_si128(IgnoreSlotsByLength,</span></span>
<span id="cb61-48"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //                                      IncludeSlotsByUniqueChar);</span></span>
<span id="cb61-49"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb61-50"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      if (!IncludeSlots) {</span></span>
<span id="cb61-51"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //          return NO_MATCH_FOUND;</span></span>
<span id="cb61-52"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      }</span></span>
<span id="cb61-53"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb61-54"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb61-55"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb61-56"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    if (_mm_testc_si128(IgnoreSlotsByLength, IncludeSlotsByUniqueChar)) {</span></span>
<span id="cb61-57"></span>
<span id="cb61-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    IncludeSlotsByLength = _mm_xor_si128(IgnoreSlotsByLength, AllOnesXmm);</span></span>
<span id="cb61-59"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb61-60"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // No remaining slots were left after we intersected the slots with</span></span>
<span id="cb61-61"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // matching unique characters with the inverted slots to ignore due</span></span>
<span id="cb61-62"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // to length.  Thus, no prefix match was found.</span></span>
<span id="cb61-63"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb61-64"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb61-65"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        return NO_MATCH_FOUND;</span></span>
<span id="cb61-66"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    }</span></span>
<span id="cb61-67"></span>
<span id="cb61-68">     //</span>
<span id="cb61-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // We're now ready to intersect the two XMM registers to determine which</span></span>
<span id="cb61-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // slots should still be included in the comparison (i.e. which slots have</span></span>
<span id="cb61-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // the exact same unique character as the string and a length less than or</span></span>
<span id="cb61-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // equal to the length of the search string).</span></span>
<span id="cb61-73"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // Continue with the remaining logic, including actually generating the</span></span>
<span id="cb61-74"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // IncludeSlots, which we need for bitmap generation as part of our</span></span>
<span id="cb61-75"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // comparison loop.</span></span>
<span id="cb61-76"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //</span></span>
<span id="cb61-77"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // As the IgnoreSlotsByLength XMM register is the inverse of what we want</span></span>
<span id="cb61-78"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // at the moment (we want 0xff for slots to include, and 0x00 for slots</span></span>
<span id="cb61-79"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // to ignore; it's currently the other way around), we use _mm_andnot_si128</span></span>
<span id="cb61-80"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // instead of just _mm_and_si128.</span></span>
<span id="cb61-81">     //</span>
<span id="cb61-82"></span>
<span id="cb61-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    IncludeSlots = _mm_and_si128(IncludeSlotsByUniqueChar,</span></span>
<span id="cb61-84"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                                 IncludeSlotsByLength);</span></span>
<span id="cb61-85"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    IncludeSlots = _mm_andnot_si128(IgnoreSlotsByLength,</span></span>
<span id="cb61-86"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+                                    IncludeSlotsByUniqueChar);</span></span>
<span id="cb61-87"></span>
<span id="cb61-88">     //</span>
<span id="cb61-89">     // Generate a mask.</span>
<span id="cb61-90"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -187,17 +204,6 @@</span></span>
<span id="cb61-91"></span>
<span id="cb61-92">     Bitmap = _mm_movemask_epi8(IncludeSlots);</span>
<span id="cb61-93"></span>
<span id="cb61-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    if (!Bitmap) {</span></span>
<span id="cb61-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb61-96"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        //</span></span>
<span id="cb61-97"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // No bits were set, so there are no strings in this table starting</span></span>
<span id="cb61-98"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // with the same character and of a lesser or equal length as the</span></span>
<span id="cb61-99"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // search string.</span></span>
<span id="cb61-100"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        //</span></span>
<span id="cb61-101"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb61-102"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        return NO_MATCH_FOUND;</span></span>
<span id="cb61-103"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    }</span></span>
<span id="cb61-104"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb61-105">     //</span>
<span id="cb61-106">     // Calculate the "search length" of the incoming string, which ensures we</span>
<span id="cb61-107">     // only compare up to the first 16 characters.</span></code></pre></div>
</div>
<div id="tabset-18-2" class="tab-pane" aria-labelledby="tabset-18-2-tab">
<div class="sourceCode" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb62-1">% diff -u IsPrefixOfStringInTable_12.c IsPrefixOfStringInTable_14.c</span>
<span id="cb62-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_12.c        2018-04-26 17:47:54.970331600 -0400</span></span>
<span id="cb62-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_14.c        2018-04-26 19:32:30.674199200 -0400</span></span>
<span id="cb62-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -19,7 +19,7 @@</span></span>
<span id="cb62-5"></span>
<span id="cb62-6"> _Use_decl_annotations_</span>
<span id="cb62-7"> STRING_TABLE_INDEX</span>
<span id="cb62-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-IsPrefixOfStringInTable_12(</span></span>
<span id="cb62-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+IsPrefixOfStringInTable_14(</span></span>
<span id="cb62-10">     PSTRING_TABLE StringTable,</span>
<span id="cb62-11">     PSTRING String,</span>
<span id="cb62-12">     PSTRING_MATCH Match</span>
<span id="cb62-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -32,15 +32,8 @@</span></span>
<span id="cb62-14">     search string.  That is, whether any string in the table "starts with</span>
<span id="cb62-15">     or is equal to" the search string.</span>
<span id="cb62-16"></span>
<span id="cb62-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    This version is based off version 10, but with factors in the improvements</span></span>
<span id="cb62-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    made to version 4 of the x64 assembly version, thanks to suggestions from</span></span>
<span id="cb62-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    both Wojciech Mula (@pshufb) and Fabian Giesen (@rygorous).</span></span>
<span id="cb62-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb62-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Like version 11, we omit the vpxor to invert the lengths, but instead of</span></span>
<span id="cb62-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    an initial vpandn, we leverage the fact that vptest sets the carry flag</span></span>
<span id="cb62-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    if all 0s result from the expression: "param1 and (not param2)".  This</span></span>
<span id="cb62-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    allows us to do a fast-path early exit (like x64 version 2 does) if no</span></span>
<span id="cb62-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    match is found.</span></span>
<span id="cb62-26"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    This version combines the altered bitmap logic from version 13 with the</span></span>
<span id="cb62-27"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    fast-path _mm_testc_si128() exit from version 12.</span></span>
<span id="cb62-28"></span>
<span id="cb62-29"> Arguments:</span>
<span id="cb62-30"></span>
<span id="cb62-31"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -61,12 +54,9 @@</span></span>
<span id="cb62-32"> {</span>
<span id="cb62-33">     ULONG Bitmap;</span>
<span id="cb62-34">     ULONG Mask;</span>
<span id="cb62-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    ULONG Count;</span></span>
<span id="cb62-36">     ULONG Length;</span>
<span id="cb62-37">     ULONG Index;</span>
<span id="cb62-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    ULONG Shift = 0;</span></span>
<span id="cb62-39">     ULONG CharactersMatched;</span>
<span id="cb62-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    ULONG NumberOfTrailingZeros;</span></span>
<span id="cb62-41">     ULONG SearchLength;</span>
<span id="cb62-42">     PSTRING TargetString;</span>
<span id="cb62-43">     STRING_SLOT Slot;</span>
<span id="cb62-44"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -118,7 +108,7 @@</span></span>
<span id="cb62-45">     // Load the first 16-bytes of the search string into an XMM register.</span>
<span id="cb62-46">     //</span>
<span id="cb62-47"></span>
<span id="cb62-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Search.CharsXmm = _mm_load_si128((PXMMWORD)String-&gt;Buffer);</span></span>
<span id="cb62-49"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    Search.CharsXmm = _mm_loadu_si128((PXMMWORD)String-&gt;Buffer);</span></span>
<span id="cb62-50"></span>
<span id="cb62-51">     //</span>
<span id="cb62-52">     // Broadcast the search string's unique characters according to the string</span>
<span id="cb62-53"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -164,7 +154,7 @@</span></span>
<span id="cb62-54">     // N.B. Because we default the length of empty slots to 0x7f, they will</span>
<span id="cb62-55">     //      handily be included in the ignored set (i.e. their words will also</span>
<span id="cb62-56">     //      be set to 0xff), which means they'll also get filtered out when</span>
<span id="cb62-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //      we do the "and not" intersection with the include slots next.</span></span>
<span id="cb62-58"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    //      we invert the mask shortly after.</span></span>
<span id="cb62-59">     //</span>
<span id="cb62-60"></span>
<span id="cb62-61">     IgnoreSlotsByLength = _mm_cmpgt_epi8(Lengths.SlotsXmm, LengthXmm);</span>
<span id="cb62-62"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -209,8 +199,7 @@</span></span>
<span id="cb62-63">                                     IncludeSlotsByUniqueChar);</span>
<span id="cb62-64"></span>
<span id="cb62-65">     //</span>
<span id="cb62-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // Generate a mask, count the number of bits, and initialize the search</span></span>
<span id="cb62-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // length.</span></span>
<span id="cb62-68"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    // Generate a mask.</span></span>
<span id="cb62-69">     //</span>
<span id="cb62-70"></span>
<span id="cb62-71">     Bitmap = _mm_movemask_epi8(IncludeSlots);</span>
<span id="cb62-72"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -222,31 +211,26 @@</span></span>
<span id="cb62-73"></span>
<span id="cb62-74">     SearchLength = min(String-&gt;Length, 16);</span>
<span id="cb62-75"></span>
<span id="cb62-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb62-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // A popcount against the mask will tell us how many slots we matched, and</span></span>
<span id="cb62-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    // thus, need to compare.</span></span>
<span id="cb62-79"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    //</span></span>
<span id="cb62-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb62-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Count = __popcnt(Bitmap);</span></span>
<span id="cb62-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb62-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    do {</span></span>
<span id="cb62-84"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    while (Bitmap) {</span></span>
<span id="cb62-85"></span>
<span id="cb62-86">         //</span>
<span id="cb62-87">         // Extract the next index by counting the number of trailing zeros left</span>
<span id="cb62-88"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // in the bitmap and adding the amount we've already shifted by.</span></span>
<span id="cb62-89"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // in the bitmap.</span></span>
<span id="cb62-90">         //</span>
<span id="cb62-91"></span>
<span id="cb62-92"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        NumberOfTrailingZeros = _tzcnt_u32(Bitmap);</span></span>
<span id="cb62-93"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        Index = NumberOfTrailingZeros + Shift;</span></span>
<span id="cb62-94"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        Index = _tzcnt_u32(Bitmap);</span></span>
<span id="cb62-95"></span>
<span id="cb62-96">         //</span>
<span id="cb62-97"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // Shift the bitmap right, past the zeros and the 1 that was just found,</span></span>
<span id="cb62-98"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // such that it's positioned correctly for the next loop's tzcnt. Update</span></span>
<span id="cb62-99"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        // the shift count accordingly.</span></span>
<span id="cb62-100"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // Clear the bitmap's lowest set bit, such that it's ready for the next</span></span>
<span id="cb62-101"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // loop's tzcnt if no match is found in this iteration.  Equivalent to</span></span>
<span id="cb62-102"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb62-103"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //      Bitmap &amp;= Bitmap - 1;</span></span>
<span id="cb62-104"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //</span></span>
<span id="cb62-105"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        // (Which the optimizer will convert into a blsr instruction anyway in</span></span>
<span id="cb62-106"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        //  non-debug builds.  But it's nice to be explicit.)</span></span>
<span id="cb62-107">         //</span>
<span id="cb62-108"></span>
<span id="cb62-109"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        Bitmap &gt;&gt;= (NumberOfTrailingZeros + 1);</span></span>
<span id="cb62-110"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        Shift = Index + 1;</span></span>
<span id="cb62-111"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        Bitmap = _blsr_u32(Bitmap);</span></span>
<span id="cb62-112"></span>
<span id="cb62-113">         //</span>
<span id="cb62-114">         // Load the slot and its length.</span>
<span id="cb62-115"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -329,7 +313,7 @@</span></span>
<span id="cb62-116"></span>
<span id="cb62-117">         return (STRING_TABLE_INDEX)Index;</span>
<span id="cb62-118"></span>
<span id="cb62-119"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    } while (--Count);</span></span>
<span id="cb62-120"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+    }</span></span>
<span id="cb62-121"></span>
<span id="cb62-122">     //</span>
<span id="cb62-123">     // If we get here, we didn't find a match.</span></code></pre></div>
</div>
<div id="tabset-18-3" class="tab-pane" aria-labelledby="tabset-18-3-tab">
<div class="sourceCode" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb63-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Use_decl_annotations_</span></span>
<span id="cb63-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span></span>
<span id="cb63-3">IsPrefixOfStringInTable_14<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb63-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb63-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb63-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_MATCH</span> Match</span>
<span id="cb63-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb63-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb63-9"></span>
<span id="cb63-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb63-11"></span>
<span id="cb63-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb63-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb63-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    or is equal to" the search string.</span></span>
<span id="cb63-15"></span>
<span id="cb63-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This version combines the altered bitmap logic from version 13 with the</span></span>
<span id="cb63-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    fast-path _mm_testc_si128() exit from version 12.</span></span>
<span id="cb63-18"></span>
<span id="cb63-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb63-20"></span>
<span id="cb63-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb63-22"></span>
<span id="cb63-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb63-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        search for.</span></span>
<span id="cb63-25"></span>
<span id="cb63-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb63-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb63-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb63-29"></span>
<span id="cb63-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb63-31"></span>
<span id="cb63-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb63-33"></span>
<span id="cb63-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb63-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb63-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-37">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-43">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-44">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-45">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_SLOT</span> Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">SLOT_LENGTHS</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-47">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-48">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-49">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-52">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span> IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-53"></span>
<span id="cb63-54">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconditionally do the following five operations before checking any of</span></span>
<span id="cb63-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the results and determining how the search should proceed:</span></span>
<span id="cb63-57">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-58">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  1. Load the search string into an Xmm register, and broadcast the</span></span>
<span id="cb63-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character indicated by the unique character index (relative to</span></span>
<span id="cb63-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     other strings in the table) across a second Xmm register.</span></span>
<span id="cb63-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  2. Load the string table's unique character array into an Xmm register.</span></span>
<span id="cb63-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Broadcast the search string's length into an XMM register.</span></span>
<span id="cb63-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  3. Load the string table's slot lengths array into an XMM register.</span></span>
<span id="cb63-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  4. Compare the unique character from step 1 to the string table's unique</span></span>
<span id="cb63-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     character array set up in step 2.  The result of this comparison</span></span>
<span id="cb63-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     will produce an XMM register with each byte set to either 0xff if</span></span>
<span id="cb63-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     the unique character was found, or 0x0 if it wasn't.</span></span>
<span id="cb63-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  5. Compare the search string's length from step 3 to the string table's</span></span>
<span id="cb63-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slot length array set up in step 3.  This allows us to identify the</span></span>
<span id="cb63-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots that have strings that are of lesser or equal length to our</span></span>
<span id="cb63-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     search string.  As we're doing a prefix search, we can ignore any</span></span>
<span id="cb63-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//     slots longer than our incoming search string.</span></span>
<span id="cb63-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We do all five of these operations up front regardless of whether or not</span></span>
<span id="cb63-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// they're strictly necessary.  That is, if the unique character isn't in</span></span>
<span id="cb63-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the unique character array, we don't need to load array lengths -- and</span></span>
<span id="cb63-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vice versa.  However, we assume the benefits afforded by giving the CPU</span></span>
<span id="cb63-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a bunch of independent things to do unconditionally up-front outweigh</span></span>
<span id="cb63-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the cost of putting in branches and conditionally loading things if</span></span>
<span id="cb63-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// necessary.</span></span>
<span id="cb63-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-87"></span>
<span id="cb63-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the first 16-bytes of the search string into an XMM register.</span></span>
<span id="cb63-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-91"></span>
<span id="cb63-92">    Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_loadu_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-93"></span>
<span id="cb63-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's unique characters according to the string</span></span>
<span id="cb63-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table's unique character index.</span></span>
<span id="cb63-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-98"></span>
<span id="cb63-99">    UniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_shuffle_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb63-100">                                  StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>IndexXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-101"></span>
<span id="cb63-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot length array into an XMM register.</span></span>
<span id="cb63-104">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-105"></span>
<span id="cb63-106">    Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-107"></span>
<span id="cb63-108">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the string table's unique character array into an XMM register.</span></span>
<span id="cb63-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-111"></span>
<span id="cb63-112">    TableUniqueChars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-113"></span>
<span id="cb63-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-115">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Broadcast the search string's length into an XMM register.</span></span>
<span id="cb63-116">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-117"></span>
<span id="cb63-118">    LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>m128i_u8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-119">    LengthXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_broadcastb_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-120"></span>
<span id="cb63-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-122">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the search string's unique character with all of the unique</span></span>
<span id="cb63-123">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// characters of strings in the table, saving the results into an XMM</span></span>
<span id="cb63-124">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// register.  This comparison will indicate which slots we can ignore</span></span>
<span id="cb63-125">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// because the characters at a given index don't match.  Matched slots</span></span>
<span id="cb63-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// will be 0xff, unmatched slots will be 0x0.</span></span>
<span id="cb63-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-128"></span>
<span id="cb63-129">    IncludeSlotsByUniqueChar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TableUniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-130"></span>
<span id="cb63-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find all slots that are longer than the incoming string length, as these</span></span>
<span id="cb63-133">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// are the ones we're going to exclude from any prefix match.</span></span>
<span id="cb63-134">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-135">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. Because we default the length of empty slots to 0x7f, they will</span></span>
<span id="cb63-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      handily be included in the ignored set (i.e. their words will also</span></span>
<span id="cb63-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      be set to 0xff), which means they'll also get filtered out when</span></span>
<span id="cb63-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      we invert the mask shortly after.</span></span>
<span id="cb63-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-140"></span>
<span id="cb63-141">    IgnoreSlotsByLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpgt_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SlotsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LengthXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-142"></span>
<span id="cb63-143">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-144">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We can do a fast-path test for no match here via _mm_testc_si128(),</span></span>
<span id="cb63-145">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// which is essentially equivalent to the following logic, just with</span></span>
<span id="cb63-146">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// fewer instructions:</span></span>
<span id="cb63-147">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-148">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      IncludeSlots = _mm_andnot_si128(IgnoreSlotsByLength,</span></span>
<span id="cb63-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//                                      IncludeSlotsByUniqueChar);</span></span>
<span id="cb63-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-151">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      if (!IncludeSlots) {</span></span>
<span id="cb63-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//          return NO_MATCH_FOUND;</span></span>
<span id="cb63-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      }</span></span>
<span id="cb63-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-155">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-156"></span>
<span id="cb63-157">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_testc_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb63-158"></span>
<span id="cb63-159">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-160">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No remaining slots were left after we intersected the slots with</span></span>
<span id="cb63-161">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// matching unique characters with the inverted slots to ignore due</span></span>
<span id="cb63-162">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to length.  Thus, no prefix match was found.</span></span>
<span id="cb63-163">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-164"></span>
<span id="cb63-165">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-166">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb63-167"></span>
<span id="cb63-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-169">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Continue with the remaining logic, including actually generating the</span></span>
<span id="cb63-170">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// IncludeSlots, which we need for bitmap generation as part of our</span></span>
<span id="cb63-171">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// comparison loop.</span></span>
<span id="cb63-172">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-173">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// As the IgnoreSlotsByLength XMM register is the inverse of what we want</span></span>
<span id="cb63-174">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// at the moment (we want 0xff for slots to include, and 0x00 for slots</span></span>
<span id="cb63-175">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to ignore; it's currently the other way around), we use _mm_andnot_si128</span></span>
<span id="cb63-176">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// instead of just _mm_and_si128.</span></span>
<span id="cb63-177">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-178"></span>
<span id="cb63-179">    IncludeSlots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_andnot_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IgnoreSlotsByLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb63-180">                                    IncludeSlotsByUniqueChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-181"></span>
<span id="cb63-182">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-183">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a mask.</span></span>
<span id="cb63-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-185"></span>
<span id="cb63-186">    Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IncludeSlots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-187"></span>
<span id="cb63-188">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-189">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the "search length" of the incoming string, which ensures we</span></span>
<span id="cb63-190">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// only compare up to the first 16 characters.</span></span>
<span id="cb63-191">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-192"></span>
<span id="cb63-193">    SearchLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-194"></span>
<span id="cb63-195">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb63-196"></span>
<span id="cb63-197">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-198">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the next index by counting the number of trailing zeros left</span></span>
<span id="cb63-199">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in the bitmap.</span></span>
<span id="cb63-200">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-201"></span>
<span id="cb63-202">        Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_tzcnt_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-203"></span>
<span id="cb63-204">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-205">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clear the bitmap's lowest set bit, such that it's ready for the next</span></span>
<span id="cb63-206">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// loop's tzcnt if no match is found in this iteration.  Equivalent to</span></span>
<span id="cb63-207">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-208">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      Bitmap &amp;= Bitmap - 1;</span></span>
<span id="cb63-209">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-210">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (Which the optimizer will convert into a blsr instruction anyway in</span></span>
<span id="cb63-211">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//  non-debug builds.  But it's nice to be explicit.)</span></span>
<span id="cb63-212">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-213"></span>
<span id="cb63-214">        Bitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_blsr_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Bitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-215"></span>
<span id="cb63-216">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-217">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the slot and its length.</span></span>
<span id="cb63-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-219"></span>
<span id="cb63-220">        Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_load_si128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-221">        Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb63-222"></span>
<span id="cb63-223">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compare the slot to the search string.</span></span>
<span id="cb63-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-226"></span>
<span id="cb63-227">        Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_cmpeq_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Search<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-228"></span>
<span id="cb63-229">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-230">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mask of the comparison, then filter out high bits from the</span></span>
<span id="cb63-231">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// search string's length (which is capped at 16).  (This shouldn't be</span></span>
<span id="cb63-232">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// technically necessary as the string array buffers should have been</span></span>
<span id="cb63-233">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// calloc'd and zeroed, but optimizing compilers can often ignore the</span></span>
<span id="cb63-234">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// zeroing request -- which can produce some bizarre results where the</span></span>
<span id="cb63-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// debug build is correct (because the buffers were zeroed) but the</span></span>
<span id="cb63-236">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// release build fails because the zeroing got ignored and there are</span></span>
<span id="cb63-237">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// junk bytes past the NULL terminator, which get picked up in our</span></span>
<span id="cb63-238">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 128-bit loads.)</span></span>
<span id="cb63-239">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-240"></span>
<span id="cb63-241">        Mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_bzhi_u32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_mm_movemask_epi8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Compare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>CharsXmm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> SearchLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-242"></span>
<span id="cb63-243">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-244">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count how many characters matched.</span></span>
<span id="cb63-245">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-246"></span>
<span id="cb63-247">        CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__popcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-248"></span>
<span id="cb63-249">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb63-250"></span>
<span id="cb63-251">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-252">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The slot length is longer than the number of characters matched</span></span>
<span id="cb63-253">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// from the search string; this isn't a prefix match.  Continue.</span></span>
<span id="cb63-254">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-255"></span>
<span id="cb63-256">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-257">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb63-258"></span>
<span id="cb63-259">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb63-260"></span>
<span id="cb63-261">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-262">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The first 16 characters in the string matched against this</span></span>
<span id="cb63-263">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slot, and the slot is oversized (longer than 16 characters),</span></span>
<span id="cb63-264">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// so do a direct comparison between the remaining buffers.</span></span>
<span id="cb63-265">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-266"></span>
<span id="cb63-267">            TargetString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb63-268"></span>
<span id="cb63-269">            CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TargetString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb63-270"></span>
<span id="cb63-271">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CharactersMatched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb63-272"></span>
<span id="cb63-273">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-274">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The prefix match failed, continue our search.</span></span>
<span id="cb63-275">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-276"></span>
<span id="cb63-277">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-278">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb63-279">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb63-280"></span>
<span id="cb63-281">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-282">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This slot is a prefix match.  Fill out the Match structure if the</span></span>
<span id="cb63-283">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// caller provided a non-NULL pointer, then return the index of the</span></span>
<span id="cb63-284">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// match.</span></span>
<span id="cb63-285">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-286"></span>
<span id="cb63-287">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb63-288"></span>
<span id="cb63-289">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-290">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfMatchedCharacters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>CharactersMatched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-291">            Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>String <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb63-292"></span>
<span id="cb63-293">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb63-294"></span>
<span id="cb63-295">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_TABLE_INDEX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-296"></span>
<span id="cb63-297">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb63-298"></span>
<span id="cb63-299">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-300">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If we get here, we didn't find a match.</span></span>
<span id="cb63-301">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb63-302"></span>
<span id="cb63-303">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//IACA_VC_</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb63-304"></span>
<span id="cb63-305">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-306"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
<p>We’re really clutching at straws here obviously with regards to trying to eke out more performance. The <code>_mm_testc_si128()</code> alteration was a tiny bit slower for version 12 across the board. However, the <code>vptest</code> (which is the underlying assembly instruction that maps to the <code>_mm_testc_si128()</code> intrinsic) version 4 of our assembly was definitely a little bit faster than the other versions. Let’s see how our final C version performs.</p>
</section>
<section id="benchmark-14" class="level3 unlisted">
<h3 class="unlisted anchored" data-anchor-id="benchmark-14">Benchmark 14</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-14-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-14-v1.svg" class="img-fluid figure-img" alt="Benchmark 14"></a></p>
<figcaption>Benchmark 14</figcaption>
</figure>
</div>
<p>Welp, at least it’s consistent! Like version 12, the <code>_mm_testc_si128()</code> change doesn’t really offer a compelling improvement for version 14. That makes version 13 officially our fastest C implementation for round 2.</p>
</section>
<section id="isprefixofstringintable_x64_5" class="level3">
<h3 class="anchored" data-anchor-id="isprefixofstringintable_x64_5">IsPrefixOfStringInTable_x64_5</h3>
<p>← IsPrefixOfStringInTable_x64_4 | IsPrefixOfStringInTable_x64_6 →</p>
<p>Before we conclude round 2, let’s see if we can eke any more performance out of the negative match fast path of our fastest assembly version so far: version 4. For this step, I’m going to leverage <a href="https://software.intel.com/en-us/articles/intel-architecture-code-analyzer">Intel Architecture Code Analyzer</a>, or IACA, for short.</p>
<p>This is a handy little static analysis tool that can provide useful information for fine-tuning performance-sensitive code. Let’s take a look at the output from IACA for our assembly version 4. To do this, I uncomment the two macros, <code>IACA_VC_START</code> and <code>IACA_VC_END</code>, which reside at the start and end of the negative match logic. These macros are defined in <a href="https://github.com/tpn/tracer/blob/v0.1.11/StringTable2/StringTable.inc#L20">StringTable.inc</a>, and look like this:</p>
<div class="sourceCode" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb64-1">IACA_VC_START macro Name</span>
<span id="cb64-2"></span>
<span id="cb64-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">gs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:[</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">06fh</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">06fh</span></span>
<span id="cb64-4"></span>
<span id="cb64-5">        endm</span>
<span id="cb64-6"></span>
<span id="cb64-7">IACA_VC_END macro Name</span>
<span id="cb64-8"></span>
<span id="cb64-9">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">gs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:[</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0deh</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0deh</span></span>
<span id="cb64-10"></span>
<span id="cb64-11">        endm</span></code></pre></div>
<p>The equivalent versions for C are defined in <a href="https://github.com/tpn/tracer/blob/v0.1.11/Rtl/Rtl.h#L427"><code>Rtl.h</code></a>, and look like this:</p>
<div class="sourceCode" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb65-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb65-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define start/end markers for IACA.</span></span>
<span id="cb65-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb65-4"></span>
<span id="cb65-5"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define IACA_VC_START</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> __writegsbyte</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">111</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">111</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb65-6"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define IACA_VC_END</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">   __writegsbyte</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">222</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">222</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<p>You may have noticed commented-out versions of these macros in both the C and assembly code. What they do is emit a specific byte pattern in the instruction byte code that the IACA tool can detect. You place the start and end markers around the code you’re interested in, recompile it, then run IACA against the final executable (or library).</p>
<p>Let’s see what happens when we do this for our version 4 assembly routine. I’ll include the relevant assembly snippet, reformatted into a more concise fashion, followed by the IACA output (also reformatted into a more concise fashion):</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-19-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-19-1" aria-controls="tabset-19-1" aria-selected="true">Assembly</a></li><li class="nav-item"><a class="nav-link" id="tabset-19-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-19-2" aria-controls="tabset-19-2" aria-selected="false">IACA</a></li></ul>
<div class="tab-content">
<div id="tabset-19-1" class="tab-pane active" aria-labelledby="tabset-19-1-tab">
<div class="sourceCode" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb66-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>  String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load address of string buffer.</span></span>
<span id="cb66-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb66-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load indexes.</span></span>
<span id="cb66-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Rearrange string by uniq. ix.</span></span>
<span id="cb66-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load unique chars.</span></span>
<span id="cb66-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>                               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare unique chars.</span></span>
<span id="cb66-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load table lengths.</span></span>
<span id="cb66-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast string length.</span></span>
<span id="cb66-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>                               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb66-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Unique slots AND (!long slots).</span></span>
<span id="cb66-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnc</span>      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; CY=0, continue with routine.</span></span>
<span id="cb66-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; CY=1, no match.  Clear rax.</span></span>
<span id="cb66-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                                             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1 (NO_MATCH_FOUND)</span></span>
<span id="cb66-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return NO_MATCH_FOUND</span></span></code></pre></div>
</div>
<div id="tabset-19-2" class="tab-pane" aria-labelledby="tabset-19-2-tab">
<div class="sourceCode" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb67-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">S:</span>\Source\tracer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>iaca x64\Release\StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dll</span>
<span id="cb67-2">Intel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>R<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> Architecture Code Analyzer</span>
<span id="cb67-3">Version <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>  v3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>g1ba2cbb build date<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2017</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;17:30:24</span></span>
<span id="cb67-4">Analyzed File <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>  x64\Release\StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dll</span>
<span id="cb67-5">Binary Format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">Bit</span></span>
<span id="cb67-6">Architecture  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>  SKL</span>
<span id="cb67-7">Analysis Type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Throughput</span>
<span id="cb67-8"></span>
<span id="cb67-9">Throughput Analysis Report</span>
<span id="cb67-10">--------------------------</span>
<span id="cb67-11">Block Throughput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.74</span> Cycles       Throughput Bottleneck<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Dependency Chains</span>
<span id="cb67-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Loop</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span></span>
<span id="cb67-13">Port Binding In Cycles Per Iteration<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb67-14">----------------------------------------------------------------------------</span>
<span id="cb67-15">| Port   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> DV  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> D   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> D   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb67-16">----------------------------------------------------------------------------</span>
<span id="cb67-17">| Cycles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb67-18">----------------------------------------------------------------------------</span>
<span id="cb67-19"></span>
<span id="cb67-20">DV <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Divider pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>on port <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb67-21">D <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Data fetch pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>on ports <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> and <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb67-22">* - instruction micro<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>ops not bound to a port</span>
<span id="cb67-23">^ - Micro Fusion occurred</span>
<span id="cb67-24"></span>
<span id="cb67-25">|    | Ports pressure in cycles        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb67-26">|µops<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">D</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">V</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> D <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> D <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb67-27">-------------------------------------------</span>
<span id="cb67-28">| 1  |   |   |0.5 0.5|0.5 0.5| |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb67-29">| 1  |   |   |0.5 0.5|0.5 0.5| |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb67-30">| 1  |   |   |0.5 0.5|0.5 0.5| |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb67-31">| 1  |   |   |       |       | |1.0|   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb67-32">| 1  |   |   |0.5 0.5|0.5 0.5| |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb67-33">| 1  |1.0|   |0.5 0.5|0.5 0.5| |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span></span>
<span id="cb67-34">| 1  |   |   |0.5 0.5|0.5 0.5| |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb67-35">| 2  |   |   |0.5 0.5|0.5 0.5| |1.0|   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb67-36">| 1  |   |1.0|       |       | |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span></span>
<span id="cb67-37">| 2  |1.0|   |       |       | |1.0|   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span></span>
<span id="cb67-38">| 1  |   |   |       |       | |   |1.0| | <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnb</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x10</span></span>
<span id="cb67-39">| 1* |   |   |       |       | |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span></span>
<span id="cb67-40">| 1  |   |   |       |       | |   |1.0| | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb67-41">| 3^ |   |   |0.5 0.5|0.5 0.5| |   |   | | <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb67-42">Total Num Of µops<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span></span></code></pre></div>
</div>
</div>
</div>
<p>The <a href="https://github.com/tpn/pdfs/blob/4d2296269d3737b649def585a19eb103cda9c3d0/Intel%20Architecture%20Code%20Analyzer%20-%20User's%20Guide%20-%20v3.0%20(2017).pdf">Intel Architecture Code Analyzer User Manual (v3.0)</a> provides decent documentation about how to interpret the output, so I won’t go over the gory details. What I’m really looking at in this pass is what my block throughput is, and potentially what the bottleneck is.</p>
<p>In this case, our block throughput is being reported as 3.74 cycles, which basically indicates how many CPU cycles it takes to execute the block. Our bottleneck is dependency chains, which refers to the situation where, say, instruction <code>C</code> can’t start because the results from instruction <code>A</code> aren’t ready yet.</p>
<p>Alright, well, what can we do? A good answer would be that with an intimate understanding of contemporary Intel CPU architecture, you can pinpoint exactly what needs changing in order to reduce dependencies, maximize port utilization, and generally make the CPU happier.</p>
<p>Or you can just move shit around until the number gets smaller. That’s what I did.</p>
<p>Well, that’s not entirely true. Fabian did make a good suggestion when he was reviewing some of my assembly that I was often needlessly doing a load into an XMM register only to use it once in a subsequent operation. Instead of doing that, I could just use the <em>load-op</em> version of the instruction, which allows for an instruction input parameter to be sourced from memory.</p>
<p>For example, instead of this:</p>
<div class="sourceCode" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb68-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load unique chars.</span></span>
<span id="cb68-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>                               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare unique chars.</span></span></code></pre></div>
<p>You can just do this:</p>
<div class="sourceCode" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb69-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare...</span></span></code></pre></div>
<p>But yeah, other than a few load-op tweaks, I basically just shuffled shit around until the block throughput reported lower. Very rigorous methodology, I know. Here’s the final version, which also happens to be the version quoted in the introduction of this article:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-20-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-20-1" aria-controls="tabset-20-1" aria-selected="true">Assembly</a></li><li class="nav-item"><a class="nav-link" id="tabset-20-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-20-2" aria-controls="tabset-20-2" aria-selected="false">IACA</a></li></ul>
<div class="tab-content">
<div id="tabset-20-1" class="tab-pane active" aria-labelledby="tabset-20-1-tab">
<div class="sourceCode" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb70-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>  String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load address of string buffer.</span></span>
<span id="cb70-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast string length.</span></span>
<span id="cb70-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load table lengths.</span></span>
<span id="cb70-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string buffer.</span></span>
<span id="cb70-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>                           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify slots &gt; string len.</span></span>
<span id="cb70-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Rearrange string by unique index.</span></span>
<span id="cb70-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare rearranged to unique.</span></span>
<span id="cb70-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Unique slots AND (!long slots).</span></span>
<span id="cb70-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnc</span>      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; CY=0, continue with routine.</span></span>
<span id="cb70-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; CY=1, no match.</span></span>
<span id="cb70-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                                         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1 (NO_MATCH_FOUND).</span></span>
<span id="cb70-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return NO_MATCH_FOUND.</span></span></code></pre></div>
</div>
<div id="tabset-20-2" class="tab-pane" aria-labelledby="tabset-20-2-tab">
<div class="sourceCode" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb71-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">S:</span>\Source\tracer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>iaca x64\Release\StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dll</span>
<span id="cb71-2">Intel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>R<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> Architecture Code Analyzer</span>
<span id="cb71-3">Version <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>  v3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>g1ba2cbb build date<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2017</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;17:30:24</span></span>
<span id="cb71-4">Analyzed File <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>  x64\Release\StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dll</span>
<span id="cb71-5">Binary Format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">Bit</span></span>
<span id="cb71-6">Architecture  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>  SKL</span>
<span id="cb71-7">Analysis Type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Throughput</span>
<span id="cb71-8"></span>
<span id="cb71-9">Throughput Analysis Report</span>
<span id="cb71-10">--------------------------</span>
<span id="cb71-11">Block Throughput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.48</span> Cycles       Throughput Bottleneck<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> FrontEnd</span>
<span id="cb71-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Loop</span> Count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span></span>
<span id="cb71-13">Port Binding In Cycles Per Iteration<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb71-14">----------------------------------------------------------------------------</span>
<span id="cb71-15">| Port   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> DV  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> D   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> D   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb71-16">----------------------------------------------------------------------------</span>
<span id="cb71-17">| Cycles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb71-18">----------------------------------------------------------------------------</span>
<span id="cb71-19"></span>
<span id="cb71-20">DV <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Divider pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>on port <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb71-21">D <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Data fetch pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>on ports <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> and <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb71-22">* - instruction micro<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>ops not bound to a port</span>
<span id="cb71-23">^ - Micro Fusion occurred</span>
<span id="cb71-24"></span>
<span id="cb71-25">|    | Ports pressure in cycles        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb71-26">|µops<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">D</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">V</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> D <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> D <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb71-27">-------------------------------------------</span>
<span id="cb71-28">| 1  |   |   |0.5 0.5|0.5 0.5| |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb71-29">| 2  |   |   |0.5 0.5|0.5 0.5| |1.0|   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb71-30">| 1  |   |   |0.5 0.5|0.5 0.5| |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb71-31">| 1  |   |   |0.5 0.5|0.5 0.5| |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb71-32">| 1  |1.0|   |       |       | |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span></span>
<span id="cb71-33">| 2^ |   |   |0.5 0.5|0.5 0.5| |1.0|   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb71-34">| 2^ |   |1.0|0.5 0.5|0.5 0.5| |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb71-35">| 2  |1.0|   |       |       | |1.0|   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span></span>
<span id="cb71-36">| 1  |   |   |       |       | |   |1.0| | <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnb</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x10</span></span>
<span id="cb71-37">| 1* |   |   |       |       | |   |   | | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span></span>
<span id="cb71-38">| 1  |   |   |       |       | |   |1.0| | <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb71-39">| 3^ |   |   |0.5 0.5|0.5 0.5| |   |   | | <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb71-40">Total Num Of µops<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span></span></code></pre></div>
</div>
</div>
</div>
<p>As you can see, that is reporting a block throughput of 3.48 instead of 3.74. A whopping 0.26 reduction! Also note the bottleneck is now being reported as FrontEnd, which basically means that the thing holding up this code now is literally the CPU’s ability to decode the actual instruction stream into actionable internal work. (Again, super simplistic explanation of a very complex process.)</p>
<p>For the sake of completeness, here’s the proper diff and full version of assembly version 5:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-21-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-21-1" aria-controls="tabset-21-1" aria-selected="true">Diff (5 vs 4)</a></li><li class="nav-item"><a class="nav-link" id="tabset-21-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-21-2" aria-controls="tabset-21-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-21-1" class="tab-pane active" aria-labelledby="tabset-21-1-tab">
<div class="sourceCode" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb72-1">% diff -u IsPrefixOfStringInTable_x64_4.asm IsPrefixOfStringInTable_x64_5.asm</span>
<span id="cb72-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_x64_4.asm   2018-04-26 17:56:37.934374900 -0400</span></span>
<span id="cb72-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_x64_5.asm   2018-04-26 18:17:26.087861100 -0400</span></span>
<span id="cb72-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -33,9 +33,14 @@</span></span>
<span id="cb72-5"> ;   search string.  That is, whether any string in the table "starts with</span>
<span id="cb72-6"> ;   or is equal to" the search string.</span>
<span id="cb72-7"> ;</span>
<span id="cb72-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   This routine is based off version 2, but leverages the fact that</span></span>
<span id="cb72-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   vptest sets the carry flag if '(xmm0 and (not xmm1))' evaluates</span></span>
<span id="cb72-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   to all 0s, avoiding the the need to do the pxor or pandn steps.</span></span>
<span id="cb72-11"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   This routine is identical to version 4, but has the initial negative match</span></span>
<span id="cb72-12"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   instructions re-ordered and tweaked in order to reduce the block throughput</span></span>
<span id="cb72-13"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   reported by IACA (from 3.74 to 3.48).</span></span>
<span id="cb72-14"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb72-15"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   N.B. Although this does result in a measurable speedup, the clarity suffers</span></span>
<span id="cb72-16"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;        somewhat due to the fact that instructions that were previously paired</span></span>
<span id="cb72-17"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;        together are now spread out (e.g. moving the string buffer address into</span></span>
<span id="cb72-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;        rax and then loading that into xmm0 three instructions later).</span></span>
<span id="cb72-19"> ;</span>
<span id="cb72-20"> ; Arguments:</span>
<span id="cb72-21"> ;</span>
<span id="cb72-22"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -54,32 +59,21 @@</span></span>
<span id="cb72-23"> ;</span>
<span id="cb72-24"> ;--</span>
<span id="cb72-25"></span>
<span id="cb72-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_ENTRY IsPrefixOfStringInTable_x64_4, _TEXT$00</span></span>
<span id="cb72-27"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_ENTRY IsPrefixOfStringInTable_x64_5, _TEXT$00</span></span>
<span id="cb72-28"></span>
<span id="cb72-29"> ;</span>
<span id="cb72-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Load the string buffer into xmm0, and the unique indexes from the string table</span></span>
<span id="cb72-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span></span>
<span id="cb72-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; result into xmm5.</span></span>
<span id="cb72-33"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the address of the string buffer into rax.</span></span>
<span id="cb72-34"> ;</span>
<span id="cb72-35"></span>
<span id="cb72-36">         ;IACA_VC_START</span>
<span id="cb72-37"></span>
<span id="cb72-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov     rax, String.Buffer[rdx]</span></span>
<span id="cb72-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vmovdqu xmm0, xmmword ptr [rax]                 ; Load search buffer.</span></span>
<span id="cb72-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vmovdqa xmm1, xmmword ptr StringTable.UniqueIndex[rcx] ; Load indexes.</span></span>
<span id="cb72-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpshufb xmm5, xmm0, xmm1</span></span>
<span id="cb72-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb72-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb72-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Load the string table's unique character array into xmm2.</span></span>
<span id="cb72-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb72-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vmovdqa xmm2, xmmword ptr StringTable.UniqueChars[rcx]  ; Load chars.</span></span>
<span id="cb72-47"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov     rax, String.Buffer[rdx]         ; Load buffer addr.</span></span>
<span id="cb72-48"></span>
<span id="cb72-49"> ;</span>
<span id="cb72-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb72-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb72-52"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb72-53"> ;</span>
<span id="cb72-54"></span>
<span id="cb72-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpcmpeqb    xmm5, xmm5, xmm2            ; Compare unique chars.</span></span>
<span id="cb72-56"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpbroadcastb xmm4, byte ptr String.Length[rdx]  ; Broadcast length.</span></span>
<span id="cb72-57"></span>
<span id="cb72-58"> ;</span>
<span id="cb72-59"> ; Load the lengths of each string table slot into xmm3.</span>
<span id="cb72-60"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -88,26 +82,38 @@</span></span>
<span id="cb72-61">         vmovdqa xmm3, xmmword ptr StringTable.Lengths[rcx]  ; Load lengths.</span>
<span id="cb72-62"></span>
<span id="cb72-63"> ;</span>
<span id="cb72-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb72-65"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the search string buffer into xmm0.</span></span>
<span id="cb72-66"> ;</span>
<span id="cb72-67"></span>
<span id="cb72-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpbroadcastb xmm4, byte ptr String.Length[rdx]  ; Broadcast length.</span></span>
<span id="cb72-69"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vmovdqu xmm0, xmmword ptr [rax]         ; Load search buffer.</span></span>
<span id="cb72-70"></span>
<span id="cb72-71"> ;</span>
<span id="cb72-72"> ; Compare the search string's length, which we've broadcasted to all 8-byte</span>
<span id="cb72-73"> ; elements of the xmm4 register, to the lengths of the slots in the string</span>
<span id="cb72-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; table, to find those that are greater in length.  Invert the result, such</span></span>
<span id="cb72-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; that we're left with a masked register where each 0xff element indicates</span></span>
<span id="cb72-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; a slot with a length less than or equal to our search string's length.</span></span>
<span id="cb72-77"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; table, to find those that are greater in length.</span></span>
<span id="cb72-78"> ;</span>
<span id="cb72-79"></span>
<span id="cb72-80">         vpcmpgtb    xmm1, xmm3, xmm4            ; Identify long slots.</span>
<span id="cb72-81"></span>
<span id="cb72-82"> ;</span>
<span id="cb72-83"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Shuffle the buffer in xmm0 according to the unique indexes, and store the</span></span>
<span id="cb72-84"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; result into xmm5.</span></span>
<span id="cb72-85"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb72-86"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb72-87"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpshufb     xmm5, xmm0, StringTable.UniqueIndex[rcx] ; Rearrange string.</span></span>
<span id="cb72-88"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb72-89"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb72-90"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb72-91"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb72-92"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb72-93"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb72-94"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpcmpeqb    xmm5, xmm5, StringTable.UniqueChars[rcx] ; Compare to uniq.</span></span>
<span id="cb72-95"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb72-96"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb72-97"> ; Intersect-and-test the unique character match xmm mask register (xmm5) with</span>
<span id="cb72-98"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; the inverted length match mask xmm register (xmm1).  This will set the carry</span></span>
<span id="cb72-99"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; flag (CY = 1) if the result of 'xmm5 and (not xmm1)' is all 0s, which allows</span></span>
<span id="cb72-100"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; us to do a fast-path exit for the no-match case.</span></span>
<span id="cb72-101"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; the length match mask xmm register (xmm1).  This affects flags, allowing us</span></span>
<span id="cb72-102"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; to do a fast-path exit for the no-match case (where CY = 1 after xmm1 has</span></span>
<span id="cb72-103"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; been inverted).</span></span>
<span id="cb72-104"> ;</span>
<span id="cb72-105"></span>
<span id="cb72-106">         vptest      xmm1, xmm5                  ; Check for no match.</span>
<span id="cb72-107"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -472,7 +478,7 @@</span></span>
<span id="cb72-108"></span>
<span id="cb72-109">         ;IACA_VC_END</span>
<span id="cb72-110"></span>
<span id="cb72-111"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_END   IsPrefixOfStringInTable_x64_4, _TEXT$00</span></span>
<span id="cb72-112"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_END   IsPrefixOfStringInTable_x64_5, _TEXT$00</span></span>
<span id="cb72-113"></span>
<span id="cb72-114"> ; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></code></pre></div>
</div>
<div id="tabset-21-2" class="tab-pane" aria-labelledby="tabset-21-2-tab">
<div class="sourceCode" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb73-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;++</span></span>
<span id="cb73-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; STRING_TABLE_INDEX</span></span>
<span id="cb73-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; IsPrefixOfStringInTable_x64_*(</span></span>
<span id="cb73-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING_TABLE StringTable,</span></span>
<span id="cb73-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING String,</span></span>
<span id="cb73-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _Out_opt_ PSTRING_MATCH Match</span></span>
<span id="cb73-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     )</span></span>
<span id="cb73-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Routine Description:</span></span>
<span id="cb73-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb73-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb73-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   or is equal to" the search string.</span></span>
<span id="cb73-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   This routine is identical to version 4, but has the initial negative match</span></span>
<span id="cb73-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   instructions re-ordered and tweaked in order to reduce the block throughput</span></span>
<span id="cb73-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   reported by IACA (from 3.74 to 3.48).</span></span>
<span id="cb73-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   N.B. Although this does result in a measurable speedup, the clarity suffers</span></span>
<span id="cb73-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        somewhat due to the fact that instructions that were previously paired</span></span>
<span id="cb73-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        together are now spread out (e.g. moving the string buffer address into</span></span>
<span id="cb73-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        rax and then loading that into xmm0 three instructions later).</span></span>
<span id="cb73-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Arguments:</span></span>
<span id="cb73-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb73-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb73-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       search for.</span></span>
<span id="cb73-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb73-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb73-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb73-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return Value:</span></span>
<span id="cb73-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb73-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;--</span></span>
<span id="cb73-41"></span>
<span id="cb73-42">        LEAF_ENTRY IsPrefixOfStringInTable_x64_5<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb73-43"></span>
<span id="cb73-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the address of the string buffer into rax.</span></span>
<span id="cb73-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-47"></span>
<span id="cb73-48">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_START</span></span>
<span id="cb73-49"></span>
<span id="cb73-50">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer addr.</span></span>
<span id="cb73-51"></span>
<span id="cb73-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb73-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-55"></span>
<span id="cb73-56">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast length.</span></span>
<span id="cb73-57"></span>
<span id="cb73-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb73-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-61"></span>
<span id="cb73-62">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load lengths.</span></span>
<span id="cb73-63"></span>
<span id="cb73-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the search string buffer into xmm0.</span></span>
<span id="cb73-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-67"></span>
<span id="cb73-68">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb73-69"></span>
<span id="cb73-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb73-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb73-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table, to find those that are greater in length.</span></span>
<span id="cb73-74"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-75"></span>
<span id="cb73-76">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb73-77"></span>
<span id="cb73-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle the buffer in xmm0 according to the unique indexes, and store the</span></span>
<span id="cb73-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; result into xmm5.</span></span>
<span id="cb73-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-82"></span>
<span id="cb73-83">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Rearrange string.</span></span>
<span id="cb73-84"></span>
<span id="cb73-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb73-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb73-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-89"></span>
<span id="cb73-90">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare to uniq.</span></span>
<span id="cb73-91"></span>
<span id="cb73-92"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-93"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect-and-test the unique character match xmm mask register (xmm5) with</span></span>
<span id="cb73-94"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the length match mask xmm register (xmm1).  This affects flags, allowing us</span></span>
<span id="cb73-95"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do a fast-path exit for the no-match case (where CY = 1 after xmm1 has</span></span>
<span id="cb73-96"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; been inverted).</span></span>
<span id="cb73-97"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-98"></span>
<span id="cb73-99">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Check for no match.</span></span>
<span id="cb73-100">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnc</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; There was a match.</span></span>
<span id="cb73-101"></span>
<span id="cb73-102"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-103"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match, set rax to -1 and return.</span></span>
<span id="cb73-104"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-105"></span>
<span id="cb73-106">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb73-107">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb73-108">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb73-109"></span>
<span id="cb73-110">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb73-111"></span>
<span id="cb73-112"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-113"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (There was at least one match, continue with processing.)</span></span>
<span id="cb73-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-115"></span>
<span id="cb73-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Calculate the "search length" for the incoming search string, which is</span></span>
<span id="cb73-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equivalent of 'min(String-&gt;Length, 16)'.  (The search string's length</span></span>
<span id="cb73-119"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; currently lives in xmm4, albeit as a byte-value broadcasted across the</span></span>
<span id="cb73-120"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; entire register, so extract that first.)</span></span>
<span id="cb73-121"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-122"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Once the search length is calculated, deposit it back at the second byte</span></span>
<span id="cb73-123"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location of xmm4.</span></span>
<span id="cb73-124"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-125"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 and xmm4[15:8] - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb73-126"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-127"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length (String-&gt;Length)</span></span>
<span id="cb73-128"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-129"></span>
<span id="cb73-130"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx10:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load length.</span></span>
<span id="cb73-131">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load 16 into rax.</span></span>
<span id="cb73-132">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy into r10.</span></span>
<span id="cb73-133">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against 16.</span></span>
<span id="cb73-134">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmova</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Use 16 if length is greater.</span></span>
<span id="cb73-135">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save back to xmm4b[1].</span></span>
<span id="cb73-136"></span>
<span id="cb73-137"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-138"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our parameter registers into xmm registers instead of their stack-backed</span></span>
<span id="cb73-139"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location, to avoid memory writes.</span></span>
<span id="cb73-140"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-141"></span>
<span id="cb73-142">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm2.</span></span>
<span id="cb73-143">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rcx into xmm2q[0].</span></span>
<span id="cb73-144">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rdx into xmm2q[1].</span></span>
<span id="cb73-145"></span>
<span id="cb73-146"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-147"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm1, xmm5'),</span></span>
<span id="cb73-148"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; yielding a mask identifying indices we need to perform subsequent matches</span></span>
<span id="cb73-149"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; upon.  Convert this into a bitmap and save in xmm2d[2].</span></span>
<span id="cb73-150"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-151"></span>
<span id="cb73-152">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpandn</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect unique + lengths.</span></span>
<span id="cb73-153">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Generate a bitmap from mask.</span></span>
<span id="cb73-154"></span>
<span id="cb73-155"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-156"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We're finished with xmm5; repurpose it in the same vein as xmm2 above.</span></span>
<span id="cb73-157"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-158"></span>
<span id="cb73-159">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm5.</span></span>
<span id="cb73-160">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save r8 into xmm5q[0].</span></span>
<span id="cb73-161"></span>
<span id="cb73-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-163"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Summary of xmm register stashing for the rest of the routine:</span></span>
<span id="cb73-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm2:</span></span>
<span id="cb73-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        0:63   (vpinsrq 0)     rcx (1st function parameter, StringTable)</span></span>
<span id="cb73-167"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       64:127  (vpinsrq 1)     rdx (2nd function paramter, String)</span></span>
<span id="cb73-168"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-169"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm4:</span></span>
<span id="cb73-170"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:7     (vpinsrb 0)     length of search string</span></span>
<span id="cb73-171"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16)</span></span>
<span id="cb73-172"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      16:23    (vpinsrb 2)     loop counter (when doing long string compares)</span></span>
<span id="cb73-173"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      24:31    (vpinsrb 3)     shift count</span></span>
<span id="cb73-174"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-175"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm5:</span></span>
<span id="cb73-176"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span></span>
<span id="cb73-177"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      64:95    (vpinsrd 2)     bitmap of slots to compare</span></span>
<span id="cb73-178"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      96:127   (vpinsrd 3)     index of slot currently being processed</span></span>
<span id="cb73-179"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-180"></span>
<span id="cb73-181"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-182"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Initialize rcx as our counter register by doing a popcnt against the bitmap</span></span>
<span id="cb73-183"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we just generated in edx, and clear our shift count register (r9).</span></span>
<span id="cb73-184"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-185"></span>
<span id="cb73-186">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits in bitmap.</span></span>
<span id="cb73-187">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear r9.</span></span>
<span id="cb73-188"></span>
<span id="cb73-189">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb73-190"></span>
<span id="cb73-191"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-192"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span></span>
<span id="cb73-193"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; trailing zeros of the bitmap, and then add in the shift count, producing an</span></span>
<span id="cb73-194"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; index (rax) we can use to load the corresponding slot.</span></span>
<span id="cb73-195"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-196"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Register usage at top of loop:</span></span>
<span id="cb73-197"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-198"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index.</span></span>
<span id="cb73-199"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-200"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - Loop counter.</span></span>
<span id="cb73-201"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-202"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rdx - Bitmap initially, then slot length.</span></span>
<span id="cb73-203"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-204"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - Shift count.</span></span>
<span id="cb73-205"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-206"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 - Search length.</span></span>
<span id="cb73-207"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-208"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length.</span></span>
<span id="cb73-209"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-210"></span>
<span id="cb73-211"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx20:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tzcnt</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count trailing zeros.</span></span>
<span id="cb73-212">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy tzcnt to rax,</span></span>
<span id="cb73-213">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Add shift to create index.</span></span>
<span id="cb73-214">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; tzcnt + 1</span></span>
<span id="cb73-215">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shrx</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Reposition bitmap.</span></span>
<span id="cb73-216">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store bitmap, free up rdx.</span></span>
<span id="cb73-217">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear edx.</span></span>
<span id="cb73-218">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy index back to shift.</span></span>
<span id="cb73-219">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shift = Index + 1</span></span>
<span id="cb73-220">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store the raw index xmm5d[3].</span></span>
<span id="cb73-221"></span>
<span id="cb73-222"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-223"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span></span>
<span id="cb73-224"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span></span>
<span id="cb73-225"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-226"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, load the string table slot at this index into xmm1, then shift rax back.</span></span>
<span id="cb73-227"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-228"></span>
<span id="cb73-229">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb73-230">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb73-231">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span></span>
<span id="cb73-232">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb73-233"></span>
<span id="cb73-234"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-235"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The search string's first 16 characters are already in xmm0.  Compare this</span></span>
<span id="cb73-236"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; against the slot that has just been loaded into xmm1, storing the result back</span></span>
<span id="cb73-237"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.</span></span>
<span id="cb73-238"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-239"></span>
<span id="cb73-240">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare search string to slot.</span></span>
<span id="cb73-241"></span>
<span id="cb73-242"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-243"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert the XMM mask into a 32-bit representation, then zero high bits after</span></span>
<span id="cb73-244"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; our "search length", which allows us to ignore the results of the comparison</span></span>
<span id="cb73-245"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; above for bytes that were after the search string's length, if applicable.</span></span>
<span id="cb73-246"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, count the number of bits remaining, which tells us how many characters</span></span>
<span id="cb73-247"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we matched.</span></span>
<span id="cb73-248"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-249"></span>
<span id="cb73-250">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert into mask.</span></span>
<span id="cb73-251">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bzhi</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Zero high bits.</span></span>
<span id="cb73-252">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits.</span></span>
<span id="cb73-253"></span>
<span id="cb73-254"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-255"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the slot length into rdx.  As xmm3 already has all the slot lengths in</span></span>
<span id="cb73-256"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it, we can load rax (the current index) into xmm1 and use it to extract the</span></span>
<span id="cb73-257"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; slot length via shuffle.  (The length will be in the lowest byte of xmm1</span></span>
<span id="cb73-258"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; after the shuffle, which we can then vpextrb.)</span></span>
<span id="cb73-259"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-260"></span>
<span id="cb73-261">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">movd</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load index into xmm1.</span></span>
<span id="cb73-262">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle lengths.</span></span>
<span id="cb73-263">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract target length to rdx.</span></span>
<span id="cb73-264"></span>
<span id="cb73-265"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-266"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If 16 characters matched, and the search string's length is longer than 16,</span></span>
<span id="cb73-267"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we're going to need to do a comparison of the remaining strings.</span></span>
<span id="cb73-268"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-269"></span>
<span id="cb73-270">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare chars matched to 16.</span></span>
<span id="cb73-271">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 chars matched.</span></span>
<span id="cb73-272">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx30                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than 16 matched.</span></span>
<span id="cb73-273"></span>
<span id="cb73-274"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-275"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All 16 characters matched.  If the slot length is greater than 16, we need</span></span>
<span id="cb73-276"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do an inline memory comparison of the remaining bytes.  If it's 16 exactly,</span></span>
<span id="cb73-277"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then great, that's a slot match, we're done.</span></span>
<span id="cb73-278"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-279"></span>
<span id="cb73-280">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare length to 16.</span></span>
<span id="cb73-281">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ja</span>          Pfx50                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length is &gt; 16.</span></span>
<span id="cb73-282">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Lengths match!</span></span>
<span id="cb73-283">                                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length &lt;= 16, fall through...</span></span>
<span id="cb73-284"></span>
<span id="cb73-285"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-286"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than or equal to 16 characters were matched.  Compare this against the</span></span>
<span id="cb73-287"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length of the slot; if equal, this is a match, if not, no match, continue.</span></span>
<span id="cb73-288"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-289"></span>
<span id="cb73-290"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx30:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against slot length.</span></span>
<span id="cb73-291">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jne</span>         @F                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match found.</span></span>
<span id="cb73-292">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Match found!</span></span>
<span id="cb73-293"></span>
<span id="cb73-294"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-295"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match against this slot, decrement counter and either continue the loop</span></span>
<span id="cb73-296"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; or terminate the search and return no match.</span></span>
<span id="cb73-297"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-298"></span>
<span id="cb73-299">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb73-300">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb73-301">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; cx != 0, continue.</span></span>
<span id="cb73-302"></span>
<span id="cb73-303">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb73-304">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb73-305">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb73-306"></span>
<span id="cb73-307"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-308"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span></span>
<span id="cb73-309"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; former is used when we need to copy the number of characters matched from r8</span></span>
<span id="cb73-310"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back to rax.  The latter jump target doesn't require this.</span></span>
<span id="cb73-311"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-312"></span>
<span id="cb73-313"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx35:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy numbers of chars matched.</span></span>
<span id="cb73-314"></span>
<span id="cb73-315"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-316"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the match parameter back into r8 and test to see if it's not-NULL, in</span></span>
<span id="cb73-317"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; which case we need to fill out a STRING_MATCH structure for the match.</span></span>
<span id="cb73-318"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-319"></span>
<span id="cb73-320"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx40:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringMatch.</span></span>
<span id="cb73-321">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is NULL?</span></span>
<span id="cb73-322">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not zero, need to fill out.</span></span>
<span id="cb73-323"></span>
<span id="cb73-324"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-325"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is NULL, we're done. Extract index of match back into rax and ret.</span></span>
<span id="cb73-326"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-327"></span>
<span id="cb73-328">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb73-329">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch == NULL, finish.</span></span>
<span id="cb73-330"></span>
<span id="cb73-331"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-332"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span></span>
<span id="cb73-333"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; reload the index from xmm5 into rax and save.</span></span>
<span id="cb73-334"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-335"></span>
<span id="cb73-336">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>NumberOfMatchedCharacters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb73-337">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb73-338">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb73-339"></span>
<span id="cb73-340"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-341"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb73-342"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; involves going through the StringTable, so we need to load that parameter</span></span>
<span id="cb73-343"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back into rcx, then resolving the string array address via pStringArray,</span></span>
<span id="cb73-344"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then the relevant STRING offset within the StringArray.Strings structure.</span></span>
<span id="cb73-345"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-346"></span>
<span id="cb73-347">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into rcx.</span></span>
<span id="cb73-348">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb73-349"></span>
<span id="cb73-350">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb73-351">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb73-352">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save STRING ptr.</span></span>
<span id="cb73-353">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Revert the scaling.</span></span>
<span id="cb73-354"></span>
<span id="cb73-355">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb73-356"></span>
<span id="cb73-357"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-358"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb73-359"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb73-360"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string is a prefix match.</span></span>
<span id="cb73-361"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-362"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The slot length is stored in rax at this point, and the search string's</span></span>
<span id="cb73-363"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length is stored in r11.  We know that the search string's length will</span></span>
<span id="cb73-364"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; always be longer than or equal to the slot length at this point, so, we</span></span>
<span id="cb73-365"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; can subtract 16 (currently stored in r10) from rax, and use the resulting</span></span>
<span id="cb73-366"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; value as a loop counter, comparing the search string with the underlying</span></span>
<span id="cb73-367"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string slot byte-by-byte to determine if there's a match.</span></span>
<span id="cb73-368"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-369"></span>
<span id="cb73-370"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx50:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sub</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Subtract 16 from search length.</span></span>
<span id="cb73-371"></span>
<span id="cb73-372"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-373"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up some registers by stashing their values into various xmm offsets.</span></span>
<span id="cb73-374"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-375"></span>
<span id="cb73-376">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rcx register.</span></span>
<span id="cb73-377">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rdx, rcx is now counter.</span></span>
<span id="cb73-378"></span>
<span id="cb73-379"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-380"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the search string buffer and advance it 16 bytes.</span></span>
<span id="cb73-381"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-382"></span>
<span id="cb73-383">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract String into r11.</span></span>
<span id="cb73-384">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer address.</span></span>
<span id="cb73-385">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb73-386"></span>
<span id="cb73-387"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-388"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Loading the slot is more involved as we have to go to the string table, then</span></span>
<span id="cb73-389"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the pStringArray pointer, then the relevant STRING offset within the string</span></span>
<span id="cb73-390"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; array (which requires re-loading the index from xmm5d[3]), then the string</span></span>
<span id="cb73-391"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; buffer from that structure.</span></span>
<span id="cb73-392"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-393"></span>
<span id="cb73-394">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into r8.</span></span>
<span id="cb73-395">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb73-396"></span>
<span id="cb73-397">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb73-398"></span>
<span id="cb73-399">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb73-400">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string table buffer address.</span></span>
<span id="cb73-401">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb73-402"></span>
<span id="cb73-403">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear eax.</span></span>
<span id="cb73-404"></span>
<span id="cb73-405"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-406"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span></span>
<span id="cb73-407"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Do a byte-by-byte comparison.</span></span>
<span id="cb73-408"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-409"></span>
<span id="cb73-410">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb73-411">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load byte from search string.</span></span>
<span id="cb73-412">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against target.</span></span>
<span id="cb73-413">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jne</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx60                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If not equal, jump.</span></span>
<span id="cb73-414"></span>
<span id="cb73-415"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-416"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The two bytes were equal, update rax, decrement rcx and potentially continue</span></span>
<span id="cb73-417"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the loop.</span></span>
<span id="cb73-418"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-419"></span>
<span id="cb73-420">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Increment index.</span></span>
<span id="cb73-421">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">loopnz</span>      @B                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement cx and loop back.</span></span>
<span id="cb73-422"></span>
<span id="cb73-423"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-424"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span></span>
<span id="cb73-425"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; how many characters we matched, and then jump to Pfx40 for finalization.</span></span>
<span id="cb73-426"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-427"></span>
<span id="cb73-428">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span></span>
<span id="cb73-429">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx40</span>
<span id="cb73-430"></span>
<span id="cb73-431"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-432"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Byte comparisons were not equal.  Restore the rcx loop counter and decrement</span></span>
<span id="cb73-433"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it.  If it's zero, we have no more strings to compare, so we can do a quick</span></span>
<span id="cb73-434"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; exit.  If there are still comparisons to be made, restore the other registers</span></span>
<span id="cb73-435"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we trampled then jump back to the start of the loop Pfx20.</span></span>
<span id="cb73-436"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-437"></span>
<span id="cb73-438"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx60:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rcx counter.</span></span>
<span id="cb73-439">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb73-440">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Jump forward if not zero.</span></span>
<span id="cb73-441"></span>
<span id="cb73-442"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-443"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No more comparisons remaining, return.</span></span>
<span id="cb73-444"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-445"></span>
<span id="cb73-446">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb73-447">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb73-448">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb73-449"></span>
<span id="cb73-450"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-451"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; More comparisons remain; restore the registers we clobbered and continue loop.</span></span>
<span id="cb73-452"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb73-453"></span>
<span id="cb73-454">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r10.</span></span>
<span id="cb73-455">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r11.</span></span>
<span id="cb73-456">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb73-457">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Continue comparisons.</span></span>
<span id="cb73-458"></span>
<span id="cb73-459">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb73-460"></span>
<span id="cb73-461">        LEAF_END   IsPrefixOfStringInTable_x64_5<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span></code></pre></div>
</div>
</div>
</div>
<p>Did it make a difference? Were we able to shave any time off the negative match fast path? Let’s find out.</p>
</section>
<section id="benchmark-x64-5" class="level3 unlisted">
<h3 class="unlisted anchored" data-anchor-id="benchmark-x64-5">Benchmark x64 5</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-05-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-05-v1.svg" class="img-fluid figure-img" alt="Benchmark-x64-05-v1"></a></p>
<figcaption>Benchmark-x64-05-v1</figcaption>
</figure>
</div>
<p>Hurrah! We’ve got a new winner! Our final tweaks yielded a very small but measurable and repeatable improvement in both prefix matching and negative matching! Let’s mark that up as a win.</p>
<hr>
</section>
</section>
</section>
<section id="reviewing-x64-v3" class="level1">
<h1>Reviewing x64 v3…</h1>
<p>Alright, we need to get some closure on why <code>IsPrefixOfStringInTable_x64_3</code> was so bad in comparison to <code>IsPrefixOfStringInTable_x64_2</code>. Let’s review the performance chart again quickly:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-03-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-03-v1.svg" class="img-fluid figure-img" alt="Benchmark-x64-03-v1"></a></p>
<figcaption>Benchmark-x64-03-v1</figcaption>
</figure>
</div>
<p>What immediately stands out to me with those results is how <strong>everything</strong> seems to be impacted; it’s not just the prefix matching performance that’s bad, it’s the negative match performance as well. This is odd, as we didn’t really change anything in the negative match logic.</p>
<p>Except for that pesky prologue we added to stash the values of <code>rsi</code>, <code>rdi</code>, and the flags register. Hmmm! That seems like a good a place as any to start investigating. Let’s whip up another version that defers the prologue until <strong>after</strong> the initial negative match logic. This exploits a little detail regarding prologues in that they need to appear in the first 255 bytes of the function byte code — but don’t necessarily need to appear at the very start. As long as the prologue definition for the register is the first time the register is mutated, you’ve got a bit of room to play with regarding where to actually put it.</p>
<p>So, here’s version 7 of the routine, based off version 3, that simply relocates the prologue code to appear after the initial negative match logic:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-22-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-22-1" aria-controls="tabset-22-1" aria-selected="true">Diff (7 vs 3)</a></li><li class="nav-item"><a class="nav-link" id="tabset-22-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-22-2" aria-controls="tabset-22-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-22-1" class="tab-pane active" aria-labelledby="tabset-22-1-tab">
<div class="sourceCode" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb74-1"> % diff -u IsPrefixOfStringInTable_x64_3.asm IsPrefixOfStringInTable_x64_7.asm</span>
<span id="cb74-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_x64_3.asm   2018-04-29 16:13:23.879193700 -0400</span></span>
<span id="cb74-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_x64_7.asm   2018-04-29 19:33:06.374193900 -0400</span></span>
<span id="cb74-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -58,13 +58,8 @@</span></span>
<span id="cb74-5"> ;   search string.  That is, whether any string in the table "starts with</span>
<span id="cb74-6"> ;   or is equal to" the search string.</span>
<span id="cb74-7"> ;</span>
<span id="cb74-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   This routine is based off version 2.  It has been converted into a nested</span></span>
<span id="cb74-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   entry (version 2 is a leaf entry), and uses 'rep cmpsb' to do the string</span></span>
<span id="cb74-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   comparison for long strings (instead of the byte-by-byte comparison used</span></span>
<span id="cb74-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   in version 2).  This requires use of the rsi and rdi registers, and the</span></span>
<span id="cb74-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   direction flag.  These are all non-volatile registers and thus, must be</span></span>
<span id="cb74-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   saved to the stack in the function prologue (hence the need to make this</span></span>
<span id="cb74-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   a nested entry).</span></span>
<span id="cb74-15"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   This routine is based off version 3, but relocates the prologue code to</span></span>
<span id="cb74-16"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   after the initial negative match logic (jump target Pfx10).</span></span>
<span id="cb74-17"> ;</span>
<span id="cb74-18"> ; Arguments:</span>
<span id="cb74-19"> ;</span>
<span id="cb74-20"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -83,19 +78,7 @@</span></span>
<span id="cb74-21"> ;</span>
<span id="cb74-22"> ;--</span>
<span id="cb74-23"></span>
<span id="cb74-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        NESTED_ENTRY IsPrefixOfStringInTable_x64_3, _TEXT$00</span></span>
<span id="cb74-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb74-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb74-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Begin prologue.  Allocate stack space and save non-volatile registers.</span></span>
<span id="cb74-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb74-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb74-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        alloc_stack LOCALS_SIZE                     ; Allocate stack space.</span></span>
<span id="cb74-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb74-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        push_eflags                                 ; Save flags.</span></span>
<span id="cb74-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        save_reg    rsi, Locals.SavedRsi            ; Save non-volatile rsi.</span></span>
<span id="cb74-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        save_reg    rdi, Locals.SavedRdi            ; Save non-volatile rdi.</span></span>
<span id="cb74-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb74-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        END_PROLOGUE</span></span>
<span id="cb74-37"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        NESTED_ENTRY IsPrefixOfStringInTable_x64_7, _TEXT$00</span></span>
<span id="cb74-38"></span>
<span id="cb74-39"> ;</span>
<span id="cb74-40"> ; Load the string buffer into xmm0, and the unique indexes from the string table</span>
<span id="cb74-41"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -165,11 +148,23 @@</span></span>
<span id="cb74-42"></span>
<span id="cb74-43">         xor         eax, eax                    ; Clear rax.</span>
<span id="cb74-44">         not         al                          ; al = -1</span>
<span id="cb74-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jmp         Pfx90                       ; Return.</span></span>
<span id="cb74-46"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; Return.</span></span>
<span id="cb74-47"></span>
<span id="cb74-48">         ;IACA_VC_END</span>
<span id="cb74-49"></span>
<span id="cb74-50"> ;</span>
<span id="cb74-51"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Begin prologue.  Allocate stack space and save non-volatile registers.</span></span>
<span id="cb74-52"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb74-53"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb74-54"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx10:  alloc_stack LOCALS_SIZE                     ; Allocate stack space.</span></span>
<span id="cb74-55"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb74-56"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        push_eflags                                 ; Save flags.</span></span>
<span id="cb74-57"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        save_reg    rsi, Locals.SavedRsi            ; Save non-volatile rsi.</span></span>
<span id="cb74-58"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        save_reg    rdi, Locals.SavedRdi            ; Save non-volatile rdi.</span></span>
<span id="cb74-59"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb74-60"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        END_PROLOGUE</span></span>
<span id="cb74-61"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb74-62"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb74-63"> ; (There was at least one match, continue with processing.)</span>
<span id="cb74-64"> ;</span>
<span id="cb74-65"></span>
<span id="cb74-66"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -187,7 +182,7 @@</span></span>
<span id="cb74-67"> ;   r11 - String length (String-&gt;Length)</span>
<span id="cb74-68"> ;</span>
<span id="cb74-69"></span>
<span id="cb74-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Pfx10:  vpextrb     r11, xmm4, 0                ; Load length.</span></span>
<span id="cb74-71"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrb     r11, xmm4, 0                ; Load length.</span></span>
<span id="cb74-72">         mov         rax, 16                     ; Load 16 into rax.</span>
<span id="cb74-73">         mov         r10, r11                    ; Copy into r10.</span>
<span id="cb74-74">         cmp         r10w, ax                    ; Compare against 16.</span>
<span id="cb74-75"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -512,7 +507,7 @@</span></span>
<span id="cb74-76"></span>
<span id="cb74-77">         ret</span>
<span id="cb74-78"></span>
<span id="cb74-79"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        NESTED_END   IsPrefixOfStringInTable_x64_3, _TEXT$00</span></span>
<span id="cb74-80"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        NESTED_END   IsPrefixOfStringInTable_x64_7, _TEXT$00</span></span>
<span id="cb74-81"></span>
<span id="cb74-82"></span>
<span id="cb74-83"> ; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span>
<span id="cb74-84">;</span>
<span id="cb74-85">; Define a locals struct for saving flags, rsi and rdi.</span>
<span id="cb74-86">;</span>
<span id="cb74-87"></span>
<span id="cb74-88">Locals struct</span>
<span id="cb74-89"></span>
<span id="cb74-90">    Padding             dq      ?</span>
<span id="cb74-91">    SavedRdi            dq      ?</span>
<span id="cb74-92">    SavedRsi            dq      ?</span>
<span id="cb74-93">    SavedFlags          dq      ?</span>
<span id="cb74-94"></span>
<span id="cb74-95">    ReturnAddress       dq      ?</span>
<span id="cb74-96">    HomeRcx             dq      ?</span>
<span id="cb74-97">    HomeRdx             dq      ?</span>
<span id="cb74-98">    HomeR8              dq      ?</span>
<span id="cb74-99">    HomeR9              dq      ?</span>
<span id="cb74-100"></span>
<span id="cb74-101">Locals ends</span>
<span id="cb74-102"></span>
<span id="cb74-103">;</span>
<span id="cb74-104">; Exclude the return address onward from the frame calculation size.</span>
<span id="cb74-105">;</span>
<span id="cb74-106"></span>
<span id="cb74-107">LOCALS_SIZE  equ ((sizeof Locals) + (Locals.ReturnAddress - (sizeof Locals)))</span></code></pre></div>
</div>
<div id="tabset-22-2" class="tab-pane" aria-labelledby="tabset-22-2-tab">
<div class="sourceCode" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb75-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;++</span></span>
<span id="cb75-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; STRING_TABLE_INDEX</span></span>
<span id="cb75-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; IsPrefixOfStringInTable_x64_*(</span></span>
<span id="cb75-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING_TABLE StringTable,</span></span>
<span id="cb75-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING String,</span></span>
<span id="cb75-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _Out_opt_ PSTRING_MATCH Match</span></span>
<span id="cb75-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     )</span></span>
<span id="cb75-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Routine Description:</span></span>
<span id="cb75-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb75-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb75-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   or is equal to" the search string.</span></span>
<span id="cb75-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   This routine is based off version 3, but relocates the prologue code to</span></span>
<span id="cb75-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   after the initial negative match logic (jump target Pfx10).</span></span>
<span id="cb75-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Arguments:</span></span>
<span id="cb75-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb75-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb75-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       search for.</span></span>
<span id="cb75-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb75-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb75-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb75-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return Value:</span></span>
<span id="cb75-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb75-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;--</span></span>
<span id="cb75-35"></span>
<span id="cb75-36">        NESTED_ENTRY IsPrefixOfStringInTable_x64_7<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb75-37"></span>
<span id="cb75-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string buffer into xmm0, and the unique indexes from the string table</span></span>
<span id="cb75-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span></span>
<span id="cb75-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; result into xmm5.</span></span>
<span id="cb75-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-43"></span>
<span id="cb75-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_START</span></span>
<span id="cb75-45"></span>
<span id="cb75-46">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb75-47">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb75-48">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load indexes.</span></span>
<span id="cb75-49">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb75-50"></span>
<span id="cb75-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string table's unique character array into xmm2.</span></span>
<span id="cb75-53"></span>
<span id="cb75-54">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load chars.</span></span>
<span id="cb75-55"></span>
<span id="cb75-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb75-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb75-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-60"></span>
<span id="cb75-61">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare unique chars.</span></span>
<span id="cb75-62"></span>
<span id="cb75-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb75-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-66">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load lengths.</span></span>
<span id="cb75-67"></span>
<span id="cb75-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.  We use this later to invert the length comparison.</span></span>
<span id="cb75-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-71"></span>
<span id="cb75-72">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqq</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.</span></span>
<span id="cb75-73"></span>
<span id="cb75-74"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb75-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-77"></span>
<span id="cb75-78">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast length.</span></span>
<span id="cb75-79"></span>
<span id="cb75-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb75-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb75-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table, to find those that are greater in length.  Invert the result, such</span></span>
<span id="cb75-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; that we're left with a masked register where each 0xff element indicates</span></span>
<span id="cb75-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; a slot with a length less than or equal to our search string's length.</span></span>
<span id="cb75-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-87"></span>
<span id="cb75-88">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb75-89">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Invert the result.</span></span>
<span id="cb75-90"></span>
<span id="cb75-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-92"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect-and-test the unique character match xmm mask register (xmm5) with</span></span>
<span id="cb75-93"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the length match mask xmm register (xmm1).  This affects flags, allowing us</span></span>
<span id="cb75-94"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do a fast-path exit for the no-match case (where ZF = 1).</span></span>
<span id="cb75-95"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-96"></span>
<span id="cb75-97">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Check for no match.</span></span>
<span id="cb75-98">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; There was a match.</span></span>
<span id="cb75-99"></span>
<span id="cb75-100"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match, set rax to -1 and return.</span></span>
<span id="cb75-102"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-103"></span>
<span id="cb75-104">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb75-105">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb75-106">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb75-107"></span>
<span id="cb75-108">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb75-109"></span>
<span id="cb75-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-111"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Begin prologue.  Allocate stack space and save non-volatile registers.</span></span>
<span id="cb75-112"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-113"></span>
<span id="cb75-114"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx10:</span>  alloc_stack LOCALS_SIZE                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Allocate stack space.</span></span>
<span id="cb75-115"></span>
<span id="cb75-116">        push_eflags                                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save flags.</span></span>
<span id="cb75-117">        save_reg    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRsi            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save non-volatile rsi.</span></span>
<span id="cb75-118">        save_reg    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRdi            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save non-volatile rdi.</span></span>
<span id="cb75-119"></span>
<span id="cb75-120">        END_PROLOGUE</span>
<span id="cb75-121"></span>
<span id="cb75-122"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-123"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (There was at least one match, continue with processing.)</span></span>
<span id="cb75-124"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-125"></span>
<span id="cb75-126"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-127"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Calculate the "search length" for the incoming search string, which is</span></span>
<span id="cb75-128"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equivalent of 'min(String-&gt;Length, 16)'.  (The search string's length</span></span>
<span id="cb75-129"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; currently lives in xmm4, albeit as a byte-value broadcasted across the</span></span>
<span id="cb75-130"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; entire register, so extract that first.)</span></span>
<span id="cb75-131"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-132"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Once the search length is calculated, deposit it back at the second byte</span></span>
<span id="cb75-133"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location of xmm4.</span></span>
<span id="cb75-134"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-135"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 and xmm4[15:8] - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb75-136"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-137"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length (String-&gt;Length)</span></span>
<span id="cb75-138"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-139"></span>
<span id="cb75-140">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load length.</span></span>
<span id="cb75-141">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load 16 into rax.</span></span>
<span id="cb75-142">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy into r10.</span></span>
<span id="cb75-143">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against 16.</span></span>
<span id="cb75-144">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmova</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Use 16 if length is greater.</span></span>
<span id="cb75-145">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save back to xmm4b[1].</span></span>
<span id="cb75-146"></span>
<span id="cb75-147"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-148"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our parameter registers into xmm registers instead of their stack-backed</span></span>
<span id="cb75-149"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location, to avoid memory writes.</span></span>
<span id="cb75-150"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-151"></span>
<span id="cb75-152">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm2.</span></span>
<span id="cb75-153">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rcx into xmm2q[0].</span></span>
<span id="cb75-154">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rdx into xmm2q[1].</span></span>
<span id="cb75-155"></span>
<span id="cb75-156"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-157"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm5, xmm1'),</span></span>
<span id="cb75-158"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; yielding a mask identifying indices we need to perform subsequent matches</span></span>
<span id="cb75-159"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; upon.  Convert this into a bitmap and save in xmm2d[2].</span></span>
<span id="cb75-160"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-161"></span>
<span id="cb75-162">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpand</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect unique + lengths.</span></span>
<span id="cb75-163">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Generate a bitmap from mask.</span></span>
<span id="cb75-164"></span>
<span id="cb75-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We're finished with xmm5; repurpose it in the same vein as xmm2 above.</span></span>
<span id="cb75-167"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-168"></span>
<span id="cb75-169">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm5.</span></span>
<span id="cb75-170">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save r8 into xmm5q[0].</span></span>
<span id="cb75-171"></span>
<span id="cb75-172"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-173"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Summary of xmm register stashing for the rest of the routine:</span></span>
<span id="cb75-174"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-175"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm2:</span></span>
<span id="cb75-176"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        0:63   (vpinsrq 0)     rcx (1st function parameter, StringTable)</span></span>
<span id="cb75-177"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       64:127  (vpinsrq 1)     rdx (2nd function paramter, String)</span></span>
<span id="cb75-178"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-179"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm4:</span></span>
<span id="cb75-180"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:7     (vpinsrb 0)     length of search string</span></span>
<span id="cb75-181"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16)</span></span>
<span id="cb75-182"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      16:23    (vpinsrb 2)     loop counter (when doing long string compares)</span></span>
<span id="cb75-183"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      24:31    (vpinsrb 3)     shift count</span></span>
<span id="cb75-184"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-185"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm5:</span></span>
<span id="cb75-186"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span></span>
<span id="cb75-187"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      64:95    (vpinsrd 2)     bitmap of slots to compare</span></span>
<span id="cb75-188"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      96:127   (vpinsrd 3)     index of slot currently being processed</span></span>
<span id="cb75-189"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-190"></span>
<span id="cb75-191"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-192"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Initialize rcx as our counter register by doing a popcnt against the bitmap</span></span>
<span id="cb75-193"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we just generated in edx, and clear our shift count register (r9).</span></span>
<span id="cb75-194"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-195"></span>
<span id="cb75-196">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits in bitmap.</span></span>
<span id="cb75-197">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear r9.</span></span>
<span id="cb75-198"></span>
<span id="cb75-199">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb75-200"></span>
<span id="cb75-201"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-202"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span></span>
<span id="cb75-203"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; trailing zeros of the bitmap, and then add in the shift count, producing an</span></span>
<span id="cb75-204"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; index (rax) we can use to load the corresponding slot.</span></span>
<span id="cb75-205"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-206"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Register usage at top of loop:</span></span>
<span id="cb75-207"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-208"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index.</span></span>
<span id="cb75-209"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-210"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - Loop counter.</span></span>
<span id="cb75-211"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-212"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rdx - Bitmap.</span></span>
<span id="cb75-213"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-214"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - Shift count.</span></span>
<span id="cb75-215"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-216"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 - Search length.</span></span>
<span id="cb75-217"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-218"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length.</span></span>
<span id="cb75-219"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-220"></span>
<span id="cb75-221"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx20:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tzcnt</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count trailing zeros.</span></span>
<span id="cb75-222">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy tzcnt to rax,</span></span>
<span id="cb75-223">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Add shift to create index.</span></span>
<span id="cb75-224">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; tzcnt + 1</span></span>
<span id="cb75-225">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shrx</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Reposition bitmap.</span></span>
<span id="cb75-226">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy index back to shift.</span></span>
<span id="cb75-227">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shift = Index + 1</span></span>
<span id="cb75-228">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store the raw index xmm5d[3].</span></span>
<span id="cb75-229"></span>
<span id="cb75-230"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-231"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span></span>
<span id="cb75-232"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span></span>
<span id="cb75-233"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-234"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, load the string table slot at this index into xmm1, then shift rax back.</span></span>
<span id="cb75-235"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-236"></span>
<span id="cb75-237">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb75-238">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb75-239">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span></span>
<span id="cb75-240">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb75-241"></span>
<span id="cb75-242"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-243"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The search string's first 16 characters are already in xmm0.  Compare this</span></span>
<span id="cb75-244"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; against the slot that has just been loaded into xmm1, storing the result back</span></span>
<span id="cb75-245"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.</span></span>
<span id="cb75-246"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-247"></span>
<span id="cb75-248">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare search string to slot.</span></span>
<span id="cb75-249"></span>
<span id="cb75-250"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-251"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert the XMM mask into a 32-bit representation, then zero high bits after</span></span>
<span id="cb75-252"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; our "search length", which allows us to ignore the results of the comparison</span></span>
<span id="cb75-253"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; above for bytes that were after the search string's length, if applicable.</span></span>
<span id="cb75-254"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, count the number of bits remaining, which tells us how many characters</span></span>
<span id="cb75-255"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we matched.</span></span>
<span id="cb75-256"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-257"></span>
<span id="cb75-258">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert into mask.</span></span>
<span id="cb75-259">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bzhi</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Zero high bits.</span></span>
<span id="cb75-260">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits.</span></span>
<span id="cb75-261"></span>
<span id="cb75-262"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-263"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If 16 characters matched, and the search string's length is longer than 16,</span></span>
<span id="cb75-264"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we're going to need to do a comparison of the remaining strings.</span></span>
<span id="cb75-265"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-266"></span>
<span id="cb75-267">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare chars matched to 16.</span></span>
<span id="cb75-268">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 chars matched.</span></span>
<span id="cb75-269">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx30                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than 16 matched.</span></span>
<span id="cb75-270"></span>
<span id="cb75-271"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-272"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All 16 characters matched.  Load the underlying slot's length from the</span></span>
<span id="cb75-273"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; relevant offset in the xmm3 register, then check to see if it's greater than,</span></span>
<span id="cb75-274"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equal or less than 16.</span></span>
<span id="cb75-275"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-276"></span>
<span id="cb75-277">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">movd</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load into xmm1.</span></span>
<span id="cb75-278">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle length...</span></span>
<span id="cb75-279">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; And extract back into rax.</span></span>
<span id="cb75-280">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare length to 16.</span></span>
<span id="cb75-281">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ja</span>          Pfx50                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length is &gt; 16.</span></span>
<span id="cb75-282">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Lengths match!</span></span>
<span id="cb75-283">                                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length &lt;= 16, fall through...</span></span>
<span id="cb75-284"></span>
<span id="cb75-285"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-286"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than or equal to 16 characters were matched.  Compare this against the</span></span>
<span id="cb75-287"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length of the search string; if equal, this is a match.</span></span>
<span id="cb75-288"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-289"></span>
<span id="cb75-290"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx30:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against search string.</span></span>
<span id="cb75-291">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Match found!</span></span>
<span id="cb75-292"></span>
<span id="cb75-293"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-294"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match against this slot, decrement counter and either continue the loop</span></span>
<span id="cb75-295"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; or terminate the search and return no match.</span></span>
<span id="cb75-296"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-297"></span>
<span id="cb75-298">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb75-299">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; cx != 0, continue.</span></span>
<span id="cb75-300"></span>
<span id="cb75-301">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb75-302">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb75-303">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb75-304"></span>
<span id="cb75-305"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-306"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span></span>
<span id="cb75-307"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; former is used when we need to copy the number of characters matched from r8</span></span>
<span id="cb75-308"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back to rax.  The latter jump target doesn't require this.</span></span>
<span id="cb75-309"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-310"></span>
<span id="cb75-311"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx35:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy numbers of chars matched.</span></span>
<span id="cb75-312"></span>
<span id="cb75-313"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-314"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the match parameter back into r8 and test to see if it's not-NULL, in</span></span>
<span id="cb75-315"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; which case we need to fill out a STRING_MATCH structure for the match.</span></span>
<span id="cb75-316"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-317"></span>
<span id="cb75-318"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx40:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringMatch.</span></span>
<span id="cb75-319">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is NULL?</span></span>
<span id="cb75-320">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not zero, need to fill out.</span></span>
<span id="cb75-321"></span>
<span id="cb75-322"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-323"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is NULL, we're done. Extract index of match back into rax and ret.</span></span>
<span id="cb75-324"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-325"></span>
<span id="cb75-326">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb75-327">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch == NULL, finish.</span></span>
<span id="cb75-328"></span>
<span id="cb75-329"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-330"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span></span>
<span id="cb75-331"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; reload the index from xmm5 into rax and save.</span></span>
<span id="cb75-332"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-333"></span>
<span id="cb75-334">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>NumberOfMatchedCharacters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb75-335">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb75-336">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb75-337"></span>
<span id="cb75-338"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-339"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb75-340"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; involves going through the StringTable, so we need to load that parameter</span></span>
<span id="cb75-341"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back into rcx, then resolving the string array address via pStringArray,</span></span>
<span id="cb75-342"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then the relevant STRING offset within the StringArray.Strings structure.</span></span>
<span id="cb75-343"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-344"></span>
<span id="cb75-345">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into rcx.</span></span>
<span id="cb75-346">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb75-347"></span>
<span id="cb75-348">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb75-349">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb75-350">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save STRING ptr.</span></span>
<span id="cb75-351">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Revert the scaling.</span></span>
<span id="cb75-352"></span>
<span id="cb75-353">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90</span>
<span id="cb75-354"></span>
<span id="cb75-355"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-356"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb75-357"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb75-358"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string is a prefix match.</span></span>
<span id="cb75-359"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-360"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The slot length is stored in rax at this point, and the search string's</span></span>
<span id="cb75-361"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length is stored in r11.  We know that the search string's length will</span></span>
<span id="cb75-362"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; always be longer than or equal to the slot length at this point, so, we</span></span>
<span id="cb75-363"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; can subtract 16 (currently stored in r10) from rax, and use the resulting</span></span>
<span id="cb75-364"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; value as a loop counter, comparing the search string with the underlying</span></span>
<span id="cb75-365"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string slot byte-by-byte to determine if there's a match.</span></span>
<span id="cb75-366"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-367"></span>
<span id="cb75-368"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx50:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sub</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Subtract 16 from search length.</span></span>
<span id="cb75-369"></span>
<span id="cb75-370"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-371"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up some registers by stashing their values into various xmm offsets.</span></span>
<span id="cb75-372"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-373"></span>
<span id="cb75-374">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rdx register.</span></span>
<span id="cb75-375">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rcx register.</span></span>
<span id="cb75-376">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rax, rcx is now counter.</span></span>
<span id="cb75-377"></span>
<span id="cb75-378"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-379"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the search string buffer and advance it 16 bytes.</span></span>
<span id="cb75-380"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-381"></span>
<span id="cb75-382">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract String into r11.</span></span>
<span id="cb75-383">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer address.</span></span>
<span id="cb75-384">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb75-385"></span>
<span id="cb75-386"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-387"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Loading the slot is more involved as we have to go to the string table, then</span></span>
<span id="cb75-388"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the pStringArray pointer, then the relevant STRING offset within the string</span></span>
<span id="cb75-389"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; array (which requires re-loading the index from xmm5d[3]), then the string</span></span>
<span id="cb75-390"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; buffer from that structure.</span></span>
<span id="cb75-391"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-392"></span>
<span id="cb75-393">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into r8.</span></span>
<span id="cb75-394">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb75-395"></span>
<span id="cb75-396">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract index from xmm5.</span></span>
<span id="cb75-397">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb75-398"></span>
<span id="cb75-399">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb75-400">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string table buffer address.</span></span>
<span id="cb75-401">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb75-402"></span>
<span id="cb75-403">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy counter.</span></span>
<span id="cb75-404"></span>
<span id="cb75-405"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-406"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span></span>
<span id="cb75-407"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set up rsi/rdi so we can do a 'rep cmps'.</span></span>
<span id="cb75-408"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-409"></span>
<span id="cb75-410">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cld</span></span>
<span id="cb75-411">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span></span>
<span id="cb75-412">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span></span>
<span id="cb75-413">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repe</span>        cmpsb</span>
<span id="cb75-414"></span>
<span id="cb75-415">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb75-416">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx60                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not all bytes compared, jump.</span></span>
<span id="cb75-417"></span>
<span id="cb75-418"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-419"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span></span>
<span id="cb75-420"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; how many characters we matched, and then jump to Pfx40 for finalization.</span></span>
<span id="cb75-421"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-422"></span>
<span id="cb75-423">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span></span>
<span id="cb75-424">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx40</span>
<span id="cb75-425"></span>
<span id="cb75-426"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-427"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Byte comparisons were not equal.  Restore the rcx loop counter and decrement</span></span>
<span id="cb75-428"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it.  If it's zero, we have no more strings to compare, so we can do a quick</span></span>
<span id="cb75-429"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; exit.  If there are still comparisons to be made, restore the other registers</span></span>
<span id="cb75-430"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we trampled then jump back to the start of the loop Pfx20.</span></span>
<span id="cb75-431"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-432"></span>
<span id="cb75-433"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx60:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rcx counter.</span></span>
<span id="cb75-434">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb75-435">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Jump forward if not zero.</span></span>
<span id="cb75-436"></span>
<span id="cb75-437"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-438"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No more comparisons remaining, return.</span></span>
<span id="cb75-439"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-440"></span>
<span id="cb75-441">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb75-442">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb75-443">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span> Pfx90                               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb75-444"></span>
<span id="cb75-445"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-446"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; More comparisons remain; restore the registers we clobbered and continue loop.</span></span>
<span id="cb75-447"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb75-448"></span>
<span id="cb75-449">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r10.</span></span>
<span id="cb75-450">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r11.</span></span>
<span id="cb75-451">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb75-452">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Continue comparisons.</span></span>
<span id="cb75-453"></span>
<span id="cb75-454">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb75-455"></span>
<span id="cb75-456">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb75-457"></span>
<span id="cb75-458"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx90:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRsi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rsi.</span></span>
<span id="cb75-459">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRdi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdi.</span></span>
<span id="cb75-460">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popfq</span>                                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore flags.</span></span>
<span id="cb75-461">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LOCALS_SIZE                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Deallocate stack space.</span></span>
<span id="cb75-462"></span>
<span id="cb75-463">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb75-464"></span>
<span id="cb75-465">        NESTED_END   IsPrefixOfStringInTable_x64_7<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb75-466"></span>
<span id="cb75-467"></span>
<span id="cb75-468"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></span></code></pre></div>
</div>
</div>
</div>
<p>Let’s see how that change impacts the runtime function entry with regards to the unwind code information. Here’s the entry for assembly version 3:</p>
<hr>
<div class="sourceCode" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb76-1">0:000&gt; .fnent StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_x64_3</span>
<span id="cb76-2">Debugger function entry <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00000185</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`395f2a88 for:</span></span>
<span id="cb76-3">Exact matches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb76-4">    StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_x64_3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>void<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb76-5"></span>
<span id="cb76-6">BeginAddress      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00000000</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`00003dc0</span></span>
<span id="cb76-7">EndAddress        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00000000</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`00003fb0</span></span>
<span id="cb76-8">UnwindInfoAddress <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00000000</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`00005508</span></span>
<span id="cb76-9"></span>
<span id="cb76-10">Unwind info <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">at</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00007</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">fff</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`f8425508, 10 bytes</span></span>
<span id="cb76-11">  version <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> flags <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> prolog f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> codes <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb76-12">  00: offs f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>    UWOP_SAVE_NONVOL FrameOffset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> reg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb76-13">  02: offs a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>    UWOP_SAVE_NONVOL FrameOffset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> reg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb76-14">  04: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>    UWOP_ALLOC_SMALL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb76-15">  05: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>    UWOP_ALLOC_SMALL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb76-16">&lt;/pre<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&lt;/</span>small<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<hr>
<p>Compare that to the entry for the routine we just wrote, version 7, with the prologue appearing much later in the routine:</p>
<hr>
<div class="sourceCode" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb77-1">0:000&gt; .fnent StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_x64_7</span>
<span id="cb77-2">Debugger function entry <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00000185</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`395f2a88 for:</span></span>
<span id="cb77-3">Exact matches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb77-4">    StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_x64_7 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>void<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb77-5"></span>
<span id="cb77-6">BeginAddress      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00000000</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`00004540</span></span>
<span id="cb77-7">EndAddress        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00000000</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`00004730</span></span>
<span id="cb77-8">UnwindInfoAddress <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00000000</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`00005530</span></span>
<span id="cb77-9"></span>
<span id="cb77-10">Unwind info <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">at</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00007</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">fff</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`f8425530, 10 bytes</span></span>
<span id="cb77-11">  version <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> flags <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> prolog <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">c</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> codes <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb77-12">  00: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">c</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>   UWOP_SAVE_NONVOL FrameOffset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> reg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb77-13">  02: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">47</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>   UWOP_SAVE_NONVOL FrameOffset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> reg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb77-14">  04: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>   UWOP_ALLOC_SMALL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb77-15">  05: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>   UWOP_ALLOC_SMALL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span></code></pre></div>
<hr>
<p>As you can see, the <code>prolog</code> value has changed to <code>0x4c</code>, and the offsets for each entry have also changed accordingly. Let’s disassemble the function and see if we can correlate the addresses of our prologue instructions to the offsets indicated above:</p>
<hr>
<div class="sourceCode" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb78-1">0:000&gt; uf StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_x64_7</span>
<span id="cb78-2">StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_x64_7<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb78-3">00007fff`f8424540 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">488</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">b4208</span>        mov     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb78-4">00007fff`f8424544 c5fa6f00        vmovdqu <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb78-5">00007fff`f8424548 c5f96f4910      vmovdqa <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">10h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb78-6">00007fff`f842454d c4e27900e9      vpshufb <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb78-7">00007fff`f8424552 c5f96f11        vmovdqa <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb78-8">00007fff`f8424556 c5d174ea        vpcmpeqb <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span></span>
<span id="cb78-9">00007fff`f842455a c5f96f5920      vmovdqa <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">20h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb78-10">00007fff`f842455f c4e26929d2      vpcmpeqq <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span></span>
<span id="cb78-11">00007fff`f8424564 c4e2797822      vpbroadcastb <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb78-12">00007fff`f8424569 c5e164cc        vpcmpgtb <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span></span>
<span id="cb78-13">00007fff`f842456d c5f1efca        vpxor   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span></span>
<span id="cb78-14">00007fff`f8424571 c4e27917e9      vptest  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb78-15">00007fff`f8424576 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7505</span>            jne     StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_x64_7<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x3d</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00007</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">fff</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`f842457d)</span></span>
<span id="cb78-16"></span>
<span id="cb78-17">StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_x64_7<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x38</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb78-18">00007fff`f8424578 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">c0</span>            xor     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span></span>
<span id="cb78-19">00007fff`f842457a f6d0            not     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb78-20">00007fff`f842457c c3              ret</span>
<span id="cb78-21"></span>
<span id="cb78-22">StringTable2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>IsPrefixOfStringInTable_x64_7<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x3d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb78-23">00007fff`f842457d <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4883</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">ec20</span>        sub     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">20h</span></span>
<span id="cb78-24">00007fff`f8424581 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">c</span>              pushfq</span>
<span id="cb78-25">00007fff`f8424582 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4889742410</span>      mov     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">10h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span></span>
<span id="cb78-26">00007fff`f8424587 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48897</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">c2408</span>      mov     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span></span>
<span id="cb78-27">00007fff`f842458c c4c37914e300    vpextrb <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb78-28">00007fff`f8424592 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">c7c010000000</span>  mov     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">10h</span></span></code></pre></div>
<hr>
<p>All of the addresses share <code>0x00007fff'f8424</code> as the first 13 digits, so we can ignore that part to simplify the values we’re working with. Let’s take a look at the first of our prologue instructions, <code>sub rsp, 20h</code>. This maps to our <code>alloc_stack LOCALS_SIZE</code> line:</p>
<div class="sourceCode" id="cb79" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb79-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx10:</span>  alloc_stack LOCALS_SIZE                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Allocate stack space.</span></span>
<span id="cb79-2"></span>
<span id="cb79-3">        push_eflags                                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save flags.</span></span>
<span id="cb79-4">        save_reg    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRsi            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save non-volatile rsi.</span></span>
<span id="cb79-5">        save_reg    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRdi            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save non-volatile rdi.</span></span>
<span id="cb79-6"></span>
<span id="cb79-7">        END_PROLOGUE</span></code></pre></div>
<p>The <code>sub rsp, 20h</code> line appears at byte offset <code>0x57d</code>. If we subtract that from the address of the very first instruction, <code>0x540</code>, we get 61, or <code>0x3d</code> in hex.</p>
<p>Hmmmm. That doesn’t map to any of the offsets that appear in version 7’s runtime function entry. Let’s try the address of the <code>pushfq</code> instruction, which is at offset <code>0x581</code>. If we subtract the start address <code>0x540</code> from that, we’re left with 65, which in hex is, <em>drum roll</em>, <code>0x41</code>! That matches the last line of the runtime function entry:</p>
<div class="sourceCode" id="cb80" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb80-1">  00: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">c</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>   UWOP_SAVE_NONVOL FrameOffset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> reg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb80-2">  02: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">47</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>   UWOP_SAVE_NONVOL FrameOffset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> reg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb80-3">  04: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>   UWOP_ALLOC_SMALL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb80-4">  05: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>   UWOP_ALLOC_SMALL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb80-5">      ^^^^^^^</span></code></pre></div>
<p>That makes sense if we think about the purpose of the unwind entries. They are there for the kernel to compare against a faulting instruction’s address (i. e. , the value contained in the RIP register at the time of the fault) to determine what needs to be unwound as part of exception handling. In this case, at byte offset <code>0x41</code>, the <code>sub rsp, 20h</code> instruction will have already been executed, so the kernel knows it needs to unwind this (e. g. , by doing what will effectively equate to <code>add rsp, 20h</code>) within the exception handling logic when it needs to unwind the entire frame and restore all of the non-volatile registers.</p>
<p>If we take a look at the first instruction <strong>after</strong> our last prologue instruction, <code>vpextrb r11d, xmm4, 0</code>, it resides at address offset <code>0x58c</code>. Subtracting the start address <code>0x540</code> from that, we get 76, which is <code>0x4c</code> in hex, matching the offset of the last unwind entry, as well as the prologue endpoint:</p>
<div class="sourceCode" id="cb81" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb81-1">Unwind info <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">at</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">00007</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">fff</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`f8425530, 10 bytes</span></span>
<span id="cb81-2">  version <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> flags <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> prolog <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">c</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> codes <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb81-3">                      ^^^^^^^^^</span>
<span id="cb81-4">  00: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">c</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>   UWOP_SAVE_NONVOL FrameOffset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> reg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb81-5">      ^^^^^^^</span>
<span id="cb81-6">  02: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">47</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>   UWOP_SAVE_NONVOL FrameOffset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> reg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb81-7">  04: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>   UWOP_ALLOC_SMALL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb81-8">  05: offs <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> unwind op <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> op info <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>   UWOP_ALLOC_SMALL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span></code></pre></div>
<p>The reason that the prologue must occur within the first 255 bytes of the function is simply due to the fact that the prologue size and offsets are stored using a single byte, so 255 is the maximum value that can be represented. When writing a <code>NESTED_ENTRY</code> with MASM, you need to have the <code>END_PROLOGUE</code> macro (which expands to <code>. endprolog</code>) occur within the first 255 bytes of your function.</p>
<p>If we move the <code>END_PROLOGUE</code> line in version 7 way down to the bottom of the routine and try and compile, MASM balks:</p>
<pre><code>IsPrefixOfStringInTable_x64_7.asm(511): error A2247: size of prolog too big, must be &gt; 256 bytes</code></pre>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>I have no idea why the spelling of prolog vs prologue and epilog vs epilogue is so inconsistent within the Microsoft tooling and docs.</p>
</div>
</div>
<p>Let’s get back on track. We need to review the performance of version 7 to see if relocating the prologue has any impact on the negative matching performance of the routine. If it does, this is a strong indicator that it’s at fault, especially if the prefix matching still shows the same performance issues. Here’s the comparison.</p>
<section id="benchmark-x64-7" class="level3 unlisted">
<h3 class="unlisted anchored" data-anchor-id="benchmark-x64-7">Benchmark x64 7</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-07-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-07-v1.svg" class="img-fluid figure-img" alt="Benchmark-x64-07-v1"></a></p>
<figcaption>Benchmark-x64-07-v1</figcaption>
</figure>
</div>
<p>Hah! Look at that, the negative match performance is back on par with version 2. So, the blame now squarely points to something peculiar in the prologue inducing a huge (well, relatively huge) performance hit. But the prologue is so simple! It’s only pushing flags, and two registers!</p>
</section>
<section id="isprefixofstringintable_x64_8" class="level3">
<h3 class="anchored" data-anchor-id="isprefixofstringintable_x64_8">IsPrefixOfStringInTable_x64_8</h3>
<p>I know register pushing is cheap. Borderline free in the grand scheme of things. Flags though. Flags are an interesting one. The bane of the out-of-order CPU pipeline, they could very well be forcing a synchronization point within the code, preventing all the contemporary goodies you get when you let the CPU do its thing whenever it wants, rather than when you need. (Goodies like… Meltdown!)</p>
<p>Let’s test the theory. We’ll take version 7 and simply comment out the flag pushing and popping behavior.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Technically we’re not allowed to do that; the direction indicator is classed as non-volatile; if the calling function has it set to reverse, and on return, we’ve set it to forward, things are going to be problematic if it actually <strong>wanted</strong> it set to reverse. In practice, this isn’t that common. At least with our current stack, what with our aversion to even using a C runtime library, we know nothing in our benchmark environment is going to be faced with that predicament.</p>
</div>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-23-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-23-1" aria-controls="tabset-23-1" aria-selected="true">Diff (8 v 7)</a></li><li class="nav-item"><a class="nav-link" id="tabset-23-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-23-2" aria-controls="tabset-23-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-23-1" class="tab-pane active" aria-labelledby="tabset-23-1-tab">
<div class="sourceCode" id="cb83" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb83-1">% diff -u IsPrefixOfStringInTable_x64_7.asm IsPrefixOfStringInTable_x64_8.asm</span>
<span id="cb83-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_x64_7.asm   2018-04-29 21:10:09.061479900 -0400</span></span>
<span id="cb83-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_x64_8.asm   2018-04-29 22:08:02.761164300 -0400</span></span>
<span id="cb83-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -58,8 +58,9 @@</span></span>
<span id="cb83-5"> ;   search string.  That is, whether any string in the table "starts with</span>
<span id="cb83-6"> ;   or is equal to" the search string.</span>
<span id="cb83-7"> ;</span>
<span id="cb83-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   This routine is based off version 3, but relocates the prologue code to</span></span>
<span id="cb83-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   after the initial negative match logic (jump target Pfx10).</span></span>
<span id="cb83-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   This routine is based off version 7, but comments-out the pushing and</span></span>
<span id="cb83-11"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   popping of flags to the stack in the prologue and epilogue, respectively,</span></span>
<span id="cb83-12"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   in order to test a theory regarding performance.</span></span>
<span id="cb83-13"> ;</span>
<span id="cb83-14"> ; Arguments:</span>
<span id="cb83-15"> ;</span>
<span id="cb83-16"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -78,8 +79,7 @@</span></span>
<span id="cb83-17"> ;</span>
<span id="cb83-18"> ;--</span>
<span id="cb83-19"></span>
<span id="cb83-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        NESTED_ENTRY IsPrefixOfStringInTable_x64_7, _TEXT$00</span></span>
<span id="cb83-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb83-22"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        NESTED_ENTRY IsPrefixOfStringInTable_x64_8, _TEXT$00</span></span>
<span id="cb83-23"> ;</span>
<span id="cb83-24"> ; Load the string buffer into xmm0, and the unique indexes from the string table</span>
<span id="cb83-25"> ; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span>
<span id="cb83-26"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -158,7 +158,7 @@</span></span>
<span id="cb83-27"></span>
<span id="cb83-28"> Pfx10:  alloc_stack LOCALS_SIZE                     ; Allocate stack space.</span>
<span id="cb83-29"></span>
<span id="cb83-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        push_eflags                                 ; Save flags.</span></span>
<span id="cb83-31"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+       ;push_eflags                                 ; Save flags.</span></span>
<span id="cb83-32">         save_reg    rsi, Locals.SavedRsi            ; Save non-volatile rsi.</span>
<span id="cb83-33">         save_reg    rdi, Locals.SavedRdi            ; Save non-volatile rdi.</span>
<span id="cb83-34"></span>
<span id="cb83-35"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -502,12 +502,12 @@</span></span>
<span id="cb83-36"></span>
<span id="cb83-37"> Pfx90:  mov     rsi, Locals.SavedRsi[rsp]       ; Restore rsi.</span>
<span id="cb83-38">         mov     rdi, Locals.SavedRdi[rsp]       ; Restore rdi.</span>
<span id="cb83-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        popfq                                   ; Restore flags.</span></span>
<span id="cb83-40"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+       ;popfq                                   ; Restore flags.</span></span>
<span id="cb83-41">         add     rsp, LOCALS_SIZE                ; Deallocate stack space.</span>
<span id="cb83-42"></span>
<span id="cb83-43">         ret</span>
<span id="cb83-44"></span>
<span id="cb83-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        NESTED_END   IsPrefixOfStringInTable_x64_7, _TEXT$00</span></span>
<span id="cb83-46"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        NESTED_END   IsPrefixOfStringInTable_x64_8, _TEXT$00</span></span>
<span id="cb83-47"></span>
<span id="cb83-48"></span>
<span id="cb83-49">; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></code></pre></div>
</div>
<div id="tabset-23-2" class="tab-pane" aria-labelledby="tabset-23-2-tab">
<div class="sourceCode" id="cb84" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb84-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Define a locals struct for saving flags, rsi and rdi.</span></span>
<span id="cb84-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-4"></span>
<span id="cb84-5">Locals struct</span>
<span id="cb84-6"></span>
<span id="cb84-7">    Padding             <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb84-8">    SavedRdi            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb84-9">    SavedRsi            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb84-10">    SavedFlags          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb84-11"></span>
<span id="cb84-12">    ReturnAddress       <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb84-13">    HomeRcx             <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb84-14">    HomeRdx             <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb84-15">    HomeR8              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb84-16">    HomeR9              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dq</span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb84-17"></span>
<span id="cb84-18">Locals ends</span>
<span id="cb84-19"></span>
<span id="cb84-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Exclude the return address onward from the frame calculation size.</span></span>
<span id="cb84-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-23"></span>
<span id="cb84-24">LOCALS_SIZE  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">equ</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>sizeof Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>ReturnAddress <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sizeof Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)))</span></span>
<span id="cb84-25"></span>
<span id="cb84-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;++</span></span>
<span id="cb84-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; STRING_TABLE_INDEX</span></span>
<span id="cb84-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; IsPrefixOfStringInTable_x64_*(</span></span>
<span id="cb84-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING_TABLE StringTable,</span></span>
<span id="cb84-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING String,</span></span>
<span id="cb84-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _Out_opt_ PSTRING_MATCH Match</span></span>
<span id="cb84-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     )</span></span>
<span id="cb84-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Routine Description:</span></span>
<span id="cb84-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb84-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb84-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   or is equal to" the search string.</span></span>
<span id="cb84-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   This routine is based off version 7, but comments out the pushing and</span></span>
<span id="cb84-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   popping of flags to the stack in the prologue and epilogue, respectively,</span></span>
<span id="cb84-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   in order to test a theory regarding performance.</span></span>
<span id="cb84-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Arguments:</span></span>
<span id="cb84-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb84-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb84-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       search for.</span></span>
<span id="cb84-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb84-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb84-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb84-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return Value:</span></span>
<span id="cb84-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb84-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;--</span></span>
<span id="cb84-61"></span>
<span id="cb84-62">        NESTED_ENTRY IsPrefixOfStringInTable_x64_8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb84-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string buffer into xmm0, and the unique indexes from the string table</span></span>
<span id="cb84-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span></span>
<span id="cb84-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; result into xmm5.</span></span>
<span id="cb84-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-68"></span>
<span id="cb84-69">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_START</span></span>
<span id="cb84-70"></span>
<span id="cb84-71">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb84-72">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb84-73">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load indexes.</span></span>
<span id="cb84-74">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb84-75"></span>
<span id="cb84-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string table's unique character array into xmm2.</span></span>
<span id="cb84-78"></span>
<span id="cb84-79">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load chars.</span></span>
<span id="cb84-80"></span>
<span id="cb84-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb84-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb84-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-85"></span>
<span id="cb84-86">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare unique chars.</span></span>
<span id="cb84-87"></span>
<span id="cb84-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb84-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-91">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load lengths.</span></span>
<span id="cb84-92"></span>
<span id="cb84-93"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-94"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.  We use this later to invert the length comparison.</span></span>
<span id="cb84-95"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-96"></span>
<span id="cb84-97">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqq</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.</span></span>
<span id="cb84-98"></span>
<span id="cb84-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-100"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb84-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-102"></span>
<span id="cb84-103">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast length.</span></span>
<span id="cb84-104"></span>
<span id="cb84-105"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-106"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb84-107"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb84-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table, to find those that are greater in length.  Invert the result, such</span></span>
<span id="cb84-109"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; that we're left with a masked register where each 0xff element indicates</span></span>
<span id="cb84-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; a slot with a length less than or equal to our search string's length.</span></span>
<span id="cb84-111"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-112"></span>
<span id="cb84-113">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb84-114">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Invert the result.</span></span>
<span id="cb84-115"></span>
<span id="cb84-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect-and-test the unique character match xmm mask register (xmm5) with</span></span>
<span id="cb84-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the length match mask xmm register (xmm1).  This affects flags, allowing us</span></span>
<span id="cb84-119"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do a fast-path exit for the no-match case (where ZF = 1).</span></span>
<span id="cb84-120"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-121"></span>
<span id="cb84-122">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Check for no match.</span></span>
<span id="cb84-123">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; There was a match.</span></span>
<span id="cb84-124"></span>
<span id="cb84-125"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-126"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match, set rax to -1 and return.</span></span>
<span id="cb84-127"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-128"></span>
<span id="cb84-129">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb84-130">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb84-131">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb84-132"></span>
<span id="cb84-133">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb84-134"></span>
<span id="cb84-135"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-136"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Begin prologue.  Allocate stack space and save non-volatile registers.</span></span>
<span id="cb84-137"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-138"></span>
<span id="cb84-139"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx10:</span>  alloc_stack LOCALS_SIZE                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Allocate stack space.</span></span>
<span id="cb84-140"></span>
<span id="cb84-141">       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;push_eflags                                 ; Save flags.</span></span>
<span id="cb84-142">        save_reg    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRsi            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save non-volatile rsi.</span></span>
<span id="cb84-143">        save_reg    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRdi            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save non-volatile rdi.</span></span>
<span id="cb84-144"></span>
<span id="cb84-145">        END_PROLOGUE</span>
<span id="cb84-146"></span>
<span id="cb84-147"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-148"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (There was at least one match, continue with processing.)</span></span>
<span id="cb84-149"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-150"></span>
<span id="cb84-151"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-152"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Calculate the "search length" for the incoming search string, which is</span></span>
<span id="cb84-153"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equivalent of 'min(String-&gt;Length, 16)'.  (The search string's length</span></span>
<span id="cb84-154"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; currently lives in xmm4, albeit as a byte-value broadcasted across the</span></span>
<span id="cb84-155"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; entire register, so extract that first.)</span></span>
<span id="cb84-156"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-157"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Once the search length is calculated, deposit it back at the second byte</span></span>
<span id="cb84-158"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location of xmm4.</span></span>
<span id="cb84-159"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-160"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 and xmm4[15:8] - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb84-161"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length (String-&gt;Length)</span></span>
<span id="cb84-163"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-164"></span>
<span id="cb84-165">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load length.</span></span>
<span id="cb84-166">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load 16 into rax.</span></span>
<span id="cb84-167">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy into r10.</span></span>
<span id="cb84-168">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against 16.</span></span>
<span id="cb84-169">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmova</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Use 16 if length is greater.</span></span>
<span id="cb84-170">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save back to xmm4b[1].</span></span>
<span id="cb84-171"></span>
<span id="cb84-172"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-173"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our parameter registers into xmm registers instead of their stack-backed</span></span>
<span id="cb84-174"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location, to avoid memory writes.</span></span>
<span id="cb84-175"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-176"></span>
<span id="cb84-177">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm2.</span></span>
<span id="cb84-178">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rcx into xmm2q[0].</span></span>
<span id="cb84-179">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rdx into xmm2q[1].</span></span>
<span id="cb84-180"></span>
<span id="cb84-181"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-182"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm5, xmm1'),</span></span>
<span id="cb84-183"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; yielding a mask identifying indices we need to perform subsequent matches</span></span>
<span id="cb84-184"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; upon.  Convert this into a bitmap and save in xmm2d[2].</span></span>
<span id="cb84-185"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-186"></span>
<span id="cb84-187">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpand</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect unique + lengths.</span></span>
<span id="cb84-188">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Generate a bitmap from mask.</span></span>
<span id="cb84-189"></span>
<span id="cb84-190"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-191"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We're finished with xmm5; repurpose it in the same vein as xmm2 above.</span></span>
<span id="cb84-192"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-193"></span>
<span id="cb84-194">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm5.</span></span>
<span id="cb84-195">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save r8 into xmm5q[0].</span></span>
<span id="cb84-196"></span>
<span id="cb84-197"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-198"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Summary of xmm register stashing for the rest of the routine:</span></span>
<span id="cb84-199"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-200"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm2:</span></span>
<span id="cb84-201"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        0:63   (vpinsrq 0)     rcx (1st function parameter, StringTable)</span></span>
<span id="cb84-202"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       64:127  (vpinsrq 1)     rdx (2nd function paramter, String)</span></span>
<span id="cb84-203"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-204"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm4:</span></span>
<span id="cb84-205"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:7     (vpinsrb 0)     length of search string</span></span>
<span id="cb84-206"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16)</span></span>
<span id="cb84-207"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      16:23    (vpinsrb 2)     loop counter (when doing long string compares)</span></span>
<span id="cb84-208"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      24:31    (vpinsrb 3)     shift count</span></span>
<span id="cb84-209"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-210"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm5:</span></span>
<span id="cb84-211"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span></span>
<span id="cb84-212"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      64:95    (vpinsrd 2)     bitmap of slots to compare</span></span>
<span id="cb84-213"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      96:127   (vpinsrd 3)     index of slot currently being processed</span></span>
<span id="cb84-214"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-215"></span>
<span id="cb84-216"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-217"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Initialize rcx as our counter register by doing a popcnt against the bitmap</span></span>
<span id="cb84-218"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we just generated in edx, and clear our shift count register (r9).</span></span>
<span id="cb84-219"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-220"></span>
<span id="cb84-221">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits in bitmap.</span></span>
<span id="cb84-222">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear r9.</span></span>
<span id="cb84-223"></span>
<span id="cb84-224">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb84-225"></span>
<span id="cb84-226"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-227"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span></span>
<span id="cb84-228"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; trailing zeros of the bitmap, and then add in the shift count, producing an</span></span>
<span id="cb84-229"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; index (rax) we can use to load the corresponding slot.</span></span>
<span id="cb84-230"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-231"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Register usage at top of loop:</span></span>
<span id="cb84-232"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-233"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index.</span></span>
<span id="cb84-234"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-235"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - Loop counter.</span></span>
<span id="cb84-236"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-237"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rdx - Bitmap.</span></span>
<span id="cb84-238"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-239"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - Shift count.</span></span>
<span id="cb84-240"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-241"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 - Search length.</span></span>
<span id="cb84-242"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-243"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length.</span></span>
<span id="cb84-244"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-245"></span>
<span id="cb84-246"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx20:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tzcnt</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count trailing zeros.</span></span>
<span id="cb84-247">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy tzcnt to rax,</span></span>
<span id="cb84-248">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Add shift to create index.</span></span>
<span id="cb84-249">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; tzcnt + 1</span></span>
<span id="cb84-250">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shrx</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Reposition bitmap.</span></span>
<span id="cb84-251">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy index back to shift.</span></span>
<span id="cb84-252">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shift = Index + 1</span></span>
<span id="cb84-253">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store the raw index xmm5d[3].</span></span>
<span id="cb84-254"></span>
<span id="cb84-255"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-256"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span></span>
<span id="cb84-257"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span></span>
<span id="cb84-258"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-259"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, load the string table slot at this index into xmm1, then shift rax back.</span></span>
<span id="cb84-260"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-261"></span>
<span id="cb84-262">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb84-263">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb84-264">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span></span>
<span id="cb84-265">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb84-266"></span>
<span id="cb84-267"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-268"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The search string's first 16 characters are already in xmm0.  Compare this</span></span>
<span id="cb84-269"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; against the slot that has just been loaded into xmm1, storing the result back</span></span>
<span id="cb84-270"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.</span></span>
<span id="cb84-271"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-272"></span>
<span id="cb84-273">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare search string to slot.</span></span>
<span id="cb84-274"></span>
<span id="cb84-275"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-276"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert the XMM mask into a 32-bit representation, then zero high bits after</span></span>
<span id="cb84-277"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; our "search length", which allows us to ignore the results of the comparison</span></span>
<span id="cb84-278"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; above for bytes that were after the search string's length, if applicable.</span></span>
<span id="cb84-279"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, count the number of bits remaining, which tells us how many characters</span></span>
<span id="cb84-280"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we matched.</span></span>
<span id="cb84-281"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-282"></span>
<span id="cb84-283">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert into mask.</span></span>
<span id="cb84-284">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bzhi</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Zero high bits.</span></span>
<span id="cb84-285">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits.</span></span>
<span id="cb84-286"></span>
<span id="cb84-287"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-288"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If 16 characters matched, and the search string's length is longer than 16,</span></span>
<span id="cb84-289"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we're going to need to do a comparison of the remaining strings.</span></span>
<span id="cb84-290"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-291"></span>
<span id="cb84-292">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare chars matched to 16.</span></span>
<span id="cb84-293">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 chars matched.</span></span>
<span id="cb84-294">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx30                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than 16 matched.</span></span>
<span id="cb84-295"></span>
<span id="cb84-296"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-297"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All 16 characters matched.  Load the underlying slot's length from the</span></span>
<span id="cb84-298"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; relevant offset in the xmm3 register, then check to see if it's greater than,</span></span>
<span id="cb84-299"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equal or less than 16.</span></span>
<span id="cb84-300"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-301"></span>
<span id="cb84-302">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">movd</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load into xmm1.</span></span>
<span id="cb84-303">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle length...</span></span>
<span id="cb84-304">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; And extract back into rax.</span></span>
<span id="cb84-305">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare length to 16.</span></span>
<span id="cb84-306">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ja</span>          Pfx50                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length is &gt; 16.</span></span>
<span id="cb84-307">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Lengths match!</span></span>
<span id="cb84-308">                                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length &lt;= 16, fall through...</span></span>
<span id="cb84-309"></span>
<span id="cb84-310"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-311"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than or equal to 16 characters were matched.  Compare this against the</span></span>
<span id="cb84-312"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length of the search string; if equal, this is a match.</span></span>
<span id="cb84-313"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-314"></span>
<span id="cb84-315"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx30:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against search string.</span></span>
<span id="cb84-316">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Match found!</span></span>
<span id="cb84-317"></span>
<span id="cb84-318"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-319"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match against this slot, decrement counter and either continue the loop</span></span>
<span id="cb84-320"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; or terminate the search and return no match.</span></span>
<span id="cb84-321"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-322"></span>
<span id="cb84-323">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb84-324">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; cx != 0, continue.</span></span>
<span id="cb84-325"></span>
<span id="cb84-326">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb84-327">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb84-328">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb84-329"></span>
<span id="cb84-330"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-331"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span></span>
<span id="cb84-332"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; former is used when we need to copy the number of characters matched from r8</span></span>
<span id="cb84-333"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back to rax.  The latter jump target doesn't require this.</span></span>
<span id="cb84-334"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-335"></span>
<span id="cb84-336"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx35:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy numbers of chars matched.</span></span>
<span id="cb84-337"></span>
<span id="cb84-338"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-339"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the match parameter back into r8 and test to see if it's not-NULL, in</span></span>
<span id="cb84-340"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; which case we need to fill out a STRING_MATCH structure for the match.</span></span>
<span id="cb84-341"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-342"></span>
<span id="cb84-343"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx40:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringMatch.</span></span>
<span id="cb84-344">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is NULL?</span></span>
<span id="cb84-345">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not zero, need to fill out.</span></span>
<span id="cb84-346"></span>
<span id="cb84-347"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-348"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is NULL, we're done. Extract index of match back into rax and ret.</span></span>
<span id="cb84-349"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-350"></span>
<span id="cb84-351">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb84-352">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch == NULL, finish.</span></span>
<span id="cb84-353"></span>
<span id="cb84-354"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-355"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span></span>
<span id="cb84-356"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; reload the index from xmm5 into rax and save.</span></span>
<span id="cb84-357"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-358"></span>
<span id="cb84-359">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>NumberOfMatchedCharacters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb84-360">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb84-361">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb84-362"></span>
<span id="cb84-363"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-364"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb84-365"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; involves going through the StringTable, so we need to load that parameter</span></span>
<span id="cb84-366"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back into rcx, then resolving the string array address via pStringArray,</span></span>
<span id="cb84-367"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then the relevant STRING offset within the StringArray.Strings structure.</span></span>
<span id="cb84-368"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-369"></span>
<span id="cb84-370">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into rcx.</span></span>
<span id="cb84-371">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb84-372"></span>
<span id="cb84-373">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb84-374">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb84-375">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save STRING ptr.</span></span>
<span id="cb84-376">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Revert the scaling.</span></span>
<span id="cb84-377"></span>
<span id="cb84-378">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90</span>
<span id="cb84-379"></span>
<span id="cb84-380"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-381"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb84-382"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb84-383"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string is a prefix match.</span></span>
<span id="cb84-384"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-385"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The slot length is stored in rax at this point, and the search string's</span></span>
<span id="cb84-386"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length is stored in r11.  We know that the search string's length will</span></span>
<span id="cb84-387"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; always be longer than or equal to the slot length at this point, so, we</span></span>
<span id="cb84-388"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; can subtract 16 (currently stored in r10) from rax, and use the resulting</span></span>
<span id="cb84-389"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; value as a loop counter, comparing the search string with the underlying</span></span>
<span id="cb84-390"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string slot byte-by-byte to determine if there's a match.</span></span>
<span id="cb84-391"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-392"></span>
<span id="cb84-393"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx50:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sub</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Subtract 16 from search length.</span></span>
<span id="cb84-394"></span>
<span id="cb84-395"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-396"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up some registers by stashing their values into various xmm offsets.</span></span>
<span id="cb84-397"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-398"></span>
<span id="cb84-399">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rdx register.</span></span>
<span id="cb84-400">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rcx register.</span></span>
<span id="cb84-401">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rax, rcx is now counter.</span></span>
<span id="cb84-402"></span>
<span id="cb84-403"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-404"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the search string buffer and advance it 16 bytes.</span></span>
<span id="cb84-405"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-406"></span>
<span id="cb84-407">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract String into r11.</span></span>
<span id="cb84-408">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer address.</span></span>
<span id="cb84-409">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb84-410"></span>
<span id="cb84-411"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-412"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Loading the slot is more involved as we have to go to the string table, then</span></span>
<span id="cb84-413"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the pStringArray pointer, then the relevant STRING offset within the string</span></span>
<span id="cb84-414"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; array (which requires re-loading the index from xmm5d[3]), then the string</span></span>
<span id="cb84-415"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; buffer from that structure.</span></span>
<span id="cb84-416"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-417"></span>
<span id="cb84-418">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into r8.</span></span>
<span id="cb84-419">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb84-420"></span>
<span id="cb84-421">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract index from xmm5.</span></span>
<span id="cb84-422">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb84-423"></span>
<span id="cb84-424">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb84-425">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string table buffer address.</span></span>
<span id="cb84-426">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb84-427"></span>
<span id="cb84-428">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy counter.</span></span>
<span id="cb84-429"></span>
<span id="cb84-430"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-431"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span></span>
<span id="cb84-432"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set up rsi/rdi so we can do a 'rep cmps'.</span></span>
<span id="cb84-433"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-434"></span>
<span id="cb84-435">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cld</span></span>
<span id="cb84-436">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span></span>
<span id="cb84-437">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span></span>
<span id="cb84-438">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repe</span>        cmpsb</span>
<span id="cb84-439"></span>
<span id="cb84-440">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb84-441">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx60                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not all bytes compared, jump.</span></span>
<span id="cb84-442"></span>
<span id="cb84-443"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-444"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span></span>
<span id="cb84-445"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; how many characters we matched, and then jump to Pfx40 for finalization.</span></span>
<span id="cb84-446"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-447"></span>
<span id="cb84-448">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span></span>
<span id="cb84-449">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx40</span>
<span id="cb84-450"></span>
<span id="cb84-451"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-452"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Byte comparisons were not equal.  Restore the rcx loop counter and decrement</span></span>
<span id="cb84-453"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it.  If it's zero, we have no more strings to compare, so we can do a quick</span></span>
<span id="cb84-454"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; exit.  If there are still comparisons to be made, restore the other registers</span></span>
<span id="cb84-455"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we trampled then jump back to the start of the loop Pfx20.</span></span>
<span id="cb84-456"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-457"></span>
<span id="cb84-458"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx60:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rcx counter.</span></span>
<span id="cb84-459">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb84-460">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Jump forward if not zero.</span></span>
<span id="cb84-461"></span>
<span id="cb84-462"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-463"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No more comparisons remaining, return.</span></span>
<span id="cb84-464"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-465"></span>
<span id="cb84-466">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb84-467">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb84-468">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span> Pfx90                               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb84-469"></span>
<span id="cb84-470"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-471"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; More comparisons remain; restore the registers we clobbered and continue loop.</span></span>
<span id="cb84-472"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-473"></span>
<span id="cb84-474">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r10.</span></span>
<span id="cb84-475">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r11.</span></span>
<span id="cb84-476">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb84-477">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Continue comparisons.</span></span>
<span id="cb84-478"></span>
<span id="cb84-479">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb84-480"></span>
<span id="cb84-481">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb84-482"></span>
<span id="cb84-483"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx90:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRsi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rsi.</span></span>
<span id="cb84-484">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Locals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SavedRdi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdi.</span></span>
<span id="cb84-485">       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;popfq                                   ; Restore flags.</span></span>
<span id="cb84-486">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rsp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> LOCALS_SIZE                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Deallocate stack space.</span></span>
<span id="cb84-487"></span>
<span id="cb84-488">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb84-489"></span>
<span id="cb84-490">        NESTED_END   IsPrefixOfStringInTable_x64_8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb84-491"></span>
<span id="cb84-492"></span>
<span id="cb84-493"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></span></code></pre></div>
</div>
</div>
</div>
<p>Let’s see how we perform when we cheat by not saving flags:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-08-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-08-v1.svg" class="img-fluid figure-img" alt="Benchmark-x64-08-v1"></a></p>
<figcaption>Benchmark-x64-08-v1</figcaption>
</figure>
</div>
<p>Crikey! Flags were clearly at fault! Not only that, but look at the performance of the routine in comparison with version 2 for prefix matching; there’s a definite improvement in performance! (I also looked up the latency of <code>pushfq</code>: 9 cycles! I had no idea it was that expensive. )</p>
<p>…wait wait wait. Shut the front door! This new assembly version is nearly as fast as the fastest C versions, and it doesn’t even have the optimized negative match re-work in place. Plot twist!</p>
<p>That means the slight tweak we made re-arranging the logic for <code>IsPrefixOfStringInTable_x64_3</code> actually provided a tangible speed-up, but it was lost in the noise of <code>pushfq</code> slowing things down so much. Or perhaps <code>IsPrefixOfStringInTable_x64_2</code> is just doing something particularly bad.</p>
<p>Either way, it means we might be able to wrangle an assembly version that can dominate the negative matching fast path <strong>and</strong> give the C version a run for its money with prefix matching, which would be a great way to end the article! Let’s give it a shot.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>This is the first point in the article where I’m not retroactively documenting what I’ve done—it’s all live! I have no idea if I’ll be able to produce a final assembly version that’s competitive with C in all aspects. Then again, I’m persistent and stubborn, so who knows.</p>
</div>
</div>
<p>We’ll do this in a couple of pieces. First, we’ll convert version 8 (which has version 3’s logic) into a <code>LEAF_ENTRY</code> and restore the byte-by-byte comparison logic instead of <code>repe cmpsb</code>, but keep everything else identical. This will be version 9. For version 10, we can tidy up version 9 a bit and replace some of the jumps to the epilogue area (<code>Pfx90</code>) with a simple <code>ret</code> where applicable.</p>
<p>From there, we’ll make version 11, which will combine version 10 and the optimized negative match logic we established in the assembly version 5. After that, we can use versions 12 onward to try replicating the superior inner loop approach identified by Fabian that led to the C routine <code>IsPrefixOfStringInTable_13</code>. And to think we were almost going to publish this article without investigating the slowdown associated with version 3 of the assembly!</p>
<hr>
</section>
<section id="isprefixofstringintable_x64_9" class="level3">
<h3 class="anchored" data-anchor-id="isprefixofstringintable_x64_9">IsPrefixOfStringInTable_x64_9</h3>
<p>← IsPrefixOfStringInTable_x64_8 | IsPrefixOfStringInTable_x64_10 →</p>
<p>As mentioned, let’s take the version 8 <code>NESTED_ENTRY</code> and convert it into a <code>LEAF_ENTRY</code> with the least amount of code churn possible. As version 8 is essentially version 3 with a relocated prologue and the <code>push_eflags</code>/<code>popfq</code> bits commented out, I’ll provide a diff against version 3 as well.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-24-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-24-1" aria-controls="tabset-24-1" aria-selected="true">Diff (9 v 8)</a></li><li class="nav-item"><a class="nav-link" id="tabset-24-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-24-2" aria-controls="tabset-24-2" aria-selected="false">Diff (9 v 3)</a></li><li class="nav-item"><a class="nav-link" id="tabset-24-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-24-3" aria-controls="tabset-24-3" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-24-1" class="tab-pane active" aria-labelledby="tabset-24-1-tab">
<div class="sourceCode" id="cb85" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb85-1">% diff -u IsPrefixOfStringInTable_x64_8.asm IsPrefixOfStringInTable_x64_9.asm</span>
<span id="cb85-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_x64_8.asm   2018-04-29 22:08:02.761164300 -0400</span></span>
<span id="cb85-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_x64_9.asm   2018-04-30 20:14:58.067237400 -0400</span></span>
<span id="cb85-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,31 +18,6 @@</span></span>
<span id="cb85-5"></span>
<span id="cb85-6"> include StringTable.inc</span>
<span id="cb85-7"></span>
<span id="cb85-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb85-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Define a locals struct for saving flags, rsi and rdi.</span></span>
<span id="cb85-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb85-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb85-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Locals struct</span></span>
<span id="cb85-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb85-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Padding             dq      ?</span></span>
<span id="cb85-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    SavedRdi            dq      ?</span></span>
<span id="cb85-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    SavedRsi            dq      ?</span></span>
<span id="cb85-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    SavedFlags          dq      ?</span></span>
<span id="cb85-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb85-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    ReturnAddress       dq      ?</span></span>
<span id="cb85-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    HomeRcx             dq      ?</span></span>
<span id="cb85-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    HomeRdx             dq      ?</span></span>
<span id="cb85-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    HomeR8              dq      ?</span></span>
<span id="cb85-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    HomeR9              dq      ?</span></span>
<span id="cb85-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb85-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Locals ends</span></span>
<span id="cb85-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb85-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb85-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Exclude the return address onward from the frame calculation size.</span></span>
<span id="cb85-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb85-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb85-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-LOCALS_SIZE  equ ((sizeof Locals) + (Locals.ReturnAddress - (sizeof Locals)))</span></span>
<span id="cb85-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb85-33"> ;++</span>
<span id="cb85-34"> ;</span>
<span id="cb85-35"> ; STRING_TABLE_INDEX</span>
<span id="cb85-36"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -58,9 +33,11 @@</span></span>
<span id="cb85-37"> ;   search string.  That is, whether any string in the table "starts with</span>
<span id="cb85-38"> ;   or is equal to" the search string.</span>
<span id="cb85-39"> ;</span>
<span id="cb85-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   This routine is based off version 7, but comments out the pushing and</span></span>
<span id="cb85-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   popping of flags to the stack in the prologue and epilogue, respectively,</span></span>
<span id="cb85-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   in order to test a theory regarding performance.</span></span>
<span id="cb85-43"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   This routine is based off version 8, but reverts the 'repe cmps' to the</span></span>
<span id="cb85-44"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   same byte-by-byte comparison loop we used in all the previous version.</span></span>
<span id="cb85-45"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   As this removes the dependency on rsi, rdi and the direction flag, we</span></span>
<span id="cb85-46"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   no longer need to push those values to the stack, so we also revert back</span></span>
<span id="cb85-47"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   to a LEAF_ENTRY.</span></span>
<span id="cb85-48"> ;</span>
<span id="cb85-49"> ; Arguments:</span>
<span id="cb85-50"> ;</span>
<span id="cb85-51"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -79,7 +56,7 @@</span></span>
<span id="cb85-52"> ;</span>
<span id="cb85-53"> ;--</span>
<span id="cb85-54"></span>
<span id="cb85-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        NESTED_ENTRY IsPrefixOfStringInTable_x64_8, _TEXT$00</span></span>
<span id="cb85-56"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_ENTRY IsPrefixOfStringInTable_x64_9, _TEXT$00</span></span>
<span id="cb85-57"> ;</span>
<span id="cb85-58"> ; Load the string buffer into xmm0, and the unique indexes from the string table</span>
<span id="cb85-59"> ; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span>
<span id="cb85-60"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -153,18 +130,6 @@</span></span>
<span id="cb85-61">         ;IACA_VC_END</span>
<span id="cb85-62"></span>
<span id="cb85-63"> ;</span>
<span id="cb85-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Begin prologue.  Allocate stack space and save non-volatile registers.</span></span>
<span id="cb85-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb85-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb85-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Pfx10:  alloc_stack LOCALS_SIZE                     ; Allocate stack space.</span></span>
<span id="cb85-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb85-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-       ;push_eflags                                 ; Save flags.</span></span>
<span id="cb85-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        save_reg    rsi, Locals.SavedRsi            ; Save non-volatile rsi.</span></span>
<span id="cb85-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        save_reg    rdi, Locals.SavedRdi            ; Save non-volatile rdi.</span></span>
<span id="cb85-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb85-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        END_PROLOGUE</span></span>
<span id="cb85-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb85-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb85-76"> ; (There was at least one match, continue with processing.)</span>
<span id="cb85-77"> ;</span>
<span id="cb85-78"></span>
<span id="cb85-79"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -182,7 +147,7 @@</span></span>
<span id="cb85-80"> ;   r11 - String length (String-&gt;Length)</span>
<span id="cb85-81"> ;</span>
<span id="cb85-82"></span>
<span id="cb85-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpextrb     r11, xmm4, 0                ; Load length.</span></span>
<span id="cb85-84"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx10:  vpextrb     r11, xmm4, 0                ; Load length.</span></span>
<span id="cb85-85">         mov         rax, 16                     ; Load 16 into rax.</span>
<span id="cb85-86">         mov         r10, r11                    ; Copy into r10.</span>
<span id="cb85-87">         cmp         r10w, ax                    ; Compare against 16.</span>
<span id="cb85-88"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -449,16 +414,21 @@</span></span>
<span id="cb85-89"></span>
<span id="cb85-90"> ;</span>
<span id="cb85-91"> ; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span>
<span id="cb85-92"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Set up rsi/rdi so we can do a 'rep cmps'.</span></span>
<span id="cb85-93"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Do a byte-by-byte comparison.</span></span>
<span id="cb85-94"> ;</span>
<span id="cb85-95"></span>
<span id="cb85-96"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        cld</span></span>
<span id="cb85-97"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         rsi, r11</span></span>
<span id="cb85-98"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         rdi, r8</span></span>
<span id="cb85-99"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        repe        cmpsb</span></span>
<span id="cb85-100"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        align 16</span></span>
<span id="cb85-101"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+@@:     mov         dl, byte ptr [rax + r11]    ; Load byte from search string.</span></span>
<span id="cb85-102"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmp         dl, byte ptr [rax + r8]     ; Compare against target.</span></span>
<span id="cb85-103"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jne         short Pfx60                 ; If not equal, jump.</span></span>
<span id="cb85-104"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb85-105"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb85-106"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; The two bytes were equal, update rax, decrement rcx and potentially continue</span></span>
<span id="cb85-107"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; the loop.</span></span>
<span id="cb85-108"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb85-109"></span>
<span id="cb85-110"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        test        cl, 0</span></span>
<span id="cb85-111"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jnz         short Pfx60                 ; Not all bytes compared, jump.</span></span>
<span id="cb85-112"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        inc         ax                          ; Increment index.</span></span>
<span id="cb85-113"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        loopnz      @B                          ; Decrement cx and loop back.</span></span>
<span id="cb85-114"></span>
<span id="cb85-115"> ;</span>
<span id="cb85-116"> ; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span>
<span id="cb85-117"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -485,7 +455,7 @@</span></span>
<span id="cb85-118"></span>
<span id="cb85-119">         xor         eax, eax                    ; Clear rax.</span>
<span id="cb85-120">         not         al                          ; al = -1</span>
<span id="cb85-121"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jmp Pfx90                               ; Return.</span></span>
<span id="cb85-122"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; Return.</span></span>
<span id="cb85-123"></span>
<span id="cb85-124"> ;</span>
<span id="cb85-125"> ; More comparisons remain; restore the registers we clobbered and continue loop.</span>
<span id="cb85-126"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -498,16 +468,9 @@</span></span>
<span id="cb85-127"></span>
<span id="cb85-128">         ;IACA_VC_END</span>
<span id="cb85-129"></span>
<span id="cb85-130"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        align   16</span></span>
<span id="cb85-131"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb85-132"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Pfx90:  mov     rsi, Locals.SavedRsi[rsp]       ; Restore rsi.</span></span>
<span id="cb85-133"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov     rdi, Locals.SavedRdi[rsp]       ; Restore rdi.</span></span>
<span id="cb85-134"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-       ;popfq                                   ; Restore flags.</span></span>
<span id="cb85-135"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        add     rsp, LOCALS_SIZE                ; Deallocate stack space.</span></span>
<span id="cb85-136"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb85-137"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ret</span></span>
<span id="cb85-138"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx90:  ret</span></span>
<span id="cb85-139"></span>
<span id="cb85-140"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        NESTED_END   IsPrefixOfStringInTable_x64_8, _TEXT$00</span></span>
<span id="cb85-141"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_END   IsPrefixOfStringInTable_x64_9, _TEXT$00</span></span>
<span id="cb85-142"></span>
<span id="cb85-143"></span>
<span id="cb85-144"> ; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></code></pre></div>
</div>
<div id="tabset-24-2" class="tab-pane" aria-labelledby="tabset-24-2-tab">
<div class="sourceCode" id="cb86" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb86-1">% diff -u IsPrefixOfStringInTable_x64_3.asm IsPrefixOfStringInTable_x64_9.asm</span>
<span id="cb86-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_x64_3.asm   2018-04-29 16:13:23.879193700 -0400</span></span>
<span id="cb86-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_x64_9.asm   2018-04-30 20:14:58.067237400 -0400</span></span>
<span id="cb86-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -18,31 +18,6 @@</span></span>
<span id="cb86-5"></span>
<span id="cb86-6"> include StringTable.inc</span>
<span id="cb86-7"></span>
<span id="cb86-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb86-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Define a locals struct for saving flags, rsi and rdi.</span></span>
<span id="cb86-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb86-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb86-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Locals struct</span></span>
<span id="cb86-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb86-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    Padding             dq      ?</span></span>
<span id="cb86-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    SavedRdi            dq      ?</span></span>
<span id="cb86-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    SavedRsi            dq      ?</span></span>
<span id="cb86-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    SavedFlags          dq      ?</span></span>
<span id="cb86-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb86-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    ReturnAddress       dq      ?</span></span>
<span id="cb86-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    HomeRcx             dq      ?</span></span>
<span id="cb86-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    HomeRdx             dq      ?</span></span>
<span id="cb86-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    HomeR8              dq      ?</span></span>
<span id="cb86-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-    HomeR9              dq      ?</span></span>
<span id="cb86-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb86-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Locals ends</span></span>
<span id="cb86-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb86-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb86-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Exclude the return address onward from the frame calculation size.</span></span>
<span id="cb86-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb86-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb86-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-LOCALS_SIZE  equ ((sizeof Locals) + (Locals.ReturnAddress - (sizeof Locals)))</span></span>
<span id="cb86-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb86-33"> ;++</span>
<span id="cb86-34"> ;</span>
<span id="cb86-35"> ; STRING_TABLE_INDEX</span>
<span id="cb86-36"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -58,13 +33,11 @@</span></span>
<span id="cb86-37"> ;   search string.  That is, whether any string in the table "starts with</span>
<span id="cb86-38"> ;   or is equal to" the search string.</span>
<span id="cb86-39"> ;</span>
<span id="cb86-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   This routine is based off version 2.  It has been converted into a nested</span></span>
<span id="cb86-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   entry (version 2 is a leaf entry), and uses 'rep cmpsb' to do the string</span></span>
<span id="cb86-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   comparison for long strings (instead of the byte-by-byte comparison used</span></span>
<span id="cb86-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   in version 2).  This requires use of the rsi and rdi registers, and the</span></span>
<span id="cb86-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   direction flag.  These are all non-volatile registers and thus, must be</span></span>
<span id="cb86-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   saved to the stack in the function prologue (hence the need to make this</span></span>
<span id="cb86-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   a nested entry).</span></span>
<span id="cb86-47"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   This routine is based off version 8, but reverts the 'repe cmps' to the</span></span>
<span id="cb86-48"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   same byte-by-byte comparison loop we used in all the previous version.</span></span>
<span id="cb86-49"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   As this removes the dependency on rsi, rdi and the direction flag, we</span></span>
<span id="cb86-50"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   no longer need to push those values to the stack, so we also revert back</span></span>
<span id="cb86-51"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   to a LEAF_ENTRY.</span></span>
<span id="cb86-52"> ;</span>
<span id="cb86-53"> ; Arguments:</span>
<span id="cb86-54"> ;</span>
<span id="cb86-55"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -83,20 +56,7 @@</span></span>
<span id="cb86-56"> ;</span>
<span id="cb86-57"> ;--</span>
<span id="cb86-58"></span>
<span id="cb86-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        NESTED_ENTRY IsPrefixOfStringInTable_x64_3, _TEXT$00</span></span>
<span id="cb86-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb86-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb86-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Begin prologue.  Allocate stack space and save non-volatile registers.</span></span>
<span id="cb86-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb86-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb86-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        alloc_stack LOCALS_SIZE                     ; Allocate stack space.</span></span>
<span id="cb86-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb86-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        push_eflags                                 ; Save flags.</span></span>
<span id="cb86-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        save_reg    rsi, Locals.SavedRsi            ; Save non-volatile rsi.</span></span>
<span id="cb86-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        save_reg    rdi, Locals.SavedRdi            ; Save non-volatile rdi.</span></span>
<span id="cb86-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb86-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        END_PROLOGUE</span></span>
<span id="cb86-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb86-73"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_ENTRY IsPrefixOfStringInTable_x64_9, _TEXT$00</span></span>
<span id="cb86-74"> ;</span>
<span id="cb86-75"> ; Load the string buffer into xmm0, and the unique indexes from the string table</span>
<span id="cb86-76"> ; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span>
<span id="cb86-77"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -165,7 +125,7 @@</span></span>
<span id="cb86-78"></span>
<span id="cb86-79">         xor         eax, eax                    ; Clear rax.</span>
<span id="cb86-80">         not         al                          ; al = -1</span>
<span id="cb86-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jmp         Pfx90                       ; Return.</span></span>
<span id="cb86-82"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; Return.</span></span>
<span id="cb86-83"></span>
<span id="cb86-84">         ;IACA_VC_END</span>
<span id="cb86-85"></span>
<span id="cb86-86"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -454,16 +414,21 @@</span></span>
<span id="cb86-87"></span>
<span id="cb86-88"> ;</span>
<span id="cb86-89"> ; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span>
<span id="cb86-90"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Set up rsi/rdi so we can do a 'rep cmps'.</span></span>
<span id="cb86-91"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Do a byte-by-byte comparison.</span></span>
<span id="cb86-92"> ;</span>
<span id="cb86-93"></span>
<span id="cb86-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        cld</span></span>
<span id="cb86-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         rsi, r11</span></span>
<span id="cb86-96"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         rdi, r8</span></span>
<span id="cb86-97"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        repe        cmpsb</span></span>
<span id="cb86-98"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        align 16</span></span>
<span id="cb86-99"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+@@:     mov         dl, byte ptr [rax + r11]    ; Load byte from search string.</span></span>
<span id="cb86-100"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmp         dl, byte ptr [rax + r8]     ; Compare against target.</span></span>
<span id="cb86-101"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jne         short Pfx60                 ; If not equal, jump.</span></span>
<span id="cb86-102"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb86-103"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb86-104"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; The two bytes were equal, update rax, decrement rcx and potentially continue</span></span>
<span id="cb86-105"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; the loop.</span></span>
<span id="cb86-106"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb86-107"></span>
<span id="cb86-108"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        test        cl, 0</span></span>
<span id="cb86-109"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jnz         short Pfx60                 ; Not all bytes compared, jump.</span></span>
<span id="cb86-110"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        inc         ax                          ; Increment index.</span></span>
<span id="cb86-111"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        loopnz      @B                          ; Decrement cx and loop back.</span></span>
<span id="cb86-112"></span>
<span id="cb86-113"> ;</span>
<span id="cb86-114"> ; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span>
<span id="cb86-115"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -490,7 +455,7 @@</span></span>
<span id="cb86-116"></span>
<span id="cb86-117">         xor         eax, eax                    ; Clear rax.</span>
<span id="cb86-118">         not         al                          ; al = -1</span>
<span id="cb86-119"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jmp Pfx90                               ; Return.</span></span>
<span id="cb86-120"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; Return.</span></span>
<span id="cb86-121"></span>
<span id="cb86-122"> ;</span>
<span id="cb86-123"> ; More comparisons remain; restore the registers we clobbered and continue loop.</span>
<span id="cb86-124"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -503,16 +468,9 @@</span></span>
<span id="cb86-125"></span>
<span id="cb86-126">         ;IACA_VC_END</span>
<span id="cb86-127"></span>
<span id="cb86-128"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        align   16</span></span>
<span id="cb86-129"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb86-130"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Pfx90:  mov     rsi, Locals.SavedRsi[rsp]       ; Restore rsi.</span></span>
<span id="cb86-131"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov     rdi, Locals.SavedRdi[rsp]       ; Restore rdi.</span></span>
<span id="cb86-132"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        popfq                                   ; Restore flags.</span></span>
<span id="cb86-133"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        add     rsp, LOCALS_SIZE                ; Deallocate stack space.</span></span>
<span id="cb86-134"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb86-135"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ret</span></span>
<span id="cb86-136"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx90:  ret</span></span>
<span id="cb86-137"></span>
<span id="cb86-138"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        NESTED_END   IsPrefixOfStringInTable_x64_3, _TEXT$00</span></span>
<span id="cb86-139"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_END   IsPrefixOfStringInTable_x64_9, _TEXT$00</span></span>
<span id="cb86-140"></span>
<span id="cb86-141"></span>
<span id="cb86-142"> ; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></code></pre></div>
</div>
<div id="tabset-24-3" class="tab-pane" aria-labelledby="tabset-24-3-tab">
<div class="sourceCode" id="cb87" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb87-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;++</span></span>
<span id="cb87-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; STRING_TABLE_INDEX</span></span>
<span id="cb87-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; IsPrefixOfStringInTable_x64_*(</span></span>
<span id="cb87-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING_TABLE StringTable,</span></span>
<span id="cb87-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING String,</span></span>
<span id="cb87-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _Out_opt_ PSTRING_MATCH Match</span></span>
<span id="cb87-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     )</span></span>
<span id="cb87-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Routine Description:</span></span>
<span id="cb87-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb87-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb87-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   or is equal to" the search string.</span></span>
<span id="cb87-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   This routine is based off version 8, but reverts the 'repe cmps' to the</span></span>
<span id="cb87-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   same byte-by-byte comparison loop we used in all the previous version.</span></span>
<span id="cb87-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   As this removes the dependency on rsi, rdi and the direction flag, we</span></span>
<span id="cb87-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   no longer need to push those values to the stack, so we also revert back</span></span>
<span id="cb87-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   to a LEAF_ENTRY.</span></span>
<span id="cb87-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Arguments:</span></span>
<span id="cb87-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb87-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb87-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       search for.</span></span>
<span id="cb87-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb87-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb87-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb87-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return Value:</span></span>
<span id="cb87-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb87-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;--</span></span>
<span id="cb87-38"></span>
<span id="cb87-39">        LEAF_ENTRY IsPrefixOfStringInTable_x64_9<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb87-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string buffer into xmm0, and the unique indexes from the string table</span></span>
<span id="cb87-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span></span>
<span id="cb87-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; result into xmm5.</span></span>
<span id="cb87-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-45"></span>
<span id="cb87-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_START</span></span>
<span id="cb87-47"></span>
<span id="cb87-48">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb87-49">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb87-50">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load indexes.</span></span>
<span id="cb87-51">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb87-52"></span>
<span id="cb87-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string table's unique character array into xmm2.</span></span>
<span id="cb87-55"></span>
<span id="cb87-56">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load chars.</span></span>
<span id="cb87-57"></span>
<span id="cb87-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb87-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb87-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-62"></span>
<span id="cb87-63">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare unique chars.</span></span>
<span id="cb87-64"></span>
<span id="cb87-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb87-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-68">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load lengths.</span></span>
<span id="cb87-69"></span>
<span id="cb87-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.  We use this later to invert the length comparison.</span></span>
<span id="cb87-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-73"></span>
<span id="cb87-74">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqq</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.</span></span>
<span id="cb87-75"></span>
<span id="cb87-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb87-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-79"></span>
<span id="cb87-80">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast length.</span></span>
<span id="cb87-81"></span>
<span id="cb87-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb87-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb87-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table, to find those that are greater in length.  Invert the result, such</span></span>
<span id="cb87-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; that we're left with a masked register where each 0xff element indicates</span></span>
<span id="cb87-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; a slot with a length less than or equal to our search string's length.</span></span>
<span id="cb87-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-89"></span>
<span id="cb87-90">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb87-91">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Invert the result.</span></span>
<span id="cb87-92"></span>
<span id="cb87-93"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-94"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect-and-test the unique character match xmm mask register (xmm5) with</span></span>
<span id="cb87-95"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the length match mask xmm register (xmm1).  This affects flags, allowing us</span></span>
<span id="cb87-96"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do a fast-path exit for the no-match case (where ZF = 1).</span></span>
<span id="cb87-97"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-98"></span>
<span id="cb87-99">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Check for no match.</span></span>
<span id="cb87-100">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; There was a match.</span></span>
<span id="cb87-101"></span>
<span id="cb87-102"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-103"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match, set rax to -1 and return.</span></span>
<span id="cb87-104"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-105"></span>
<span id="cb87-106">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb87-107">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb87-108">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb87-109"></span>
<span id="cb87-110">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb87-111"></span>
<span id="cb87-112"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-113"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (There was at least one match, continue with processing.)</span></span>
<span id="cb87-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-115"></span>
<span id="cb87-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Calculate the "search length" for the incoming search string, which is</span></span>
<span id="cb87-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equivalent of 'min(String-&gt;Length, 16)'.  (The search string's length</span></span>
<span id="cb87-119"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; currently lives in xmm4, albeit as a byte-value broadcasted across the</span></span>
<span id="cb87-120"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; entire register, so extract that first.)</span></span>
<span id="cb87-121"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-122"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Once the search length is calculated, deposit it back at the second byte</span></span>
<span id="cb87-123"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location of xmm4.</span></span>
<span id="cb87-124"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-125"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 and xmm4[15:8] - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb87-126"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-127"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length (String-&gt;Length)</span></span>
<span id="cb87-128"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-129"></span>
<span id="cb87-130"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx10:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load length.</span></span>
<span id="cb87-131">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load 16 into rax.</span></span>
<span id="cb87-132">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy into r10.</span></span>
<span id="cb87-133">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against 16.</span></span>
<span id="cb87-134">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmova</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Use 16 if length is greater.</span></span>
<span id="cb87-135">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save back to xmm4b[1].</span></span>
<span id="cb87-136"></span>
<span id="cb87-137"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-138"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our parameter registers into xmm registers instead of their stack-backed</span></span>
<span id="cb87-139"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location, to avoid memory writes.</span></span>
<span id="cb87-140"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-141"></span>
<span id="cb87-142">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm2.</span></span>
<span id="cb87-143">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rcx into xmm2q[0].</span></span>
<span id="cb87-144">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rdx into xmm2q[1].</span></span>
<span id="cb87-145"></span>
<span id="cb87-146"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-147"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm5, xmm1'),</span></span>
<span id="cb87-148"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; yielding a mask identifying indices we need to perform subsequent matches</span></span>
<span id="cb87-149"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; upon.  Convert this into a bitmap and save in xmm2d[2].</span></span>
<span id="cb87-150"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-151"></span>
<span id="cb87-152">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpand</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect unique + lengths.</span></span>
<span id="cb87-153">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Generate a bitmap from mask.</span></span>
<span id="cb87-154"></span>
<span id="cb87-155"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-156"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We're finished with xmm5; repurpose it in the same vein as xmm2 above.</span></span>
<span id="cb87-157"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-158"></span>
<span id="cb87-159">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm5.</span></span>
<span id="cb87-160">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save r8 into xmm5q[0].</span></span>
<span id="cb87-161"></span>
<span id="cb87-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-163"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Summary of xmm register stashing for the rest of the routine:</span></span>
<span id="cb87-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm2:</span></span>
<span id="cb87-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        0:63   (vpinsrq 0)     rcx (1st function parameter, StringTable)</span></span>
<span id="cb87-167"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       64:127  (vpinsrq 1)     rdx (2nd function paramter, String)</span></span>
<span id="cb87-168"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-169"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm4:</span></span>
<span id="cb87-170"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:7     (vpinsrb 0)     length of search string</span></span>
<span id="cb87-171"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16)</span></span>
<span id="cb87-172"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      16:23    (vpinsrb 2)     loop counter (when doing long string compares)</span></span>
<span id="cb87-173"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      24:31    (vpinsrb 3)     shift count</span></span>
<span id="cb87-174"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-175"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm5:</span></span>
<span id="cb87-176"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span></span>
<span id="cb87-177"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      64:95    (vpinsrd 2)     bitmap of slots to compare</span></span>
<span id="cb87-178"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      96:127   (vpinsrd 3)     index of slot currently being processed</span></span>
<span id="cb87-179"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-180"></span>
<span id="cb87-181"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-182"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Initialize rcx as our counter register by doing a popcnt against the bitmap</span></span>
<span id="cb87-183"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we just generated in edx, and clear our shift count register (r9).</span></span>
<span id="cb87-184"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-185"></span>
<span id="cb87-186">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits in bitmap.</span></span>
<span id="cb87-187">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear r9.</span></span>
<span id="cb87-188"></span>
<span id="cb87-189">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb87-190"></span>
<span id="cb87-191"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-192"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span></span>
<span id="cb87-193"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; trailing zeros of the bitmap, and then add in the shift count, producing an</span></span>
<span id="cb87-194"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; index (rax) we can use to load the corresponding slot.</span></span>
<span id="cb87-195"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-196"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Register usage at top of loop:</span></span>
<span id="cb87-197"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-198"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index.</span></span>
<span id="cb87-199"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-200"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - Loop counter.</span></span>
<span id="cb87-201"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-202"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rdx - Bitmap.</span></span>
<span id="cb87-203"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-204"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - Shift count.</span></span>
<span id="cb87-205"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-206"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 - Search length.</span></span>
<span id="cb87-207"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-208"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length.</span></span>
<span id="cb87-209"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-210"></span>
<span id="cb87-211"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx20:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tzcnt</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count trailing zeros.</span></span>
<span id="cb87-212">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy tzcnt to rax,</span></span>
<span id="cb87-213">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Add shift to create index.</span></span>
<span id="cb87-214">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; tzcnt + 1</span></span>
<span id="cb87-215">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shrx</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Reposition bitmap.</span></span>
<span id="cb87-216">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy index back to shift.</span></span>
<span id="cb87-217">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shift = Index + 1</span></span>
<span id="cb87-218">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store the raw index xmm5d[3].</span></span>
<span id="cb87-219"></span>
<span id="cb87-220"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-221"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span></span>
<span id="cb87-222"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span></span>
<span id="cb87-223"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-224"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, load the string table slot at this index into xmm1, then shift rax back.</span></span>
<span id="cb87-225"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-226"></span>
<span id="cb87-227">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb87-228">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb87-229">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span></span>
<span id="cb87-230">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb87-231"></span>
<span id="cb87-232"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-233"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The search string's first 16 characters are already in xmm0.  Compare this</span></span>
<span id="cb87-234"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; against the slot that has just been loaded into xmm1, storing the result back</span></span>
<span id="cb87-235"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.</span></span>
<span id="cb87-236"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-237"></span>
<span id="cb87-238">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare search string to slot.</span></span>
<span id="cb87-239"></span>
<span id="cb87-240"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-241"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert the XMM mask into a 32-bit representation, then zero high bits after</span></span>
<span id="cb87-242"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; our "search length", which allows us to ignore the results of the comparison</span></span>
<span id="cb87-243"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; above for bytes that were after the search string's length, if applicable.</span></span>
<span id="cb87-244"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, count the number of bits remaining, which tells us how many characters</span></span>
<span id="cb87-245"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we matched.</span></span>
<span id="cb87-246"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-247"></span>
<span id="cb87-248">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert into mask.</span></span>
<span id="cb87-249">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bzhi</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Zero high bits.</span></span>
<span id="cb87-250">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits.</span></span>
<span id="cb87-251"></span>
<span id="cb87-252"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-253"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If 16 characters matched, and the search string's length is longer than 16,</span></span>
<span id="cb87-254"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we're going to need to do a comparison of the remaining strings.</span></span>
<span id="cb87-255"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-256"></span>
<span id="cb87-257">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare chars matched to 16.</span></span>
<span id="cb87-258">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 chars matched.</span></span>
<span id="cb87-259">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx30                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than 16 matched.</span></span>
<span id="cb87-260"></span>
<span id="cb87-261"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-262"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All 16 characters matched.  Load the underlying slot's length from the</span></span>
<span id="cb87-263"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; relevant offset in the xmm3 register, then check to see if it's greater than,</span></span>
<span id="cb87-264"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equal or less than 16.</span></span>
<span id="cb87-265"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-266"></span>
<span id="cb87-267">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">movd</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load into xmm1.</span></span>
<span id="cb87-268">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle length...</span></span>
<span id="cb87-269">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; And extract back into rax.</span></span>
<span id="cb87-270">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare length to 16.</span></span>
<span id="cb87-271">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ja</span>          Pfx50                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length is &gt; 16.</span></span>
<span id="cb87-272">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Lengths match!</span></span>
<span id="cb87-273">                                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length &lt;= 16, fall through...</span></span>
<span id="cb87-274"></span>
<span id="cb87-275"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-276"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than or equal to 16 characters were matched.  Compare this against the</span></span>
<span id="cb87-277"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length of the search string; if equal, this is a match.</span></span>
<span id="cb87-278"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-279"></span>
<span id="cb87-280"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx30:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against search string.</span></span>
<span id="cb87-281">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Match found!</span></span>
<span id="cb87-282"></span>
<span id="cb87-283"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-284"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match against this slot, decrement counter and either continue the loop</span></span>
<span id="cb87-285"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; or terminate the search and return no match.</span></span>
<span id="cb87-286"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-287"></span>
<span id="cb87-288">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb87-289">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; cx != 0, continue.</span></span>
<span id="cb87-290"></span>
<span id="cb87-291">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb87-292">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb87-293">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb87-294"></span>
<span id="cb87-295"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-296"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span></span>
<span id="cb87-297"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; former is used when we need to copy the number of characters matched from r8</span></span>
<span id="cb87-298"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back to rax.  The latter jump target doesn't require this.</span></span>
<span id="cb87-299"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-300"></span>
<span id="cb87-301"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx35:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy numbers of chars matched.</span></span>
<span id="cb87-302"></span>
<span id="cb87-303"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-304"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the match parameter back into r8 and test to see if it's not-NULL, in</span></span>
<span id="cb87-305"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; which case we need to fill out a STRING_MATCH structure for the match.</span></span>
<span id="cb87-306"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-307"></span>
<span id="cb87-308"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx40:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringMatch.</span></span>
<span id="cb87-309">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is NULL?</span></span>
<span id="cb87-310">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not zero, need to fill out.</span></span>
<span id="cb87-311"></span>
<span id="cb87-312"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-313"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is NULL, we're done. Extract index of match back into rax and ret.</span></span>
<span id="cb87-314"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-315"></span>
<span id="cb87-316">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb87-317">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch == NULL, finish.</span></span>
<span id="cb87-318"></span>
<span id="cb87-319"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-320"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span></span>
<span id="cb87-321"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; reload the index from xmm5 into rax and save.</span></span>
<span id="cb87-322"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-323"></span>
<span id="cb87-324">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>NumberOfMatchedCharacters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb87-325">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb87-326">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb87-327"></span>
<span id="cb87-328"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-329"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb87-330"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; involves going through the StringTable, so we need to load that parameter</span></span>
<span id="cb87-331"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back into rcx, then resolving the string array address via pStringArray,</span></span>
<span id="cb87-332"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then the relevant STRING offset within the StringArray.Strings structure.</span></span>
<span id="cb87-333"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-334"></span>
<span id="cb87-335">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into rcx.</span></span>
<span id="cb87-336">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb87-337"></span>
<span id="cb87-338">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb87-339">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb87-340">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save STRING ptr.</span></span>
<span id="cb87-341">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Revert the scaling.</span></span>
<span id="cb87-342"></span>
<span id="cb87-343">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx90</span>
<span id="cb87-344"></span>
<span id="cb87-345"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-346"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb87-347"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb87-348"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string is a prefix match.</span></span>
<span id="cb87-349"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-350"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The slot length is stored in rax at this point, and the search string's</span></span>
<span id="cb87-351"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length is stored in r11.  We know that the search string's length will</span></span>
<span id="cb87-352"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; always be longer than or equal to the slot length at this point, so, we</span></span>
<span id="cb87-353"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; can subtract 16 (currently stored in r10) from rax, and use the resulting</span></span>
<span id="cb87-354"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; value as a loop counter, comparing the search string with the underlying</span></span>
<span id="cb87-355"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string slot byte-by-byte to determine if there's a match.</span></span>
<span id="cb87-356"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-357"></span>
<span id="cb87-358"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx50:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sub</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Subtract 16 from search length.</span></span>
<span id="cb87-359"></span>
<span id="cb87-360"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-361"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up some registers by stashing their values into various xmm offsets.</span></span>
<span id="cb87-362"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-363"></span>
<span id="cb87-364">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rdx register.</span></span>
<span id="cb87-365">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rcx register.</span></span>
<span id="cb87-366">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rax, rcx is now counter.</span></span>
<span id="cb87-367"></span>
<span id="cb87-368"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-369"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the search string buffer and advance it 16 bytes.</span></span>
<span id="cb87-370"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-371"></span>
<span id="cb87-372">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract String into r11.</span></span>
<span id="cb87-373">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer address.</span></span>
<span id="cb87-374">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb87-375"></span>
<span id="cb87-376"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-377"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Loading the slot is more involved as we have to go to the string table, then</span></span>
<span id="cb87-378"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the pStringArray pointer, then the relevant STRING offset within the string</span></span>
<span id="cb87-379"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; array (which requires re-loading the index from xmm5d[3]), then the string</span></span>
<span id="cb87-380"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; buffer from that structure.</span></span>
<span id="cb87-381"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-382"></span>
<span id="cb87-383">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into r8.</span></span>
<span id="cb87-384">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb87-385"></span>
<span id="cb87-386">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract index from xmm5.</span></span>
<span id="cb87-387">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb87-388"></span>
<span id="cb87-389">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb87-390">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string table buffer address.</span></span>
<span id="cb87-391">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb87-392"></span>
<span id="cb87-393">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy counter.</span></span>
<span id="cb87-394"></span>
<span id="cb87-395"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-396"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span></span>
<span id="cb87-397"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Do a byte-by-byte comparison.</span></span>
<span id="cb87-398"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-399"></span>
<span id="cb87-400">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb87-401">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load byte from search string.</span></span>
<span id="cb87-402">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against target.</span></span>
<span id="cb87-403">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jne</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx60                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If not equal, jump.</span></span>
<span id="cb87-404"></span>
<span id="cb87-405"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-406"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The two bytes were equal, update rax, decrement rcx and potentially continue</span></span>
<span id="cb87-407"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the loop.</span></span>
<span id="cb87-408"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-409"></span>
<span id="cb87-410">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Increment index.</span></span>
<span id="cb87-411">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">loopnz</span>      @B                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement cx and loop back.</span></span>
<span id="cb87-412"></span>
<span id="cb87-413"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-414"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span></span>
<span id="cb87-415"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; how many characters we matched, and then jump to Pfx40 for finalization.</span></span>
<span id="cb87-416"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-417"></span>
<span id="cb87-418">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span></span>
<span id="cb87-419">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx40</span>
<span id="cb87-420"></span>
<span id="cb87-421"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-422"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Byte comparisons were not equal.  Restore the rcx loop counter and decrement</span></span>
<span id="cb87-423"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it.  If it's zero, we have no more strings to compare, so we can do a quick</span></span>
<span id="cb87-424"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; exit.  If there are still comparisons to be made, restore the other registers</span></span>
<span id="cb87-425"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we trampled then jump back to the start of the loop Pfx20.</span></span>
<span id="cb87-426"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-427"></span>
<span id="cb87-428"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx60:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rcx counter.</span></span>
<span id="cb87-429">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb87-430">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Jump forward if not zero.</span></span>
<span id="cb87-431"></span>
<span id="cb87-432"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-433"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No more comparisons remaining, return.</span></span>
<span id="cb87-434"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-435"></span>
<span id="cb87-436">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb87-437">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb87-438">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb87-439"></span>
<span id="cb87-440"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-441"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; More comparisons remain; restore the registers we clobbered and continue loop.</span></span>
<span id="cb87-442"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-443"></span>
<span id="cb87-444">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r10.</span></span>
<span id="cb87-445">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r11.</span></span>
<span id="cb87-446">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb87-447">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Continue comparisons.</span></span>
<span id="cb87-448"></span>
<span id="cb87-449">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb87-450"></span>
<span id="cb87-451"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx90:</span>  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb87-452"></span>
<span id="cb87-453">        LEAF_END   IsPrefixOfStringInTable_x64_9<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb87-454"></span>
<span id="cb87-455"></span>
<span id="cb87-456"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></span></code></pre></div>
</div>
</div>
</div>
<p>Let’s go straight into version 10, as it’s only a very minor tweak to version 9 above.</p>
</section>
<section id="isprefixofstringintable_x64_10" class="level3">
<h3 class="anchored" data-anchor-id="isprefixofstringintable_x64_10">IsPrefixOfStringInTable_x64_10</h3>
<p>← IsPrefixOfStringInTable_x64_9 | IsPrefixOfStringInTable_x64_11 →</p>
<p>Remove the final remnants of the <code>NESTED_ENTRY</code> and replace the jumps to exit label <code>Pfx90</code> with <code>ret</code> instead.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-25-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-25-1" aria-controls="tabset-25-1" aria-selected="true">Diff (10 v 9)</a></li><li class="nav-item"><a class="nav-link" id="tabset-25-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-25-2" aria-controls="tabset-25-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-25-1" class="tab-pane active" aria-labelledby="tabset-25-1-tab">
<div class="sourceCode" id="cb88" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb88-1">% diff -u IsPrefixOfStringInTable_x64_9.asm IsPrefixOfStringInTable_x64_10.asm</span>
<span id="cb88-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_x64_9.asm   2018-04-30 20:14:58.067237400 -0400</span></span>
<span id="cb88-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_x64_10.asm  2018-05-02 08:16:39.672110400 -0400</span></span>
<span id="cb88-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -33,11 +33,8 @@</span></span>
<span id="cb88-5"> ;   search string.  That is, whether any string in the table "starts with</span>
<span id="cb88-6"> ;   or is equal to" the search string.</span>
<span id="cb88-7"> ;</span>
<span id="cb88-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   This routine is based off version 8, but reverts the 'repe cmps' to the</span></span>
<span id="cb88-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   same byte-by-byte comparison loop we used in all the previous version.</span></span>
<span id="cb88-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   As this removes the dependency on rsi, rdi and the direction flag, we</span></span>
<span id="cb88-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   no longer need to push those values to the stack, so we also revert back</span></span>
<span id="cb88-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   to a LEAF_ENTRY.</span></span>
<span id="cb88-13"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   This routine is identical to version 9, except the 'jmp Pfx90' lines have</span></span>
<span id="cb88-14"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   been replaced by normal 'ret' lines.</span></span>
<span id="cb88-15"> ;</span>
<span id="cb88-16"> ; Arguments:</span>
<span id="cb88-17"> ;</span>
<span id="cb88-18"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -56,7 +53,7 @@</span></span>
<span id="cb88-19"> ;</span>
<span id="cb88-20"> ;--</span>
<span id="cb88-21"></span>
<span id="cb88-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_ENTRY IsPrefixOfStringInTable_x64_9, _TEXT$00</span></span>
<span id="cb88-23"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_ENTRY IsPrefixOfStringInTable_x64_10, _TEXT$00</span></span>
<span id="cb88-24"> ;</span>
<span id="cb88-25"> ; Load the string buffer into xmm0, and the unique indexes from the string table</span>
<span id="cb88-26"> ; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span>
<span id="cb88-27"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -310,7 +307,7 @@</span></span>
<span id="cb88-28"></span>
<span id="cb88-29">         xor         eax, eax                    ; Clear rax.</span>
<span id="cb88-30">         not         al                          ; al = -1</span>
<span id="cb88-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jmp         Pfx90                       ; Return.</span></span>
<span id="cb88-32"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; Return.</span></span>
<span id="cb88-33"></span>
<span id="cb88-34"> ;</span>
<span id="cb88-35"> ; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span>
<span id="cb88-36"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -334,7 +331,7 @@</span></span>
<span id="cb88-37"> ;</span>
<span id="cb88-38"></span>
<span id="cb88-39">         vpextrd     eax, xmm5, 3                ; Extract raw index for match.</span>
<span id="cb88-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jmp         Pfx90                       ; StringMatch == NULL, finish.</span></span>
<span id="cb88-41"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; StringMatch == NULL, finish.</span></span>
<span id="cb88-42"></span>
<span id="cb88-43"> ;</span>
<span id="cb88-44"> ; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span>
<span id="cb88-45"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -360,7 +357,7 @@</span></span>
<span id="cb88-46">         mov         qword ptr StringMatch.String[r8], rdx ; Save STRING ptr.</span>
<span id="cb88-47">         shr         eax, 4                  ; Revert the scaling.</span>
<span id="cb88-48"></span>
<span id="cb88-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jmp         Pfx90</span></span>
<span id="cb88-50"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret</span></span>
<span id="cb88-51"></span>
<span id="cb88-52"> ;</span>
<span id="cb88-53"> ; 16 characters matched and the length of the underlying slot is greater than</span>
<span id="cb88-54"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -468,9 +465,7 @@</span></span>
<span id="cb88-55"></span>
<span id="cb88-56">         ;IACA_VC_END</span>
<span id="cb88-57"></span>
<span id="cb88-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Pfx90:  ret</span></span>
<span id="cb88-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb88-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_END   IsPrefixOfStringInTable_x64_9, _TEXT$00</span></span>
<span id="cb88-61"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_END   IsPrefixOfStringInTable_x64_10, _TEXT$00</span></span>
<span id="cb88-62"></span>
<span id="cb88-63"></span>
<span id="cb88-64"> ; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></code></pre></div>
</div>
<div id="tabset-25-2" class="tab-pane" aria-labelledby="tabset-25-2-tab">
<div class="sourceCode" id="cb89" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb89-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;++</span></span>
<span id="cb89-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; STRING_TABLE_INDEX</span></span>
<span id="cb89-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; IsPrefixOfStringInTable_x64_*(</span></span>
<span id="cb89-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING_TABLE StringTable,</span></span>
<span id="cb89-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING String,</span></span>
<span id="cb89-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _Out_opt_ PSTRING_MATCH Match</span></span>
<span id="cb89-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     )</span></span>
<span id="cb89-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Routine Description:</span></span>
<span id="cb89-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb89-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb89-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   or is equal to" the search string.</span></span>
<span id="cb89-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   This routine is identical to version 9, except the 'jmp Pfx90' lines have</span></span>
<span id="cb89-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   been replaced by normal 'ret' lines.</span></span>
<span id="cb89-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Arguments:</span></span>
<span id="cb89-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb89-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb89-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       search for.</span></span>
<span id="cb89-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb89-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb89-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb89-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return Value:</span></span>
<span id="cb89-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb89-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;--</span></span>
<span id="cb89-35"></span>
<span id="cb89-36">        LEAF_ENTRY IsPrefixOfStringInTable_x64_10<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb89-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string buffer into xmm0, and the unique indexes from the string table</span></span>
<span id="cb89-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span></span>
<span id="cb89-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; result into xmm5.</span></span>
<span id="cb89-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-42"></span>
<span id="cb89-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_START</span></span>
<span id="cb89-44"></span>
<span id="cb89-45">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb89-46">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb89-47">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load indexes.</span></span>
<span id="cb89-48">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span></span>
<span id="cb89-49"></span>
<span id="cb89-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string table's unique character array into xmm2.</span></span>
<span id="cb89-52"></span>
<span id="cb89-53">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load chars.</span></span>
<span id="cb89-54"></span>
<span id="cb89-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb89-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb89-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-59"></span>
<span id="cb89-60">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare unique chars.</span></span>
<span id="cb89-61"></span>
<span id="cb89-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb89-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-65">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load lengths.</span></span>
<span id="cb89-66"></span>
<span id="cb89-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.  We use this later to invert the length comparison.</span></span>
<span id="cb89-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-70"></span>
<span id="cb89-71">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqq</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Set xmm2 to all ones.</span></span>
<span id="cb89-72"></span>
<span id="cb89-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-74"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb89-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-76"></span>
<span id="cb89-77">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast length.</span></span>
<span id="cb89-78"></span>
<span id="cb89-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb89-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb89-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table, to find those that are greater in length.  Invert the result, such</span></span>
<span id="cb89-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; that we're left with a masked register where each 0xff element indicates</span></span>
<span id="cb89-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; a slot with a length less than or equal to our search string's length.</span></span>
<span id="cb89-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-86"></span>
<span id="cb89-87">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb89-88">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Invert the result.</span></span>
<span id="cb89-89"></span>
<span id="cb89-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect-and-test the unique character match xmm mask register (xmm5) with</span></span>
<span id="cb89-92"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the length match mask xmm register (xmm1).  This affects flags, allowing us</span></span>
<span id="cb89-93"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do a fast-path exit for the no-match case (where ZF = 1).</span></span>
<span id="cb89-94"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-95"></span>
<span id="cb89-96">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Check for no match.</span></span>
<span id="cb89-97">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; There was a match.</span></span>
<span id="cb89-98"></span>
<span id="cb89-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-100"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match, set rax to -1 and return.</span></span>
<span id="cb89-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-102"></span>
<span id="cb89-103">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb89-104">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb89-105">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb89-106"></span>
<span id="cb89-107">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb89-108"></span>
<span id="cb89-109"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (There was at least one match, continue with processing.)</span></span>
<span id="cb89-111"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-112"></span>
<span id="cb89-113"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Calculate the "search length" for the incoming search string, which is</span></span>
<span id="cb89-115"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equivalent of 'min(String-&gt;Length, 16)'.  (The search string's length</span></span>
<span id="cb89-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; currently lives in xmm4, albeit as a byte-value broadcasted across the</span></span>
<span id="cb89-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; entire register, so extract that first.)</span></span>
<span id="cb89-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-119"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Once the search length is calculated, deposit it back at the second byte</span></span>
<span id="cb89-120"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location of xmm4.</span></span>
<span id="cb89-121"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-122"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 and xmm4[15:8] - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb89-123"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-124"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length (String-&gt;Length)</span></span>
<span id="cb89-125"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-126"></span>
<span id="cb89-127"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx10:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load length.</span></span>
<span id="cb89-128">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load 16 into rax.</span></span>
<span id="cb89-129">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy into r10.</span></span>
<span id="cb89-130">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against 16.</span></span>
<span id="cb89-131">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmova</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Use 16 if length is greater.</span></span>
<span id="cb89-132">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save back to xmm4b[1].</span></span>
<span id="cb89-133"></span>
<span id="cb89-134"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-135"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our parameter registers into xmm registers instead of their stack-backed</span></span>
<span id="cb89-136"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location, to avoid memory writes.</span></span>
<span id="cb89-137"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-138"></span>
<span id="cb89-139">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm2.</span></span>
<span id="cb89-140">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rcx into xmm2q[0].</span></span>
<span id="cb89-141">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rdx into xmm2q[1].</span></span>
<span id="cb89-142"></span>
<span id="cb89-143"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-144"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm5, xmm1'),</span></span>
<span id="cb89-145"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; yielding a mask identifying indices we need to perform subsequent matches</span></span>
<span id="cb89-146"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; upon.  Convert this into a bitmap and save in xmm2d[2].</span></span>
<span id="cb89-147"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-148"></span>
<span id="cb89-149">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpand</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect unique + lengths.</span></span>
<span id="cb89-150">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Generate a bitmap from mask.</span></span>
<span id="cb89-151"></span>
<span id="cb89-152"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-153"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We're finished with xmm5; repurpose it in the same vein as xmm2 above.</span></span>
<span id="cb89-154"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-155"></span>
<span id="cb89-156">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm5.</span></span>
<span id="cb89-157">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save r8 into xmm5q[0].</span></span>
<span id="cb89-158"></span>
<span id="cb89-159"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-160"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Summary of xmm register stashing for the rest of the routine:</span></span>
<span id="cb89-161"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm2:</span></span>
<span id="cb89-163"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        0:63   (vpinsrq 0)     rcx (1st function parameter, StringTable)</span></span>
<span id="cb89-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       64:127  (vpinsrq 1)     rdx (2nd function paramter, String)</span></span>
<span id="cb89-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm4:</span></span>
<span id="cb89-167"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:7     (vpinsrb 0)     length of search string</span></span>
<span id="cb89-168"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16)</span></span>
<span id="cb89-169"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      16:23    (vpinsrb 2)     loop counter (when doing long string compares)</span></span>
<span id="cb89-170"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      24:31    (vpinsrb 3)     shift count</span></span>
<span id="cb89-171"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-172"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm5:</span></span>
<span id="cb89-173"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span></span>
<span id="cb89-174"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      64:95    (vpinsrd 2)     bitmap of slots to compare</span></span>
<span id="cb89-175"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      96:127   (vpinsrd 3)     index of slot currently being processed</span></span>
<span id="cb89-176"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-177"></span>
<span id="cb89-178"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-179"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Initialize rcx as our counter register by doing a popcnt against the bitmap</span></span>
<span id="cb89-180"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we just generated in edx, and clear our shift count register (r9).</span></span>
<span id="cb89-181"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-182"></span>
<span id="cb89-183">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits in bitmap.</span></span>
<span id="cb89-184">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear r9.</span></span>
<span id="cb89-185"></span>
<span id="cb89-186">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb89-187"></span>
<span id="cb89-188"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-189"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span></span>
<span id="cb89-190"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; trailing zeros of the bitmap, and then add in the shift count, producing an</span></span>
<span id="cb89-191"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; index (rax) we can use to load the corresponding slot.</span></span>
<span id="cb89-192"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-193"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Register usage at top of loop:</span></span>
<span id="cb89-194"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-195"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index.</span></span>
<span id="cb89-196"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-197"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - Loop counter.</span></span>
<span id="cb89-198"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-199"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rdx - Bitmap.</span></span>
<span id="cb89-200"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-201"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - Shift count.</span></span>
<span id="cb89-202"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-203"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 - Search length.</span></span>
<span id="cb89-204"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-205"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length.</span></span>
<span id="cb89-206"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-207"></span>
<span id="cb89-208"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx20:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tzcnt</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count trailing zeros.</span></span>
<span id="cb89-209">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy tzcnt to rax,</span></span>
<span id="cb89-210">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Add shift to create index.</span></span>
<span id="cb89-211">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; tzcnt + 1</span></span>
<span id="cb89-212">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shrx</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Reposition bitmap.</span></span>
<span id="cb89-213">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy index back to shift.</span></span>
<span id="cb89-214">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shift = Index + 1</span></span>
<span id="cb89-215">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store the raw index xmm5d[3].</span></span>
<span id="cb89-216"></span>
<span id="cb89-217"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-218"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span></span>
<span id="cb89-219"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span></span>
<span id="cb89-220"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-221"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, load the string table slot at this index into xmm1, then shift rax back.</span></span>
<span id="cb89-222"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-223"></span>
<span id="cb89-224">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb89-225">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb89-226">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span></span>
<span id="cb89-227">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb89-228"></span>
<span id="cb89-229"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-230"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The search string's first 16 characters are already in xmm0.  Compare this</span></span>
<span id="cb89-231"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; against the slot that has just been loaded into xmm1, storing the result back</span></span>
<span id="cb89-232"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.</span></span>
<span id="cb89-233"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-234"></span>
<span id="cb89-235">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare search string to slot.</span></span>
<span id="cb89-236"></span>
<span id="cb89-237"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-238"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert the XMM mask into a 32-bit representation, then zero high bits after</span></span>
<span id="cb89-239"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; our "search length", which allows us to ignore the results of the comparison</span></span>
<span id="cb89-240"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; above for bytes that were after the search string's length, if applicable.</span></span>
<span id="cb89-241"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, count the number of bits remaining, which tells us how many characters</span></span>
<span id="cb89-242"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we matched.</span></span>
<span id="cb89-243"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-244"></span>
<span id="cb89-245">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert into mask.</span></span>
<span id="cb89-246">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bzhi</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Zero high bits.</span></span>
<span id="cb89-247">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits.</span></span>
<span id="cb89-248"></span>
<span id="cb89-249"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-250"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If 16 characters matched, and the search string's length is longer than 16,</span></span>
<span id="cb89-251"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we're going to need to do a comparison of the remaining strings.</span></span>
<span id="cb89-252"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-253"></span>
<span id="cb89-254">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare chars matched to 16.</span></span>
<span id="cb89-255">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 chars matched.</span></span>
<span id="cb89-256">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx30                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than 16 matched.</span></span>
<span id="cb89-257"></span>
<span id="cb89-258"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-259"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All 16 characters matched.  Load the underlying slot's length from the</span></span>
<span id="cb89-260"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; relevant offset in the xmm3 register, then check to see if it's greater than,</span></span>
<span id="cb89-261"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equal or less than 16.</span></span>
<span id="cb89-262"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-263"></span>
<span id="cb89-264">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">movd</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load into xmm1.</span></span>
<span id="cb89-265">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle length...</span></span>
<span id="cb89-266">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; And extract back into rax.</span></span>
<span id="cb89-267">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare length to 16.</span></span>
<span id="cb89-268">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ja</span>          Pfx50                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length is &gt; 16.</span></span>
<span id="cb89-269">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Lengths match!</span></span>
<span id="cb89-270">                                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length &lt;= 16, fall through...</span></span>
<span id="cb89-271"></span>
<span id="cb89-272"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-273"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than or equal to 16 characters were matched.  Compare this against the</span></span>
<span id="cb89-274"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length of the search string; if equal, this is a match.</span></span>
<span id="cb89-275"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-276"></span>
<span id="cb89-277"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx30:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against search string.</span></span>
<span id="cb89-278">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Match found!</span></span>
<span id="cb89-279"></span>
<span id="cb89-280"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-281"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match against this slot, decrement counter and either continue the loop</span></span>
<span id="cb89-282"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; or terminate the search and return no match.</span></span>
<span id="cb89-283"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-284"></span>
<span id="cb89-285">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb89-286">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; cx != 0, continue.</span></span>
<span id="cb89-287"></span>
<span id="cb89-288">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb89-289">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb89-290">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb89-291"></span>
<span id="cb89-292"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-293"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span></span>
<span id="cb89-294"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; former is used when we need to copy the number of characters matched from r8</span></span>
<span id="cb89-295"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back to rax.  The latter jump target doesn't require this.</span></span>
<span id="cb89-296"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-297"></span>
<span id="cb89-298"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx35:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy numbers of chars matched.</span></span>
<span id="cb89-299"></span>
<span id="cb89-300"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-301"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the match parameter back into r8 and test to see if it's not-NULL, in</span></span>
<span id="cb89-302"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; which case we need to fill out a STRING_MATCH structure for the match.</span></span>
<span id="cb89-303"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-304"></span>
<span id="cb89-305"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx40:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringMatch.</span></span>
<span id="cb89-306">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is NULL?</span></span>
<span id="cb89-307">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not zero, need to fill out.</span></span>
<span id="cb89-308"></span>
<span id="cb89-309"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-310"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is NULL, we're done. Extract index of match back into rax and ret.</span></span>
<span id="cb89-311"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-312"></span>
<span id="cb89-313">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb89-314">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch == NULL, finish.</span></span>
<span id="cb89-315"></span>
<span id="cb89-316"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-317"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span></span>
<span id="cb89-318"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; reload the index from xmm5 into rax and save.</span></span>
<span id="cb89-319"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-320"></span>
<span id="cb89-321">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>NumberOfMatchedCharacters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb89-322">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb89-323">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb89-324"></span>
<span id="cb89-325"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-326"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb89-327"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; involves going through the StringTable, so we need to load that parameter</span></span>
<span id="cb89-328"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back into rcx, then resolving the string array address via pStringArray,</span></span>
<span id="cb89-329"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then the relevant STRING offset within the StringArray.Strings structure.</span></span>
<span id="cb89-330"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-331"></span>
<span id="cb89-332">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into rcx.</span></span>
<span id="cb89-333">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb89-334"></span>
<span id="cb89-335">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb89-336">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb89-337">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save STRING ptr.</span></span>
<span id="cb89-338">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Revert the scaling.</span></span>
<span id="cb89-339"></span>
<span id="cb89-340">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb89-341"></span>
<span id="cb89-342"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-343"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb89-344"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb89-345"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string is a prefix match.</span></span>
<span id="cb89-346"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-347"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The slot length is stored in rax at this point, and the search string's</span></span>
<span id="cb89-348"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length is stored in r11.  We know that the search string's length will</span></span>
<span id="cb89-349"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; always be longer than or equal to the slot length at this point, so, we</span></span>
<span id="cb89-350"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; can subtract 16 (currently stored in r10) from rax, and use the resulting</span></span>
<span id="cb89-351"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; value as a loop counter, comparing the search string with the underlying</span></span>
<span id="cb89-352"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string slot byte-by-byte to determine if there's a match.</span></span>
<span id="cb89-353"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-354"></span>
<span id="cb89-355"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx50:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sub</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Subtract 16 from search length.</span></span>
<span id="cb89-356"></span>
<span id="cb89-357"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-358"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up some registers by stashing their values into various xmm offsets.</span></span>
<span id="cb89-359"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-360"></span>
<span id="cb89-361">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rdx register.</span></span>
<span id="cb89-362">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rcx register.</span></span>
<span id="cb89-363">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rax, rcx is now counter.</span></span>
<span id="cb89-364"></span>
<span id="cb89-365"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-366"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the search string buffer and advance it 16 bytes.</span></span>
<span id="cb89-367"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-368"></span>
<span id="cb89-369">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract String into r11.</span></span>
<span id="cb89-370">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer address.</span></span>
<span id="cb89-371">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb89-372"></span>
<span id="cb89-373"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-374"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Loading the slot is more involved as we have to go to the string table, then</span></span>
<span id="cb89-375"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the pStringArray pointer, then the relevant STRING offset within the string</span></span>
<span id="cb89-376"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; array (which requires re-loading the index from xmm5d[3]), then the string</span></span>
<span id="cb89-377"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; buffer from that structure.</span></span>
<span id="cb89-378"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-379"></span>
<span id="cb89-380">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into r8.</span></span>
<span id="cb89-381">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb89-382"></span>
<span id="cb89-383">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract index from xmm5.</span></span>
<span id="cb89-384">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb89-385"></span>
<span id="cb89-386">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb89-387">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string table buffer address.</span></span>
<span id="cb89-388">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb89-389"></span>
<span id="cb89-390">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy counter.</span></span>
<span id="cb89-391"></span>
<span id="cb89-392"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-393"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span></span>
<span id="cb89-394"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Do a byte-by-byte comparison.</span></span>
<span id="cb89-395"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-396"></span>
<span id="cb89-397">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb89-398">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load byte from search string.</span></span>
<span id="cb89-399">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against target.</span></span>
<span id="cb89-400">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jne</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx60                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If not equal, jump.</span></span>
<span id="cb89-401"></span>
<span id="cb89-402"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-403"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The two bytes were equal, update rax, decrement rcx and potentially continue</span></span>
<span id="cb89-404"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the loop.</span></span>
<span id="cb89-405"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-406"></span>
<span id="cb89-407">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Increment index.</span></span>
<span id="cb89-408">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">loopnz</span>      @B                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement cx and loop back.</span></span>
<span id="cb89-409"></span>
<span id="cb89-410"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-411"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span></span>
<span id="cb89-412"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; how many characters we matched, and then jump to Pfx40 for finalization.</span></span>
<span id="cb89-413"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-414"></span>
<span id="cb89-415">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span></span>
<span id="cb89-416">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx40</span>
<span id="cb89-417"></span>
<span id="cb89-418"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-419"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Byte comparisons were not equal.  Restore the rcx loop counter and decrement</span></span>
<span id="cb89-420"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it.  If it's zero, we have no more strings to compare, so we can do a quick</span></span>
<span id="cb89-421"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; exit.  If there are still comparisons to be made, restore the other registers</span></span>
<span id="cb89-422"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we trampled then jump back to the start of the loop Pfx20.</span></span>
<span id="cb89-423"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-424"></span>
<span id="cb89-425"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx60:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rcx counter.</span></span>
<span id="cb89-426">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb89-427">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Jump forward if not zero.</span></span>
<span id="cb89-428"></span>
<span id="cb89-429"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-430"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No more comparisons remaining, return.</span></span>
<span id="cb89-431"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-432"></span>
<span id="cb89-433">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb89-434">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb89-435">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb89-436"></span>
<span id="cb89-437"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-438"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; More comparisons remain; restore the registers we clobbered and continue loop.</span></span>
<span id="cb89-439"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-440"></span>
<span id="cb89-441">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r10.</span></span>
<span id="cb89-442">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r11.</span></span>
<span id="cb89-443">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb89-444">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Continue comparisons.</span></span>
<span id="cb89-445"></span>
<span id="cb89-446">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb89-447"></span>
<span id="cb89-448">        LEAF_END   IsPrefixOfStringInTable_x64_10<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb89-449"></span>
<span id="cb89-450"></span>
<span id="cb89-451"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></span></code></pre></div>
</div>
</div>
</div>
<p>Let’s review performance. I’ll omit the C versions from the graphs for now while we focus on optimizing the assembly versions. In this next comparison, we want to verify that we’re still seeing the performance gains we saw in version 8 in versions 9 and 10. If the timings for version 9 and 10 differ, I’d expect version 10 to be better—but it won’t be by much.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>I had to generate new CSV files for these graphs, as the old ones didn’t have any timings for these new functions we’ve added. It’s easier to just regenerate timings for everything versus trying to splice in the new timings into the old files.</p>
<p>So, there will be small differences in the numbers you see here for old routines referenced earlier (i. e. , the timings for assembly versions 2, 4, 5, and 8 aren’t identical to earlier graphs). The differences are negligible (a handful of cycles per 1000 iterations).</p>
<p>All the source files live <a href="https://github.com/tpn/website/tree/main/articles/is-prefix-of-string-in-table/resources">here on GitHub</a>.</p>
</div>
</div>
</section>
<section id="benchmark-x64-10" class="level3 unlisted">
<h3 class="unlisted anchored" data-anchor-id="benchmark-x64-10">Benchmark x64 10</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-10-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-10-v1.svg" class="img-fluid figure-img" alt="Benchmark-x64-10-v1"></a></p>
<figcaption>Benchmark-x64-10-v1</figcaption>
</figure>
</div>
<p>Excellent! Version 10 is a tiny bit faster than 9, but both retain the speed advantages we saw from version 8. We can also see how expensive the setup cost is for <code>repe cmpsb</code>, too, which version 8 used. It’s not necessarily a fair comparison, as only one byte is being compared (<code>$INDEX_ALLOCATION</code> is 17 bytes long; so we’re only comparing the last N letters), and there’s a fixed overhead with the <code>repe cmp/stos/lods</code>-type instructions that can’t be avoided. (They can prove optimal for longer sequences, though. )</p>
</section>
<section id="isprefixofstringintable_x64_11" class="level3">
<h3 class="anchored" data-anchor-id="isprefixofstringintable_x64_11">IsPrefixOfStringInTable_x64_11</h3>
<p>← IsPrefixOfStringInTable_x64_10 | IsPrefixOfStringInTable_x64_12 →</p>
<p>Let’s take version 10 and blend in the optimal negative match instruction ordering we used for version 5. (Version 10 is essentially derived from version 3, and we wrote that before we’d come up with the optimizations explored in versions 4 and 5.)</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-26-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-26-1" aria-controls="tabset-26-1" aria-selected="true">Diff (11 v 10)</a></li><li class="nav-item"><a class="nav-link" id="tabset-26-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-26-2" aria-controls="tabset-26-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-26-1" class="tab-pane active" aria-labelledby="tabset-26-1-tab">
<div class="sourceCode" id="cb90" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb90-1">% diff -u IsPrefixOfStringInTable_x64_10.asm IsPrefixOfStringInTable_x64_11.asm</span>
<span id="cb90-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_x64_10.asm  2018-05-02 08:16:39.672110400 -0400</span></span>
<span id="cb90-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_x64_11.asm  2018-05-03 17:21:18.181161900 -0400</span></span>
<span id="cb90-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -33,8 +33,8 @@</span></span>
<span id="cb90-5"> ;   search string.  That is, whether any string in the table "starts with</span>
<span id="cb90-6"> ;   or is equal to" the search string.</span>
<span id="cb90-7"> ;</span>
<span id="cb90-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   This routine is identical to version 9, except the 'jmp Pfx90' lines have</span></span>
<span id="cb90-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   been replaced by normal 'ret' lines.</span></span>
<span id="cb90-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   This routine is based off version 10, with the optimized negative prefix</span></span>
<span id="cb90-11"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   matching logic in place from version 5.</span></span>
<span id="cb90-12"> ;</span>
<span id="cb90-13"> ; Arguments:</span>
<span id="cb90-14"> ;</span>
<span id="cb90-15"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -53,68 +53,65 @@</span></span>
<span id="cb90-16"> ;</span>
<span id="cb90-17"> ;--</span>
<span id="cb90-18"></span>
<span id="cb90-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_ENTRY IsPrefixOfStringInTable_x64_10, _TEXT$00</span></span>
<span id="cb90-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_ENTRY IsPrefixOfStringInTable_x64_11, _TEXT$00</span></span>
<span id="cb90-21"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb90-22"> ;</span>
<span id="cb90-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Load the string buffer into xmm0, and the unique indexes from the string table</span></span>
<span id="cb90-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; into xmm1.  Shuffle the buffer according to the unique indexes, and store the</span></span>
<span id="cb90-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; result into xmm5.</span></span>
<span id="cb90-26"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the address of the string buffer into rax.</span></span>
<span id="cb90-27"> ;</span>
<span id="cb90-28"></span>
<span id="cb90-29">         ;IACA_VC_START</span>
<span id="cb90-30"></span>
<span id="cb90-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov     rax, String.Buffer[rdx]</span></span>
<span id="cb90-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vmovdqu xmm0, xmmword ptr [rax]                 ; Load search buffer.</span></span>
<span id="cb90-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vmovdqa xmm1, xmmword ptr StringTable.UniqueIndex[rcx] ; Load indexes.</span></span>
<span id="cb90-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpshufb xmm5, xmm0, xmm1</span></span>
<span id="cb90-35"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov     rax, String.Buffer[rdx]         ; Load buffer addr.</span></span>
<span id="cb90-36"></span>
<span id="cb90-37"> ;</span>
<span id="cb90-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Load the string table's unique character array into xmm2.</span></span>
<span id="cb90-39"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb90-40"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb90-41"></span>
<span id="cb90-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vmovdqa xmm2, xmmword ptr StringTable.UniqueChars[rcx]  ; Load chars.</span></span>
<span id="cb90-43"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpbroadcastb xmm4, byte ptr String.Length[rdx]  ; Broadcast length.</span></span>
<span id="cb90-44"></span>
<span id="cb90-45"> ;</span>
<span id="cb90-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb90-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb90-48"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb90-49"> ;</span>
<span id="cb90-50"></span>
<span id="cb90-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpcmpeqb    xmm5, xmm5, xmm2            ; Compare unique chars.</span></span>
<span id="cb90-52"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vmovdqa xmm3, xmmword ptr StringTable.Lengths[rcx]  ; Load lengths.</span></span>
<span id="cb90-53"></span>
<span id="cb90-54"> ;</span>
<span id="cb90-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb90-56"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the search string buffer into xmm0.</span></span>
<span id="cb90-57"> ;</span>
<span id="cb90-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vmovdqa xmm3, xmmword ptr StringTable.Lengths[rcx]      ; Load lengths.</span></span>
<span id="cb90-59"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb90-60"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vmovdqu xmm0, xmmword ptr [rax]         ; Load search buffer.</span></span>
<span id="cb90-61"></span>
<span id="cb90-62"> ;</span>
<span id="cb90-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Set xmm2 to all ones.  We use this later to invert the length comparison.</span></span>
<span id="cb90-64"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb90-65"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb90-66"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; table, to find those that are greater in length.</span></span>
<span id="cb90-67"> ;</span>
<span id="cb90-68"></span>
<span id="cb90-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpcmpeqq    xmm2, xmm2, xmm2            ; Set xmm2 to all ones.</span></span>
<span id="cb90-70"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpcmpgtb    xmm1, xmm3, xmm4            ; Identify long slots.</span></span>
<span id="cb90-71"></span>
<span id="cb90-72"> ;</span>
<span id="cb90-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb90-74"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Shuffle the buffer in xmm0 according to the unique indexes, and store the</span></span>
<span id="cb90-75"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; result into xmm5.</span></span>
<span id="cb90-76"> ;</span>
<span id="cb90-77"></span>
<span id="cb90-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpbroadcastb xmm4, byte ptr String.Length[rdx]  ; Broadcast length.</span></span>
<span id="cb90-79"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpshufb     xmm5, xmm0, StringTable.UniqueIndex[rcx] ; Rearrange string.</span></span>
<span id="cb90-80"></span>
<span id="cb90-81"> ;</span>
<span id="cb90-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb90-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb90-84"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; table, to find those that are greater in length.  Invert the result, such</span></span>
<span id="cb90-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; that we're left with a masked register where each 0xff element indicates</span></span>
<span id="cb90-86"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; a slot with a length less than or equal to our search string's length.</span></span>
<span id="cb90-87"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb90-88"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb90-89"> ;</span>
<span id="cb90-90"></span>
<span id="cb90-91"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpcmpgtb    xmm1, xmm3, xmm4            ; Identify long slots.</span></span>
<span id="cb90-92"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpxor       xmm1, xmm1, xmm2            ; Invert the result.</span></span>
<span id="cb90-93"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpcmpeqb    xmm5, xmm5, StringTable.UniqueChars[rcx] ; Compare to uniq.</span></span>
<span id="cb90-94"></span>
<span id="cb90-95"> ;</span>
<span id="cb90-96"> ; Intersect-and-test the unique character match xmm mask register (xmm5) with</span>
<span id="cb90-97"> ; the length match mask xmm register (xmm1).  This affects flags, allowing us</span>
<span id="cb90-98"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; to do a fast-path exit for the no-match case (where ZF = 1).</span></span>
<span id="cb90-99"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; to do a fast-path exit for the no-match case (where CY = 1 after xmm1 has</span></span>
<span id="cb90-100"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; been inverted).</span></span>
<span id="cb90-101"> ;</span>
<span id="cb90-102"></span>
<span id="cb90-103"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vptest      xmm5, xmm1                  ; Check for no match.</span></span>
<span id="cb90-104"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jnz         short Pfx10                 ; There was a match.</span></span>
<span id="cb90-105"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vptest      xmm1, xmm5                  ; Check for no match.</span></span>
<span id="cb90-106"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnc         short Pfx10                 ; There was a match.</span></span>
<span id="cb90-107"></span>
<span id="cb90-108"> ;</span>
<span id="cb90-109"> ; No match, set rax to -1 and return.</span>
<span id="cb90-110"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -161,12 +158,12 @@</span></span>
<span id="cb90-111">         vpinsrq     xmm2, xmm2, rdx, 1          ; Save rdx into xmm2q[1].</span>
<span id="cb90-112"></span>
<span id="cb90-113"> ;</span>
<span id="cb90-114"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm5, xmm1'),</span></span>
<span id="cb90-115"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm1, xmm5'),</span></span>
<span id="cb90-116"> ; yielding a mask identifying indices we need to perform subsequent matches</span>
<span id="cb90-117"> ; upon.  Convert this into a bitmap and save in xmm2d[2].</span>
<span id="cb90-118"> ;</span>
<span id="cb90-119"></span>
<span id="cb90-120"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpand       xmm5, xmm5, xmm1            ; Intersect unique + lengths.</span></span>
<span id="cb90-121"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpandn      xmm5, xmm1, xmm5            ; Intersect unique + lengths.</span></span>
<span id="cb90-122">         vpmovmskb   edx, xmm5                   ; Generate a bitmap from mask.</span>
<span id="cb90-123"></span>
<span id="cb90-124"> ;</span>
<span id="cb90-125"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -465,7 +462,7 @@</span></span>
<span id="cb90-126"></span>
<span id="cb90-127">         ;IACA_VC_END</span>
<span id="cb90-128"></span>
<span id="cb90-129"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_END   IsPrefixOfStringInTable_x64_10, _TEXT$00</span></span>
<span id="cb90-130"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_END   IsPrefixOfStringInTable_x64_11, _TEXT$00</span></span>
<span id="cb90-131"></span>
<span id="cb90-132"></span>
<span id="cb90-133"> ; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></code></pre></div>
</div>
<div id="tabset-26-2" class="tab-pane" aria-labelledby="tabset-26-2-tab">
<div class="sourceCode" id="cb91" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb91-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;++</span></span>
<span id="cb91-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; STRING_TABLE_INDEX</span></span>
<span id="cb91-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; IsPrefixOfStringInTable_x64_*(</span></span>
<span id="cb91-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING_TABLE StringTable,</span></span>
<span id="cb91-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING String,</span></span>
<span id="cb91-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _Out_opt_ PSTRING_MATCH Match</span></span>
<span id="cb91-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     )</span></span>
<span id="cb91-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Routine Description:</span></span>
<span id="cb91-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb91-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb91-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   or is equal to" the search string.</span></span>
<span id="cb91-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   This routine is based off version 10, with the optimized negative prefix</span></span>
<span id="cb91-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   matching logic in place from version 5.</span></span>
<span id="cb91-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Arguments:</span></span>
<span id="cb91-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb91-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb91-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       search for.</span></span>
<span id="cb91-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb91-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb91-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb91-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return Value:</span></span>
<span id="cb91-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb91-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;--</span></span>
<span id="cb91-35"></span>
<span id="cb91-36">        LEAF_ENTRY IsPrefixOfStringInTable_x64_11<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb91-37"></span>
<span id="cb91-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the address of the string buffer into rax.</span></span>
<span id="cb91-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-41"></span>
<span id="cb91-42">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_START</span></span>
<span id="cb91-43"></span>
<span id="cb91-44">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer addr.</span></span>
<span id="cb91-45"></span>
<span id="cb91-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb91-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-49"></span>
<span id="cb91-50">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast length.</span></span>
<span id="cb91-51"></span>
<span id="cb91-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb91-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-55"></span>
<span id="cb91-56">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load lengths.</span></span>
<span id="cb91-57"></span>
<span id="cb91-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the search string buffer into xmm0.</span></span>
<span id="cb91-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-61"></span>
<span id="cb91-62">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb91-63"></span>
<span id="cb91-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb91-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb91-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table, to find those that are greater in length.</span></span>
<span id="cb91-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-69"></span>
<span id="cb91-70">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb91-71"></span>
<span id="cb91-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle the buffer in xmm0 according to the unique indexes, and store the</span></span>
<span id="cb91-74"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; result into xmm5.</span></span>
<span id="cb91-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-76"></span>
<span id="cb91-77">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Rearrange string.</span></span>
<span id="cb91-78"></span>
<span id="cb91-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb91-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb91-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-83"></span>
<span id="cb91-84">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare to uniq.</span></span>
<span id="cb91-85"></span>
<span id="cb91-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect-and-test the unique character match xmm mask register (xmm5) with</span></span>
<span id="cb91-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the length match mask xmm register (xmm1).  This affects flags, allowing us</span></span>
<span id="cb91-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do a fast-path exit for the no-match case (where CY = 1 after xmm1 has</span></span>
<span id="cb91-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; been inverted).</span></span>
<span id="cb91-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-92"></span>
<span id="cb91-93">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Check for no match.</span></span>
<span id="cb91-94">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnc</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; There was a match.</span></span>
<span id="cb91-95"></span>
<span id="cb91-96"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-97"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match, set rax to -1 and return.</span></span>
<span id="cb91-98"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-99"></span>
<span id="cb91-100">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb91-101">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb91-102">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb91-103"></span>
<span id="cb91-104">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb91-105"></span>
<span id="cb91-106"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-107"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (There was at least one match, continue with processing.)</span></span>
<span id="cb91-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-109"></span>
<span id="cb91-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-111"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Calculate the "search length" for the incoming search string, which is</span></span>
<span id="cb91-112"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equivalent of 'min(String-&gt;Length, 16)'.  (The search string's length</span></span>
<span id="cb91-113"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; currently lives in xmm4, albeit as a byte-value broadcasted across the</span></span>
<span id="cb91-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; entire register, so extract that first.)</span></span>
<span id="cb91-115"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Once the search length is calculated, deposit it back at the second byte</span></span>
<span id="cb91-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location of xmm4.</span></span>
<span id="cb91-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-119"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 and xmm4[15:8] - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb91-120"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-121"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length (String-&gt;Length)</span></span>
<span id="cb91-122"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-123"></span>
<span id="cb91-124"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx10:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load length.</span></span>
<span id="cb91-125">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load 16 into rax.</span></span>
<span id="cb91-126">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy into r10.</span></span>
<span id="cb91-127">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against 16.</span></span>
<span id="cb91-128">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmova</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Use 16 if length is greater.</span></span>
<span id="cb91-129">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save back to xmm4b[1].</span></span>
<span id="cb91-130"></span>
<span id="cb91-131"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-132"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our parameter registers into xmm registers instead of their stack-backed</span></span>
<span id="cb91-133"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location, to avoid memory writes.</span></span>
<span id="cb91-134"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-135"></span>
<span id="cb91-136">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm2.</span></span>
<span id="cb91-137">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rcx into xmm2q[0].</span></span>
<span id="cb91-138">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rdx into xmm2q[1].</span></span>
<span id="cb91-139"></span>
<span id="cb91-140"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-141"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm1, xmm5'),</span></span>
<span id="cb91-142"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; yielding a mask identifying indices we need to perform subsequent matches</span></span>
<span id="cb91-143"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; upon.  Convert this into a bitmap and save in xmm2d[2].</span></span>
<span id="cb91-144"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-145"></span>
<span id="cb91-146">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpandn</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect unique + lengths.</span></span>
<span id="cb91-147">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Generate a bitmap from mask.</span></span>
<span id="cb91-148"></span>
<span id="cb91-149"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-150"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We're finished with xmm5; repurpose it in the same vein as xmm2 above.</span></span>
<span id="cb91-151"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-152"></span>
<span id="cb91-153">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm5.</span></span>
<span id="cb91-154">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save r8 into xmm5q[0].</span></span>
<span id="cb91-155"></span>
<span id="cb91-156"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-157"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Summary of xmm register stashing for the rest of the routine:</span></span>
<span id="cb91-158"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-159"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm2:</span></span>
<span id="cb91-160"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        0:63   (vpinsrq 0)     rcx (1st function parameter, StringTable)</span></span>
<span id="cb91-161"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       64:127  (vpinsrq 1)     rdx (2nd function paramter, String)</span></span>
<span id="cb91-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-163"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm4:</span></span>
<span id="cb91-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:7     (vpinsrb 0)     length of search string</span></span>
<span id="cb91-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16)</span></span>
<span id="cb91-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      16:23    (vpinsrb 2)     loop counter (when doing long string compares)</span></span>
<span id="cb91-167"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      24:31    (vpinsrb 3)     shift count</span></span>
<span id="cb91-168"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-169"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; xmm5:</span></span>
<span id="cb91-170"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span></span>
<span id="cb91-171"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      64:95    (vpinsrd 2)     bitmap of slots to compare</span></span>
<span id="cb91-172"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      96:127   (vpinsrd 3)     index of slot currently being processed</span></span>
<span id="cb91-173"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-174"></span>
<span id="cb91-175"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-176"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Initialize rcx as our counter register by doing a popcnt against the bitmap</span></span>
<span id="cb91-177"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we just generated in edx, and clear our shift count register (r9).</span></span>
<span id="cb91-178"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-179"></span>
<span id="cb91-180">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits in bitmap.</span></span>
<span id="cb91-181">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear r9.</span></span>
<span id="cb91-182"></span>
<span id="cb91-183">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb91-184"></span>
<span id="cb91-185"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-186"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span></span>
<span id="cb91-187"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; trailing zeros of the bitmap, and then add in the shift count, producing an</span></span>
<span id="cb91-188"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; index (rax) we can use to load the corresponding slot.</span></span>
<span id="cb91-189"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-190"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Register usage at top of loop:</span></span>
<span id="cb91-191"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-192"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index.</span></span>
<span id="cb91-193"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-194"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - Loop counter.</span></span>
<span id="cb91-195"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-196"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rdx - Bitmap.</span></span>
<span id="cb91-197"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-198"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - Shift count.</span></span>
<span id="cb91-199"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-200"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 - Search length.</span></span>
<span id="cb91-201"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-202"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length.</span></span>
<span id="cb91-203"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-204"></span>
<span id="cb91-205"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx20:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tzcnt</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count trailing zeros.</span></span>
<span id="cb91-206">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy tzcnt to rax,</span></span>
<span id="cb91-207">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Add shift to create index.</span></span>
<span id="cb91-208">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; tzcnt + 1</span></span>
<span id="cb91-209">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shrx</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Reposition bitmap.</span></span>
<span id="cb91-210">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy index back to shift.</span></span>
<span id="cb91-211">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shift = Index + 1</span></span>
<span id="cb91-212">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Store the raw index xmm5d[3].</span></span>
<span id="cb91-213"></span>
<span id="cb91-214"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-215"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span></span>
<span id="cb91-216"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span></span>
<span id="cb91-217"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-218"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, load the string table slot at this index into xmm1, then shift rax back.</span></span>
<span id="cb91-219"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-220"></span>
<span id="cb91-221">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb91-222">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb91-223">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span></span>
<span id="cb91-224">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb91-225"></span>
<span id="cb91-226"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-227"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The search string's first 16 characters are already in xmm0.  Compare this</span></span>
<span id="cb91-228"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; against the slot that has just been loaded into xmm1, storing the result back</span></span>
<span id="cb91-229"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.</span></span>
<span id="cb91-230"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-231"></span>
<span id="cb91-232">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare search string to slot.</span></span>
<span id="cb91-233"></span>
<span id="cb91-234"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-235"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert the XMM mask into a 32-bit representation, then zero high bits after</span></span>
<span id="cb91-236"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; our "search length", which allows us to ignore the results of the comparison</span></span>
<span id="cb91-237"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; above for bytes that were after the search string's length, if applicable.</span></span>
<span id="cb91-238"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, count the number of bits remaining, which tells us how many characters</span></span>
<span id="cb91-239"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we matched.</span></span>
<span id="cb91-240"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-241"></span>
<span id="cb91-242">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert into mask.</span></span>
<span id="cb91-243">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bzhi</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Zero high bits.</span></span>
<span id="cb91-244">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits.</span></span>
<span id="cb91-245"></span>
<span id="cb91-246"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-247"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If 16 characters matched, and the search string's length is longer than 16,</span></span>
<span id="cb91-248"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we're going to need to do a comparison of the remaining strings.</span></span>
<span id="cb91-249"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-250"></span>
<span id="cb91-251">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare chars matched to 16.</span></span>
<span id="cb91-252">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 chars matched.</span></span>
<span id="cb91-253">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx30                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than 16 matched.</span></span>
<span id="cb91-254"></span>
<span id="cb91-255"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-256"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All 16 characters matched.  Load the underlying slot's length from the</span></span>
<span id="cb91-257"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; relevant offset in the xmm3 register, then check to see if it's greater than,</span></span>
<span id="cb91-258"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equal or less than 16.</span></span>
<span id="cb91-259"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-260"></span>
<span id="cb91-261">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">movd</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load into xmm1.</span></span>
<span id="cb91-262">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle length...</span></span>
<span id="cb91-263">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; And extract back into rax.</span></span>
<span id="cb91-264">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare length to 16.</span></span>
<span id="cb91-265">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ja</span>          Pfx50                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length is &gt; 16.</span></span>
<span id="cb91-266">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Lengths match!</span></span>
<span id="cb91-267">                                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length &lt;= 16, fall through...</span></span>
<span id="cb91-268"></span>
<span id="cb91-269"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-270"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than or equal to 16 characters were matched.  Compare this against the</span></span>
<span id="cb91-271"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length of the search string; if equal, this is a match.</span></span>
<span id="cb91-272"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-273"></span>
<span id="cb91-274"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx30:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against search string.</span></span>
<span id="cb91-275">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx35                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Match found!</span></span>
<span id="cb91-276"></span>
<span id="cb91-277"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-278"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match against this slot, decrement counter and either continue the loop</span></span>
<span id="cb91-279"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; or terminate the search and return no match.</span></span>
<span id="cb91-280"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-281"></span>
<span id="cb91-282">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb91-283">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; cx != 0, continue.</span></span>
<span id="cb91-284"></span>
<span id="cb91-285">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb91-286">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb91-287">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb91-288"></span>
<span id="cb91-289"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-290"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span></span>
<span id="cb91-291"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; former is used when we need to copy the number of characters matched from r8</span></span>
<span id="cb91-292"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back to rax.  The latter jump target doesn't require this.</span></span>
<span id="cb91-293"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-294"></span>
<span id="cb91-295"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx35:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy numbers of chars matched.</span></span>
<span id="cb91-296"></span>
<span id="cb91-297"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-298"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the match parameter back into r8 and test to see if it's not-NULL, in</span></span>
<span id="cb91-299"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; which case we need to fill out a STRING_MATCH structure for the match.</span></span>
<span id="cb91-300"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-301"></span>
<span id="cb91-302"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx40:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringMatch.</span></span>
<span id="cb91-303">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is NULL?</span></span>
<span id="cb91-304">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not zero, need to fill out.</span></span>
<span id="cb91-305"></span>
<span id="cb91-306"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-307"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is NULL, we're done. Extract index of match back into rax and ret.</span></span>
<span id="cb91-308"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-309"></span>
<span id="cb91-310">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb91-311">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch == NULL, finish.</span></span>
<span id="cb91-312"></span>
<span id="cb91-313"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-314"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span></span>
<span id="cb91-315"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; reload the index from xmm5 into rax and save.</span></span>
<span id="cb91-316"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-317"></span>
<span id="cb91-318">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>NumberOfMatchedCharacters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb91-319">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract raw index for match.</span></span>
<span id="cb91-320">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb91-321"></span>
<span id="cb91-322"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-323"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb91-324"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; involves going through the StringTable, so we need to load that parameter</span></span>
<span id="cb91-325"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; back into rcx, then resolving the string array address via pStringArray,</span></span>
<span id="cb91-326"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; then the relevant STRING offset within the StringArray.Strings structure.</span></span>
<span id="cb91-327"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-328"></span>
<span id="cb91-329">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into rcx.</span></span>
<span id="cb91-330">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb91-331"></span>
<span id="cb91-332">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb91-333">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb91-334">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save STRING ptr.</span></span>
<span id="cb91-335">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shr</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Revert the scaling.</span></span>
<span id="cb91-336"></span>
<span id="cb91-337">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span></span>
<span id="cb91-338"></span>
<span id="cb91-339"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-340"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb91-341"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb91-342"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string is a prefix match.</span></span>
<span id="cb91-343"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-344"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The slot length is stored in rax at this point, and the search string's</span></span>
<span id="cb91-345"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; length is stored in r11.  We know that the search string's length will</span></span>
<span id="cb91-346"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; always be longer than or equal to the slot length at this point, so, we</span></span>
<span id="cb91-347"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; can subtract 16 (currently stored in r10) from rax, and use the resulting</span></span>
<span id="cb91-348"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; value as a loop counter, comparing the search string with the underlying</span></span>
<span id="cb91-349"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string slot byte-by-byte to determine if there's a match.</span></span>
<span id="cb91-350"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-351"></span>
<span id="cb91-352"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx50:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sub</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Subtract 16 from search length.</span></span>
<span id="cb91-353"></span>
<span id="cb91-354"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-355"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up some registers by stashing their values into various xmm offsets.</span></span>
<span id="cb91-356"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-357"></span>
<span id="cb91-358">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rdx register.</span></span>
<span id="cb91-359">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpinsrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ecx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rcx register.</span></span>
<span id="cb91-360">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rax, rcx is now counter.</span></span>
<span id="cb91-361"></span>
<span id="cb91-362"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-363"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the search string buffer and advance it 16 bytes.</span></span>
<span id="cb91-364"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-365"></span>
<span id="cb91-366">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract String into r11.</span></span>
<span id="cb91-367">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer address.</span></span>
<span id="cb91-368">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb91-369"></span>
<span id="cb91-370"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-371"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Loading the slot is more involved as we have to go to the string table, then</span></span>
<span id="cb91-372"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the pStringArray pointer, then the relevant STRING offset within the string</span></span>
<span id="cb91-373"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; array (which requires re-loading the index from xmm5d[3]), then the string</span></span>
<span id="cb91-374"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; buffer from that structure.</span></span>
<span id="cb91-375"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-376"></span>
<span id="cb91-377">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringTable into r8.</span></span>
<span id="cb91-378">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb91-379"></span>
<span id="cb91-380">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract index from xmm5.</span></span>
<span id="cb91-381">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Scale the index; sizeof STRING=16.</span></span>
<span id="cb91-382"></span>
<span id="cb91-383">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb91-384">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string table buffer address.</span></span>
<span id="cb91-385">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb91-386"></span>
<span id="cb91-387">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy counter.</span></span>
<span id="cb91-388"></span>
<span id="cb91-389"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-390"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span></span>
<span id="cb91-391"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Do a byte-by-byte comparison.</span></span>
<span id="cb91-392"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-393"></span>
<span id="cb91-394">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb91-395">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load byte from search string.</span></span>
<span id="cb91-396">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against target.</span></span>
<span id="cb91-397">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jne</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx60                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; If not equal, jump.</span></span>
<span id="cb91-398"></span>
<span id="cb91-399"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-400"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The two bytes were equal, update rax, decrement rcx and potentially continue</span></span>
<span id="cb91-401"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the loop.</span></span>
<span id="cb91-402"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-403"></span>
<span id="cb91-404">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ax</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Increment index.</span></span>
<span id="cb91-405">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">loopnz</span>      @B                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement cx and loop back.</span></span>
<span id="cb91-406"></span>
<span id="cb91-407"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-408"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span></span>
<span id="cb91-409"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; how many characters we matched, and then jump to Pfx40 for finalization.</span></span>
<span id="cb91-410"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-411"></span>
<span id="cb91-412">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span></span>
<span id="cb91-413">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx40</span>
<span id="cb91-414"></span>
<span id="cb91-415"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-416"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Byte comparisons were not equal.  Restore the rcx loop counter and decrement</span></span>
<span id="cb91-417"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; it.  If it's zero, we have no more strings to compare, so we can do a quick</span></span>
<span id="cb91-418"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; exit.  If there are still comparisons to be made, restore the other registers</span></span>
<span id="cb91-419"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we trampled then jump back to the start of the loop Pfx20.</span></span>
<span id="cb91-420"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-421"></span>
<span id="cb91-422"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx60:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rcx counter.</span></span>
<span id="cb91-423">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cx</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb91-424">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @F                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Jump forward if not zero.</span></span>
<span id="cb91-425"></span>
<span id="cb91-426"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-427"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No more comparisons remaining, return.</span></span>
<span id="cb91-428"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-429"></span>
<span id="cb91-430">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb91-431">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb91-432">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb91-433"></span>
<span id="cb91-434"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-435"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; More comparisons remain; restore the registers we clobbered and continue loop.</span></span>
<span id="cb91-436"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-437"></span>
<span id="cb91-438">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r10.</span></span>
<span id="cb91-439">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore r11.</span></span>
<span id="cb91-440">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrd</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rdx bitmap.</span></span>
<span id="cb91-441">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Continue comparisons.</span></span>
<span id="cb91-442"></span>
<span id="cb91-443">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb91-444"></span>
<span id="cb91-445">        LEAF_END   IsPrefixOfStringInTable_x64_11<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb91-446"></span>
<span id="cb91-447"></span>
<span id="cb91-448"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></span></code></pre></div>
</div>
</div>
</div>
<p>Notice the similarity between the diff above and the one for <code>IsPrefixOfStringInTable_x64_5</code>. Let’s see how the performance compares. The negative match performance for version 11 should be on par with version 5.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-11-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-11-v1.svg" class="img-fluid figure-img" alt="Benchmark-x64-11-v1"></a></p>
<figcaption>Benchmark-x64-11-v1</figcaption>
</figure>
</div>
<p>We have a new winner! Version 11 is now the fastest assembly version across the board for both prefix and negative matching. Before we start our final pass on version 12, let’s take a quick look at how we currently compare against the fastest C version:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-11v14C-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-11v14C-v1.svg" class="img-fluid figure-img" alt="Benchmark-x64-11v14C-v1"></a></p>
<figcaption>Benchmark-x64-11v14C-v1</figcaption>
</figure>
</div>
<p>It’s already very close! We just need to shave off a few more cycles on the assembly version to take the crown.</p>
</section>
<section id="isprefixofstringintable_x64_12" class="level3">
<h3 class="anchored" data-anchor-id="isprefixofstringintable_x64_12">IsPrefixOfStringInTable_x64_12</h3>
<p>← IsPrefixOfStringInTable_x64_11</p>
<p>Let’s start with updating the main loop logic such that it matches <code>IsPrefixOfStringInTable_13</code>. We’ll omit the bitmap shifting and loop count in lieu of the <code>blsr</code> approach.</p>
<p><em><em>(About 5 hours pass…)</em></em></p>
<p>Alright, I’m back! Version 12 of our assembly routine is complete! This was the first big major change to the routine since version 2 really, and I had the benefit of the past ~220 hours already spent obsessing over this topic, so, I’m actually pretty happy with the result! Let’s take a look. (The diff view of this version is pretty messy compared to the others, given the increased amount of code churn that was involved.)</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-27-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-27-1" aria-controls="tabset-27-1" aria-selected="true">Diff (12 v 11)</a></li><li class="nav-item"><a class="nav-link" id="tabset-27-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-27-2" aria-controls="tabset-27-2" aria-selected="false">Full</a></li></ul>
<div class="tab-content">
<div id="tabset-27-1" class="tab-pane active" aria-labelledby="tabset-27-1-tab">
<div class="sourceCode" id="cb92" style="background: #f1f3f5;"><pre class="sourceCode diff code-with-copy"><code class="sourceCode diff"><span id="cb92-1">% diff -u IsPrefixOfStringInTable_x64_11.asm IsPrefixOfStringInTable_x64_12.asm</span>
<span id="cb92-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">--- IsPrefixOfStringInTable_x64_11.asm  2018-05-03 17:21:18.181161900 -0400</span></span>
<span id="cb92-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">+++ IsPrefixOfStringInTable_x64_12.asm  2018-05-04 12:36:24.773963100 -0400</span></span>
<span id="cb92-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -33,8 +33,11 @@</span></span>
<span id="cb92-5"> ;   search string.  That is, whether any string in the table "starts with</span>
<span id="cb92-6"> ;   or is equal to" the search string.</span>
<span id="cb92-7"> ;</span>
<span id="cb92-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   This routine is based off version 10, with the optimized negative prefix</span></span>
<span id="cb92-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   matching logic in place from version 5.</span></span>
<span id="cb92-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   This routine is based on version 11, but leverages the inner loop logic</span></span>
<span id="cb92-11"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   tweak we used in version 13 of the C version, pointed out by Fabian Giesen</span></span>
<span id="cb92-12"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   (@rygorous).  That is, we do away with the shifting logic and explicit loop</span></span>
<span id="cb92-13"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   counting, and simply use blsr to keep iterating through the bitmap until it</span></span>
<span id="cb92-14"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   is empty.</span></span>
<span id="cb92-15"> ;</span>
<span id="cb92-16"> ; Arguments:</span>
<span id="cb92-17"> ;</span>
<span id="cb92-18"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -53,7 +56,7 @@</span></span>
<span id="cb92-19"> ;</span>
<span id="cb92-20"> ;--</span>
<span id="cb92-21"></span>
<span id="cb92-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_ENTRY IsPrefixOfStringInTable_x64_11, _TEXT$00</span></span>
<span id="cb92-23"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_ENTRY IsPrefixOfStringInTable_x64_12, _TEXT$00</span></span>
<span id="cb92-24"></span>
<span id="cb92-25"> ;</span>
<span id="cb92-26"> ; Load the address of the string buffer into rax.</span>
<span id="cb92-27"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -129,9 +132,7 @@</span></span>
<span id="cb92-28"></span>
<span id="cb92-29"> ;</span>
<span id="cb92-30"> ; Calculate the "search length" for the incoming search string, which is</span>
<span id="cb92-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; equivalent of 'min(String-&gt;Length, 16)'.  (The search string's length</span></span>
<span id="cb92-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; currently lives in xmm4, albeit as a byte-value broadcasted across the</span></span>
<span id="cb92-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; entire register, so extract that first.)</span></span>
<span id="cb92-34"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; equivalent of 'min(String-&gt;Length, 16)'.</span></span>
<span id="cb92-35"> ;</span>
<span id="cb92-36"> ; Once the search length is calculated, deposit it back at the second byte</span>
<span id="cb92-37"> ; location of xmm4.</span>
<span id="cb92-38"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -141,21 +142,18 @@</span></span>
<span id="cb92-39"> ;   r11 - String length (String-&gt;Length)</span>
<span id="cb92-40"> ;</span>
<span id="cb92-41"></span>
<span id="cb92-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Pfx10:  vpextrb     r11, xmm4, 0                ; Load length.</span></span>
<span id="cb92-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         rax, 16                     ; Load 16 into rax.</span></span>
<span id="cb92-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         r10, r11                    ; Copy into r10.</span></span>
<span id="cb92-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        cmp         r10w, ax                    ; Compare against 16.</span></span>
<span id="cb92-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        cmova       r10w, ax                    ; Use 16 if length is greater.</span></span>
<span id="cb92-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpinsrb     xmm4, xmm4, r10d, 1         ; Save back to xmm4b[1].</span></span>
<span id="cb92-48"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx10:  vpextrb     r11, xmm4, 0                ; Load string length.</span></span>
<span id="cb92-49"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r9, 16                      ; Load 16 into r9.</span></span>
<span id="cb92-50"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r10, r11                    ; Copy length into r10.</span></span>
<span id="cb92-51"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmp         r10w, r9w                   ; Compare against 16.</span></span>
<span id="cb92-52"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmova       r10w, r9w                   ; Use 16 if length is greater.</span></span>
<span id="cb92-53"></span>
<span id="cb92-54"> ;</span>
<span id="cb92-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Home our parameter registers into xmm registers instead of their stack-backed</span></span>
<span id="cb92-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; location, to avoid memory writes.</span></span>
<span id="cb92-57"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Home our parameter register rdx into the base of xmm2.</span></span>
<span id="cb92-58"> ;</span>
<span id="cb92-59"></span>
<span id="cb92-60">         vpxor       xmm2, xmm2, xmm2            ; Clear xmm2.</span>
<span id="cb92-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpinsrq     xmm2, xmm2, rcx, 0          ; Save rcx into xmm2q[0].</span></span>
<span id="cb92-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpinsrq     xmm2, xmm2, rdx, 1          ; Save rdx into xmm2q[1].</span></span>
<span id="cb92-63"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vmovq       xmm2, rdx                   ; Save rcx.</span></span>
<span id="cb92-64"></span>
<span id="cb92-65"> ;</span>
<span id="cb92-66"> ; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm1, xmm5'),</span>
<span id="cb92-67"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -171,77 +169,70 @@</span></span>
<span id="cb92-68"> ;</span>
<span id="cb92-69"></span>
<span id="cb92-70">         vpxor       xmm5, xmm5, xmm5            ; Clear xmm5.</span>
<span id="cb92-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpinsrq     xmm5, xmm5, r8, 0           ; Save r8 into xmm5q[0].</span></span>
<span id="cb92-72"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vmovq       xmm5, r8                    ; Save r8 into xmm5q[0].</span></span>
<span id="cb92-73"></span>
<span id="cb92-74"> ;</span>
<span id="cb92-75"> ; Summary of xmm register stashing for the rest of the routine:</span>
<span id="cb92-76"> ;</span>
<span id="cb92-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; xmm2:</span></span>
<span id="cb92-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;        0:63   (vpinsrq 0)     rcx (1st function parameter, StringTable)</span></span>
<span id="cb92-79"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;       64:127  (vpinsrq 1)     rdx (2nd function paramter, String)</span></span>
<span id="cb92-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb92-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; xmm4:</span></span>
<span id="cb92-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;       0:7     (vpinsrb 0)     length of search string</span></span>
<span id="cb92-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16)</span></span>
<span id="cb92-84"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;      16:23    (vpinsrb 2)     loop counter (when doing long string compares)</span></span>
<span id="cb92-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;      24:31    (vpinsrb 3)     shift count</span></span>
<span id="cb92-86"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   xmm2:</span></span>
<span id="cb92-87"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;        0:63   (vpinsrq 0)     rdx (2nd function parameter, String)</span></span>
<span id="cb92-88"> ;</span>
<span id="cb92-89"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; xmm5:</span></span>
<span id="cb92-90"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   xmm4:</span></span>
<span id="cb92-91"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;       0:7     (vpinsrb 0)     length of search string [r11]</span></span>
<span id="cb92-92"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16) [r10]</span></span>
<span id="cb92-93"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-94"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   xmm5:</span></span>
<span id="cb92-95"> ;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span>
<span id="cb92-96"> ;      64:95    (vpinsrd 2)     bitmap of slots to compare</span>
<span id="cb92-97"> ;      96:127   (vpinsrd 3)     index of slot currently being processed</span>
<span id="cb92-98"> ;</span>
<span id="cb92-99"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb92-100"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Non-stashing xmm register use:</span></span>
<span id="cb92-101"> ;</span>
<span id="cb92-102"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Initialize rcx as our counter register by doing a popcnt against the bitmap</span></span>
<span id="cb92-103"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; we just generated in edx, and clear our shift count register (r9).</span></span>
<span id="cb92-104"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   xmm0: First 16 characters of search string.</span></span>
<span id="cb92-105"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-106"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   xmm3: Slot lengths.</span></span>
<span id="cb92-107"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-108"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   xmm1: Freebie!</span></span>
<span id="cb92-109"> ;</span>
<span id="cb92-110"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb92-111"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        popcnt      ecx, edx                    ; Count bits in bitmap.</span></span>
<span id="cb92-112"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        xor         r9, r9                      ; Clear r9.</span></span>
<span id="cb92-113"></span>
<span id="cb92-114">         align 16</span>
<span id="cb92-115"></span>
<span id="cb92-116"> ;</span>
<span id="cb92-117"> ; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span>
<span id="cb92-118"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; trailing zeros of the bitmap, and then add in the shift count, producing an</span></span>
<span id="cb92-119"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; index (rax) we can use to load the corresponding slot.</span></span>
<span id="cb92-120"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; trailing zeros of the bitmap, producing an index (rax) we can use to load the</span></span>
<span id="cb92-121"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; corresponding slot.</span></span>
<span id="cb92-122"> ;</span>
<span id="cb92-123"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Register usage at top of loop:</span></span>
<span id="cb92-124"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Volatile register usage at top of loop:</span></span>
<span id="cb92-125"> ;</span>
<span id="cb92-126"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   rax - Index.</span></span>
<span id="cb92-127"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb92-128"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   rcx - Loop counter.</span></span>
<span id="cb92-129"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rcx - StringTable.</span></span>
<span id="cb92-130"> ;</span>
<span id="cb92-131"> ;   rdx - Bitmap.</span>
<span id="cb92-132"> ;</span>
<span id="cb92-133"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   r9 - Shift count.</span></span>
<span id="cb92-134"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r9 - Constant value of 16.</span></span>
<span id="cb92-135"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-136"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r10 - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb92-137"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-138"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r11 - Search string length (String-&gt;Length).</span></span>
<span id="cb92-139"> ;</span>
<span id="cb92-140"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   r10 - Search length.</span></span>
<span id="cb92-141"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Use of remaining volatile registers during loop:</span></span>
<span id="cb92-142"> ;</span>
<span id="cb92-143"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;   r11 - String length.</span></span>
<span id="cb92-144"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rax - Index.</span></span>
<span id="cb92-145"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-146"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r8 - Freebie!</span></span>
<span id="cb92-147"> ;</span>
<span id="cb92-148"></span>
<span id="cb92-149"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Pfx20:  tzcnt       r8d, edx                    ; Count trailing zeros.</span></span>
<span id="cb92-150"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         eax, r8d                    ; Copy tzcnt to rax,</span></span>
<span id="cb92-151"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        add         rax, r9                     ; Add shift to create index.</span></span>
<span id="cb92-152"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        inc         r8                          ; tzcnt + 1</span></span>
<span id="cb92-153"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        shrx        rdx, rdx, r8                ; Reposition bitmap.</span></span>
<span id="cb92-154"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         r9, rax                     ; Copy index back to shift.</span></span>
<span id="cb92-155"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        inc         r9                          ; Shift = Index + 1</span></span>
<span id="cb92-156"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpinsrd     xmm5, xmm5, eax, 3          ; Store the raw index xmm5d[3].</span></span>
<span id="cb92-157"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx20:  tzcnt       eax, edx                    ; Count trailing zeros = index.</span></span>
<span id="cb92-158"></span>
<span id="cb92-159"> ;</span>
<span id="cb92-160"> ; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span>
<span id="cb92-161"> ; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span>
<span id="cb92-162"> ;</span>
<span id="cb92-163"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Then, load the string table slot at this index into xmm1, then shift rax back.</span></span>
<span id="cb92-164"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Then, load the string table slot at this index into xmm1.</span></span>
<span id="cb92-165"> ;</span>
<span id="cb92-166"></span>
<span id="cb92-167"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        shl         eax, 4</span></span>
<span id="cb92-168"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpextrq     r8, xmm2, 0</span></span>
<span id="cb92-169"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vmovdqa     xmm1, xmmword ptr [rax + StringTable.Slots[r8]]</span></span>
<span id="cb92-170"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        shr         eax, 4</span></span>
<span id="cb92-171"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r8, rax                     ; Copy index (rax) into r8.</span></span>
<span id="cb92-172"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        shl         r8, 4                       ; "Scale" the index.</span></span>
<span id="cb92-173"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vmovdqa     xmm1, xmmword ptr [r8 + StringTable.Slots[rcx]]</span></span>
<span id="cb92-174"></span>
<span id="cb92-175"> ;</span>
<span id="cb92-176"> ; The search string's first 16 characters are already in xmm0.  Compare this</span>
<span id="cb92-177"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -264,187 +255,220 @@</span></span>
<span id="cb92-178">         popcnt      r8d, r8d                    ; Count bits.</span>
<span id="cb92-179"></span>
<span id="cb92-180"> ;</span>
<span id="cb92-181"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; If 16 characters matched, and the search string's length is longer than 16,</span></span>
<span id="cb92-182"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; we're going to need to do a comparison of the remaining strings.</span></span>
<span id="cb92-183"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Determine if less than 16 characters matched, as this avoids needing to do</span></span>
<span id="cb92-184"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; a more convoluted test to see if a byte-by-byte string comparison is needed</span></span>
<span id="cb92-185"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; (for lengths longer than 16).</span></span>
<span id="cb92-186"> ;</span>
<span id="cb92-187"></span>
<span id="cb92-188"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        cmp         r8w, 16                     ; Compare chars matched to 16.</span></span>
<span id="cb92-189"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        je          short @F                    ; 16 chars matched.</span></span>
<span id="cb92-190"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jmp         Pfx30                       ; Less than 16 matched.</span></span>
<span id="cb92-191"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmp         r8w, r9w                    ; Compare chars matched to 16.</span></span>
<span id="cb92-192"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jl          short Pfx30                 ; Less than 16 matched.</span></span>
<span id="cb92-193"></span>
<span id="cb92-194"> ;</span>
<span id="cb92-195"> ; All 16 characters matched.  Load the underlying slot's length from the</span>
<span id="cb92-196"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; relevant offset in the xmm3 register, then check to see if it's greater than,</span></span>
<span id="cb92-197"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; equal or less than 16.</span></span>
<span id="cb92-198"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-;</span></span>
<span id="cb92-199"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb92-200"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-@@:     movd        xmm1, rax                   ; Load into xmm1.</span></span>
<span id="cb92-201"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpshufb     xmm1, xmm3, xmm1            ; Shuffle length...</span></span>
<span id="cb92-202"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpextrb     rax, xmm1, 0                ; And extract back into rax.</span></span>
<span id="cb92-203"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        cmp         al, 16                      ; Compare length to 16.</span></span>
<span id="cb92-204"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ja          Pfx50                       ; Length is &gt; 16.</span></span>
<span id="cb92-205"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        je          short Pfx35                 ; Lengths match!</span></span>
<span id="cb92-206"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-                                                ; Length &lt;= 16, fall through...</span></span>
<span id="cb92-207"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; relevant offset in the xmm3 register into r11, then check to see if it's</span></span>
<span id="cb92-208"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; greater than 16.  If it is, we're going to need to do a string compare,</span></span>
<span id="cb92-209"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; handled by Pfx50.</span></span>
<span id="cb92-210"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-211"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; N.B. The approach for loading the slot length here is a little quirky.  We</span></span>
<span id="cb92-212"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      have all the lengths for slots in xmm3, and we have the current match</span></span>
<span id="cb92-213"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      index in rax.  If we move rax into an xmm register (xmm1 in this case),</span></span>
<span id="cb92-214"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      we can use it to shuffle xmm3, such that the length we're interested in</span></span>
<span id="cb92-215"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      will be deposited back into the lowest byte, which we can then extract</span></span>
<span id="cb92-216"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      via vpextrb.</span></span>
<span id="cb92-217"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-218"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb92-219"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        movd        xmm1, rax                   ; Load index into xmm1.</span></span>
<span id="cb92-220"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpshufb     xmm1, xmm3, xmm1            ; Shuffle length by index.</span></span>
<span id="cb92-221"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrb     r11, xmm1, 0                ; Extract slot length into r11.</span></span>
<span id="cb92-222"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmp         r11w, r9w                   ; Compare length to 16.</span></span>
<span id="cb92-223"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ja          short Pfx50                 ; Length is &gt; 16.</span></span>
<span id="cb92-224"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jmp         short Pfx40                 ; Lengths match!</span></span>
<span id="cb92-225"></span>
<span id="cb92-226"> ;</span>
<span id="cb92-227"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Less than or equal to 16 characters were matched.  Compare this against the</span></span>
<span id="cb92-228"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; length of the search string; if equal, this is a match.</span></span>
<span id="cb92-229"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Less than 16 characters were matched.  Compare this against the length of the</span></span>
<span id="cb92-230"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; search string; if equal, this is a match.</span></span>
<span id="cb92-231"> ;</span>
<span id="cb92-232"></span>
<span id="cb92-233"> Pfx30:  cmp         r8d, r10d                   ; Compare against search string.</span>
<span id="cb92-234"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        je          short Pfx35                 ; Match found!</span></span>
<span id="cb92-235"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        je          short Pfx40                 ; Match found!</span></span>
<span id="cb92-236"></span>
<span id="cb92-237"> ;</span>
<span id="cb92-238"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; No match against this slot, decrement counter and either continue the loop</span></span>
<span id="cb92-239"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; or terminate the search and return no match.</span></span>
<span id="cb92-240"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; No match against this slot.  Clear the lowest set bit of the bitmap and check</span></span>
<span id="cb92-241"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; to see if there are any bits remaining in it.</span></span>
<span id="cb92-242"> ;</span>
<span id="cb92-243"></span>
<span id="cb92-244"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        dec         cx                          ; Decrement counter.</span></span>
<span id="cb92-245"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jnz         Pfx20                       ; cx != 0, continue.</span></span>
<span id="cb92-246"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        blsr        edx, edx                    ; Reposition bitmap.</span></span>
<span id="cb92-247"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        test        edx, edx                    ; Is bitmap empty?</span></span>
<span id="cb92-248"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnz         short Pfx20                 ; Bits remain, continue loop.</span></span>
<span id="cb92-249"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb92-250"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-251"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; No more bits remain set in the bitmap, we're done.  Indicate no match found</span></span>
<span id="cb92-252"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; and return.</span></span>
<span id="cb92-253"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-254"></span>
<span id="cb92-255">         xor         eax, eax                    ; Clear rax.</span>
<span id="cb92-256">         not         al                          ; al = -1</span>
<span id="cb92-257">         ret                                     ; Return.</span>
<span id="cb92-258"></span>
<span id="cb92-259"> ;</span>
<span id="cb92-260"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Pfx35 and Pfx40 are the jump targets for when the prefix match succeeds.  The</span></span>
<span id="cb92-261"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; former is used when we need to copy the number of characters matched from r8</span></span>
<span id="cb92-262"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; back to rax.  The latter jump target doesn't require this.</span></span>
<span id="cb92-263"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the match parameter into r9 and test to see if it's not-NULL, in which</span></span>
<span id="cb92-264"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; case we need to fill out a STRING_MATCH structure for the match, handled by</span></span>
<span id="cb92-265"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; jump target Pfx80 at the end of this routine.</span></span>
<span id="cb92-266"> ;</span>
<span id="cb92-267"></span>
<span id="cb92-268"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Pfx35:  mov         rax, r8                     ; Copy numbers of chars matched.</span></span>
<span id="cb92-269"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx40:  vpextrq     r9, xmm5, 0                 ; Extract StringMatch.</span></span>
<span id="cb92-270"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        test        r9, r9                      ; Is NULL?</span></span>
<span id="cb92-271"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnz         Pfx80                       ; Not zero, need to fill out.</span></span>
<span id="cb92-272"></span>
<span id="cb92-273"> ;</span>
<span id="cb92-274"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Load the match parameter back into r8 and test to see if it's not-NULL, in</span></span>
<span id="cb92-275"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; which case we need to fill out a STRING_MATCH structure for the match.</span></span>
<span id="cb92-276"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; StringMatch is NULL, we're done.  We can return straight from here, rax will</span></span>
<span id="cb92-277"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; still have the index stored.</span></span>
<span id="cb92-278"> ;</span>
<span id="cb92-279"></span>
<span id="cb92-280"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Pfx40:  vpextrq     r8, xmm5, 0                 ; Extract StringMatch.</span></span>
<span id="cb92-281"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        test        r8, r8                      ; Is NULL?</span></span>
<span id="cb92-282"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jnz         short @F                    ; Not zero, need to fill out.</span></span>
<span id="cb92-283"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; StringMatch == NULL, finish.</span></span>
<span id="cb92-284"></span>
<span id="cb92-285"> ;</span>
<span id="cb92-286"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; StringMatch is NULL, we're done. Extract index of match back into rax and ret.</span></span>
<span id="cb92-287"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb92-288"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb92-289"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; string is a prefix match.</span></span>
<span id="cb92-290"> ;</span>
<span id="cb92-291"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb92-292"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpextrd     eax, xmm5, 3                ; Extract raw index for match.</span></span>
<span id="cb92-293"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ret                                     ; StringMatch == NULL, finish.</span></span>
<span id="cb92-294"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb92-295"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Register use on block entry:</span></span>
<span id="cb92-296"> ;</span>
<span id="cb92-297"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; StringMatch is not NULL.  Fill out characters matched (currently rax), then</span></span>
<span id="cb92-298"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; reload the index from xmm5 into rax and save.</span></span>
<span id="cb92-299"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rax - Index.</span></span>
<span id="cb92-300"> ;</span>
<span id="cb92-301"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb92-302"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-@@:     mov         byte ptr StringMatch.NumberOfMatchedCharacters[r8], al</span></span>
<span id="cb92-303"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpextrd     eax, xmm5, 3                ; Extract raw index for match.</span></span>
<span id="cb92-304"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         byte ptr StringMatch.Index[r8], al</span></span>
<span id="cb92-305"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb92-306"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rcx - StringTable.</span></span>
<span id="cb92-307"> ;</span>
<span id="cb92-308"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb92-309"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; involves going through the StringTable, so we need to load that parameter</span></span>
<span id="cb92-310"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; back into rcx, then resolving the string array address via pStringArray,</span></span>
<span id="cb92-311"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; then the relevant STRING offset within the StringArray.Strings structure.</span></span>
<span id="cb92-312"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rdx - Bitmap.</span></span>
<span id="cb92-313"> ;</span>
<span id="cb92-314"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb92-315"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpextrq     rcx, xmm2, 0            ; Extract StringTable into rcx.</span></span>
<span id="cb92-316"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         rcx, StringTable.pStringArray[rcx] ; Load string array.</span></span>
<span id="cb92-317"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb92-318"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        shl         eax, 4                  ; Scale the index; sizeof STRING=16.</span></span>
<span id="cb92-319"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        lea         rdx, [rax + StringArray.Strings[rcx]] ; Resolve address.</span></span>
<span id="cb92-320"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         qword ptr StringMatch.String[r8], rdx ; Save STRING ptr.</span></span>
<span id="cb92-321"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        shr         eax, 4                  ; Revert the scaling.</span></span>
<span id="cb92-322"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb92-323"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        ret</span></span>
<span id="cb92-324"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb92-325"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r9 - Constant value of 16.</span></span>
<span id="cb92-326"> ;</span>
<span id="cb92-327"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb92-328"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb92-329"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; string is a prefix match.</span></span>
<span id="cb92-330"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r10 - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb92-331"> ;</span>
<span id="cb92-332"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; The slot length is stored in rax at this point, and the search string's</span></span>
<span id="cb92-333"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; length is stored in r11.  We know that the search string's length will</span></span>
<span id="cb92-334"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; always be longer than or equal to the slot length at this point, so, we</span></span>
<span id="cb92-335"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; can subtract 16 (currently stored in r10) from rax, and use the resulting</span></span>
<span id="cb92-336"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; value as a loop counter, comparing the search string with the underlying</span></span>
<span id="cb92-337"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; string slot byte-by-byte to determine if there's a match.</span></span>
<span id="cb92-338"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r11 - Slot length.</span></span>
<span id="cb92-339"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-340"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Register use during the block (after we've freed things up and loaded the</span></span>
<span id="cb92-341"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; values we need):</span></span>
<span id="cb92-342"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-343"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rax - Index/accumulator.</span></span>
<span id="cb92-344"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-345"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rcx - Loop counter (for byte comparison).</span></span>
<span id="cb92-346"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-347"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rdx - Byte loaded into dl for comparison.</span></span>
<span id="cb92-348"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-349"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r8 - Target string buffer.</span></span>
<span id="cb92-350"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-351"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r9 - Search string buffer.</span></span>
<span id="cb92-352"> ;</span>
<span id="cb92-353"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb92-354"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Pfx50:  sub         rax, r10                ; Subtract 16 from search length.</span></span>
<span id="cb92-355"></span>
<span id="cb92-356"> ;</span>
<span id="cb92-357"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Free up some registers by stashing their values into various xmm offsets.</span></span>
<span id="cb92-358"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Initialize r8 such that it's pointing to the slot's String-&gt;Buffer address.</span></span>
<span id="cb92-359"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; This is a bit fiddly as we need to go through StringTable.pStringArray first</span></span>
<span id="cb92-360"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; to get the base address of the STRING_ARRAY, then the relevant STRING offset</span></span>
<span id="cb92-361"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; within the array, then the String-&gt;Buffer address from that structure.  Then,</span></span>
<span id="cb92-362"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; add 16 to it, such that it's ready as the base address for comparison.</span></span>
<span id="cb92-363"> ;</span>
<span id="cb92-364"></span>
<span id="cb92-365"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpinsrd     xmm5, xmm5, edx, 2      ; Free up rdx register.</span></span>
<span id="cb92-366"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpinsrb     xmm4, xmm4, ecx, 2      ; Free up rcx register.</span></span>
<span id="cb92-367"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         rcx, rax                ; Free up rax, rcx is now counter.</span></span>
<span id="cb92-368"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx50:  mov         r8, StringTable.pStringArray[rcx] ; Load string array addr.</span></span>
<span id="cb92-369"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r9, rax                 ; Copy index into r9.</span></span>
<span id="cb92-370"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        shl         r9, 4                   ; "Scale" index; sizeof STRING=16.</span></span>
<span id="cb92-371"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        lea         r8, [r9 + StringArray.Strings[r8]] ; Load STRING address.</span></span>
<span id="cb92-372"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r8, String.Buffer[r8]   ; Load String-&gt;Buffer address.</span></span>
<span id="cb92-373"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        add         r8, r10                 ; Advance it 16 bytes.</span></span>
<span id="cb92-374"></span>
<span id="cb92-375"> ;</span>
<span id="cb92-376"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Load the search string buffer and advance it 16 bytes.</span></span>
<span id="cb92-377"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Load the string's buffer address into r9.  We need to get the original</span></span>
<span id="cb92-378"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; function parameter value (rdx) from xmm2q[0], then load the String-&gt;Buffer</span></span>
<span id="cb92-379"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; address, then advance it 16 bytes.</span></span>
<span id="cb92-380"> ;</span>
<span id="cb92-381"></span>
<span id="cb92-382"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpextrq     r11, xmm2, 1            ; Extract String into r11.</span></span>
<span id="cb92-383"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         r11, String.Buffer[r11] ; Load buffer address.</span></span>
<span id="cb92-384"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        add         r11, r10                ; Advance buffer 16 bytes.</span></span>
<span id="cb92-385"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrq     r9, xmm2, 0             ; Extract String into r9.</span></span>
<span id="cb92-386"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r9, String.Buffer[r9]   ; Load buffer address.</span></span>
<span id="cb92-387"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        add         r9, r10                 ; Advance buffer 16 bytes.</span></span>
<span id="cb92-388"></span>
<span id="cb92-389"> ;</span>
<span id="cb92-390"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Loading the slot is more involved as we have to go to the string table, then</span></span>
<span id="cb92-391"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; the pStringArray pointer, then the relevant STRING offset within the string</span></span>
<span id="cb92-392"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; array (which requires re-loading the index from xmm5d[3]), then the string</span></span>
<span id="cb92-393"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; buffer from that structure.</span></span>
<span id="cb92-394"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Save the StringTable parameter, currently in rcx, into xmm1, which is a free</span></span>
<span id="cb92-395"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; use xmm register at this point.  This frees up rcx, allowing us to copy the</span></span>
<span id="cb92-396"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; slot length, currently in r11, and then subtracting 16 (currently in r10),</span></span>
<span id="cb92-397"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; in order to account for the fact that we've already matched 16 bytes.  This</span></span>
<span id="cb92-398"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; allows us to then use rcx as the loop counter for the byte-by-byte comparison.</span></span>
<span id="cb92-399"> ;</span>
<span id="cb92-400"></span>
<span id="cb92-401"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpextrq     r8, xmm2, 0             ; Extract StringTable into r8.</span></span>
<span id="cb92-402"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         r8, StringTable.pStringArray[r8] ; Load string array.</span></span>
<span id="cb92-403"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vmovq       xmm1, rcx               ; Free up rcx.</span></span>
<span id="cb92-404"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rcx, r11                ; Copy slot length.</span></span>
<span id="cb92-405"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        sub         rcx, r10                ; Subtract 16.</span></span>
<span id="cb92-406"></span>
<span id="cb92-407"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpextrd     eax, xmm5, 3            ; Extract index from xmm5.</span></span>
<span id="cb92-408"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        shl         eax, 4                  ; Scale the index; sizeof STRING=16.</span></span>
<span id="cb92-409"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-410"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; We'd also like to use rax as the accumulator within the loop.  It currently</span></span>
<span id="cb92-411"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; stores the index, which is important, so, stash that in r10 for now.  (We</span></span>
<span id="cb92-412"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; know r10 is always 16 at this point, so it's easy to restore afterward.)</span></span>
<span id="cb92-413"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-414"></span>
<span id="cb92-415"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        lea         r8, [rax + StringArray.Strings[r8]] ; Resolve address.</span></span>
<span id="cb92-416"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         r8, String.Buffer[r8]   ; Load string table buffer address.</span></span>
<span id="cb92-417"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        add         r8, r10                 ; Advance buffer 16 bytes.</span></span>
<span id="cb92-418"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r10, rax                ; Save rax to r10.</span></span>
<span id="cb92-419"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        xor         eax, eax                ; Clear rax.</span></span>
<span id="cb92-420"></span>
<span id="cb92-421"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        mov         rax, rcx                ; Copy counter.</span></span>
<span id="cb92-422"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-423"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; And we'd also like to use rdx/dl to load each byte of the search string.  It</span></span>
<span id="cb92-424"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; currently holds the bitmap, which we need, so stash that in r11 for now, which</span></span>
<span id="cb92-425"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; is the last of our free volatile registers at this point (after we've copied</span></span>
<span id="cb92-426"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; the slot length from it above).</span></span>
<span id="cb92-427"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-428"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb92-429"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r11, rdx                ; Save rdx to r11.</span></span>
<span id="cb92-430"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        xor         edx, edx                ; Clear rdx.</span></span>
<span id="cb92-431"></span>
<span id="cb92-432"> ;</span>
<span id="cb92-433"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; We've got both buffer addresses + 16 bytes loaded in r11 and r8 respectively.</span></span>
<span id="cb92-434"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Do a byte-by-byte comparison.</span></span>
<span id="cb92-435"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; We've got both buffer addresses + 16 bytes loaded in r8 and r9 respectively.</span></span>
<span id="cb92-436"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; We need to do a byte-by-byte comparison.  The loop count is in rcx, and rax</span></span>
<span id="cb92-437"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; is initialized to 0.  We're ready to go!</span></span>
<span id="cb92-438"> ;</span>
<span id="cb92-439"></span>
<span id="cb92-440"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        align 16</span></span>
<span id="cb92-441"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-@@:     mov         dl, byte ptr [rax + r11]    ; Load byte from search string.</span></span>
<span id="cb92-442"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        cmp         dl, byte ptr [rax + r8]     ; Compare against target.</span></span>
<span id="cb92-443"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jne         short Pfx60                 ; If not equal, jump.</span></span>
<span id="cb92-444"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+@@:     mov         dl, byte ptr [rax + r9] ; Load byte from search string.</span></span>
<span id="cb92-445"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        cmp         dl, byte ptr [rax + r8] ; Compare to byte in slot.</span></span>
<span id="cb92-446"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jne         short Pfx60             ; Bytes didn't match, exit loop.</span></span>
<span id="cb92-447"></span>
<span id="cb92-448"> ;</span>
<span id="cb92-449"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; The two bytes were equal, update rax, decrement rcx and potentially continue</span></span>
<span id="cb92-450"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; The two bytes were equal, update rax, decrement rcx, and potentially continue</span></span>
<span id="cb92-451"> ; the loop.</span>
<span id="cb92-452"> ;</span>
<span id="cb92-453"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        inc         al                      ; Increment index.</span></span>
<span id="cb92-454"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        dec         cl                      ; Decrement counter.</span></span>
<span id="cb92-455"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnz         short @B                ; Continue if not 0.</span></span>
<span id="cb92-456"></span>
<span id="cb92-457"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        inc         ax                          ; Increment index.</span></span>
<span id="cb92-458"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        loopnz      @B                          ; Decrement cx and loop back.</span></span>
<span id="cb92-459"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-460"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; All bytes matched!  The number of characters matched will live in rax, and</span></span>
<span id="cb92-461"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; we also need to add 16 to it to account for the first chunk that was already</span></span>
<span id="cb92-462"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; matched.  However, rax is also our return value, and needs to point at the</span></span>
<span id="cb92-463"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; index of the slot that matched.  Exchange it with r8 first, as if we do have</span></span>
<span id="cb92-464"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; a StringMatch parameter, the jump target Pfx80 will be expecting r8 to hold</span></span>
<span id="cb92-465"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; the number of characters matched.</span></span>
<span id="cb92-466"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-467"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb92-468"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r8, rax                     ; Save characters matched.</span></span>
<span id="cb92-469"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rax, r10                    ; Re-load index from r10.</span></span>
<span id="cb92-470"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrq     r9, xmm5, 0                 ; Extract StringMatch.</span></span>
<span id="cb92-471"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        test        r9, r9                      ; Is NULL?</span></span>
<span id="cb92-472"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnz         short Pfx75                 ; Not zero, need to fill out.</span></span>
<span id="cb92-473"></span>
<span id="cb92-474"> ;</span>
<span id="cb92-475"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; All bytes matched!  Add 16 (still in r10) back to rax such that it captures</span></span>
<span id="cb92-476"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; how many characters we matched, and then jump to Pfx40 for finalization.</span></span>
<span id="cb92-477"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; StringMatch is NULL, we're done.  Return rax, which will have the index in it.</span></span>
<span id="cb92-478"> ;</span>
<span id="cb92-479"></span>
<span id="cb92-480"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        add         rax, r10</span></span>
<span id="cb92-481"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jmp         Pfx40</span></span>
<span id="cb92-482"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                     ; StringMatch == NULL, finish.</span></span>
<span id="cb92-483"></span>
<span id="cb92-484"> ;</span>
<span id="cb92-485"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; Byte comparisons were not equal.  Restore the rcx loop counter and decrement</span></span>
<span id="cb92-486"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; it.  If it's zero, we have no more strings to compare, so we can do a quick</span></span>
<span id="cb92-487"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; exit.  If there are still comparisons to be made, restore the other registers</span></span>
<span id="cb92-488"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; we trampled then jump back to the start of the loop Pfx20.</span></span>
<span id="cb92-489"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; The byte comparisons were not equal.  Re-load the bitmap from r11 into rdx,</span></span>
<span id="cb92-490"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; reposition it by clearing the lowest set bit, and potentially exit if there</span></span>
<span id="cb92-491"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; are no more bits remaining.</span></span>
<span id="cb92-492"> ;</span>
<span id="cb92-493"></span>
<span id="cb92-494"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-Pfx60:  vpextrb     rcx, xmm4, 2                ; Restore rcx counter.</span></span>
<span id="cb92-495"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        dec         cx                          ; Decrement counter.</span></span>
<span id="cb92-496"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        jnz         short @F                    ; Jump forward if not zero.</span></span>
<span id="cb92-497"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx60:  mov         rdx, r11                    ; Reload bitmap.</span></span>
<span id="cb92-498"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        blsr        edx, edx                    ; Clear lowest set bit.</span></span>
<span id="cb92-499"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        test        edx, edx                    ; Is bitmap empty?</span></span>
<span id="cb92-500"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        jnz         short Pfx65                 ; Bits remain.</span></span>
<span id="cb92-501"></span>
<span id="cb92-502"> ;</span>
<span id="cb92-503"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; No more comparisons remaining, return.</span></span>
<span id="cb92-504"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; No more bits remain set in the bitmap, we're done.  Indicate no match found</span></span>
<span id="cb92-505"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; and return.</span></span>
<span id="cb92-506"> ;</span>
<span id="cb92-507"></span>
<span id="cb92-508">         xor         eax, eax                    ; Clear rax.</span>
<span id="cb92-509"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">@@ -452,17 +476,65 @@</span></span>
<span id="cb92-510">         ret                                     ; Return.</span>
<span id="cb92-511"></span>
<span id="cb92-512"> ;</span>
<span id="cb92-513"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-; More comparisons remain; restore the registers we clobbered and continue loop.</span></span>
<span id="cb92-514"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; We need to continue the loop, having had this oversized string test (length &gt;</span></span>
<span id="cb92-515"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; 16 characters) fail.  Before we do that though, restore the registers we</span></span>
<span id="cb92-516"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; clobbered to comply with Pfx20's top-of-the-loop register use assumptions.</span></span>
<span id="cb92-517"> ;</span>
<span id="cb92-518"></span>
<span id="cb92-519"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-@@:     vpextrb     r10, xmm4, 1                ; Restore r10.</span></span>
<span id="cb92-520"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpextrb     r11, xmm4, 0                ; Restore r11.</span></span>
<span id="cb92-521"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        vpextrd     edx, xmm5, 2                ; Restore rdx bitmap.</span></span>
<span id="cb92-522"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx65:  vpextrb     r11, xmm4, 0                ; Restore string length.</span></span>
<span id="cb92-523"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrq     rcx, xmm1, 0                ; Restore rcx (StringTable).</span></span>
<span id="cb92-524"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r9, 16                      ; Restore constant 16 to r9.</span></span>
<span id="cb92-525"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r10, r9                     ; Restore search length.</span></span>
<span id="cb92-526"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+                                                ; (We know it's always 16 here.)</span></span>
<span id="cb92-527">         jmp         Pfx20                       ; Continue comparisons.</span>
<span id="cb92-528"></span>
<span id="cb92-529"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-530"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; This is the target for when we need to fill out the StringMatch structure.</span></span>
<span id="cb92-531"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; It's located at the end of this routine because we're optimizing for the</span></span>
<span id="cb92-532"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; case where the parameter is NULL in the loop body above, and we don't want</span></span>
<span id="cb92-533"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; to pollute the code cache with this logic (which is quite convoluted).</span></span>
<span id="cb92-534"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb92-535"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; N.B. Pfx75 is the jump target when we need to add 16 to the characters matched</span></span>
<span id="cb92-536"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      count stored in r8.  This particular path is exercised by the long string</span></span>
<span id="cb92-537"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      matching logic (i.e. when strings are longer than 16 and the prefix match</span></span>
<span id="cb92-538"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      is confirmed via byte-by-byte comparison).  We also need to reload rcx</span></span>
<span id="cb92-539"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;      from xmm1.</span></span>
<span id="cb92-540"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-541"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Expected register use at this point:</span></span>
<span id="cb92-542"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-543"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rax - Index of match.</span></span>
<span id="cb92-544"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-545"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   rcx - StringTable.</span></span>
<span id="cb92-546"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-547"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r8 - Number of characters matched.</span></span>
<span id="cb92-548"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-549"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;   r9 - StringMatch.</span></span>
<span id="cb92-550"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-551"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-552"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb92-553"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx75:  add         r8, 16                                  ; Add 16 to count.</span></span>
<span id="cb92-554"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        vpextrq     rcx, xmm1, 0                            ; Reload rcx.</span></span>
<span id="cb92-555"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb92-556"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+Pfx80:  mov         byte ptr StringMatch.NumberOfMatchedCharacters[r9], r8b</span></span>
<span id="cb92-557"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         byte ptr StringMatch.Index[r9], al</span></span>
<span id="cb92-558"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb92-559"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-560"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb92-561"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; involves going through the StringTable to find the string array address via</span></span>
<span id="cb92-562"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; pStringArray, then the relevant STRING offset within the StringArray.Strings</span></span>
<span id="cb92-563"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+; structure.</span></span>
<span id="cb92-564"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+;</span></span>
<span id="cb92-565"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb92-566"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         rcx, StringTable.pStringArray[rcx]      ; Load string array.</span></span>
<span id="cb92-567"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         r8, rax                                 ; Copy index to r8.</span></span>
<span id="cb92-568"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        shl         r8, 4                                   ; "Scale" index.</span></span>
<span id="cb92-569"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        lea         rdx, [r8 + StringArray.Strings[rcx]]    ; Resolve address.</span></span>
<span id="cb92-570"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        mov         qword ptr StringMatch.String[r9], rdx   ; Save STRING ptr.</span></span>
<span id="cb92-571"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        ret                                                 ; Return!</span></span>
<span id="cb92-572"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb92-573">         ;IACA_VC_END</span>
<span id="cb92-574"></span>
<span id="cb92-575"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-        LEAF_END   IsPrefixOfStringInTable_x64_11, _TEXT$00</span></span>
<span id="cb92-576"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">+        LEAF_END   IsPrefixOfStringInTable_x64_12, _TEXT$00</span></span>
<span id="cb92-577"></span>
<span id="cb92-578"></span>
<span id="cb92-579"> ; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></code></pre></div>
</div>
<div id="tabset-27-2" class="tab-pane" aria-labelledby="tabset-27-2-tab">
<div class="sourceCode" id="cb93" style="background: #f1f3f5;"><pre class="sourceCode asm code-with-copy"><code class="sourceCode asm"><span id="cb93-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;++</span></span>
<span id="cb93-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; STRING_TABLE_INDEX</span></span>
<span id="cb93-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; IsPrefixOfStringInTable_x64_*(</span></span>
<span id="cb93-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING_TABLE StringTable,</span></span>
<span id="cb93-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _In_ PSTRING String,</span></span>
<span id="cb93-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     _Out_opt_ PSTRING_MATCH Match</span></span>
<span id="cb93-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;     )</span></span>
<span id="cb93-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Routine Description:</span></span>
<span id="cb93-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Searches a string table to see if any strings "prefix match" the given</span></span>
<span id="cb93-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   search string.  That is, whether any string in the table "starts with</span></span>
<span id="cb93-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   or is equal to" the search string.</span></span>
<span id="cb93-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   This routine is based on version 11, but leverages the inner loop logic</span></span>
<span id="cb93-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   tweak we used in version 13 of the C version, pointed out by Fabian Giesen</span></span>
<span id="cb93-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   (@rygorous).  That is, we do away with the shifting logic and explicit loop</span></span>
<span id="cb93-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   counting, and simply use blsr to keep iterating through the bitmap until it</span></span>
<span id="cb93-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   is empty.</span></span>
<span id="cb93-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Arguments:</span></span>
<span id="cb93-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   StringTable - Supplies a pointer to a STRING_TABLE struct.</span></span>
<span id="cb93-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   String - Supplies a pointer to a STRING struct that contains the string to</span></span>
<span id="cb93-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       search for.</span></span>
<span id="cb93-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Match - Optionally supplies a pointer to a variable that contains the</span></span>
<span id="cb93-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       address of a STRING_MATCH structure.  This will be populated with</span></span>
<span id="cb93-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       additional details about the match if a non-NULL pointer is supplied.</span></span>
<span id="cb93-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return Value:</span></span>
<span id="cb93-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   Index of the prefix match if one was found, NO_MATCH_FOUND if not.</span></span>
<span id="cb93-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;--</span></span>
<span id="cb93-38"></span>
<span id="cb93-39">        LEAF_ENTRY IsPrefixOfStringInTable_x64_12<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb93-40"></span>
<span id="cb93-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the address of the string buffer into rax.</span></span>
<span id="cb93-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-44"></span>
<span id="cb93-45">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_START</span></span>
<span id="cb93-46"></span>
<span id="cb93-47">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer addr.</span></span>
<span id="cb93-48"></span>
<span id="cb93-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast the byte-sized string length into xmm4.</span></span>
<span id="cb93-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-52"></span>
<span id="cb93-53">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpbroadcastb</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Broadcast length.</span></span>
<span id="cb93-54"></span>
<span id="cb93-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the lengths of each string table slot into xmm3.</span></span>
<span id="cb93-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-58"></span>
<span id="cb93-59">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Lengths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load lengths.</span></span>
<span id="cb93-60"></span>
<span id="cb93-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the search string buffer into xmm0.</span></span>
<span id="cb93-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-64"></span>
<span id="cb93-65">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqu</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load search buffer.</span></span>
<span id="cb93-66"></span>
<span id="cb93-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's length, which we've broadcasted to all 8-byte</span></span>
<span id="cb93-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; elements of the xmm4 register, to the lengths of the slots in the string</span></span>
<span id="cb93-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table, to find those that are greater in length.</span></span>
<span id="cb93-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-72"></span>
<span id="cb93-73">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpgtb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Identify long slots.</span></span>
<span id="cb93-74"></span>
<span id="cb93-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle the buffer in xmm0 according to the unique indexes, and store the</span></span>
<span id="cb93-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; result into xmm5.</span></span>
<span id="cb93-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-79"></span>
<span id="cb93-80">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Rearrange string.</span></span>
<span id="cb93-81"></span>
<span id="cb93-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare the search string's unique character array (xmm5) against the string</span></span>
<span id="cb93-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; table's unique chars (xmm2), saving the result back into xmm5.</span></span>
<span id="cb93-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-86"></span>
<span id="cb93-87">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>UniqueChars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare to uniq.</span></span>
<span id="cb93-88"></span>
<span id="cb93-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect-and-test the unique character match xmm mask register (xmm5) with</span></span>
<span id="cb93-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the length match mask xmm register (xmm1).  This affects flags, allowing us</span></span>
<span id="cb93-92"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to do a fast-path exit for the no-match case (where CY = 1 after xmm1 has</span></span>
<span id="cb93-93"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; been inverted).</span></span>
<span id="cb93-94"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-95"></span>
<span id="cb93-96">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vptest</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Check for no match.</span></span>
<span id="cb93-97">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnc</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx10                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; There was a match.</span></span>
<span id="cb93-98"></span>
<span id="cb93-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-100"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match, set rax to -1 and return.</span></span>
<span id="cb93-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-102"></span>
<span id="cb93-103">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb93-104">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb93-105">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb93-106"></span>
<span id="cb93-107">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb93-108"></span>
<span id="cb93-109"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (There was at least one match, continue with processing.)</span></span>
<span id="cb93-111"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-112"></span>
<span id="cb93-113"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Calculate the "search length" for the incoming search string, which is</span></span>
<span id="cb93-115"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; equivalent of 'min(String-&gt;Length, 16)'.</span></span>
<span id="cb93-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Once the search length is calculated, deposit it back at the second byte</span></span>
<span id="cb93-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; location of xmm4.</span></span>
<span id="cb93-119"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-120"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 and xmm4[15:8] - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb93-121"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-122"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - String length (String-&gt;Length)</span></span>
<span id="cb93-123"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-124"></span>
<span id="cb93-125"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx10:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string length.</span></span>
<span id="cb93-126">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load 16 into r9.</span></span>
<span id="cb93-127">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy length into r10.</span></span>
<span id="cb93-128">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9w</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against 16.</span></span>
<span id="cb93-129">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmova</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9w</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Use 16 if length is greater.</span></span>
<span id="cb93-130"></span>
<span id="cb93-131"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-132"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Home our parameter register rdx into the base of xmm2.</span></span>
<span id="cb93-133"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-134"></span>
<span id="cb93-135">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm2.</span></span>
<span id="cb93-136">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovq</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rcx.</span></span>
<span id="cb93-137"></span>
<span id="cb93-138"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-139"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect xmm5 and xmm1 (as we did earlier with the 'vptest xmm1, xmm5'),</span></span>
<span id="cb93-140"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; yielding a mask identifying indices we need to perform subsequent matches</span></span>
<span id="cb93-141"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; upon.  Convert this into a bitmap and save in xmm2d[2].</span></span>
<span id="cb93-142"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-143"></span>
<span id="cb93-144">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpandn</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Intersect unique + lengths.</span></span>
<span id="cb93-145">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Generate a bitmap from mask.</span></span>
<span id="cb93-146"></span>
<span id="cb93-147"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-148"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We're finished with xmm5; repurpose it in the same vein as xmm2 above.</span></span>
<span id="cb93-149"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-150"></span>
<span id="cb93-151">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpxor</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear xmm5.</span></span>
<span id="cb93-152">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovq</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save r8 into xmm5q[0].</span></span>
<span id="cb93-153"></span>
<span id="cb93-154"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-155"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Summary of xmm register stashing for the rest of the routine:</span></span>
<span id="cb93-156"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-157"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   xmm2:</span></span>
<span id="cb93-158"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;        0:63   (vpinsrq 0)     rdx (2nd function parameter, String)</span></span>
<span id="cb93-159"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-160"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   xmm4:</span></span>
<span id="cb93-161"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:7     (vpinsrb 0)     length of search string [r11]</span></span>
<span id="cb93-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       8:15    (vpinsrb 1)     min(String-&gt;Length, 16) [r10]</span></span>
<span id="cb93-163"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-164"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   xmm5:</span></span>
<span id="cb93-165"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;       0:63    (vpinsrq 0)     r8 (3rd function parameter, StringMatch)</span></span>
<span id="cb93-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      64:95    (vpinsrd 2)     bitmap of slots to compare</span></span>
<span id="cb93-167"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      96:127   (vpinsrd 3)     index of slot currently being processed</span></span>
<span id="cb93-168"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-169"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Non-stashing xmm register use:</span></span>
<span id="cb93-170"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-171"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   xmm0: First 16 characters of search string.</span></span>
<span id="cb93-172"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-173"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   xmm3: Slot lengths.</span></span>
<span id="cb93-174"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-175"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   xmm1: Freebie!</span></span>
<span id="cb93-176"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-177"></span>
<span id="cb93-178">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb93-179"></span>
<span id="cb93-180"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-181"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Top of the main comparison loop.  The bitmap will be present in rdx.  Count</span></span>
<span id="cb93-182"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; trailing zeros of the bitmap, producing an index (rax) we can use to load the</span></span>
<span id="cb93-183"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; corresponding slot.</span></span>
<span id="cb93-184"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-185"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Volatile register usage at top of loop:</span></span>
<span id="cb93-186"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-187"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - StringTable.</span></span>
<span id="cb93-188"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-189"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rdx - Bitmap.</span></span>
<span id="cb93-190"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-191"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - Constant value of 16.</span></span>
<span id="cb93-192"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-193"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb93-194"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-195"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - Search string length (String-&gt;Length).</span></span>
<span id="cb93-196"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-197"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Use of remaining volatile registers during loop:</span></span>
<span id="cb93-198"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-199"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index.</span></span>
<span id="cb93-200"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-201"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r8 - Freebie!</span></span>
<span id="cb93-202"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-203"></span>
<span id="cb93-204"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx20:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tzcnt</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count trailing zeros = index.</span></span>
<span id="cb93-205"></span>
<span id="cb93-206"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-207"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" the index (such that we can use it in a subsequent vmovdqa) by</span></span>
<span id="cb93-208"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; shifting left by 4 (i.e. multiply by '(sizeof STRING_SLOT)', which is 16).</span></span>
<span id="cb93-209"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-210"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, load the string table slot at this index into xmm1.</span></span>
<span id="cb93-211"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-212"></span>
<span id="cb93-213">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy index (rax) into r8.</span></span>
<span id="cb93-214">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" the index.</span></span>
<span id="cb93-215">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovdqa</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">xmmword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Slots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span></span>
<span id="cb93-216"></span>
<span id="cb93-217"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-218"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The search string's first 16 characters are already in xmm0.  Compare this</span></span>
<span id="cb93-219"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; against the slot that has just been loaded into xmm1, storing the result back</span></span>
<span id="cb93-220"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; into xmm1.</span></span>
<span id="cb93-221"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-222"></span>
<span id="cb93-223">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpcmpeqb</span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare search string to slot.</span></span>
<span id="cb93-224"></span>
<span id="cb93-225"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-226"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert the XMM mask into a 32-bit representation, then zero high bits after</span></span>
<span id="cb93-227"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; our "search length", which allows us to ignore the results of the comparison</span></span>
<span id="cb93-228"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; above for bytes that were after the search string's length, if applicable.</span></span>
<span id="cb93-229"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Then, count the number of bits remaining, which tells us how many characters</span></span>
<span id="cb93-230"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we matched.</span></span>
<span id="cb93-231"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-232"></span>
<span id="cb93-233">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpmovmskb</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Convert into mask.</span></span>
<span id="cb93-234">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bzhi</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Zero high bits.</span></span>
<span id="cb93-235">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">popcnt</span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Count bits.</span></span>
<span id="cb93-236"></span>
<span id="cb93-237"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-238"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Determine if less than 16 characters matched, as this avoids needing to do</span></span>
<span id="cb93-239"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; a more convoluted test to see if a byte-by-byte string comparison is needed</span></span>
<span id="cb93-240"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (for lengths longer than 16).</span></span>
<span id="cb93-241"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-242"></span>
<span id="cb93-243">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9w</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare chars matched to 16.</span></span>
<span id="cb93-244">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jl</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx30                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than 16 matched.</span></span>
<span id="cb93-245"></span>
<span id="cb93-246"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-247"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All 16 characters matched.  Load the underlying slot's length from the</span></span>
<span id="cb93-248"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; relevant offset in the xmm3 register into r11, then check to see if it's</span></span>
<span id="cb93-249"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; greater than 16.  If it is, we're going to need to do a string compare,</span></span>
<span id="cb93-250"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; handled by Pfx50.</span></span>
<span id="cb93-251"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-252"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; N.B. The approach for loading the slot length here is a little quirky.  We</span></span>
<span id="cb93-253"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      have all the lengths for slots in xmm3, and we have the current match</span></span>
<span id="cb93-254"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      index in rax.  If we move rax into an xmm register (xmm1 in this case),</span></span>
<span id="cb93-255"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      we can use it to shuffle xmm3, such that the length we're interested in</span></span>
<span id="cb93-256"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      will be deposited back into the lowest byte, which we can then extract</span></span>
<span id="cb93-257"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      via vpextrb.</span></span>
<span id="cb93-258"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-259"></span>
<span id="cb93-260">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">movd</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load index into xmm1.</span></span>
<span id="cb93-261">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpshufb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Shuffle length by index.</span></span>
<span id="cb93-262">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract slot length into r11.</span></span>
<span id="cb93-263">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9w</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare length to 16.</span></span>
<span id="cb93-264">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ja</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx50                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Length is &gt; 16.</span></span>
<span id="cb93-265">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx40                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Lengths match!</span></span>
<span id="cb93-266"></span>
<span id="cb93-267"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-268"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Less than 16 characters were matched.  Compare this against the length of the</span></span>
<span id="cb93-269"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; search string; if equal, this is a match.</span></span>
<span id="cb93-270"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-271"></span>
<span id="cb93-272"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx30:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10d</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare against search string.</span></span>
<span id="cb93-273">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">je</span>          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx40                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Match found!</span></span>
<span id="cb93-274"></span>
<span id="cb93-275"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-276"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No match against this slot.  Clear the lowest set bit of the bitmap and check</span></span>
<span id="cb93-277"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to see if there are any bits remaining in it.</span></span>
<span id="cb93-278"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-279"></span>
<span id="cb93-280">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">blsr</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Reposition bitmap.</span></span>
<span id="cb93-281">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is bitmap empty?</span></span>
<span id="cb93-282">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx20                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Bits remain, continue loop.</span></span>
<span id="cb93-283"></span>
<span id="cb93-284"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-285"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No more bits remain set in the bitmap, we're done.  Indicate no match found</span></span>
<span id="cb93-286"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; and return.</span></span>
<span id="cb93-287"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-288"></span>
<span id="cb93-289">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb93-290">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb93-291">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb93-292"></span>
<span id="cb93-293"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-294"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the match parameter into r9 and test to see if it's not-NULL, in which</span></span>
<span id="cb93-295"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; case we need to fill out a STRING_MATCH structure for the match, handled by</span></span>
<span id="cb93-296"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; jump target Pfx80 at the end of this routine.</span></span>
<span id="cb93-297"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-298"></span>
<span id="cb93-299"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx40:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringMatch.</span></span>
<span id="cb93-300">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is NULL?</span></span>
<span id="cb93-301">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         Pfx80                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not zero, need to fill out.</span></span>
<span id="cb93-302"></span>
<span id="cb93-303"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-304"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is NULL, we're done.  We can return straight from here, rax will</span></span>
<span id="cb93-305"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; still have the index stored.</span></span>
<span id="cb93-306"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-307"></span>
<span id="cb93-308">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch == NULL, finish.</span></span>
<span id="cb93-309"></span>
<span id="cb93-310"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-311"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 characters matched and the length of the underlying slot is greater than</span></span>
<span id="cb93-312"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16, so we need to do a little memory comparison to determine if the search</span></span>
<span id="cb93-313"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; string is a prefix match.</span></span>
<span id="cb93-314"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-315"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Register use on block entry:</span></span>
<span id="cb93-316"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-317"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index.</span></span>
<span id="cb93-318"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-319"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - StringTable.</span></span>
<span id="cb93-320"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-321"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rdx - Bitmap.</span></span>
<span id="cb93-322"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-323"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - Constant value of 16.</span></span>
<span id="cb93-324"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-325"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r10 - Search length (min(String-&gt;Length, 16))</span></span>
<span id="cb93-326"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-327"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r11 - Slot length.</span></span>
<span id="cb93-328"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-329"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Register use during the block (after we've freed things up and loaded the</span></span>
<span id="cb93-330"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; values we need):</span></span>
<span id="cb93-331"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-332"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index/accumulator.</span></span>
<span id="cb93-333"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-334"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - Loop counter (for byte comparison).</span></span>
<span id="cb93-335"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-336"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rdx - Byte loaded into dl for comparison.</span></span>
<span id="cb93-337"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-338"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r8 - Target string buffer.</span></span>
<span id="cb93-339"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-340"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - Search string buffer.</span></span>
<span id="cb93-341"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-342"></span>
<span id="cb93-343"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-344"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Initialize r8 such that it's pointing to the slot's String-&gt;Buffer address.</span></span>
<span id="cb93-345"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; This is a bit fiddly as we need to go through StringTable.pStringArray first</span></span>
<span id="cb93-346"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to get the base address of the STRING_ARRAY, then the relevant STRING offset</span></span>
<span id="cb93-347"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; within the array, then the String-&gt;Buffer address from that structure.  Then,</span></span>
<span id="cb93-348"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; add 16 to it, such that it's ready as the base address for comparison.</span></span>
<span id="cb93-349"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-350"></span>
<span id="cb93-351"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx50:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array addr.</span></span>
<span id="cb93-352">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy index into r9.</span></span>
<span id="cb93-353">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" index; sizeof STRING=16.</span></span>
<span id="cb93-354">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load STRING address.</span></span>
<span id="cb93-355">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load String-&gt;Buffer address.</span></span>
<span id="cb93-356">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance it 16 bytes.</span></span>
<span id="cb93-357"></span>
<span id="cb93-358"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-359"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load the string's buffer address into r9.  We need to get the original</span></span>
<span id="cb93-360"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; function parameter value (rdx) from xmm2q[0], then load the String-&gt;Buffer</span></span>
<span id="cb93-361"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; address, then advance it 16 bytes.</span></span>
<span id="cb93-362"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-363"></span>
<span id="cb93-364">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract String into r9.</span></span>
<span id="cb93-365">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load buffer address.</span></span>
<span id="cb93-366">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Advance buffer 16 bytes.</span></span>
<span id="cb93-367"></span>
<span id="cb93-368"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-369"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save the StringTable parameter, currently in rcx, into xmm1, which is a free</span></span>
<span id="cb93-370"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; use xmm register at this point.  This frees up rcx, allowing us to copy the</span></span>
<span id="cb93-371"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; slot length, currently in r11, and then subtracting 16 (currently in r10),</span></span>
<span id="cb93-372"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; in order to account for the fact that we've already matched 16 bytes.  This</span></span>
<span id="cb93-373"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; allows us to then use rcx as the loop counter for the byte-by-byte comparison.</span></span>
<span id="cb93-374"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-375"></span>
<span id="cb93-376">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vmovq</span>       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span>               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Free up rcx.</span></span>
<span id="cb93-377">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy slot length.</span></span>
<span id="cb93-378">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sub</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Subtract 16.</span></span>
<span id="cb93-379"></span>
<span id="cb93-380"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-381"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We'd also like to use rax as the accumulator within the loop.  It currently</span></span>
<span id="cb93-382"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; stores the index, which is important, so, stash that in r10 for now.  (We</span></span>
<span id="cb93-383"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; know r10 is always 16 at this point, so it's easy to restore afterward.)</span></span>
<span id="cb93-384"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-385"></span>
<span id="cb93-386">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rax to r10.</span></span>
<span id="cb93-387">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb93-388"></span>
<span id="cb93-389"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-390"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; And we'd also like to use rdx/dl to load each byte of the search string.  It</span></span>
<span id="cb93-391"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; currently holds the bitmap, which we need, so stash that in r11 for now, which</span></span>
<span id="cb93-392"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; is the last of our free volatile registers at this point (after we've copied</span></span>
<span id="cb93-393"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the slot length from it above).</span></span>
<span id="cb93-394"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-395"></span>
<span id="cb93-396">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save rdx to r11.</span></span>
<span id="cb93-397">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rdx.</span></span>
<span id="cb93-398"></span>
<span id="cb93-399"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-400"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We've got both buffer addresses + 16 bytes loaded in r8 and r9 respectively.</span></span>
<span id="cb93-401"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We need to do a byte-by-byte comparison.  The loop count is in rcx, and rax</span></span>
<span id="cb93-402"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; is initialized to 0.  We're ready to go!</span></span>
<span id="cb93-403"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-404"></span>
<span id="cb93-405">@@:     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load byte from search string.</span></span>
<span id="cb93-406">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">dl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Compare to byte in slot.</span></span>
<span id="cb93-407">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jne</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx60             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Bytes didn't match, exit loop.</span></span>
<span id="cb93-408"></span>
<span id="cb93-409"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-410"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The two bytes were equal, update rax, decrement rcx, and potentially continue</span></span>
<span id="cb93-411"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the loop.</span></span>
<span id="cb93-412"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-413">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inc</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Increment index.</span></span>
<span id="cb93-414">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dec</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">cl</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Decrement counter.</span></span>
<span id="cb93-415">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> @B                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Continue if not 0.</span></span>
<span id="cb93-416"></span>
<span id="cb93-417"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-418"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; All bytes matched!  The number of characters matched will live in rax, and</span></span>
<span id="cb93-419"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; we also need to add 16 to it to account for the first chunk that was already</span></span>
<span id="cb93-420"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; matched.  However, rax is also our return value, and needs to point at the</span></span>
<span id="cb93-421"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; index of the slot that matched.  Exchange it with r8 first, as if we do have</span></span>
<span id="cb93-422"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; a StringMatch parameter, the jump target Pfx80 will be expecting r8 to hold</span></span>
<span id="cb93-423"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; the number of characters matched.</span></span>
<span id="cb93-424"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-425"></span>
<span id="cb93-426">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save characters matched.</span></span>
<span id="cb93-427">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Re-load index from r10.</span></span>
<span id="cb93-428">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Extract StringMatch.</span></span>
<span id="cb93-429">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is NULL?</span></span>
<span id="cb93-430">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx75                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Not zero, need to fill out.</span></span>
<span id="cb93-431"></span>
<span id="cb93-432"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-433"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch is NULL, we're done.  Return rax, which will have the index in it.</span></span>
<span id="cb93-434"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-435"></span>
<span id="cb93-436">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; StringMatch == NULL, finish.</span></span>
<span id="cb93-437"></span>
<span id="cb93-438"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-439"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; The byte comparisons were not equal.  Re-load the bitmap from r11 into rdx,</span></span>
<span id="cb93-440"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; reposition it by clearing the lowest set bit, and potentially exit if there</span></span>
<span id="cb93-441"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; are no more bits remaining.</span></span>
<span id="cb93-442"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-443"></span>
<span id="cb93-444"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx60:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Reload bitmap.</span></span>
<span id="cb93-445">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">blsr</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear lowest set bit.</span></span>
<span id="cb93-446">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">test</span>        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">edx</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Is bitmap empty?</span></span>
<span id="cb93-447">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jnz</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> Pfx65                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Bits remain.</span></span>
<span id="cb93-448"></span>
<span id="cb93-449"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-450"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; No more bits remain set in the bitmap, we're done.  Indicate no match found</span></span>
<span id="cb93-451"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; and return.</span></span>
<span id="cb93-452"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-453"></span>
<span id="cb93-454">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">xor</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">eax</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Clear rax.</span></span>
<span id="cb93-455">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">not</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; al = -1</span></span>
<span id="cb93-456">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return.</span></span>
<span id="cb93-457"></span>
<span id="cb93-458"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-459"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; We need to continue the loop, having had this oversized string test (length &gt;</span></span>
<span id="cb93-460"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; 16 characters) fail.  Before we do that though, restore the registers we</span></span>
<span id="cb93-461"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; clobbered to comply with Pfx20's top-of-the-loop register use assumptions.</span></span>
<span id="cb93-462"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-463"></span>
<span id="cb93-464"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx65:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrb</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore string length.</span></span>
<span id="cb93-465">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore rcx (StringTable).</span></span>
<span id="cb93-466">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore constant 16 to r9.</span></span>
<span id="cb93-467">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Restore search length.</span></span>
<span id="cb93-468">                                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; (We know it's always 16 here.)</span></span>
<span id="cb93-469">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">jmp</span>         Pfx20                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Continue comparisons.</span></span>
<span id="cb93-470"></span>
<span id="cb93-471"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-472"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; This is the target for when we need to fill out the StringMatch structure.</span></span>
<span id="cb93-473"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; It's located at the end of this routine because we're optimizing for the</span></span>
<span id="cb93-474"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; case where the parameter is NULL in the loop body above, and we don't want</span></span>
<span id="cb93-475"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; to pollute the code cache with this logic (which is quite convoluted).</span></span>
<span id="cb93-476"></span>
<span id="cb93-477"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; N.B. Pfx75 is the jump target when we need to add 16 to the characters matched</span></span>
<span id="cb93-478"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      count stored in r8.  This particular path is exercised by the long string</span></span>
<span id="cb93-479"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      matching logic (i.e. when strings are longer than 16 and the prefix match</span></span>
<span id="cb93-480"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      is confirmed via byte-by-byte comparison).  We also need to reload rcx</span></span>
<span id="cb93-481"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;      from xmm1.</span></span>
<span id="cb93-482"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-483"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Expected register use at this point:</span></span>
<span id="cb93-484"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-485"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rax - Index of match.</span></span>
<span id="cb93-486"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-487"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   rcx - StringTable.</span></span>
<span id="cb93-488"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-489"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r8 - Number of characters matched.</span></span>
<span id="cb93-490"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-491"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;   r9 - StringMatch.</span></span>
<span id="cb93-492"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-493"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-494"></span>
<span id="cb93-495"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx75:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">add</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Add 16 to count.</span></span>
<span id="cb93-496">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">vpextrq</span>     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">xmm1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Reload rcx.</span></span>
<span id="cb93-497"></span>
<span id="cb93-498"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Pfx80:</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>NumberOfMatchedCharacters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8b</span></span>
<span id="cb93-499">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">al</span></span>
<span id="cb93-500"></span>
<span id="cb93-501"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-502"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Final step, loading the address of the string in the string array.  This</span></span>
<span id="cb93-503"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; involves going through the StringTable to find the string array address via</span></span>
<span id="cb93-504"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; pStringArray, then the relevant STRING offset within the StringArray.Strings</span></span>
<span id="cb93-505"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; structure.</span></span>
<span id="cb93-506"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-507"></span>
<span id="cb93-508">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Load string array.</span></span>
<span id="cb93-509">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rax</span>                                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Copy index to r8.</span></span>
<span id="cb93-510">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shl</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>                                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; "Scale" index.</span></span>
<span id="cb93-511">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">lea</span>         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> StringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rcx</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Resolve address.</span></span>
<span id="cb93-512">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">mov</span>         <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">qword</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ptr</span> StringMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>String<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">r9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rdx</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Save STRING ptr.</span></span>
<span id="cb93-513">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ret</span>                                                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; Return!</span></span>
<span id="cb93-514"></span>
<span id="cb93-515">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;IACA_VC_END</span></span>
<span id="cb93-516"></span>
<span id="cb93-517">        LEAF_END   IsPrefixOfStringInTable_x64_12<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TEXT$00</span>
<span id="cb93-518"></span>
<span id="cb93-519"></span>
<span id="cb93-520"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">; vim:set tw=80 ts=8 sw=4 sts=4 et syntax=masm fo=croql comments=\:;           :</span></span></code></pre></div>
</div>
</div>
</div>
<p>I’m really happy with how that turned out! Switching to <code>blsr</code> really improved the layout of the inner loop, and vastly reduced our register pressure, which means less XMM register spilling is required, which is always a good thing.</p>
<p>But does it improve performance? Eek! It’s our final Hail Mary attempt at an improvement. Can we beat the fastest profile-guided optimization build of the C version in both prefix matching and negative matching?</p>
<p><em>Drum roll</em></p>
<p>The performance for version 12 of the assembly is…</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/Benchmark-x64-12-v1.svg"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/Benchmark-x64-12-v1.svg" class="img-fluid figure-img" alt="Benchmark-x64-12-v1"></a></p>
<figcaption>Benchmark-x64-12-v1</figcaption>
</figure>
</div>
<p>The assembly version brings in gold across the board! A quick run through VTune suggests the routine is clocking in with a CPI of 0.266, which is pretty darn close to the theoretical maximum of 0.25 (which implies 4 instructions retired per clock cycle).</p>
</section>
</section>
<section id="other-applications" class="level1">
<h1>Other Applications</h1>
<p>Once I’d written the first version of the StringTable component, for better or worse, it became the hammer for all of my string-related problems! My favorite example of this is the code I wrote for parsing the output of Windows debug engine’s <em>examine symbols</em> command.</p>
<p>Here’s an example of a few lines of output from the cdb command <code>x /v /t Rtl!*</code>:</p>
<pre class="plaintext"><code>prv global 00007ffd`1570d100   10 struct _STRING Rtl!ExtendedLengthVolumePrefixA = struct _STRING "\\?\"
prv global 00007ffd`1570d110   10 struct _UNICODE_STRING Rtl!ExtendedLengthVolumePrefixW = "\\?\"
prv global 00007ffd`1570da30  5a8 char *[181] Rtl!RtlFunctionNames = char *[181]
prv global 00007ffd`15711018    8 &lt;function&gt; * Rtl!__C_specific_handler_impl = 0x00007ffd`214c0f00
prv global 00007ffd`1570d820  208 char *[65] Rtl!RtlExFunctionNames = char *[65]
prv global 00007ffd`15711000    8 &lt;function&gt; * Rtl!atexit_impl = 0x00007ffd`15704370
...
prv global 00007ffd`1570d120  1a8 char *[53] Rtl!CuFunctionNames = char *[53]
prv func   00007ffd`15708be0   5d &lt;function&gt; Rtl!AppendCharBufferToCharBuffer (char **, char *, unsigned long)
prv func   00007ffd`15702450   2e &lt;function&gt; Rtl!RtlHeapAllocatorFreePointer (void *, void **)
prv func   00007ffd`15702730   3c &lt;function&gt; Rtl!RtlHeapAllocatorAlignedFreePointer (void *, void **)
prv func   00007ffd`157093b0   1e &lt;CLR type&gt; Rtl!UnregisterRtlAtExitEntry$fin$0 (void)
...
prv func   00007ffd`157061f0   48 &lt;function&gt; Rtl!RtlCryptGenRandom (struct _RTL *, unsigned long, unsigned char *)
prv func   00007ffd`15707500   b2 &lt;function&gt; Rtl!AppendTailGuardedListTsx (struct _GUARDED_LIST *, struct _LIST_ENTRY *)
prv func   00007ffd`157075c0    d &lt;function&gt; Rtl!DummyVectorCall1 (union __m128i *, union __m128i *, ...
prv func   00007ffd`157025c0   4f &lt;function&gt; Rtl!RtlHeapAllocatorAlignedMalloc (void *, unsigned int64, unsigned int64)
prv func   00007ffd`15703cc0   9e &lt;function&gt; Rtl!DisableCreateSymbolicLinkPrivilege (void)</code></pre>
<p>The function <a href="https://github.com/tpn/tracer/blob/c2f36bcc686ce6633c91671650f58b62bffb126e/DebugEngine/DebugEngineExamineSymbols.c#L143"><code>ExamineSymbolsParseLine</code></a> is called for each line of output and is responsible for parsing it into a <a href="https://github.com/tpn/tracer/blob/c2f36bcc686ce6633c91671650f58b62bffb126e/DebugEngine/DebugEngine.h#L1655"><code>DEBUG_ENGINE_EXAMINED_SYMBOL</code></a> structure. It’s some good ol’ fashioned string processing using nothing but pointer arithmetic and a bunch of string tables.</p>
<p>It was the first time I needed to match more than 16 strings in a given category, though. A pattern emerged that was quite reasonable, and it became my de facto way of dealing with multiple string tables for a given category.</p>
<p>Let’s look at the <em>basic type</em> category. Two string tables were constructed from the following constant delimited strings <a href="https://github.com/tpn/tracer/blob/c2f36bcc686ce6633c91671650f58b62bffb126e/DebugEngine/DebugEngineConstants.c#L114"><em>(view on GitHub)</em></a>:</p>
<div class="sourceCode" id="cb95" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb95-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define DSTR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> String </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">";"</span></span>
<span id="cb95-2"></span>
<span id="cb95-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb95-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// ExamineSymbolsBasicTypes</span></span>
<span id="cb95-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb95-6"></span>
<span id="cb95-7"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">STRING</span> ExamineSymbolsBasicTypes1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RTL_CONSTANT_STRING<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb95-8">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;NoType&gt;"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-9">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;function&gt;"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-10">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"char"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-11">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wchar_t"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-12">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"short"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-13">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"long"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-14">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"int64"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-15">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"int"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-16">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unsigned char"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-17">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unsigned wchar_t"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-18">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unsigned short"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-19">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unsigned long"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-20">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unsigned int64"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-21">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unsigned int"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-22">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"union"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-23">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"struct"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb95-25"></span>
<span id="cb95-26"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">STRING</span> ExamineSymbolsBasicTypes2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RTL_CONSTANT_STRING<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb95-27">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;CLR type&gt;"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-28">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bool"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-29">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"void"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-30">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"class"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-31">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"float"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-32">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"double"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-33">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_SAL_ExecutionContext"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-34">    DSTR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__enative_startup_state"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb95-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
<p>In concert with the two string tables, an enumeration was defined <a href="https://github.com/tpn/tracer/blob/c2f36bcc686ce6633c91671650f58b62bffb126e/DebugEngine/DebugEngine.h#L1029"><em>(view on GitHub)</em></a>:</p>
<div class="sourceCode" id="cb96" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb96-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb96-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The order of these enumeration symbols must match the exact order of the</span></span>
<span id="cb96-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// corresponding string in the relevant ExamineSymbolsBasicTypes[1..n] STRING</span></span>
<span id="cb96-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// structure (see DebugEngineConstants.c).  This is because string tables are</span></span>
<span id="cb96-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// created from the delimited strings and the match index is cast directly to</span></span>
<span id="cb96-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// an enum of this type.</span></span>
<span id="cb96-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb96-8"></span>
<span id="cb96-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">enum</span> _DEBUG_ENGINE_EXAMINE_SYMBOLS_TYPE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb96-10">    UnknownType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-11"></span>
<span id="cb96-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb96-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// First 16 types captured by BasicTypeStringTable1.</span></span>
<span id="cb96-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb96-15"></span>
<span id="cb96-16">    NoType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-17">    FunctionType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-18"></span>
<span id="cb96-19">    CharType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-20">    WideCharType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-21">    ShortType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-22">    LongType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-23">    Integer64Type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-24">    IntegerType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-25"></span>
<span id="cb96-26">    UnsignedCharType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-27">    UnsignedWideCharType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-28">    UnsignedShortType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-29">    UnsignedLongType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-30">    UnsignedInteger64Type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-31">    UnsignedIntegerType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-32"></span>
<span id="cb96-33">    UnionType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-34">    StructType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-35"></span>
<span id="cb96-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb96-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Next 16 types captured by BasicTypeStringTable2.</span></span>
<span id="cb96-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb96-39"></span>
<span id="cb96-40">    CLRType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-41">    BoolType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-42">    VoidType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-43">    ClassType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-44">    FloatType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-45">    DoubleType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-46">    SALExecutionContextType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-47">    ENativeStartupStateType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-48"></span>
<span id="cb96-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb96-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Any types that don't map directly to literal type names extracted from</span></span>
<span id="cb96-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the output string are listed here.  The first one starts at 48 in order</span></span>
<span id="cb96-52">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to differentiate it from the string tables.</span></span>
<span id="cb96-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb96-54"></span>
<span id="cb96-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb96-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Call site of an inline function.</span></span>
<span id="cb96-57">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb96-58"></span>
<span id="cb96-59">    InlineCallerType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-60"></span>
<span id="cb96-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb96-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Enum is special in that it doesn't map to a string in the string table;</span></span>
<span id="cb96-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// if a type can't be inferred from the list above, it defaults to Enum.</span></span>
<span id="cb96-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb96-65"></span>
<span id="cb96-66">    EnumType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb96-67"></span>
<span id="cb96-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb96-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Any enumeration value &gt;= InvalidType is invalid.  Make sure this always</span></span>
<span id="cb96-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// comes last in the enum layout.</span></span>
<span id="cb96-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb96-72"></span>
<span id="cb96-73">    InvalidType</span>
<span id="cb96-74"></span>
<span id="cb96-75"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> DEBUG_ENGINE_EXAMINE_SYMBOLS_TYPE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Here’s the part of the logic within <a href="https://github.com/tpn/tracer/blob/c2f36bcc686ce6633c91671650f58b62bffb126e/DebugEngine/DebugEngineExamineSymbols.c#L407"><code>ExamineSymbolsParseLine</code></a> that deals with matching the <em>basic type</em> part of the line. This refers to the 5th column of the output, e.g., the <code>struct</code>, <code>char *[181]</code>, <code>&lt;function&gt;</code>, <code>&lt;CLR type&gt;</code> bits in the following output:</p>
<pre class="plaintext"><code>prv global 00007ffd`1570d110   10 struct _UNICODE_STRING Rtl!ExtendedLengthVolumePrefixW = "\\?\"
prv global 00007ffd`1570da30  5a8 char *[181] Rtl!RtlFunctionNames = char *[181]
prv global 00007ffd`15711018    8 &lt;function&gt; * Rtl!__C_specific_handler_impl = 0x00007ffd`214c0f00
prv func   00007ffd`157093b0   1e &lt;CLR type&gt; Rtl!UnregisterRtlAtExitEntry$fin$0 (void)</code></pre>
<div class="sourceCode" id="cb98" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb98-1">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb98-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (Type declarations of the variables being referenced shortly.)</span></span>
<span id="cb98-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb98-4"></span>
<span id="cb98-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">SHORT</span> MatchOffset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> MatchIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> MatchAttempts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> NumberOfStringTables<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">STRING</span> BasicType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">STRING_MATCH</span> Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE</span> StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-12">    DEBUG_ENGINE_EXAMINE_SYMBOLS_TYPE SymbolType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-13">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-14"></span>
<span id="cb98-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb98-16"></span>
<span id="cb98-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb98-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The basic type will be next.  Set up the variable then search the string</span></span>
<span id="cb98-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// table for a match.  Set the length to the BytesRemaining for now; as long</span></span>
<span id="cb98-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// as it's greater than or equal to the basic type length (which it should</span></span>
<span id="cb98-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// always be), that will be fine.</span></span>
<span id="cb98-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb98-23"></span>
<span id="cb98-24">    BasicType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Buffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Char<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-25">    BasicType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>Length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>BytesRemaining<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-26">    BasicType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>MaximumLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>BytesRemaining<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-27"></span>
<span id="cb98-28">    StringTable <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ExamineSymbolsBasicTypeStringTable1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-29">    IsPrefixOfStringInTable <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>StringTableApi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>IsPrefixOfStringInTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-30">    MatchOffset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-31">    MatchAttempts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-32">    NumberOfStringTables <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>NumberOfBasicTypeStringTables<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-33">    ZeroStruct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb98-34"></span>
<span id="cb98-35">RetryBasicTypeMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb98-36"></span>
<span id="cb98-37">    MatchIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> IsPrefixOfStringInTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>BasicType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>Match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb98-38"></span>
<span id="cb98-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>MatchIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NO_MATCH_FOUND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb98-40">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(++</span>MatchAttempts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> NumberOfStringTables<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb98-41"></span>
<span id="cb98-42">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb98-43">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We weren't able to match the name to any known types.</span></span>
<span id="cb98-44">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Default to the enum type.</span></span>
<span id="cb98-45">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb98-46"></span>
<span id="cb98-47">            SymbolType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EnumType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-48"></span>
<span id="cb98-49">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb98-50"></span>
<span id="cb98-51">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb98-52">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// There are string tables remaining.  Attempt another match.</span></span>
<span id="cb98-53">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb98-54"></span>
<span id="cb98-55">            StringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb98-56">            MatchOffset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">MAX_STRING_TABLE_ENTRIES</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-57">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">goto</span> RetryBasicTypeMatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-58"></span>
<span id="cb98-59">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb98-60"></span>
<span id="cb98-61">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb98-62"></span>
<span id="cb98-63">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb98-64">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We found a match.  Our enums are carefully offset in order to allow</span></span>
<span id="cb98-65">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the following `index + offset = enum value` logic to work.</span></span>
<span id="cb98-66">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb98-67"></span>
<span id="cb98-68">        SymbolType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MatchIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> MatchOffset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-69">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb98-70"></span>
<span id="cb98-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb98-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. This next part doesn't occur in the source file, but I wanted</span></span>
<span id="cb98-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      to include it to demonstrate how you could then simply switch</span></span>
<span id="cb98-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      on the resulting symbol type directly, e.g.:</span></span>
<span id="cb98-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb98-76"></span>
<span id="cb98-77">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">switch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SymbolType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb98-78">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">case</span> CharType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb98-79">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">case</span> WideCharType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb98-80">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb98-81">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-82"></span>
<span id="cb98-83">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">case</span> UnionType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb98-84">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">case</span> StructType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb98-85">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb98-86">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-87"></span>
<span id="cb98-88">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">default</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb98-89">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb98-90">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-91"></span>
<span id="cb98-92">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>If there’s no match found, we check to see if we’ve performed the maximum number of attempts, that is, whether or not we’ve exhausted all our string tables. If we have, we just default to the <code>EnumType</code>.</p>
<p>Otherwise, bump the <code>StringTable</code> pointer (which relies on the fact that the underlying string table pointers in the session structure are contiguous — a handy implementation detail), bump the match offset by the number of entries per string table, and try the match again.</p>
<p>If we found a match, we can obtain the <code>SymbolType</code> enum representation of the underlying match by simply adding the match index to the match offset. I like that. It’s simple and fast. It also plays nicely with switch statements; do your lookup, resolve the underlying enum value, and process each possible path in a case statement like you’d do with any other integer representation of an option.</p>
<p>The other nice side-effect is that it forces you to pick which table a given string should go in. I made this decision by looking at which types occurred most frequently, and simply put those in the first table. Less frequent types go in subsequent tables.</p>
<p>I have a hunch there’s a lot of mileage in that approach; that is, linear scanning an array of string tables until a match is found. There will be an inflection point where some form of a log(n) binary tree search will perform better overall, but it would be very interesting to see how many strings you need to potentially match against before that point is hit.</p>
<p>Unless the likelihood of matching any given string in your set is completely random, by ordering the strings in your tables by how frequently they occur, the amortized cost of parsing a chunk of text would be very competitive using this approach, I would think.</p>
<p>A fun experiment for next time, perhaps!</p>
</section>
<section id="appendix" class="level1">
<h1>Appendix</h1>
<p>And now here’s all the stuff that wasn’t important enough to occur earlier in the article.</p>
<section id="implementation-considerations" class="level2">
<h2 class="anchored" data-anchor-id="implementation-considerations">Implementation Considerations</h2>
<p>One issue with writing so many versions of the exact same function is… how do you actually handle this? Downstream consumers of the component don’t need to access the 30 different function pointers for each function you’ve experimented with, but things like unit tests and benchmark programs do.</p>
<p>Here’s what I did for the StringTable component. Define two API structures, a normal one and an “extended” one. The extended one mirrors the normal one, and then adds all of its additional functions to the end.</p>
<p>I use a .def file to control the DLL function exports, with an alias to easily control which version of a function is the official version. The main header file then contains some bootstrap glue (in the form of an inline function) that dynamically loads the target library and resolves the number of API methods according to the size of the API structure provided.</p>
<p>This currently means that the <code>StringTable2.dll</code> includes all 14 C and 5 assembly variants, which is harmless, but it does increase the size of the module unnecessarily. (The module is currently about 19KB in size, whereas it would be under 4KB if only the official versions were included.) What I’ll probably end up doing is setting up a second project called <code>StringTableEx</code>, and, in conjunction with some <code>#ifdef</code>s, have that be the version of the module that contains all the additional functions, with the normal version just containing the official versions.</p>
<p>Here’s the <a href="https://github.com/tpn/tracer/blob/v0.1.11/StringTable2/StringTable.h#L1342">bootstrap glue from StringTable.h</a> and the <a href="https://github.com/tpn/tracer/blob/v0.1.11/StringTable2/StringTable.def">StringTable.def</a> file I currently use. (Note: this routine uses the <a href="https://github.com/tpn/tracer/blob/master/Rtl/SymbolLoader.c#L117">LoadSymbols()</a> function from the Rtl component.)</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-28-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-28-1" aria-controls="tabset-28-1" aria-selected="true">Bootstrap Header Glue</a></li><li class="nav-item"><a class="nav-link" id="tabset-28-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-28-2" aria-controls="tabset-28-2" aria-selected="false">StringTable.def</a></li></ul>
<div class="tab-content">
<div id="tabset-28-1" class="tab-pane active" aria-labelledby="tabset-28-1-tab">
<div class="sourceCode" id="cb99" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb99-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the string table API structure.</span></span>
<span id="cb99-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-4"></span>
<span id="cb99-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> _STRING_TABLE_API <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-6"></span>
<span id="cb99-7">    PSET_C_SPECIFIC_HANDLER SetCSpecificHandler<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-8"></span>
<span id="cb99-9">    PCOPY_STRING_ARRAY CopyStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-10">    PCREATE_STRING_TABLE CreateStringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-11">    PDESTROY_STRING_TABLE DestroyStringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-12"></span>
<span id="cb99-13">    PINITIALIZE_STRING_TABLE_ALLOCATOR</span>
<span id="cb99-14">        InitializeStringTableAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-15"></span>
<span id="cb99-16">    PINITIALIZE_STRING_TABLE_ALLOCATOR_FROM_RTL_BOOTSTRAP</span>
<span id="cb99-17">        InitializeStringTableAllocatorFromRtlBootstrap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-18"></span>
<span id="cb99-19">    PCREATE_STRING_ARRAY_FROM_DELIMITED_STRING</span>
<span id="cb99-20">        CreateStringArrayFromDelimitedString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-21"></span>
<span id="cb99-22">    PCREATE_STRING_TABLE_FROM_DELIMITED_STRING</span>
<span id="cb99-23">        CreateStringTableFromDelimitedString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-24"></span>
<span id="cb99-25">    PCREATE_STRING_TABLE_FROM_DELIMITED_ENVIRONMENT_VARIABLE</span>
<span id="cb99-26">        CreateStringTableFromDelimitedEnvironmentVariable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-27"></span>
<span id="cb99-28">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_STRING_IN_TABLE</span> IsStringInTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-29">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-30"></span>
<span id="cb99-31"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> STRING_TABLE_API<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-32"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> STRING_TABLE_API <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PSTRING_TABLE_API<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-33"></span>
<span id="cb99-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> _STRING_TABLE_API_EX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-35"></span>
<span id="cb99-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Inline STRING_TABLE_API.</span></span>
<span id="cb99-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-39"></span>
<span id="cb99-40">    PSET_C_SPECIFIC_HANDLER SetCSpecificHandler<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-41"></span>
<span id="cb99-42">    PCOPY_STRING_ARRAY CopyStringArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-43">    PCREATE_STRING_TABLE CreateStringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-44">    PDESTROY_STRING_TABLE DestroyStringTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-45"></span>
<span id="cb99-46">    PINITIALIZE_STRING_TABLE_ALLOCATOR</span>
<span id="cb99-47">        InitializeStringTableAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-48"></span>
<span id="cb99-49">    PINITIALIZE_STRING_TABLE_ALLOCATOR_FROM_RTL_BOOTSTRAP</span>
<span id="cb99-50">        InitializeStringTableAllocatorFromRtlBootstrap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-51"></span>
<span id="cb99-52">    PCREATE_STRING_ARRAY_FROM_DELIMITED_STRING</span>
<span id="cb99-53">        CreateStringArrayFromDelimitedString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-54"></span>
<span id="cb99-55">    PCREATE_STRING_TABLE_FROM_DELIMITED_STRING</span>
<span id="cb99-56">        CreateStringTableFromDelimitedString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-57"></span>
<span id="cb99-58">    PCREATE_STRING_TABLE_FROM_DELIMITED_ENVIRONMENT_VARIABLE</span>
<span id="cb99-59">        CreateStringTableFromDelimitedEnvironmentVariable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-60"></span>
<span id="cb99-61">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_STRING_IN_TABLE</span> IsStringInTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-62">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-63"></span>
<span id="cb99-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extended API methods used for benchmarking.</span></span>
<span id="cb99-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-67"></span>
<span id="cb99-68">    PIS_PREFIX_OF_CSTR_IN_ARRAY IsPrefixOfCStrInArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-69">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-70">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-71">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-72">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-73">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_5<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-74">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_6<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-75">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_7<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-76">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_8<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-77">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_9<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-78">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_10<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-79">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_11<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-80">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_12<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-81">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_13<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-82">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_14<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-83">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_x64_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-84">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_x64_2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-85">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_x64_3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-86">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_x64_4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-87">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IsPrefixOfStringInTable_x64_5<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-88">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PIS_PREFIX_OF_STRING_IN_TABLE</span> IntegerDivision_x64_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-89"></span>
<span id="cb99-90"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> STRING_TABLE_API_EX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-91"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> STRING_TABLE_API_EX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PSTRING_TABLE_API_EX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-92"></span>
<span id="cb99-93"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">union</span> _STRING_TABLE_ANY_API <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-94">    STRING_TABLE_API Api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-95">    STRING_TABLE_API_EX ApiEx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-96"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> STRING_TABLE_ANY_API<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-97"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> STRING_TABLE_ANY_API <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE_ANY_API</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-98"></span>
<span id="cb99-99"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FORCEINLINE</span></span>
<span id="cb99-100"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BOOLEAN</span></span>
<span id="cb99-101">LoadStringTableApi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb99-102">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PRTL</span> Rtl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-103">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_Inout_</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">HMODULE</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ModulePointer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-104">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_opt_</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PUNICODE_STRING</span> ModulePath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-105">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">_In_</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> SizeOfAnyApi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-106">    _Out_writes_bytes_all_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SizeOfAnyApi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PSTRING_TABLE_ANY_API</span> AnyApi</span>
<span id="cb99-107">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb99-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*++</span></span>
<span id="cb99-109"></span>
<span id="cb99-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Routine Description:</span></span>
<span id="cb99-111"></span>
<span id="cb99-112"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Loads the string table module and resolves all API functions for either</span></span>
<span id="cb99-113"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    the STRING_TABLE_API or STRING_TABLE_API_EX structure.  The desired API</span></span>
<span id="cb99-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    is indicated by the SizeOfAnyApi parameter.</span></span>
<span id="cb99-115"></span>
<span id="cb99-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Example use:</span></span>
<span id="cb99-117"></span>
<span id="cb99-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        STRING_TABLE_API_EX GlobalApi;</span></span>
<span id="cb99-119"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        PSTRING_TABLE_API_EX Api;</span></span>
<span id="cb99-120"></span>
<span id="cb99-121"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Success = LoadStringTableApi(Rtl,</span></span>
<span id="cb99-122"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                                     NULL,</span></span>
<span id="cb99-123"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                                     NULL,</span></span>
<span id="cb99-124"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                                     sizeof(GlobalApi),</span></span>
<span id="cb99-125"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                                     (PSTRING_TABLE_ANY_API)&amp;GlobalApi);</span></span>
<span id="cb99-126"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        ASSERT(Success);</span></span>
<span id="cb99-127"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Api = &amp;GlobalApi;</span></span>
<span id="cb99-128"></span>
<span id="cb99-129"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    In this example, the extended API will be provided as our sizeof(GlobalApi)</span></span>
<span id="cb99-130"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    will indicate the structure size used by STRING_TABLE_API_EX.</span></span>
<span id="cb99-131"></span>
<span id="cb99-132"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    See ../StringTable2BenchmarkExe/main.c for a complete example.</span></span>
<span id="cb99-133"></span>
<span id="cb99-134"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Arguments:</span></span>
<span id="cb99-135"></span>
<span id="cb99-136"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Rtl - Supplies a pointer to an initialized RTL structure.</span></span>
<span id="cb99-137"></span>
<span id="cb99-138"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    ModulePointer - Optionally supplies a pointer to an existing module handle</span></span>
<span id="cb99-139"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        for which the API symbols are to be resolved.  May be NULL.  If not</span></span>
<span id="cb99-140"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        NULL, but the pointed-to value is NULL, then this parameter will</span></span>
<span id="cb99-141"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        receive the handle obtained by LoadLibrary() as part of this call.</span></span>
<span id="cb99-142"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        If the string table module is no longer needed, but the program will</span></span>
<span id="cb99-143"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        keep running, the caller should issue a FreeLibrary() against this</span></span>
<span id="cb99-144"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        module handle.</span></span>
<span id="cb99-145"></span>
<span id="cb99-146"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    ModulePath - Optionally supplies a pointer to a UNICODE_STRING structure</span></span>
<span id="cb99-147"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        representing a path name of the string table module to be loaded.</span></span>
<span id="cb99-148"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        If *ModulePointer is not NULL, it takes precedence over this parameter.</span></span>
<span id="cb99-149"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        If NULL, and no module has been provided via *ModulePointer, an attempt</span></span>
<span id="cb99-150"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        will be made to load the library via 'LoadLibraryA("StringTable.dll")'.</span></span>
<span id="cb99-151"></span>
<span id="cb99-152"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    SizeOfAnyApi - Supplies the size, in bytes, of the underlying structure</span></span>
<span id="cb99-153"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        pointed to by the AnyApi parameter.</span></span>
<span id="cb99-154"></span>
<span id="cb99-155"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    AnyApi - Supplies the address of a structure which will receive resolved</span></span>
<span id="cb99-156"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        API function pointers.  The API furnished will depend on the size</span></span>
<span id="cb99-157"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        indicated by the SizeOfAnyApi parameter.</span></span>
<span id="cb99-158"></span>
<span id="cb99-159"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Return Value:</span></span>
<span id="cb99-160"></span>
<span id="cb99-161"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    TRUE on success, FALSE on failure.</span></span>
<span id="cb99-162"></span>
<span id="cb99-163"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*/</span></span>
<span id="cb99-164"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-165">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BOOL</span> Success<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-166">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">HMODULE</span> Module <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-167">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfSymbols<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-168">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfResolvedSymbols<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-169"></span>
<span id="cb99-170">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-171">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the API names.</span></span>
<span id="cb99-172">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-173">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// N.B. These names must match STRING_TABLE_API_EX exactly (including the</span></span>
<span id="cb99-174">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//      order).</span></span>
<span id="cb99-175">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-176"></span>
<span id="cb99-177">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSTR</span> Names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-178">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SetCSpecificHandler"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-179">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CopyStringArray"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-180">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CreateStringTable"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-181">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DestroyStringTable"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-182">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"InitializeStringTableAllocator"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-183">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"InitializeStringTableAllocatorFromRtlBootstrap"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-184">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CreateStringArrayFromDelimitedString"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-185">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CreateStringTableFromDelimitedString"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-186">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CreateStringTableFromDelimitedEnvironmentVariable"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-187">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsStringInTable"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-188">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-189">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfCStrInArray"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-190">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-191">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_2"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-192">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-193">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_4"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-194">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_5"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-195">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_6"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-196">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_7"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-197">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_8"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-198">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_9"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-199">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_10"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-200">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_11"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-201">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_12"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-202">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_13"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-203">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_14"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-204">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_x64_1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-205">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_x64_2"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-206">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_x64_3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-207">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_x64_4"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-208">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IsPrefixOfStringInTable_x64_5"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-209">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IntegerDivision_x64_1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-210">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb99-211"></span>
<span id="cb99-212">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-213">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define an appropriately sized bitmap we can passed to Rtl-&gt;LoadSymbols().</span></span>
<span id="cb99-214">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-215"></span>
<span id="cb99-216">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> BitmapBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ALIGN_UP</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARRAYSIZE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb99-217">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">RTL_BITMAP</span> FailedBitmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARRAYSIZE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PULONG</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&amp;</span>BitmapBuffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb99-218"></span>
<span id="cb99-219">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-220">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Determine the number of symbols we want to resolve based on the size of</span></span>
<span id="cb99-221">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// the API indicated by the caller.</span></span>
<span id="cb99-222">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-223"></span>
<span id="cb99-224">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SizeOfAnyApi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>AnyApi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-225">        NumberOfSymbols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>AnyApi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG_PTR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb99-226">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SizeOfAnyApi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>AnyApi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ApiEx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-227">        NumberOfSymbols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>AnyApi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ApiEx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG_PTR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb99-228">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-229">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">FALSE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-230">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb99-231"></span>
<span id="cb99-232">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-233">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Attempt to load the underlying string table module if necessary.</span></span>
<span id="cb99-234">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-235"></span>
<span id="cb99-236">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ModulePointer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-237">        Module <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ModulePointer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-238">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb99-239"></span>
<span id="cb99-240">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Module<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-241">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ModulePath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-242">            Module <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoadLibraryW<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ModulePath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb99-243">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-244">            Module <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoadLibraryA<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"StringTable2.dll"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb99-245">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb99-246">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb99-247"></span>
<span id="cb99-248">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>Module<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-249">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">FALSE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-250">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb99-251"></span>
<span id="cb99-252">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-253">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We've got a handle to the string table module.  Load the symbols we want</span></span>
<span id="cb99-254">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// dynamically via Rtl-&gt;LoadSymbols().</span></span>
<span id="cb99-255">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-256"></span>
<span id="cb99-257">    Success <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Rtl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>LoadSymbols<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb99-258">        Names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-259">        NumberOfSymbols<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-260">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PULONG_PTR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>AnyApi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-261">        NumberOfSymbols<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-262">        Module<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-263">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>FailedBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-264">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">TRUE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-265">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>NumberOfResolvedSymbols</span>
<span id="cb99-266">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb99-267"></span>
<span id="cb99-268">    ASSERT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Success<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb99-269"></span>
<span id="cb99-270">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-271">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Debug helper: if the breakpoint below is hit, then the symbol names</span></span>
<span id="cb99-272">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// have potentially become out of sync.  Look at the value of first failed</span></span>
<span id="cb99-273">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// symbol to assist in determining the cause.</span></span>
<span id="cb99-274">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-275"></span>
<span id="cb99-276">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NumberOfSymbols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> NumberOfResolvedSymbols<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-277">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSTR</span> FirstFailedSymbolName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-278">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> FirstFailedSymbol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-279">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> NumberOfFailedSymbols<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-280"></span>
<span id="cb99-281">        NumberOfFailedSymbols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Rtl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>RtlNumberOfSetBits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>FailedBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb99-282">        FirstFailedSymbol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Rtl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>RtlFindSetBits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>FailedBitmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb99-283">        FirstFailedSymbolName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>FirstFailedSymbol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb99-284">        __debugbreak<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb99-285">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb99-286"></span>
<span id="cb99-287">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-288">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the C specific handler for the module, such that structured</span></span>
<span id="cb99-289">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// exception handling will work.</span></span>
<span id="cb99-290">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-291"></span>
<span id="cb99-292">    AnyApi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>SetCSpecificHandler<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Rtl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>__C_specific_handler<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb99-293"></span>
<span id="cb99-294">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-295">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the caller's pointer and return success.</span></span>
<span id="cb99-296">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb99-297"></span>
<span id="cb99-298">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ARGUMENT_PRESENT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ModulePointer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-299">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ModulePointer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Module<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-300">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb99-301"></span>
<span id="cb99-302">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">TRUE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-303"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<div id="tabset-28-2" class="tab-pane" aria-labelledby="tabset-28-2-tab">
<pre class="plaintext"><code>LIBRARY StringTable2
EXPORTS
    SetCSpecificHandler
    CopyStringArray
    CreateStringTable
    DestroyStringTable
    InitializeStringTableAllocator
    InitializeStringTableAllocatorFromRtlBootstrap
    CreateStringArrayFromDelimitedString
    CreateStringTableFromDelimitedString
    CreateStringTableFromDelimitedEnvironmentVariable
    TestIsPrefixOfStringInTableFunctions
    IsStringInTable
    IsPrefixOfStringInTable_1
    IsPrefixOfStringInTable_2
    IsPrefixOfStringInTable_3
    IsPrefixOfStringInTable_4
    IsPrefixOfStringInTable_5
    IsPrefixOfStringInTable_6
    IsPrefixOfStringInTable_7
    IsPrefixOfStringInTable_8
    IsPrefixOfStringInTable_9
    IsPrefixOfStringInTable_10
    IsPrefixOfStringInTable_11
    IsPrefixOfStringInTable_12
    IsPrefixOfStringInTable_13
    IsPrefixOfStringInTable_14
    IsPrefixOfStringInTable_x64_1
    IsPrefixOfStringInTable_x64_2
    IsPrefixOfStringInTable_x64_3
    IsPrefixOfStringInTable_x64_4
    IsPrefixOfStringInTable_x64_5
    IsPrefixOfCStrInArray
    IntegerDivision_x64_1
    IsPrefixOfStringInTable=IsPrefixOfStringInTable_13</code></pre>
</div>
</div>
</div>
</section>
<section id="release-build-versus-profile-guided-optimization-build" class="level2">
<h2 class="anchored" data-anchor-id="release-build-versus-profile-guided-optimization-build">Release Build versus Profile Guided Optimization Build</h2>
<p>It’s interesting to see a side-by-side comparison of the optimized release build next to the PGO build. The main changes are mostly all to do with branching and jump direction. The following diagram was generated via <a href="https://www.hex-rays.com/products/ida/index.shtml">IDA Pro 6.95</a>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="resources/IsPrefixOfStringInTable_13-Release-vs-PGO.png"><img src="https://trent.me/articles/is-prefix-of-string-in-table/resources/IsPrefixOfStringInTable_13-Release-vs-PGO-Small.png" class="img-fluid figure-img" alt="IsPrefixOfStringInTable_13-Release-vs-PGO.png"></a></p>
<figcaption>IsPrefixOfStringInTable_13-Release-vs-PGO.png</figcaption>
</figure>
</div>
</section>
<section id="typedefs" class="level2">
<h2 class="anchored" data-anchor-id="typedefs">Typedefs</h2>
<p>If there’s one thing you can’t argue about with the Pascal-style <em>Cutler Normal Form</em>, is that it loves a good typedef. For the sake of completeness, here’s a list of all the explicit or implied typedefs featured in the code on this page.</p>
<div class="sourceCode" id="cb101" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb101-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb101-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Standard NT/Windows typedefs (typically living in minwindef.h).</span></span>
<span id="cb101-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb101-4"></span>
<span id="cb101-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PVOID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">CHAR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">SHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">LONG</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PULONG</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PUSHORT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> UCHAR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> UCHAR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PUCHAR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> _Null_terminated_ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PSZ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> _Null_terminated_ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCSZ</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-17"></span>
<span id="cb101-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BOOL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">short</span> WORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-21"></span>
<span id="cb101-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BYTE</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BOOLEAN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">BOOLEAN</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PBOOLEAN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-24"></span>
<span id="cb101-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb101-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The STRING structure used by the NT kernel.  Our STRING_ARRAY structure</span></span>
<span id="cb101-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// relies on an array of these structures.  We never pass raw 'char *'s</span></span>
<span id="cb101-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// around, only STRING/PSTRING structs/pointers.</span></span>
<span id="cb101-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb101-30"></span>
<span id="cb101-31"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> _STRING <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb101-32">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> Length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-33">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">USHORT</span> MaximumLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-34">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ULONG</span>  Padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-35">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PCHAR</span> Buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-36"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">STRING</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PSTRING</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-37"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">STRING</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PCSTRING<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-38"></span>
<span id="cb101-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb101-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Our SIMD register typedefs.</span></span>
<span id="cb101-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span></span>
<span id="cb101-42"></span>
<span id="cb101-43"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> __m128i <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DECLSPEC_ALIGN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">XMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PXMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>PPXMMWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-44"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> __m256i <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DECLSPEC_ALIGN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">YMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PYMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>PPYMMWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-45"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> __m512i <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">DECLSPEC_ALIGN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ZMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PZMMWORD</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>PPZMMWORD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
</section>
<section id="colophon" class="level1">
<h1>Colophon</h1>
<p>This article was originally written in <a href="https://github.com/tpn/website/blob/45b2bf40005d602c4c4355d212efa752ffc8bfa3/is-prefix-of-string-in-table/index.html">raw HTML</a> when it was first published back in May 2018.</p>
<p>In October-November 2024, I converted my entire <a href="https://github.com/tpn/website">website</a> to use Quarto, and “ported” the raw HTML version of this article to Quarto/Markdown by hand. It took about 16-20 hours or so. Mainly because the article is so f’n long, and it took a lot of fiddling to get the same aesthetics as the original article—particularly with regards to syntax highlighting, etc.</p>
<section id="quarto-markdown" class="level2">
<h2 class="anchored" data-anchor-id="quarto-markdown">Quarto &amp; Markdown</h2>
<p>The syntax highlighting for C and assembly is provided by <a href="https://github.com/tpn/website/blob/main/c.xml"><code>c.xml</code></a> and <a href="https://github.com/tpn/website/blob/main/asm.xml"><code>asm.xml</code></a> respectively.</p>
<p>These files were copied from the <a href="https://github.com/KDE/syntax-highlighting">KDE syntax-highlighting repository</a> and then modified to add support for things like SIMD intrinsics, SAL annotations, NT types and definitions, custom types and definitions used in the article, etc.</p>
<p>For the syntax color scheme, I copied the <a href="https://github.com/quarto-dev/quarto-cli/blob/80bf6b5848bf644de3a4d59e26b5eb067375986a/src/resources/pandoc/highlight-styles/dracula.theme"><code>dracula.theme</code></a> from the Quarto repository into <a href="https://github.com/tpn/website/blob/main/tpn.theme"><code>tpn.theme</code></a> and then just hacked on it until I was mostly content with the results.</p>
</section>
<section id="data-visualization" class="level2">
<h2 class="anchored" data-anchor-id="data-visualization">Data Visualization</h2>
<section id="algorithm-diagrams" class="level3">
<h3 class="anchored" data-anchor-id="algorithm-diagrams">Algorithm Diagrams</h3>
<p>The algorithm diagrams at the start of the article were created using my trusty ol’ copy of Visio 2019. The diagrams were saved as SVG. I had to inject a <code>&lt;rect width="100%" height="100%" fill="#ffffff" /&gt;</code> into the start of each SVG file when porting to Quarto/Markdown in order to support dark mode. This set a white background for the diagram, which was otherwise transparent and did not render correctly in dark mode.</p>
</section>
<section id="benchmarks" class="level3">
<h3 class="anchored" data-anchor-id="benchmarks">Benchmarks</h3>
<p>All of the resources used to generate this article, including raw .csv data, supporting .svgs, etc., live in the <a href="https://github.com/tpn/website/tree/main/articles/is-prefix-of-string-in-table/resources">resources</a> directory.</p>
<p>The charts were created in Excel. Each .csv data file was added as a new data source and imported, and then a PivotTable was created to generate the desired bar graph. This was then saved as PDF, which I then edited with <a href="https://inkscape.org/">Inkscape</a>, deleting the surrounding border, cropping the canvas to fit the diagram, and then saving as SVG.</p>
<p>After saving as SVG, I then edited each chart in Vim and manually did some font corrections. Looking at my <code>.vimrc</code> file, I believe this was what I used:</p>
<pre class="vim"><code>"
" SVG helpers.
"

map &lt;leader&gt;v
    \ &lt;ESC&gt;:% s/GillSans;/Calibri,GillSans-Light;/ge&lt;CR&gt;
    \ &lt;ESC&gt;:% s/Monaco/Monaco,Consolas,Menlo,monospace/ge&lt;CR&gt;</code></pre>
<p>I can’t remember if I did any other modifications whilst in Vim (I’m writing this colophon in 2024, but the SVG hacking was done over six years ago).</p>
</section>
</section>
</section>
<section id="comments" class="level1">
<h1>Comments</h1>
<!-- vim:set ts=8 sw=2 sts=2 expandtab tw=76 -->


</section>

 ]]></description>
  <category>AVX2</category>
  <category>SIMD</category>
  <category>C</category>
  <category>Assembly</category>
  <category>MASM</category>
  <guid>https://trent.me/articles/is-prefix-of-string-in-table/</guid>
  <pubDate>Fri, 04 May 2018 07:00:00 GMT</pubDate>
</item>
<item>
  <title>DRAFT: From PyParallel to Python Free-Threading</title>
  <dc:creator>Trent Nelson</dc:creator>
  <link>https://trent.me/articles/from-pyparallel-to-python-free-threading/</link>
  <description><![CDATA[ 




<p>This article is sponsored by <a href="https://meta.com">Meta</a> in collaboration with <a href="https://quansight.com">Quansight</a> and <a href="https://openteams.com">OpenTeams</a>.</p>
<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Since it’s inception, Python has had a <a href="https://docs.python.org/3/glossary.html#term-global-interpreter-lock">Global Interpreter Lock</a>, or GIL, that prevented more than one thread running Python code at the same time.</p>
<p>Python 3.13, released in October 2024, is the first version of Python to introduce support for a “no-GIL” <em>free-threaded</em> mode, per <a href="https://peps.python.org/pep-0703/">PEP-703 Making the Global Interpreter Lock Optional in CPython</a>, unlocking the ability for multiple Python threads to run simultaneously.</p>
<p>This allows, for the first time since the language’s inception in December 1989, a single Python process to saturate all CPU cores in parallel with pure Python code (i.e.&nbsp;not farming out to extension modules written in C, C++, or, more recently, Rust).</p>
<p>I can’t overstate how exciting this is! For decades, countless attempts have been made to solve this problem—including my own efforts with <a href="https://pyparallel.org">PyParallel</a>—but no-one has prevailed in getting a solution mainlined into CPython. Until now!</p>
<p>I will admit I am biased: I am a Python committer (though I have not been directly involved in this work, nor have I contributed any changes to Python recently), I adore the language, and have spent years obsessing over the dream of a parallel Python. It’s a topic I’m incredibly passionate about, and this article will unabashedly proselytize the extraordinary engineering efforts that finally made a free-threaded Python a reality.</p>
<p>Thankfully, it’s not just blind, uninformed enthusiasm. Over the past few months I’ve had the opportunity to extensively test-drive free-threaded Python to prepare for this article. The verdict? I think it’s phenomenal. Both the implementation and performance on real-world problems. Free-threaded Python removes a significant limitation, making it possible to tackle a wide range of problems that were previously out of reach. I genuinely believe this is the best thing to ever happen to the Python language over the last three decades, and it will solidify its position as one of the most dominant programming languages for the next three decades. After all, we’re not getting fewer cores.</p>
<p>And this is essentially just the first-pass! Certain trade-offs had to be made to deliver the core functionality within a reasonable time frame—like disabling the non-thread-safe functionality introduced by <a href="https://docs.python.org/3/whatsnew/3.11.html#whatsnew311-pep659">PEP-659 Specializing Adaptive Interpreter</a>, which is the feature responsible for delivering large speedups in the last few prior releases. However, this is on track to be re-enabled in free-threaded mode for Python 3.14, allowing multi-threaded code to also benefit from the same speedups single-threaded code has enjoyed the past few years.</p>
<p>The goal of this article is to review the technical details of the implementation, with some comparisons to prior work such as PyParallel. I’ll then cover the types of problems that are now incredibly well-suited to be tackled with a free-threaded Python, using a demo project I’ve created called <a href="https://github.com/tpn/parallelopedia">Parallelopedia</a> to provide a basis for concrete examples of real-world problems.</p>
<p>Finally, I’ll demonstrate some examples of how <a href="https://pytorch.org">PyTorch</a> can be used today with free-threaded Python, with particular focus on parallel inference (generation) on a shared model. Load a model once in a single Python process, replicate it across GPUs of interest, and perform parallel inference from multiple threads without needing to mess around with <code>multiprocessing</code>.</p>
<p>I’ll also cover areas of PyTorch that don’t yet work with free-threading, and the plans for tackling that in the future.</p>
<p>The motivation behind the PyTorch focus is simple: Meta’s PyTorch folks, through their relationship with <a href="https://quansight.com">Quansight</a>, paid for my time to work on this article. Meta was also heavily involved in supporting and funding the free-threaded Python efforts, too; this was also thanks to their relationship with Quansight. So special thanks goes out to Meta for all of their support with both free-threaded Python, and PyTorch overall.</p>
<p>And I’d be remiss if I didn’t thank my friend, colleague, and twice-now boss <a href="https://en.wikipedia.org/wiki/Travis_Oliphant">Dr.&nbsp;Travis Oliphant</a>, CEO of Quansight and OpenTeams, primary creator of <a href="https://en.wikipedia.org/wiki/NumPy">NumPy</a>, founding contributor of <a href="https://en.wikipedia.org/wiki/SciPy">SciPy</a>, and one of the founders of Continuum.io—now <a href="https://anaconda.com">Anaconda</a>, with whom I worked many years ago. After the abrupt layoffs at <a href="https://voltrondata.com/">Voltron Data</a> in late September 2024, I reached out to Travis for work and he snapped me up instantly, putting me to work on the PyTorch project with <a href="https://github.com/amjames">Andrew James</a> for a few months before I started my new role as a Principle Engineer at NVIDIA on the Core CUDA Compute Libraries team in late January, 2025.</p>
<p>Thank you Meta, Quansight, Travis, and James! And thanks to all the folks involved in delivering free-threaded Python, including the Python Steering Council for taking a calculated risk and accepting <a href="https://peps.python.org/pep-0703/">PEP-703 Making the Global Interpreter Lock Optional in CPython</a> in the first place.</p>
</section>
<section id="background" class="level1">
<h1>Background</h1>
<p>The <a href="https://peps.python.org/pep-0703/#related-work">Related Work</a> section of PEP-703 does a fantastic job of capturing all of the past attempts at improving Python’s ability at simultaneously leveraging multiple CPU cores.</p>
<p>In this section I’m going to focus on Greg Stein’s initial free-threaded work back in 1996, and then my attempts around 2012 with PyParallel.</p>
<section id="greg-steins-free-threaded-patch-1996" class="level2">
<h2 class="anchored" data-anchor-id="greg-steins-free-threaded-patch-1996">Greg Stein’s Free Threaded Patch (1996)</h2>
<p>The first attempt to remove the GIL was by Greg Stein in 1996, with a patch against Python 1.4. (1996! I hadn’t even heard of Python back in 1996—I was only in tenth grade at the time.)</p>
<p>The <code>python-dev@</code> mailing lists weren’t public until a few years after that, so we can’t see the specific discussions that were had between core Python developers at the time. Greg opines on the experience in August 2001 in this <code>python-dev@</code> email titled <a href="https://mail.python.org/pipermail/python-dev/2001-August/017099.html">Free threading</a>. Guido van Rossum also furnishes some pertinent information on the topic in this September 2007 post titled <a href="https://www.artima.com/forums/flat.jsp?forum=106&amp;thread=214235&amp;start=0&amp;msRange=15">It isn’t Easy to Remove the GIL</a>.</p>
<p>Greg’s approach introduced fine-grained locking to all Python objects, which, unfortunately, introduced pretty severe performance penalties that were deemed too great for the patches to ever make it into mainline Python. With the patches applied, <em>all</em> Python code was slowed down by about 40%-50%, regardless of whether it was single-threaded or multi-threaded code.</p>
<p>Fast-forward 15 years or so, and David Beazley wrote a detailed post in August 2011 about Greg Stein’s work in an article titled: <a href="https://dabeaz.blogspot.com/2011/08/inside-look-at-gil-removal-patch-of.html">An Inside Look at the GIL Removal Patch of Lore</a>. As part of this article, Dave obtains the original Python 1.4 source, applies Greg Stein’s patches, and takes the resulting free-threaded Python for a run.</p>
<p>Dave confirms that, indeed, the slowdown introduced by this approach—where every increment and decrement reference results in either an interlocked op or a mutex lock and unlock—is prohibitively expensive.</p>
<p>In writing this article, I reviewed Dave’s article again, and attempted to download Python 1.4 so that I could apply Greg’s patches as well. Unfortunately, the download link Dave cites now 404s, so I googled <em>“download Python 1.4 source”</em>, and, funnily enough, the first hit is a Github repo titled <a href="https://github.com/tpn/python-1.4">tpn/python-1.4</a> that, ’lo and behold, is a repo I put together twelve years ago doing exactly that:</p>
<ul>
<li><a href="https://github.com/tpn/python-1.4/commit/c6ef13ae4c089eaf8c39942655d65953e6849469">Importing the original Python 1.4 source</a></li>
<li><a href="https://github.com/tpn/python-1.4/commit/5c17e33224e2b57948ab594280a006d7648347e6">Applying Greg’s patches</a></li>
</ul>
<section id="python-1.4" class="level3">
<h3 class="anchored" data-anchor-id="python-1.4">Python 1.4</h3>
<p>Let’s take a look at Python 1.4 and the changes Greg made in the first known effort of someone attempting to remove the Python GIL. All future efforts at this herculean task were influenced by Greg’s work—specifically, in that he identified what absolutely doesn’t work—so it’s valuable to review the core technical aspects of his free-threading patch.</p>
<section id="objects-and-varobjects" class="level4">
<h4 class="anchored" data-anchor-id="objects-and-varobjects">Objects and VarObjects</h4>
<p>Python’s main object structure, the <code>PyObject</code>, hasn’t changed much over the years. For non-container objects (i.e.&nbsp;scalars such as integers, floats, etc.) the structure is simply a reference count and a pointer to a type object:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-2">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ob_refcnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-3">    PyTypeObject <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ob_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> PyObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Container objects–otherwise known as <em>“variable”</em> objects–are represented via the <code>PyVarObject</code> structure. These structures <em>“inherit”</em> the base <code>PyObject</code> layout, and then add an additional field for tracking the number of elements contained by the object: the <code>ob_size</code> field. In Python 1.4, the structure looked like this:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-2">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ob_refcnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-3">    PyTypeObject <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ob_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ob_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> PyVarObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="callout callout-style-simple callout-note no-icon callout-titled" title="Actual C Header Code">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Actual C Header Code
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>The actual C header code for defining these structures is more baroque; the relevant Python 1.4 <a href="https://github.com/tpn/python-1.4/blob/c6ef13ae4c089eaf8c39942655d65953e6849469/Include/object.h#L104">Include/object.h</a> code looks like this:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb3-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define PyObject_HEAD </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> ob_refcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> _typeobject </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ob_type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-4"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define PyObject_HEAD_INIT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define PyObject_VAR_HEAD </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-7"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    PyObject_HEAD </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-8"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> ob_size</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* Number of items in variable part */</span></span>
<span id="cb3-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> _object <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-10">    PyObject_HEAD</span>
<span id="cb3-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> PyObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-14">    PyObject_VAR_HEAD</span>
<span id="cb3-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> varobject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="reference-counting" class="level4">
<h4 class="anchored" data-anchor-id="reference-counting">Reference Counting</h4>
<p>There was no cyclic garbage collection in Python 1.4–that feature wasn’t added until Python 2.0 around the October 2000 timeframe. Reference counting was the only means for Python to reclaim the memory used by objects that were no longer needed, by way of the <code>PyObject</code> <code>ob_refcnt</code> field. Incrementing the reference simply added one to the existing value. Decrementing the reference subtracted one and checked to see if the resulting value was zero, and, if it was, the object would be deallocated via <code>_Py_Dealloc()</code>.</p>
<p>The relevant Python 1.4 <a href="https://github.com/tpn/python-1.4/blob/c6ef13ae4c089eaf8c39942655d65953e6849469/Include/object.h#L349C1-L354C18">Include/object.h</a> code used two macros named <code>Py_INCREF()</code> and <code>Py_DECREF()</code>, which looked like this:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb4-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define Py_INCREF</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ob_refcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb4-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define Py_DECREF</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">           </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ob_refcnt </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-4"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                       </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-5"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                        </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-6"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        _Py_Dealloc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<p>These operations are inherently unsafe in a multi-threaded environment. If two or more separate threads are incrementing or decrementing reference counts to the same object in parallel, the results are effectively undefined, as there is no guarantee as to the correctness of the underlying value.</p>
<p>The solution for protecting against this was the Global Interpreter Lock, which ensured that only one thread could be running Python code at any given time.</p>
<p>Thus, if you’re embarking on an attempt to avoid this restriction, such that you can have multiple Python threads executing Python code simultaneously (i.e. on multi-core systems), the first thing you need to do is figure out how you’re going to handle making reference counting thread-safe.</p>
</section>
</section>
<section id="gregs-free-threaded-approach" class="level3">
<h3 class="anchored" data-anchor-id="gregs-free-threaded-approach">Greg’s Free-Threaded Approach</h3>
<p>Greg’s approach tried the most logical solution: make reference counting a thread-safe operation by using interlocked increment and decrement operations against the <code>ob_refcnt</code> field on NT (Windows) systems. On Linux, a mutex lock was used to protect the reference count.</p>
<p>Using a <code>WITH_FREE_THREAD</code> macro to gate his changes, Greg modified the <a href="https://github.com/tpn/python-1.4/commit/5c17e33224e2b57948ab594280a006d7648347e6#diff-87272721a5cf1cd9915d6f503f6a7bbefa2f26c935c7ce83ca78706afd0ad05aR353-R371">reference counting logic</a> to <code>Include/object.h</code> as follows:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb5-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#ifdef WITH_FREE_THREAD</span></span>
<span id="cb5-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define Py_INCREF</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> Py_SafeIncr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ob_refcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define Py_DECREF</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                       </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-4"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Py_SafeDecr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ob_refcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-5"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                   </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-6"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                                    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-7"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        _Py_Dealloc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-8"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#else </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* !WITH_FREE_THREAD */</span></span>
<span id="cb5-9"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define Py_INCREF</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ob_refcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb5-10"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define Py_DECREF</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">           </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-11"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ob_refcnt </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-12"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                       </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-13"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">                        </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-14"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        _Py_Dealloc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-15"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* !WITH_FREE_THREAD */</span></span></code></pre></div>
<p>So, <code>Py_INCREF(op)</code> became a call to <code>Py_SafeIncr()</code>, and <code>Py_DECREF(op)</code> became a call to <code>Py_SafeDecr()</code>. On Windows, these routines were simply wrappers around the <code>InterlockedIncrement</code> and <code>InterlockedDecrement</code> intrinsics, respectively, defined <a href="https://github.com/tpn/python-1.4/commit/5c17e33224e2b57948ab594280a006d7648347e6#diff-9ed9e47e6055e8799816e87f812a456d9d5f37bf32a1973377777184266ff39fR93-R94">here</a>:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb6-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define Py_SafeIncr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">pint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">   InterlockedIncrement</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*)(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">pint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb6-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define Py_SafeDecr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">pint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">   InterlockedDecrement</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*)(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">pint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span></code></pre></div>
<p>On non-NT systems, the <code>Py_SafeIncr()</code> and <code>Py_SafeDecr()</code> routines were aliased to <code>_Py_SafeIncr()</code> and <code>_Py_SafeDecr()</code>, respectively, which were implemented in <a href="https://github.com/tpn/python-1.4/commit/5c17e33224e2b57948ab594280a006d7648347e6#diff-3cb31d5133324b025a026d66a2800f91d58736e296776e9f3c24360106eff142R51-R71">Python/pymutex.c</a> as follows:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* mutexes for the subsystems */</span></span>
<span id="cb7-2">PyMutex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> _Py_RefMutex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-3">PyMutex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> _Py_ListMutex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-4">PyMutex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> _Py_MappingMutex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-5">PyMutex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> _Py_CritMutex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb7-8"></span>
<span id="cb7-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> _Py_SafeIncr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>pint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-13">    PyMutex_Lock<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>_Py_RefMutex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-14">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++*</span>pint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-15">    PyMutex_Unlock<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>_Py_RefMutex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-18"></span>
<span id="cb7-19"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> _Py_SafeDecr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-20">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>pint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-22">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-23">    PyMutex_Lock<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>_Py_RefMutex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-24">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--*</span>pint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-25">    PyMutex_Unlock<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>_Py_RefMutex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-27"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>Oof! That’s a single global mutex <code>_Py_RefMutex</code> protecting all reference counts for all objects. (N.B. <code>PyMutex</code> was a slim wrapper around <code>pthread_mutex_t</code>, and the lock and unlock operations simply called out to <code>pthread_mutex_lock()</code> and <code>pthread_mutex_unlock()</code> respectively.)</p>
<p>Compared to simply incrementing a value in memory by one, locking and unlocking a mutex is orders of magnitude more expensive, so it’s not surprising that this approach to removing the GIL introduced brutal slowdowns—not just to new multi-threaded code, but to existing single-threaded code that wasn’t even taking advantage of the fact that there was now no GIL in place.</p>
<p>Nevertheless, Greg’s work tackled a lot of other important concepts which were mainlined into Python, like separating global state into per-thread state (something that is still relied upon today).</p>
</section>
</section>
<section id="pyparallel" class="level2">
<h2 class="anchored" data-anchor-id="pyparallel">PyParallel</h2>
<section id="genesis" class="level3">
<h3 class="anchored" data-anchor-id="genesis">Genesis</h3>
<section id="the-python-ideas-asyncore-discussion" class="level4">
<h4 class="anchored" data-anchor-id="the-python-ideas-asyncore-discussion">The python-ideas@ asyncore discussion</h4>
<p>In October 2012, there was a discussion on the <code>python-ideas@</code> mailing list titled <a href="https://mail.python.org/pipermail/python-ideas/2012-October/016311.html">asyncore: included batteries don’t fit</a>. The general discussion centered around providing better asynchronous I/O primitives in Python 3.4, and eventually led to the <code>async</code> and <code>yield from</code> keywords being introduced in Python 3.5, released around two years later in September 2015.</p>
<p>That thread was also the genesis for <a href="https://pyparallel.org">PyParallel</a>; a fork of Python 3.3.5 that I created to implement a proof-of-concept version of the Python interpreter that tackled not only asynchronous I/O but also multi-core parallelism.</p>
<p>There’s a comprehensive backstory section on PyParallel at the end of this article that goes into more detail. For now, I just want to focus on the implementation details of PyParallel compared to Greg Stein’s earlier work, before discussing the free-threading implementation we now have today in Python 3.13t.</p>
</section>
<section id="reviewing-existing-attempts" class="level4">
<h4 class="anchored" data-anchor-id="reviewing-existing-attempts">Reviewing Existing Attempts</h4>
<p>I remember reading David Beazley’s <a href="https://dabeaz.blogspot.com/2011/08/inside-look-at-gil-removal-patch-of.html">article</a> and a couple of YouTube videos he’d also done on the topic of the GIL. I can’t remember if it was in one of his videos (or presentations) or articles, but I remember him stating something along the lines of <em>“the GIL is something every Python committer should be worried about”</em>, and that really stuck with me, giving me the initial motivation to embark on the PyParallel project.</p>
<p>The first step I took was to make sure I reviewed Greg’s earlier work to see what did and didn’t work in the past. Clearly, introducing fine-grained per-object synchronization for reference counts was prohibitively expensive—the interlocked increment and decrement operations alone were bad enough, let alone the global <code>pthread_mutex_t</code> reference count locks.</p>
</section>
<section id="the-hunch" class="level4">
<h4 class="anchored" data-anchor-id="the-hunch">The Hunch</h4>
<p>So, what else could we try? My hunch was that there was a way to achieve parallelism within the Python interpreter when framed through the lens of asynchronous I/O primitives, such as a TCP/IP socket server. For example, why couldn’t a simple HTTP server be written in such a way that multiple threads could respond to incoming client requests on multiple cores simultaneously?</p>
<p>If you think about the type of server-side computation that is required to process an incoming HTTP request, it’s just pretty vanilla Python code. Sure, you may create a lot of temporary Python objects in servicing the request, but they’re only short-lived. Once you send a response back to the client, you don’t need any of those objects anymore. And you’re generally not mutating global state, so you don’t need any thread synchronization primitives during request processing.</p>
<p>The underlying operating system’s kernel is handling all of that for you behind the scenes (i.e.&nbsp;you can safely <code>accept()</code> on multiple threads against the same <code>sockaddr_in</code> on Linux, or <code>AcceptEx()</code> against a single completion port on Windows).</p>
</section>
</section>
<section id="implementation" class="level3">
<h3 class="anchored" data-anchor-id="implementation">Implementation</h3>
<p>So, as it pertained to reference counting and garbage collection—all thread-sensitive things that need to be handled very carefully in a GIL-less Python—with PyParallel, I explored the notion of: <em>what if we just didn’t do any of that in parallel thread contexts</em>?</p>
<p>That is, instead of trying to remove the GIL, let’s keep the GIL, and instead, introduce a new concept of a <em>parallel thread</em>. Because if we can come up with an efficient way to determine if we’re a <em>parallel thread</em> at any given time, we can instrument all the thread-sensitive calls like <code>Py_INCREF()</code> and <code>Py_DECREF()</code> such that:</p>
<ul>
<li>If we’re a <em>parallel thread</em>, do X, if not, do Y.
<ul>
<li>X: a thread-safe alternative</li>
<li>Y: what we normally do (i.e.&nbsp;when we’re holding the GIL)</li>
</ul></li>
</ul>
<p>And as the thread-sensitive calls we need to instrument are ubiquitous—you really can’t do much in Python before needing to <code>Py_INCREF()</code> or <code>Py_DECREF()</code> something—the viability of this approach would be entirely contingent upon finding an efficient way to detect if we’re a parallel thread.</p>
<section id="detecting-parallel-threads" class="level4">
<h4 class="anchored" data-anchor-id="detecting-parallel-threads">Detecting Parallel Threads</h4>
<p>I introduced a macro named <code>Py_PXCTX()</code> for PyParallel that was responsible for detecting if we were in one of these <em>parallel threads</em> (or <em>parallel contexts</em> as I referred to them in the source code).</p>
<p>As PyParallel was a Windows-only proof-of-concept, I was able to leverage an x64 intrinsic named <code>readgsdword</code> to interrogate the current thread’s TEB (<a href="https://learn.microsoft.com/en-us/windows/win32/api/winternl/ns-winternl-teb">Thread Environment Block</a>) to obtain the current thread ID (which lives at offset <code>0x48</code> on x64 Windows). By comparing this to the known thread ID of the <em>main thread</em> (i.e.&nbsp;the thread holding the GIL), we could determine if we were a parallel thread with a couple of instructions.</p>
<p>A simplified <a href="https://github.com/pyparallel/pyparallel/blob/branches/3.3-px/Include/pyintrinsics.h#L13">implementation</a> looked like this:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb8-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define _Py_get_current_thread_id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">__readgsdword</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x48</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inline</span></span>
<span id="cb8-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span></span>
<span id="cb8-5">_PyParallel_IsParallelContext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb8-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Py_MainThreadId <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> _Py_get_current_thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">());</span></span>
<span id="cb8-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-9"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define Py_PXCTX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">_PyParallel_IsParallelContext</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">())</span></span></code></pre></div>
</section>
<section id="instrumenting-thread-sensitive-calls" class="level4">
<h4 class="anchored" data-anchor-id="instrumenting-thread-sensitive-calls">Instrumenting Thread-Sensitive Calls</h4>
<p>With the ability to quickly determine if we were a parallel thread, we could instrument all of the thread-sensitive calls to follow the aforementioned paradigm of:</p>
<blockquote class="blockquote">
<p>If we’re a <em>parallel thread</em>, do X, if not, do Y.</p>
</blockquote>
<p>For reference counting, the <em>do X</em> was literally: <em>do nothing</em>. E.g., instead of the standard Python reference counting mechanics that basically looked like this:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb9-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define Py_INCREF</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ob_refcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb9-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define Py_DECREF</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ob_refcnt </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> _Py_Dealloc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;)</span></span></code></pre></div>
<p>The PyParallel approach would gate the reference counting logic with the <code>Py_PXCTX()</code> macro, along these lines:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb10-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define Py_INCREF</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Py_PXCTX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ob_refcnt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++))</span></span>
<span id="cb10-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define Py_DECREF</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Py_PXCTX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ob_refcnt </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> _Py_Dealloc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">op</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;))</span></span></code></pre></div>
<p>This is a purposefully-simplified example—the actual <code>Py_INCREF(op)</code> and <code>Py_DECREF(op)</code> calls in PyParallel eventually grew debug guards that allowed me to catch erroneous cases of, for example, the main thread attempting to mutate the reference count of an object created by a parallel thread.</p>
<p>And in order to ascertain if any given object was created by the Python <em>main thread</em>, or one of these new <em>parallel thread contexts</em>, I had to augument the <code>PyObject</code> structure to capture additional state information.</p>
</section>
<section id="changes-to-pyobject" class="level4">
<h4 class="anchored" data-anchor-id="changes-to-pyobject">Changes to PyObject</h4>
<p>I made three changes to <code>PyObject</code>:</p>
<ol type="1">
<li>A field I could fill with a sentinel value that unambiguously indicated <a href="https://apps.npr.org/arrested-development/joke-39.html">from whence it came</a> (i.e.&nbsp;a main thread or parallel thread): <code>void *is_px</code>.</li>
<li>A flags field I could store pertinent per-object state in: <code>size_t px_flags</code>.</li>
<li>A pointer to the object’s original type object: <code>PyTypeObject *orig_type</code>. In some situations, we would override an object’s type with a parallel-specific shim type that could intercept certain operations.</li>
</ol>
<p>Technically, the <code>is_px</code> field was redundant once I introduced the <code>px_flags</code> field, as we could track whether or not an object was a parallel object by way of a single flag bit, so I could have shaved off 8 bytes by removing it.</p>
<p>I kept it in because a) I never got around to removing it, and b) it was helpful when debugging, as the <code>is_px</code> field was initialized to one of two <code>0xDEADBEEF</code>-style sentinel values, shown below, which made it very easy to eyeball in the debugger when traipsing through memory or crash dumps.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb11-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define _Py_DEADBEEF </span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xdead1234beef5678</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* is_px when main thread */</span></span>
<span id="cb11-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define _Px_DEADBEEF </span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x9876beef5432dead</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* is_px when parallel thread */</span></span></code></pre></div>
<p>A side-by-side comparison of the 64-bit Python 3.3 <code>PyObject</code> structure and the equivalent PyParallel <code>PyObject</code> structure is shown below:</p>
<div class="side-by-side-struct-layout">
<section id="python-pyobject" class="level5 side-by-side-struct-column">
<h5 class="anchored" data-anchor-id="python-pyobject">Python PyObject</h5>
<div class="struct-layout">
<div class="struct-cell py-field" style="grid-column: span 8;">
<pre>Py_ssize_t ob_refcnt
(8 bytes)</pre>
</div>
<div class="struct-cell py-field" style="grid-column: span 8;">
<pre>PyTypeObject *ob_type
(8 bytes)</pre>
</div>
</div>
</section>
<section id="pyparallel-pyobject" class="level5 side-by-side-struct-column">
<h5 class="anchored" data-anchor-id="pyparallel-pyobject">PyParallel PyObject</h5>
<div class="struct-layout">
<div class="struct-cell px-field" style="grid-column: span 8;">
<pre>void *is_px
(8 bytes)</pre>
</div>
<div class="struct-cell px-field" style="grid-column: span 8;">
<pre>size_t px_flags
(8 bytes)</pre>
</div>
<div class="struct-cell px-field" style="grid-column: span 8;">
<pre>PyTypeObject *orig_type
(8 bytes)</pre>
</div>
<div class="struct-cell py-field" style="grid-column: span 8;">
<pre>Py_ssize_t ob_refcnt
(8 bytes)</pre>
</div>
<div class="struct-cell py-field" style="grid-column: span 8;">
<pre>PyTypeObject *ob_type
(8 bytes)</pre>
</div>
</div>
</section>
</div>
<p>The standard Python 3.3 <code>PyObject</code> structure size on 64-bit platforms was 16 bytes. The PyParallel <code>PyObject</code> changes introduced three 64-bit, 8-byte fields—an extra 24 bytes—for a combined total of 40 bytes.</p>
<p>When coming up with a solution for a parallel Python (that doesn’t experience prohibitive slowdown compared to normal Python code), there are four main things you need to focus on handling, which we’ll cover in the next sections:</p>
<ol type="1">
<li>Reference counting.</li>
<li>Memory allocation.</li>
<li>Memory reclamation.</li>
<li>Garbage collection.</li>
</ol>
</section>
<section id="reference-counting-1" class="level4">
<h4 class="anchored" data-anchor-id="reference-counting-1">Reference Counting</h4>
<p>My hunch regarding reference counting was simple: <em>let’s just not do it and see what happens</em>. Such rigorous engineering! Again, I was keen on targeting the very narrow domain of an asynchronous I/O-based TCP/IP socket server, like a HTTP server, where none of the objects that are created as part of servicing an incoming request need to persist once we’ve sent bytes back on the wire to the client.</p>
<p>Additionally, if you think about the flow of a Python program that launches a HTTP server, you’ll have a main thread that does all of the module importing, setting up any global state, handling configuration, command line arguments, etc. Once all of that is done, it’ll launch the HTTP server, and use some form of event loop that allows it to serve incoming clients <em>forever</em>, until process termination.</p>
<p>The code responsible for handling those incoming client requests is very reactionary: you identify what path the client is requesting, figure out how you’re going to <em>route</em> that request (i.e.&nbsp;are they asking for a literal file system file, or is this an endpoint that will be serviced by Python code?), and then respond to it accordingly.</p>
<p>You’re not mutating global state (such as adding values to a global or non-local container object (<code>list</code>, <code>dict</code>, etc.)) in these callbacks.</p>
<p>Finally, you can be assured that for all of the objects you rely upon as part of your request processing (i.e.&nbsp;HTTP URL parsing libraries, application configuration objects, etc.), by the time you’re interacting with those objects in your callback: a) they will have reference counts way above one, and b) there won’t be any other code running that could possibly result in those reference counts ever hitting zero. Those objects are effectively <em>immortal</em> for the duration of your parallel callback, as far as you’re concerned.</p>
<p>So who cares about incrementing and decrementing reference counts for objects we know are guaranteed to stay resident throughout the duration of our parallel callback? By avoiding reference counting entirely, we eliminate the need to figure out a way to increment and decrement reference counts between shared objects in a thread-safe manner—which was the death-knell of Greg Stein’s approach in 1996.</p>
<p>But what about reference counts for objects we create solely during our parallel thread callbacks? Remember, the whole point of an object’s reference count is to ensure the object <em>“stays alive”</em> until it is no longer needed, with <em>“no longer needed”</em> being unambiguously indicated when an object’s reference count hits zero.</p>
<p>However, because our parallel callback code has a very finite and well-defined lifetime, all we really need to ensure is that all of the objects we create in these parallel contexts stay alive for the duration of the callback.</p>
<p>That is, we know our parallel context starts when, for example, we call the user’s <code>data_received()</code> routine, and we know it ends when that routine returns bytes back to us which we then send back to the client.</p>
<p>As long as we can intercept the memory allocation and reclamation routines in these parallel contexts, we can precisely control object lifetime without the need for reference counting.</p>
</section>
<section id="memory-allocation" class="level4">
<h4 class="anchored" data-anchor-id="memory-allocation">Memory Allocation</h4>
<p>So, when I hit the point I needed to write a thread-safe memory allocator that would kick-in to service memory allocation requests in these parallel contexts, I picked the easiest thing I could think of: just give each parallel thread its own thread-local block allocator. This allocator would furnish all memory allocation requests that we intercepted by instrumenting calls like <code>PyObject_New</code> and <code>PyMem_Malloc</code>.</p>
<p>Block allocators are about the simplest memory allocator you can have: you have a pre-allocated block of memory (say, 4KB, or one page), a request comes in for 120 bytes, you capture the address of the current block pointer, increment it by 120 bytes, then return the captured address. If you exceeded 4KB, another page would be allocated and linked to the existing page, such that you’d have a doubly-linked-list of blocks from which allocations would be carved out.</p>
<p>Prior to executing the user’s callback via <code>PyObject_CallObject()</code> in a parallel thread, we would issue a <code>snapshot = PxContext_HeapSnapshot(ctx)</code>, which would <em>“snapshot”</em> the state of the block allocator prior to executing the user’s Python code in parallel; we would then be able to restore this <code>snapshot</code> upon completion of that code.</p>
</section>
<section id="memory-reclaimation" class="level4">
<h4 class="anchored" data-anchor-id="memory-reclaimation">Memory Reclaimation</h4>
<p>How do you free memory associated with individual objects allocated in these parallel contexts? Well, because you’re not doing any reference counting, you have no knowledge of when any given object is no longer required at any arbitrary point within a parallel callback’s execution.</p>
<p>And even if you did, because you’re using a block allocator that isn’t built to handle unused allocations being returned to it, there isn’t anything you could do anyway.</p>
<p>However, what you do know, with absolute certainty, is when that user’s parallel callback has finished executing, because you’ll be sitting back in the Python interpreter’s C code, having just returned from a call to a routine like <code>PyObject_CallObject()</code>.</p>
<p>And because you captured a snapshot of the thread-local block allocator (or heap) via <code>snapshot = PxContext_HeapSnapshot(ctx)</code>, prior to your call to <code>result = PyObject_CallObject(...)</code>, once you’re finished handling the returned <code>result</code> (i.e.&nbsp;sending it back to the client via a socket <code>send()</code> call), you can reset the block allocator back to its starting position prior to the call via <code>PxContext_RollbackHeap(ctx, snapshot)</code>, effectively reclaiming all memory allocated in that parallel context in one fell swoop.</p>
<p>This all worked pretty well for PyParallel. I believe it was the first time anyone had experimented with the notion of <em>“let’s just not do any reference counting and see what happens”</em>, and I was genuinely pleased that my hunch that it would all work out turned out to be true.</p>
<p>Additionally, as back-to-back execution of callbacks on the same thread would be continually using the same block allocator, and thus, the same blocks and corresponding virtual addresses—you’d reap all the benefits you’d expect from frequently using the same addresses: increased likelihood of cache hits and TLB hits, vastly-reduced likelihood of page faults.</p>
<p>This all worked because socket-server callbacks are pretty short-lived; you’re not allocating gobs of memory for objects with ambiguous lifetimes. You’re doing lots of little allocations with very clear lifetimes: the allocations will cease to exist once the callback returns.</p>
<p>It wasn’t perfect. You obviously couldn’t persist the objects past the lifetime of the parallel callback, as that memory was getting continually reset. And if you had a stray callback allocating a disproportionately high amount of memory, you’d end up with many page-sized blocks chained together that would have no way of getting returned to the operating system when no longer needed.</p>
<p>But as far as proof-of-concepts go, it all worked pretty well. The last thing to tackle was garbage collection.</p>
</section>
<section id="garbage-collection" class="level4">
<h4 class="anchored" data-anchor-id="garbage-collection">Garbage Collection</h4>
<p>A nice side-effect of not doing any reference counting is that you can’t create cyclic references between objects in the first place, which obviates the need to do any garbage collection. Thus, PyParallel’s solution for handling parallel garbage collection is simply: don’t do it, it’s not needed.</p>
</section>
<section id="async-io" class="level4">
<h4 class="anchored" data-anchor-id="async-io">Async I/O</h4>
<p>The workhorse of PyParallel was the <a href="https://github.com/pyparallel/pyparallel/blob/branches/3.3-px/Python/pyparallel.c#L8603-L10642">PxSocket_IoLoop</a>, some 2,000+ lines of hideous C state-machine-esque hackery that drove the <em>completion-oriented</em> protocol callbacks implemented by the user.</p>
<p>The protocol objects you had to use for PyParallel were similar to the current-day <a href="https://docs.python.org/3/library/asyncio-protocol.html#protocols">Protocol</a> Python objects used by <code>asyncio</code>.</p>
<p>An example of what a TCP/IP socket server might look like in PyParallel follows. Note that no <code>transport.send()</code> routines were exposed, if you wanted to send bytes back to the client, you literally had to return a Python <code>bytes</code> object from your callback—this would then be sent back to the client in the most optimal fashion.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"></span>
<span id="cb12-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> MyProtocol:</span>
<span id="cb12-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Used if you want to send static bytes to the client first.</span></span>
<span id="cb12-4">    initial_bytes_to_send <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b'Hello (Server v1.0)'</span></span>
<span id="cb12-5"></span>
<span id="cb12-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> connection_made(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, transport):</span>
<span id="cb12-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Used if you need to send dynamic bytes to the client</span></span>
<span id="cb12-8">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># as soon as they connect.</span></span>
<span id="cb12-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b'Hello, the current time is '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> time.gmtime()</span>
<span id="cb12-10"></span>
<span id="cb12-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> data_received(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, transport, data):</span>
<span id="cb12-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Called when data is received from the client.  Perform</span></span>
<span id="cb12-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># your request processing here and then return bytes to</span></span>
<span id="cb12-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># send back to the client.</span></span>
<span id="cb12-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b'You sent: '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> data</span>
<span id="cb12-16"></span>
<span id="cb12-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> connection_lost(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, transport):</span>
<span id="cb12-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Called when the client disconnects.</span></span>
<span id="cb12-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb12-20"></span>
<span id="cb12-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the TCP/IP socket server object (PxSocket).  (PyParallel</span></span>
<span id="cb12-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initially exposed all of its parallel functionality by way of an</span></span>
<span id="cb12-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># `async` module, which obviously predated the introduction of the</span></span>
<span id="cb12-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># `async` keyword in Python, so the following code wouldn't be</span></span>
<span id="cb12-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># valid in a modern Python 3.5+ context.)</span></span>
<span id="cb12-26">server <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span>.server(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0.0.0.0'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8080</span>)</span>
<span id="cb12-27"></span>
<span id="cb12-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Register the server (transport) and protocol with the underlying</span></span>
<span id="cb12-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># async machinery.  Note that this will start serving clients</span></span>
<span id="cb12-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># immediately, without waiting for `async.run()`.</span></span>
<span id="cb12-31"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span>.register(transport<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>server, protocol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>MyProtocol)</span>
<span id="cb12-32"></span>
<span id="cb12-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Enter the async I/O loop.</span></span>
<span id="cb12-34"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span>.run()</span></code></pre></div>
</section>
</section>
<section id="limitations" class="level3">
<h3 class="anchored" data-anchor-id="limitations">Limitations</h3>
<p>PyParallel, was, in essence, a proof-of-concept project I predominantly hacked together over the course of about three months during a very cold Michigan Winter in 2012-2013.</p>
<p>It had many limitations, especially the first pass in that 2012-2013 timeframe. I spent a few months sprinting on it again around 2015, and addressed some of the egregious limitations like not being able to use generators in parallel contexts, and not being able to persist objects created within a parallel context outside of that context (i.e.&nbsp;<code>foo['key'] = bar</code>, where <code>foo</code> is a <code>dict</code> created in the <em>main thread</em> context).</p>
<p>I also got it to a point where it could compete in a subset of the <a href="https://www.techempower.com/benchmarks/#hw=ph&amp;test=fortune&amp;section=data-r22">TechEmpower Framework Benchmarks</a>, including non-trivial ones like accessing a <code>PyODBC</code> data source in a parallel context.</p>
<p>Nevertheless, the remaining limitations relegated PyParallel to being somewhat similar to <a href="https://en.wikipedia.org/wiki/Stackless_Python">Stackless Python</a>, which was a nichè variant of Python that separated the C call stack from the Python call stack, but never had a chance of getting mainlined into Python.</p>
<p>(Unlike Stackless, though, which had actual users like <a href="https://en.wikipedia.org/wiki/Eve_Online">Eve Online</a>, I am not aware of anyone using PyParallel for anything. I certainly never got any support requests for it.)</p>
<p>The next few sections capture some of the limitations that I presume kept PyParallel from becoming anything other than a proof-of-concept. Thankfully I have the luxury of writing about the failures some ten years after I wrote the underlying code, so I’m inherently less defensive about its egregious shortcomings as I would have been back then.</p>
<section id="parallel-code-has-to-be-entered-via-protocol-callbacks" class="level4">
<h4 class="anchored" data-anchor-id="parallel-code-has-to-be-entered-via-protocol-callbacks">Parallel Code Has To Be Entered Via Protocol Callbacks</h4>
<p>By design, I never intended to support <em>“free-threaded”</em> Python, i.e.&nbsp;you would never be able to create Python <code>threading.Thread</code> objects yourself, instead, you’d have to use the machinery provided to you by PyParallel, such as <code>async.server()</code>, <code>async.submit_work()</code>, etc. (This was before <code>async</code> became a keyword in Python.)</p>
<p>The fact that the only thing that really worked properly was a TCP/IP-based socket server speaks volumes to the lack of general applicability of the solution.</p>
</section>
<section id="you-couldnt-do-a-lot-of-things-in-parallel-callbacks" class="level4">
<h4 class="anchored" data-anchor-id="you-couldnt-do-a-lot-of-things-in-parallel-callbacks">You Couldn’t Do A Lot Of Things In Parallel Callbacks</h4>
<p>You couldn’t import modules in parallel callbacks. This wasn’t a huge limitation, you’d simply work around this by making sure you import all the modules you need at startup, before you launch your server.</p>
<p>You couldn’t call routines of modules that used a lot of caching. Pandas is a great example of this: there is a prolific amount of behind-the-scenes caching that happens in Pandas (or at least the version I was experimenting with circa 2015) when interacting with <code>DataFrame</code> objects. This just flat-out did not work in PyParallel—trying to persist parallel objects past the callback lifetime completely went against the grain of how PyParallel was initially architected to work.</p>
<p>You couldn’t leverage PyParallel to, for example, load large data structures in parallel. Because there was no free-threading support, nor was memory allocated in these parallel callback contexts intended to persist after the callback completed—you couldn’t spin up a bunch of threads to load some expensive data structures in parallel (i.e.&nbsp;reading pickles, etc.).</p>
<p>This is actually one of the patterns that I have enjoyed exploiting the most in the new free-threaded Python as its such a huge win for very little effort. I’ll cover this more later.</p>
</section>
<section id="third-party-libraries-required-recompilation" class="level4">
<h4 class="anchored" data-anchor-id="third-party-libraries-required-recompilation">Third-Party Libraries Required Recompilation</h4>
<p>As PyParallel was based off Python 3.3, a lot of the great work that has since been done regarding sanitizing the Python C ABI wasn’t done yet, so modules with C code doing raw <code>Py_INCREF()</code> and <code>Py_DECREF()</code> calls would need to be recompiled to ensure they use the new PyParallel definitions.</p>
<p>This particular limitation is no different to the current state of affairs with Python free-threading: modules that need intimiate knowledge of C Python internals need to be recompiled at the very least, and sometimes will need additional code changes to ensure correct behavior when operating in a No-GIL environment.</p>
</section>
<section id="the-code-was-hideous" class="level4">
<h4 class="anchored" data-anchor-id="the-code-was-hideous">The Code Was… Hideous</h4>
<p>I hadn’t looked at the <a href="https://github.com/pyparallel/pyparallel/blob/branches/3.3-px/Python/pyparallel.c">pyparallel.c</a> code in a long time prior to writing this article. Boy, it doesn’t hold up particularly well, in my opinion. It’s very clearly hacky proof-of-concept code that realistically had no chance of getting mainlined into Python.</p>
<p>You can peruse all of the changes required to convert Python 3.3.5 into PyParallel by reviewing the <a href="https://github.com/pyparallel/pyparallel/tree/branches/3.3-px/diffs">diffs</a> folder, which I populated with diffs against base 3.3.5 sources and PyParallel counterparts. The patches to files like <a href="https://github.com/pyparallel/pyparallel/blob/branches/3.3-px/diffs/Include/object.h.patch">Include/object.h</a> I find most interesting, as they contain most of the <em>“thread-sensitive interception”</em> functionality I was reliant upon.</p>
</section>
<section id="it-was-windows-only" class="level4">
<h4 class="anchored" data-anchor-id="it-was-windows-only">It Was Windows-only</h4>
<p>I attribute the <em>success</em> of PyParallel—if we define success as being able to hack together a proof-of-concept that basically worked in about 2-3 months—to Windows. There are a couple of reasons for this, which I’ll capture in the next sections.</p>
<p>Ironically, I suspect the Windows-only aspect also contributed heavily to the <em>failure</em> of PyParallel, given that, as far as I’m aware, no-one played around or experimented with it, and it basically didn’t seem to move the GIL needle at all. (Although I was pleased to see it at least got a shout-out in the <a href="https://peps.python.org/pep-0703/#related-work">Related Work</a> section of PEP-703, and there are parallels (heh) to some of the design decisions I made for PyParallel in the new Free-Threading work.)</p>
<p>I thought at the time that it would be novel and interesting enough to nerd-snipe a few people into downloading it and messing around, but apparently not.</p>
<p>I do remember some engineers from Instagram reaching out and asking about the viability of PyParallel on Linux, but alas, I didn’t have a good answer for that, given how heavily dependent it was on Windows-only features.</p>
<section id="thread-pool-apis-and-asynchronous-io" class="level5">
<h5 class="anchored" data-anchor-id="thread-pool-apis-and-asynchronous-io">Thread Pool APIs and Asynchronous I/O</h5>
<p>First, I made extensive use of the phenomenal <a href="https://learn.microsoft.com/en-us/windows/win32/procthread/thread-pool-api">Thread Pool API</a> introduced in Windows Vista. It is hard to succinctly capture just how sophisticated this particular API is, especially when paired with the NT kernel’s incredibly robust asynchronous I/O primitives, particularly the seminal <code>OVERLAPPED</code> structure and the <a href="https://learn.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports">Completion Port</a> scaffolding.</p>
<p>If you’re interesting in learning more about asynchronous I/O on Windows, <a href="https://speakerdeck.com/trent/pyparallel-how-we-removed-the-gil-and-exploited-all-cores?slide=47">slide 47</a> of my PyParallel PyData 2013 deck is a great place to start.</p>
<p>So, I used the thread pool facilities to manage all thread dispatching for PyParallel. I didn’t have to create any threads myself, nor did I ever intend to support individual Python <em>free-threading</em> threads created via Python’s <code>threading.Thread</code> facilities. There are simply no good cross-platform threadpool alternatives that have equivalent functionality to what is provided by Windows, and a lot of that is because other operating systems just don’t have the kernel mechanisms in place to support things like thread-agnostic I/O, or true asynchronous I/O at the driver level via I/O request packets (or <code>Irps</code> as they’re colloquially called in kernel development circles). Neither Wine nor ReactOS have attempted to implement the Windows Thread Pool API, which I also found to be an interesting data point.</p>
<p>For the TCP/IP socket-server primary use case, enabled by the <code>PxSocket_IoLoop()</code> workhorse described earlier, overlapped-versions of all the socket primitives were used where possible. There aren’t any exact equivalents to these functions on platforms like Linux, the BSDs, or Mac OS.</p>
<p>All of those platforms support non-blocking read and write socket operations—which is the foundation upon which concurrency is achieved when combined with a multiplexing operation like <code>select()</code>, <code>poll()</code>, <code>epoll()</code>, or <code>kqueue</code>. But there is no way to dispatch a socket <code>read()</code> or <code>write()</code> call <em>asynchronously</em> in conjunction with a request for the OS to invoke a callback you provide when that asynchronous operation completes (or fails).</p>
<p>Nor do any of these platforms have anything remotely close to the secret sauce behind what makes I/O completion ports so special: the ability to specify a completion port’s desired concurrency, where the kernel itself will ensure that an optimal number of threads will be actively scheduled whilst servicing a completion port. I touch on this subject a little bit on <a href="https://speakerdeck.com/trent/pyparallel-how-we-removed-the-gil-and-exploited-all-cores?slide=50">slide 50</a>, and go into more detail around <a href="https://speakerdeck.com/trent/pyparallel-how-we-removed-the-gil-and-exploited-all-cores?slide=62">slide 62</a>.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p><code>io_uring</code> is an exception: it absolutely allows asynchronous submission of a whole range of system calls, but it doesn’t introduce a thread-agnostic I/O model, nor have any kernel participation in concurrency modulation like I/O completion ports, nor have any native thread pool integration (as there is no equivalent to the Windows Thread Pool API on any platform, Linux included).</p>
<p>Generally, leveraging <code>io_uring</code> in a multi-threaded environment on a contemporary Linux system would involve spinning up your own threads and setting up individual completion queues for each thread. There’s no concept of multiple threads sharing a queue in a kernel-integrated, thread-agnostic manner. Which is fine, as that’s a very Windows NT kernel solution to the problem—it just isn’t how UNIX-derived operating systems are designed to work.</p>
<p>I am not disparaging <code>io_uring</code> in the slightest here; it is a fantastic additional to the Linux kernel that is orders of magnitude better than prior options for async I/O.</p>
<p>The point of mentioning all of this is that there isn’t feature parity between <code>io_uring</code> and the Windows features I leveraged in making PyParallel, so it would still require significant engineering effort to port PyParallel to non-Windows platforms. And thankfully that’s not something we’ll ever have to embark upon, as the cross-platform Python Free-Threading implementation is a far better solution to the multi-core Python problem than PyParallel ever was!</p>
<p>(Also, for what it’s worth, <code>io_uring</code> wasn’t available in 2012 when I started hacking on PyParallel; it first appeared in the Linux kernel 5.1 in May 2019.)</p>
</div>
</div>
<p>The point of all of this is to convey that PyParallel wasn’t just Windows-only because I didn’t have the time or inclination to try compile it on other platforms—it extensively used APIs for which there are <em>still</em> no equivalent counterparts on other platforms, some thirteen or so years later.</p>
<p>So, if you were to try get PyParallel working on Linux or Mac OS X, for example, you’d need to write a whole bunch of thread pool and synchronization scaffolding, as well as <code>PxSocket_IoLoop()</code>-equivalents using whatever the underlying platform’s optimal socket multiplexing system call was.</p>
</section>
<section id="visual-studio-debugger" class="level5">
<h5 class="anchored" data-anchor-id="visual-studio-debugger">Visual Studio Debugger</h5>
<p>The other element of developing PyParallel on Windows that I consider crucial to its success (again, defining success as <em>getting a proof-of-concept working in about 2-3 months</em>) was Visual Studio’s sublime debugging facilities.</p>
<p>Microsoft has always invested heavily in fantastic debugger experiences. This includes usermode application debugging via tools like Visual Studio, all the way up to kernel debugging via Windbg.</p>
<p>The first week or two of PyParallel’s development was simply stepping through the Python C code line-by-line in Visual Studio’s debugger, building up a mental model of exactly how the interpreter worked at the lowest-level when executing a Python program. I didn’t write a line of code during this initial exploratory period—I was genuinely just traipsing through the debugger observing how Python <em>worked</em> and building up my situational awareness and mental model. Incredibly valuable experience, by the way. It’s my favorite way of getting up to speed with an unfamiliar code base.</p>
<p>Visual Studio Code is pretty good at debugging C programs visually these days on non-Windows platforms—I certainly used it a lot at Voltron on our Theseus product, which was exclusively in Linux and C++. However, Visual Studio Code didn’t appear until 2015, whereas my initial PyParallel hacking was toward the end of 2012.</p>
<p>Once I started actually writing code for PyParallel, again, the Visual Studio debugger was indispensable. Particularly due to how frequently I’d be crashing in the course of normal development, heh. It was incredibly handy with a few mouse clicks to be able to freeze all threads OTHER than the one you were interested in, step execution through that, then resume, etc. You can do all of this via <code>gdb</code> and <code>lldb</code> when doing console debugging on UNIX-ish platforms, but it’s definitely not as convenient as a full-featured IDE for debugging.</p>
</section>
</section>
</section>
<section id="performance" class="level3">
<h3 class="anchored" data-anchor-id="performance">Performance</h3>
<p>Now, for all its limitations and ultimate market failure, PyParallel excelled at the one thing it was designed to do well: async I/O-oriented TCP/IP servers, where users would implement protocol classes that featured <em>completion-oriented</em> callbacks, and those callbacks could be run simultaneously on multiple cores without any egregious slowdown (i.e.&nbsp;compared to normal, single-threaded Python code); i.e.: in parallel.</p>
<p>There was negligible overhead introduced by instrumenting all of the thread-sensitive macros, nor the thread-safe alternates for reference counting (don’t do it), garbage collection (don’t do it), memory allocation (simple block allocator), and memory reclamation (reset block allocator after a callback has completed). Collectively, this all ensured that the new parallel context Python code ran just as fast, if not faster, than normal single-threaded Python code.</p>
<p>Remember, the prior approach by Greg Stein (some sixteen years prior) where fine-grained locking was introduced at the individual object level made <strong>all</strong> Python code run about 40% slower, not just new multi-threaded code.</p>
<p>So PyParallel at least demonstrated that you could get a mostly-functional parallel version of Python without incurring prohibitive slowdown to all code.</p>
<p>The PyParallel <a href="https://pyparallel.org/#performance">Performance</a> section of the website features some concrete metrics that I captured back in 2015 with whatever hardware I had lying around at the time.</p>
<p>My favorite metric was that PyParallel’s plaintext benchmark (basically a HTTP server that responded to <code>/plaintext</code> with a plain text <code>Hello, World!</code> response) performance yielded 132,772 requests per second which put it into first place across all the platforms I benchmarked.</p>
<p>LWAN, a raw C Linux implementation well-known for its performance, came in second with 128,126 requests per second. Granted, I cheated on my side, leveraging an SSE-accelerated HTTP parser to process the incoming request, per the <code>http11 = True</code> line below:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PyParallel (Fast)</span></span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (Uses picohttpparser's SSE-accelerated HTTP parser.)</span></span>
<span id="cb13-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span></span>
<span id="cb13-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Plaintext:</span>
<span id="cb13-5">    http11 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb13-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plaintext(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, transport, data):</span>
<span id="cb13-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b'Hello, World!'</span></span>
<span id="cb13-8"></span>
<span id="cb13-9">server <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span>.server(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0.0.0.0'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8080</span>)</span>
<span id="cb13-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span>.register(transport<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>server, protocol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>Plaintext)</span>
<span id="cb13-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span>.run()</span></code></pre></div>
<p>So the only Python code actually being executed in this example was the <code>return b'Hello, World!'</code> line, which is so simple its basically a no-op. Thus, the only thing I was really demonstrating there was the performance of the <code>PxSocket_IoLoop()</code> implementation, plus the underlying Windows threadpool and async I/O facilities.</p>
<p>The <em>slow</em> version featured a full HTTP request parser written in Python, which clocked in at 53,455 requests per second (which was still significantly higher than other pure-Python implementations like Tornado).</p>
</section>
<section id="more-information" class="level3">
<h3 class="anchored" data-anchor-id="more-information">More Information</h3>
<p>I’ve omitted a lot of PyParallel details on purpose—this section is long enough as it is! If you’re interested in learning more, I’d recommend the following deck which I presented at PyData 2013 in New York City:</p>
<div>
<script async="" class="speakerdeck-embed" data-id="606aa4e02d30013103c12a5f68b843a3" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script>
</div>
<p>Additionally, all the source code for PyParallel is available on <a href="https://github.com/pyparallel/pyparallel">Github</a>, and the landing page’s <code>README.md</code> has additional technical information about the project and implementation. You can download a working, usable installer, complete with PyParallel-compatible versions of Cython, NumPy, and PyODBC, and various other third-party <a href="https://github.com/pyparallel/pyparallel/tree/branches/3.3-px/Lib/site-packages">site-packages</a> from the <a href="https://github.com/pyparallel/pyparallel/releases/tag/3.3.5.99805">PyParallel 3.3.5.99805 Release</a> page.</p>
</section>
</section>
</section>
<section id="python-free-threading" class="level1">
<h1>Python Free-Threading</h1>
<p>So far we’ve covered Greg Stein’s initial attempts at removing the GIL back in 1996, plus my attempts at removing the GIL limitations without actually removing the GIL via PyParallel around 2012-2013. I’ve introduced four main categories of things that need to be tackled when attempting to solve the parallel Python problem:</p>
<ol type="1">
<li>Reference counting.</li>
<li>Garbage collection.</li>
<li>Memory allocation.</li>
<li>Memory reclamation.</li>
</ol>
<p>Funnily enough, the <a href="https://peps.python.org/pep-0703/#overview-of-cpython-changes">Overview of CPython Changes</a> section in PEP-703 also lists four categories, albeit slightly different:</p>
<blockquote class="blockquote">
<p>The implementation changes can be grouped into the following four categories:</p>
<ul>
<li>Reference counting <em>(and garbage collection)</em></li>
<li>Memory management</li>
<li>Container thread-safety</li>
<li>Locking and atomic APIs</li>
</ul>
</blockquote>
<p>I didn’t spend time discussing how <em>Container thread-safety</em> was tackled by Greg in his work, nor how I tackled it in my PyParallel work. Here’s a quick recap: Greg used a single global mutex to protect container objects (i.e. lists, dicts), and I did all kinds of hacky type interception that required you to explicitly <em>“protect”</em> a global or non-local <code>list</code> or <code>dict</code> object via <code>async.protect(obj)</code>. Greg’s approach was slow but correct, my approach was fast but kinda’ sucked, and would crash the Python interpreter if you didn’t use it properly. Thankfully, the requisite engineering elbow-grease was applied for the free-threading work and a fast <em>and</em> correct solution (that doesn’t kinda’ suck) was obtained.</p>
<p><a href="https://peps.python.org/pep-0703/">PEP-703</a> goes into great detail on all aspects of the free-threaded implementation, from motivation to very detailed descriptions of the implementation. I highly recommend reading it if you’ve gotten this far so you can see how all the obstacles I’ve been discussing were overcome.</p>
<p>I’ll spend a little bit of time in this next section covering some of the key points of the free-threading implementation, particularly as it pertains to the things that were done differently to Greg Stein’s work and PyParallel regarding reference counting, garbage collection, memory, etc.</p>
<p>After that, we’ll take a look at some non-trivial examples of real-world problems that can now be tackled performantly.</p>
<section id="implementation-1" class="level2">
<h2 class="anchored" data-anchor-id="implementation-1">Implementation</h2>
<p>Much like PyParallel, the Free-Threading Python work needed to augment the standard <code>PyObject</code> structure in order to support the new thread-safe functionality in lieu of the traditional single Global Interpreter Lock.</p>
<p>Let’s review these changes first, focusing solely on 64-bit Python builds.</p>
<section id="changes-to-pyobject-1" class="level3">
<h3 class="anchored" data-anchor-id="changes-to-pyobject-1">Changes to PyObject</h3>
<section id="python-3.13-pyobject" class="level4">
<h4 class="anchored" data-anchor-id="python-3.13-pyobject">Python 3.13 PyObject</h4>
<p>The standard Python 3.13 <code>PyObject</code> struct is semantically identical to the one we introduced earlier in the Python 1.4 Objects and VarObjects section (albeit with types tweaked to support 64-bit architectures):</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb14-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> __int64 Py_ssize_t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-4">    Py_ssize_t ob_refcnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-5">    PyTypeObject <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ob_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> PyObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-7"></span>
<span id="cb14-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-9">    PyObject ob_base<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-10">    Py_ssize_t ob_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> PyVarObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="callout callout-style-simple callout-note no-icon callout-titled" title="Actual C Header Code">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Actual C Header Code
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>The <em>actual</em> C header code used to define the <code>PyObject</code> structure in Python 3.13 is much more verbose these days. It can be found in <a href="https://github.com/python/cpython/blob/v3.13.1/Include/object.h#L163">Include/object.h</a> and looks like this:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb15-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> _object <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#if (defined(__GNUC__) || defined(__clang__)) </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb15-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">        &amp;&amp; !(defined __STDC_VERSION__ &amp;&amp; __STDC_VERSION__ &gt;= 201112L)</span></span>
<span id="cb15-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// On C99 and older, anonymous union is a GCC and clang extension</span></span>
<span id="cb15-5">    __extension__</span>
<span id="cb15-6"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb15-7"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#ifdef _MSC_VER</span></span>
<span id="cb15-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ignore MSC warning C4201: "nonstandard extension used:</span></span>
<span id="cb15-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// nameless struct/union"</span></span>
<span id="cb15-10">    __pragma<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>warning<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>push<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb15-11">    __pragma<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>warning<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>disable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4201</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb15-12"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb15-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">union</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-14">       Py_ssize_t ob_refcnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-15"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#if SIZEOF_VOID_P &gt; 4</span></span>
<span id="cb15-16">       PY_UINT32_T ob_refcnt_split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb15-17"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb15-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb15-19"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#ifdef _MSC_VER</span></span>
<span id="cb15-20">    __pragma<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>warning<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb15-21"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb15-22"></span>
<span id="cb15-23">    PyTypeObject <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ob_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb15-25"></span>
<span id="cb15-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-27">    PyObject ob_base<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-28">    Py_ssize_t ob_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* Number of items in variable part */</span></span>
<span id="cb15-29"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> PyVarObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><code>PyVarObject</code> remains simple, as can be seen.</p>
</div>
</div>
</div>
<p>The visual depiction of <code>PyObject</code> in Python 3.13 64-bit is the same as before, with a total structure size of 16 bytes:</p>
<div class="struct-layout">
<div class="struct-cell py-field" style="grid-column: span 8;">
<pre>Py_ssize_t ob_refcnt
(8 bytes)</pre>
</div>
<div class="struct-cell py-field" style="grid-column: span 8;">
<pre>PyTypeObject *ob_type
(8 bytes)</pre>
</div>
</div>
</section>
<section id="free-threaded-pyobject" class="level4">
<h4 class="anchored" data-anchor-id="free-threaded-pyobject">Free-Threaded PyObject</h4>
<p>The new <code>PyObject</code> structure in the Free-Threaded build has grown numerous new fields, and lives below the GIL version in <a href="https://github.com/python/cpython/blob/v3.13.1/Include/object.h#L207">Include/object.h</a>, reproduced below (with supporting typedefs):</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Only the two least significant bits are used; remaining bits</span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// always zero.</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 0b00: unlocked</span></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 0b01: locked</span></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 0b10: unlocked and has parked threads</span></span>
<span id="cb16-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 0b11: locked and has parked threads</span></span>
<span id="cb16-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint8_t</span> _bits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> PyMutex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-10"></span>
<span id="cb16-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-12"></span>
<span id="cb16-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// ob_tid stores the thread id (or zero). It is also used</span></span>
<span id="cb16-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// by the GC and the trashcan mechanism as a linked list</span></span>
<span id="cb16-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// pointer and by the GC to store the computed "gc_refs"</span></span>
<span id="cb16-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// refcount.</span></span>
<span id="cb16-17">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uintptr_t</span> ob_tid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// thread id</span></span>
<span id="cb16-18">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint16_t</span> _padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// ob_flags in 3.14+</span></span>
<span id="cb16-19">    PyMutex ob_mutex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// per-object lock</span></span>
<span id="cb16-20">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint8_t</span> ob_gc_bits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// gc-related state</span></span>
<span id="cb16-21">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint32_t</span> ob_ref_local<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// local reference count</span></span>
<span id="cb16-22">    Py_ssize_t ob_ref_shared<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// shared (atomic) reference count</span></span>
<span id="cb16-23">    PyTypeObject <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ob_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> PyObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>N.B. The <code>_padding</code> field has been renamed to <code>ob_flags</code> in Python 3.14+.</p>
<p>A visual depiction of the Free-Threaded PyObject structure on 64-bit architectures follows. The object size has grown an additional 16 bytes from the with-GIL <code>PyObject</code>, doubling the total structure size to 32 bytes.</p>
<div class="struct-layout">
<div class="struct-cell ft-field" style="grid-column: span 8;">
<pre>uintptr_t ob_tid
(8 bytes)</pre>
</div>
<div class="struct-cell ft-field" style="grid-column: span 2;">
<pre>uint16_t
ob_flags
(2 bytes)</pre>
</div>
<div class="struct-cell ft-field" style="grid-column: span 1;">
<pre>PyMutex
ob_mutex
(1 byte)</pre>
</div>
<div class="struct-cell ft-field" style="grid-column: span 1;">
<pre>uint8_t
ob_gc_bits
(1 byte)</pre>
</div>
<div class="struct-cell ft-field" style="grid-column: span 4;">
<pre>uint32_t
ob_ref_local
(4 bytes)</pre>
</div>
<div class="struct-cell ft-field" style="grid-column: span 8;">
<pre>Py_ssize_t ob_ref_shared
(8 bytes)</pre>
</div>
<div class="struct-cell py-field" style="grid-column: span 8;">
<pre>PyTypeObject *ob_type
(8 bytes)</pre>
</div>
</div>
<p>If you’ve followed along with the prior work exposition earlier in the article, you can probably take a pretty educated guess as to not only what the new fields are for, but also, why they were needed.</p>
<section id="object-thread-id-uintptr_t-ob_tid" class="level5">
<h5 class="anchored" data-anchor-id="object-thread-id-uintptr_t-ob_tid">Object Thread ID: <code>uintptr_t ob_tid</code></h5>
<p>This field captures the thread ID of the owning thread for any given object. I like this! I also like how this particular value is obtained, because it means you can quickly check if <em>you</em> own the thread by comparing an object’s thread ID with your own, as follows:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb17-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inline</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uintptr_t</span></span>
<span id="cb17-2">_Py_ThreadId<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb17-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uintptr_t</span> tid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-5">    tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> __readgsqword<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> tid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-8"></span>
<span id="cb17-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inline</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span></span>
<span id="cb17-10">_Py_IsOwnedByCurrentThread<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>PyObject <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb17-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ob_tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> _Py_ThreadId<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb17-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>Hey! Look at that, it uses the same technique PyParallel used to determine the current thread ID with the least amount of overhead possible. I’m not sure if the idea was sourced from PyParallel or not; if not, it’s at least a good example of <a href="https://en.wikipedia.org/wiki/Convergent_evolution">convergent evolution</a>—that is, if you need to quickly determine the ID of the current thread, well, there’s really only one optimal way of doing it per platform.</p>
<div class="callout callout-style-simple callout-note no-icon callout-titled" title="Actual C Header Code">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Actual C Header Code
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>As usual, the actual C code is much more… flowery; the relevant <a href="https://github.com/python/cpython/blob/v3.14.0a4/Include/object.h#L183-L257">Include/object.h</a> is reproduced below:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb18-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inline</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uintptr_t</span></span>
<span id="cb18-2">_Py_ThreadId<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb18-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uintptr_t</span> tid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-5"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#if defined(_MSC_VER) &amp;&amp; defined(_M_X64)</span></span>
<span id="cb18-6">    tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> __readgsqword<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-7"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#elif defined(_MSC_VER) &amp;&amp; defined(_M_IX86)</span></span>
<span id="cb18-8">    tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> __readfsdword<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-9"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#elif defined(_MSC_VER) &amp;&amp; defined(_M_ARM64)</span></span>
<span id="cb18-10">    tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> __getReg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-11"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#elif defined(__MINGW32__) &amp;&amp; defined(_M_X64)</span></span>
<span id="cb18-12">    tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> __readgsqword<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-13"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#elif defined(__MINGW32__) &amp;&amp; defined(_M_IX86)</span></span>
<span id="cb18-14">    tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> __readfsdword<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-15"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#elif defined(__MINGW32__) &amp;&amp; defined(_M_ARM64)</span></span>
<span id="cb18-16">    tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> __getReg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-17"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#elif defined(__i386__)</span></span>
<span id="cb18-18">    __asm__<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"movl </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">gs:0, %0"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=r"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 32-bit always uses GS</span></span>
<span id="cb18-19"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#elif defined(__MACH__) &amp;&amp; defined(__x86_64__)</span></span>
<span id="cb18-20">    __asm__<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"movq </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">gs:0, %0"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=r"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// x86_64 macOSX uses GS</span></span>
<span id="cb18-21"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#elif defined(__x86_64__)</span></span>
<span id="cb18-22">   __asm__<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"movq </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">fs:0, %0"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=r"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// x86_64 Linux, BSD uses FS</span></span>
<span id="cb18-23"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#elif defined(__arm__) &amp;&amp; __ARM_ARCH &gt;= 7</span></span>
<span id="cb18-24">    __asm__ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mrc p15, 0, %0, c13, c0, 3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">bic %0, %0, #3"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=r"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb18-25"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#elif defined(__aarch64__) &amp;&amp; defined(__APPLE__)</span></span>
<span id="cb18-26">    __asm__ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mrs %0, tpidrro_el0"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=r"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb18-27"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#elif defined(__aarch64__)</span></span>
<span id="cb18-28">    __asm__ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mrs %0, tpidr_el0"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=r"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb18-29"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#elif defined(__powerpc64__)</span></span>
<span id="cb18-30">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#if defined(__clang__) &amp;&amp; _Py__has_builtin(__builtin_thread_pointer)</span></span>
<span id="cb18-31">    tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uintptr_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>__builtin_thread_pointer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-32">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#else</span></span>
<span id="cb18-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// r13 is reserved for use as system thread ID by the Power 64-bit ABI.</span></span>
<span id="cb18-34">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">register</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uintptr_t</span> tp __asm__ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r13"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-35">    __asm__<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=r"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb18-36">    tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-37">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb18-38"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#elif defined(__powerpc__)</span></span>
<span id="cb18-39">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#if defined(__clang__) &amp;&amp; _Py__has_builtin(__builtin_thread_pointer)</span></span>
<span id="cb18-40">    tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uintptr_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>__builtin_thread_pointer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-41">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#else</span></span>
<span id="cb18-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// r2 is reserved for use as system thread ID by the Power 32-bit ABI.</span></span>
<span id="cb18-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">register</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uintptr_t</span> tp __asm__ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r2"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-44">    __asm__ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=r"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb18-45">    tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-46">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb18-47"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#elif defined(__s390__) &amp;&amp; defined(__GNUC__)</span></span>
<span id="cb18-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Both GCC and Clang have supported __builtin_thread_pointer</span></span>
<span id="cb18-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// for s390 from long time ago.</span></span>
<span id="cb18-50">    tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uintptr_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>__builtin_thread_pointer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-51"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#elif defined(__riscv)</span></span>
<span id="cb18-52">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#if defined(__clang__) &amp;&amp; _Py__has_builtin(__builtin_thread_pointer)</span></span>
<span id="cb18-53">    tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uintptr_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>__builtin_thread_pointer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-54">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#else</span></span>
<span id="cb18-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// tp is Thread Pointer provided by the RISC-V ABI.</span></span>
<span id="cb18-56">    __asm__ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mv %0, tp"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=r"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb18-57">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb18-58"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#else</span></span>
<span id="cb18-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Fallback to a portable implementation if we do not have a faster</span></span>
<span id="cb18-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// platform-specific implementation.</span></span>
<span id="cb18-61">    tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _Py_GetThreadLocal_Addr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-62"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb18-63">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> tid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-64"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-65"></span>
<span id="cb18-66"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inline</span> Py_ALWAYS_INLINE <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span></span>
<span id="cb18-67">_Py_IsOwnedByCurrentThread<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>PyObject <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb18-68"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-69"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#ifdef _Py_THREAD_SANITIZER</span></span>
<span id="cb18-70">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> _Py_atomic_load_uintptr_relaxed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>ob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ob_tid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> _Py_ThreadId<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-71"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#else</span></span>
<span id="cb18-72">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ob_tid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> _Py_ThreadId<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-73"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb18-74"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="reference-counts-ob_ref_local-and-ob_ref_shared" class="level5">
<h5 class="anchored" data-anchor-id="reference-counts-ob_ref_local-and-ob_ref_shared">Reference Counts: <code>ob_ref_local</code> and <code>ob_ref_shared</code></h5>
<p>TODO: Biased and deferred reference counting. Optimization if attempting to incref/decref an object we own.</p>
</section>
<section id="per-object-locking-pymutex-ob_mutex" class="level5">
<h5 class="anchored" data-anchor-id="per-object-locking-pymutex-ob_mutex">Per-Object Locking: <code>PyMutex ob_mutex</code></h5>
<p>TBD</p>
</section>
<section id="garbage-collection-state-ob_gc_bits" class="level5">
<h5 class="anchored" data-anchor-id="garbage-collection-state-ob_gc_bits">Garbage Collection State: <code>ob_gc_bits</code></h5>
</section>
</section>
</section>
</section>
</section>
<section id="parallelopedia" class="level1">
<h1>Parallelopedia</h1>
<section id="http-server" class="level2">
<h2 class="anchored" data-anchor-id="http-server">HTTP Server</h2>
<ul>
<li>Multi-threaded <code>asyncio</code>-based HTTP server.</li>
<li>Performance/benchmarks.</li>
<li>Compare <code>-Xgil=0</code> to with GIL.</li>
</ul>
<p>TODO</p>
</section>
<section id="wiki-server" class="level2">
<h2 class="anchored" data-anchor-id="wiki-server">Wiki Server</h2>
<p>TODO</p>
</section>
</section>
<section id="pytorch-and-free-threading" class="level1">
<h1>PyTorch and Free-Threading</h1>
<section id="training-a-local-gpt2" class="level2">
<h2 class="anchored" data-anchor-id="training-a-local-gpt2">Training a local GPT2</h2>
</section>
<section id="multi-threaded-inference" class="level2">
<h2 class="anchored" data-anchor-id="multi-threaded-inference">Multi-threaded Inference</h2>
<ul>
<li>Via <code>asyncio</code> &amp; HTTP server.</li>
</ul>
</section>
</section>
<section id="appendix" class="level1">
<h1>Appendix</h1>
<section id="pyparallel-backstory" class="level2">
<h2 class="anchored" data-anchor-id="pyparallel-backstory">PyParallel Backstory</h2>
<p>I’m not sure how interesting this section will be to readers, which is why I’ve stashed it at the end of the article. The older I get—especially now that I have a daughter—the more cathartic it is reminiscing about the early parts of my career some nearly-two-decades-ago.</p>
<p>This section captures the backstory behind PyParallel. PyParallel was born out of a) my interest in asynchronous I/O and multithreaded programming, and b) my experience with Snakebite, an “open source network” I built with the goal to provide Python committer’s access to all the different types of platforms Python ran on—especially all the UNIX derivatives from the late 90s to 00s for which I seemed to be genetically predisposed to overly romanticize.</p>
<p>And I came up with the idea for Snakebite as a Python committer, where I found myself often frustrated at trying to debug buildbot breaks on platforms for which I had no access. And becoming a Python committer was an artifact of my involvement with the Python language, particularly with regards to providing buildbots and help with Windows 64-bit Python builds in the early days where AMD64 was still a novelty.</p>
<p>And I was led to Python by a random article by Eric S. Raymond, coupled with growing resentment toward Perl, which I found myself having to use when working with ClearQuest.</p>
<p>That’s the reverse chronological history in a nutshell. The next few sections go into more detail chronologically.</p>
<section id="becoming-a-python-committer" class="level3">
<h3 class="anchored" data-anchor-id="becoming-a-python-committer">Becoming a Python Committer</h3>
<p>From around 2000 to 2004, I was writing mostly C, C++, and Perl. I had founded a company with a business partner, Jamie Echlin, called <a href="https://web.archive.org/web/20080704070902/http://www.onresolve.com/home/">OnResolve</a>, and provided consultancy for an IBM—formerly Rational—change management product called <a href="https://www.ibm.com/products/rational-clearquest">ClearQuest</a>, as well as a number of software products that extended the functionality of ClearQuest. ClearQuest could be customized in two languages: Visual Basic, and Perl. The most prominent software product Jamie and I created was OnMessage, which was a combination of C++ and Perl, and provided enhanced e-mail notification facilities for ClearQuest. Jamie deserves much of the credit for what eventually became known as <a href="https://web.archive.org/web/20080622060654/http://www.onresolve.com/products/onmessage/">OnMessage</a> —despite having a quirky Perl coding style I found difficult to work with, he absolutely laid the foundation for the product and the subsequent success we had with it.</p>
<p>ClearQuest, and its version-control counterpart, ClearCase, were ubiquitous in all of the industries that had the most money in the early to mid 2000s. Particularly finance and oil. No-one liked using either of them, they were expensive, required huge teams to maintain and administer, and with the advent of tools like Git and Github (albeit many years later), they are now relegated to the annals of history.</p>
<p>I was relatively productive with Perl, but I didn’t particularly like it. And I absolutely loathed having to deal with other people’s Perl code. Around late 2004 and 2005, Python arrived on my radar. I remember reading Eric S. Raymond’s <a href="https://www.linuxjournal.com/article/3882">Why Python</a> article about Python, and it resonated strongly with me. Coming from Perl, Python just felt simply magical. It was intuitive, easy to read, not cryptic, easy to work with other people’s code, powerful–particularly as a glue language.</p>
<p>I adored it. I tackled all new projects with Python. I wrote a Python wrapper around ClearQuest named <a href="https://github.com/tpn/cqpython">cqpython</a>, which I used to carry out one of my most favorite projects to date: merging two ClearQuest databases into a single instance by auto-generating optimized SQL to conduct the merge at the database level. (This was harder than it sounds, as all ClearQuest databases would start off with the same unique ID offsets, so two otherwise unrelated databases would have almost identical keys for different entities, which needed to be resolved efficiently at merge time.)</p>
<p>By 2007-2008, I was bored of ClearQuest—it wasn’t a fun product to work with, nor did it look like it would be a good career move to continue specializing in it; the prices were extortionate, a lot of companies were trying to move off it, and better, cheaper alternatives were popping up.</p>
<p>However, it sure had been lucrative. I was able to enjoy extended periods of not needing to work, and I spent that time on things I was finding really fun, like contributing to Python. I set up a bunch of buildbots for Python, and was particularly interested in getting the 64-bit Windows Python builds “green” on the buildbots I had set up. I think I even paid for the Verisign code signing certificate used for the Python.org official Windows binaries back then (this was still the Python 2.x days).</p>
<p>This was back in the day where Martin von Löwis was still an active contributor for Python, and if I recall correctly, the release manager for the Python 2.x series. Martin also maintained the Windows Python builds, a role that was eventually taken over by Steve Dower, who is still doing it to this day.</p>
<p>In 2008, I attended PyCon in Chicago. It was my first-ever PyCon. I had a fantastic time, and particularly loved the core Python sprints that happened after the conference. For those that are unaware, this is the one time every year where many of the active Python committers, including Guido, get together in a big conference room and just hack on Python collectively for a few days.</p>
<p>It was a bit of a surreal experience, sitting in a room hacking on Python alongside the very founder of Python himself—Guido—plus many other luminaries that actively contributed to the language over the years. I don’t know who took this photo, nor why it appears to have dimensions tailored towards ants, but you can see myself and Michael Foord in the foreground table (dark maroon t-shirt on the left and orange t-shirt on the right, respectively), Guido in the bright green shirt at the top right table, sitting with Neal Norwitz and Barry Warsaw. And that looks like Brett Canon in thinking pose in the dark t-shirt and Martin von Löwis sitting next to him scratching his head at whatever Brett was doing at the middle table :-)</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://trent.me/articles/from-pyparallel-to-python-free-threading/images/pycon2008-chicago-core-sprints.jpg" class="img-fluid figure-img"></p>
<figcaption>PyCon 2008 Core Sprint</figcaption>
</figure>
</div>
<p>I remember inundating Martin with patch bombs fixing various buildbot-related things at the start of that sprint, to which Martin eventually dealt with by simply offering me commit privileges. I enthusiastically accepted! Honestly, that was a career highlight. This was in the days before everything was Github and Pull Requests—becoming a Python committer meant you would literally get svn+ssh access to svn.python.org, plus ssh access to the python.org boxes themselves if you wanted it/needed it (i.e.&nbsp;for buildbot master configuration). This was certainly more compelling than the ClearQuest consultancy I’d done in the past, that’s for sure!</p>
<p>As much as I love Git and Github, getting your pull request accepted for an open source project just doesn’t have the same feel as getting offered commit privileges like back in the old days.</p>
</section>
</section>
</section>
<section id="colophon" class="level1">
<h1>Colophon</h1>
<p>As much as I enjoy reading technical articles, I often find myself equally interested in the tools the author used in the production of the article. In this final section, I attempt to capture details regarding the tools used to author this article, in no particular order.</p>
<section id="quarto-markdown" class="level2">
<h2 class="anchored" data-anchor-id="quarto-markdown">Quarto &amp; Markdown</h2>
<p>This article was written in Markdown using <a href="https://quarto.org">Quarto</a>. The source code is <a href="https://github.com/tpn/website/edit/main/articles/from-pyparallel-to-python-free-threading/index.qmd">here</a>; there’s also an <em>Edit this page</em> link on the top-right of the page, under the contents (assuming you’re viewing the site on a wide-enough device).</p>
<p>For the syntax color scheme, I copied the <a href="https://github.com/quarto-dev/quarto-cli/blob/80bf6b5848bf644de3a4d59e26b5eb067375986a/src/resources/pandoc/highlight-styles/dracula.theme"><code>dracula.theme</code></a> from the Quarto repository into <a href="https://github.com/tpn/website/blob/main/tpn.theme"><code>tpn.theme</code></a> and then just hacked on it until I was mostly content with the results.</p>
<p>My whole <a href="https://trent.me">trent.me</a> website uses Quarto, and is hosted publicly on Github at my <a href="https://github.com/tpn/website">website</a> repo. I also leverage Github’s hosting facilities via their “Pages” functionality, the configuration of which can be seen below.</p>
<div class="callout callout-style-simple callout-tip no-icon callout-titled" title="Github Pages Configuration">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-5-contents" aria-controls="callout-5" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Github Pages Configuration
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-5" class="callout-5-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/github-tpn-website-pages.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="Github Pages Configuration for tpn/website"><img src="https://trent.me/articles/from-pyparallel-to-python-free-threading/images/github-tpn-website-pages.png" class="img-fluid figure-img" alt="Github Pages Configuration for tpn/website"></a></p>
<figcaption>Github Pages Configuration for tpn/website</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>“Development” on the website (i.e.&nbsp;writing articles like this one) is done on a variety of boxes, typically all Linux/WSL2. Quarto has a useful preview feature, so my local workflow is usually just something as simple as:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> cd ~/src/website</span>
<span id="cb19-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> quarto preview</span></code></pre></div>
<p>I edited this <code>index.qmd</code> page predominantly in vim, although I’d sometimes use VS Code and the Quarto extension with integrated previewing. I generally turn Copilot off in vim when writing pure text, it’s too distracting, and isn’t geared toward writing new prose versus coding tasks, which is obviously its bread and butter.</p>
</section>
<section id="ai-tooling" class="level2">
<h2 class="anchored" data-anchor-id="ai-tooling">AI Tooling</h2>
<p>In general, I for one welcome our new AI overlords. I have heavily integrated Copilot and ChatGPT into my workflow now as a developer for the past two years or so, and I thoroughly enjoy leveraging both tools.</p>
<section id="lm-studio" class="level3">
<h3 class="anchored" data-anchor-id="lm-studio">LM Studio</h3>
<p><a href="https://lmstudio.ai/">LM Studio</a> has also left a lasting impression and I’ve enjoyed experimenting with it a lot recently too. This has been aided by having a local box at home with 256 GB RAM, 40 cores, four Tesla V100 32GB GPUs, and a 14TB RAID0 stripe—plenty of room to download all of these huge models coming out.</p>
<p>A nice thing about LM Studio is that with a few clicks you can expose a local, OpenAI-compatible REST interface. LM Studio is powered by <a href="https://github.com/ggerganov/llama.cpp">llama.cpp</a>.</p>
</section>
<section id="aider" class="level3">
<h3 class="anchored" data-anchor-id="aider">Aider</h3>
<p>I came across <a href="https://aider.chat">Aider</a> recently. Aider is, to quote their website, directly, <em>AI pair programming in your terminal</em>. It’s pretty neat, and I played around with having it drive a little bit of the Python development in the <a href="https://github.com/tpn/parallelopedia">parallelopedia</a> repo, and a lot of the development in the <a href="https://github.com/tpn/parallelopedia-ui">parallelopedia-ui</a> repo, which is the React, Bootstrap, JavaScript/JSX web UI seen in this article.</p>
<p>i’m not a web developer, I don’t know how to write web apps, I don’t care about code quality of web apps I do write (as I’m not writing anything other than demos or small little tools), so, whatever gets the job done is fine. However, I am, by trade, a software engineer, so a lot of the core skill set still <strong>commutes</strong> when working in foreign domains. <em>Especially</em> these days when you have AI an alt-tab away, or, in the case of Aider, available in a terminal to carry out your development requests.</p>
<p>The biggest issue I had with Aider was honestly just biting the bullet and just trying it. <em>Begin, the rest is easy</em> as they say. It’s definitely not perfect–I had to jump in and fix things a few times every session I had with it, but we’re talking maybe five interventions within a 3-4 hour coding session, give or take. It was particularly good at generating scaffolding that I could hack further with a single sentence. And it was really good at writing an entire Python unit test module for me based on a single-sentence.</p>
<p>To get started with Aider:</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> python <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> pip install aider-install</span>
<span id="cb20-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> aider-install</span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Restart shell, or `export PATH=$HOME/.local/bin:$PATH`</span></span>
<span id="cb20-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> which aider</span>
<span id="cb20-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/home/trent/.local/bin/aider</span></span>
<span id="cb20-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># I've got my OpenAI keys in a GPG-encrypted file ~/.zsh/openai_key.asc.</span></span>
<span id="cb20-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> which init_openai_key</span>
<span id="cb20-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">init_openai_key ()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb20-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-f</span> ~/.zsh/openai_key.asc <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb20-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb20-11">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">OPENAI_API_KEY</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span></span>
<span id="cb20-12">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gpg</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--batch</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--quiet</span> ~/.zsh/openai_key.asc</span>
<span id="cb20-13">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb20-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb20-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb20-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> init_openai_key</span>
<span id="cb20-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> aider <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--model</span> gpt-4o <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--vim</span></span></code></pre></div>
<p>It was trivial to point it at a local model hosted by LM Studio, too, after enabling the <em>Developer</em> view and starting a local development server (which will default to hosting on <code>http://&lt;hostname&gt;:1234/v1</code>):</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb21-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> LM_STUDIO_API_KEY=notused <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb21-2">  LM_STUDIO_API_BASE=http://<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hostname</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span>:1234/v1 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb21-3">    aider <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--model</span> lm_studio/qwen2.5-coder-32b-instruct@fp16 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--vim</span></span></code></pre></div>
<p>By default, Aider keeps a Markdown transcript of your sessions in a file named <code>.aider.chat.history.md</code> in the root of the repository you’re working with. I have included the transcript from my <a href="https://github.com/tpn/parallelopedia-ui">parallelopedia-ui</a> repo below. I haven’t edited it, so it contains all my mistakes and errors and whatnot.</p>
<div class="callout callout-style-simple callout-tip no-icon callout-titled" title="Aider Chat History">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-6-contents" aria-controls="callout-6" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Aider Chat History
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-6" class="callout-6-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<section id="aider-chat-started-at-2025-01-03-165315" class="level1">
<h1>aider chat started at 2025-01-03 16:53:15</h1>
<blockquote class="blockquote">
<p>Add .aider* to .gitignore (recommended)? (Y)es/(N)o [Yes]: y<br>
Added .aider* to .gitignore<br>
/home/trent/.local/bin/aider –model gpt-4o –vim<br>
Warning: gpt-4o expects these environment variables<br>
- OPENAI_API_KEY: Not set<br>
Warning: gpt-4o-mini expects these environment variables<br>
- OPENAI_API_KEY: Not set<br>
You can skip this check with –no-show-model-warnings<br>
https://aider.chat/docs/llms/warnings.html</p>
</blockquote>
</section>
<section id="aider-chat-started-at-2025-01-03-165354" class="level1">
<h1>aider chat started at 2025-01-03 16:53:54</h1>
<blockquote class="blockquote">
<p>/home/trent/.local/bin/aider –model gpt-4o –vim<br>
Aider v0.70.0<br>
Main model: gpt-4o with diff edit format<br>
Weak model: gpt-4o-mini<br>
Git repo: .git with 0 files<br>
Repo-map: using 1024 tokens, auto refresh</p>
</blockquote>
<section id="add-srcwiki.jsx" class="level4">
<h4 class="anchored" data-anchor-id="add-srcwiki.jsx">/add src/Wiki.jsx</h4>
<blockquote class="blockquote">
<p>No files matched ‘src/Wiki.jsx’. Do you want to create /mnt/raid1/trent/src/parallelopedia-ui/src/Wiki.jsx? (Y)es/(N)o [Yes]: y<br>
Added src/Wiki.jsx to the chat</p>
</blockquote>
</section>
<section id="implement-srcwiki.jsx-which-will-be-a-react-bootstrap-component-that-will-have-a-single-search-box-than-spans-the-container." class="level4">
<h4 class="anchored" data-anchor-id="implement-srcwiki.jsx-which-will-be-a-react-bootstrap-component-that-will-have-a-single-search-box-than-spans-the-container.">Implement src/Wiki.jsx, which will be a React Bootstrap component that will have a single search box than spans the container.</h4>
<p>To implement the <code>Wiki</code> component using React Bootstrap with a single search box that spans the container, we will create the component in <code>src/Wiki.jsx</code>. Here is the implementation:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb22-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb22-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb22-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> React <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'react'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> { Container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Form<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> FormControl } <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'react-bootstrap'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-5"></span>
<span id="cb22-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> Wiki <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb22-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (</span>
<span id="cb22-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb22-9">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Form<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb22-10">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>FormControl</span>
<span id="cb22-11">                    type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"search"</span></span>
<span id="cb22-12">                    placeholder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Search"</span></span>
<span id="cb22-13">                    className<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"me-2"</span></span>
<span id="cb22-14">                    aria<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Search"</span></span>
<span id="cb22-15">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/&gt;</span></span>
<span id="cb22-16">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>Form<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb22-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>Container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb22-18">    )<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-19">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-20"></span>
<span id="cb22-21"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">export</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">default</span> Wiki<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>To ensure the component works correctly, make sure you have <code>react-bootstrap</code> installed in your project. If not, you can install it using the following command:</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb23-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">npm</span> install react-bootstrap bootstrap</span></code></pre></div>
<blockquote class="blockquote">
<p>Tokens: 2.4k sent, 176 received. Cost: $0.0077 message, $0.0077 session.<br>
Committing src/Wiki.jsx before applying edits.<br>
Commit c522407 feat: Add Wiki component to the source directory<br>
Applied edit to src/Wiki.jsx<br>
Commit 6ce6206 feat: Implement Wiki component with search box using React Bootstrap<br>
npm install react-bootstrap bootstrap<br>
Run shell command? (Y)es/(N)o/(D)on’t ask again [Yes]: n<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="add-to-the-appropriate-in-app.jsx." class="level4">
<h4 class="anchored" data-anchor-id="add-to-the-appropriate-in-app.jsx.">Add <wiki> to the appropriate <tab> in App.jsx.</tab></wiki></h4>
<p>Please add <code>App.jsx</code> to the chat so I can make the necessary changes to include the <code>&lt;Wiki /&gt;</code> component in the appropriate <code>&lt;Tab&gt;</code>.</p>
<blockquote class="blockquote">
<p>Tokens: 2.8k sent, 31 received. Cost: $0.0072 message, $0.01 session.</p>
</blockquote>
</section>
<section id="add-srcapp.jsx-srcstats.jsx-srcterminaltab.jsx-srcterminalcomponent.jsx" class="level4">
<h4 class="anchored" data-anchor-id="add-srcapp.jsx-srcstats.jsx-srcterminaltab.jsx-srcterminalcomponent.jsx">/add src/App.jsx src/Stats.jsx src/TerminalTab.jsx src/TerminalComponent.jsx</h4>
<blockquote class="blockquote">
<p>Added src/App.jsx to the chat<br>
Added src/Stats.jsx to the chat<br>
Added src/TerminalComponent.jsx to the chat<br>
Added src/TerminalTab.jsx to the chat</p>
</blockquote>
</section>
<section id="add-srcindex.css-srcapp.scss-srcapp.css" class="level4">
<h4 class="anchored" data-anchor-id="add-srcindex.css-srcapp.scss-srcapp.css">/add src/index.css src/App.scss src/App.css</h4>
<blockquote class="blockquote">
<p>Added src/App.css to the chat<br>
Added src/App.scss to the chat<br>
Added src/index.css to the chat</p>
</blockquote>
</section>
<section id="add-to-the-appropriate-in-app.jsx.-1" class="level4">
<h4 class="anchored" data-anchor-id="add-to-the-appropriate-in-app.jsx.-1">Add <wiki> to the appropriate <tab> in App.jsx.</tab></wiki></h4>
<p>To add the <code>&lt;Wiki /&gt;</code> component to the appropriate <code>&lt;Tab&gt;</code> in <code>App.jsx</code>, we need to import the <code>Wiki</code> component and include it in the “Wiki” tab. Here are the changes:</p>
<p>src/App.jsx</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb24-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb24-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bootstrap/dist/css/bootstrap.min.css"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb24-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Wiki <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./Wiki"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bootstrap/dist/css/bootstrap.min.css"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/App.jsx</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb25-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb25-2">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Tab title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wiki"</span> eventKey<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wiki"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&lt;/</span>Tab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb25-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb25-4">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Tab title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wiki"</span> eventKey<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wiki"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb25-5">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Wiki <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/&gt;</span></span>
<span id="cb25-6">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>Tab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb25-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>This will ensure that the <code>Wiki</code> component is rendered within the “Wiki” tab.</p>
<blockquote class="blockquote">
<p>Tokens: 4.9k sent, 151 received. Cost: $0.01 message, $0.03 session.<br>
Committing src/App.jsx before applying edits.<br>
Commit 1682fa5 feat: Add main application component in App.jsx<br>
Applied edit to src/App.jsx<br>
Commit ce5f9ab feat: Add <wiki> component to the Wiki tab in App.jsx<br>
You can use /undo to undo and discard each aider commit.</wiki></p>
</blockquote>
</section>
<section id="voice" class="level4">
<h4 class="anchored" data-anchor-id="voice">/voice</h4>
</section>
<section id="the-wiki-search-box-doesnt-have-enough-vertical-space-between-it-and-the-tab-above.-add-some-stylesheets-or-styles-in-the-app.scss-file-to-improve-the-spacing." class="level4">
<h4 class="anchored" data-anchor-id="the-wiki-search-box-doesnt-have-enough-vertical-space-between-it-and-the-tab-above.-add-some-stylesheets-or-styles-in-the-app.scss-file-to-improve-the-spacing.">The wiki search box doesn’t have enough vertical space between it and the tab above. Add some stylesheets or styles in the app.scss file to improve the spacing.</h4>
<p>To improve the vertical spacing between the search box and the tab above it, we can add some custom styles in the <code>App.scss</code> file. Here’s how you can do it:</p>
<p>src/App.scss</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode scss code-with-copy"><code class="sourceCode scss"><span id="cb26-1">&lt;&lt;&lt;&lt;&lt;&lt;&lt; SEARCH</span>
<span id="cb26-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Override specific elements with monospace font sizes</span></span>
<span id="cb26-3">code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb26-4">kbd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb26-5">samp {</span>
<span id="cb26-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">white-space</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">nowrap</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Prevents text wrapping</span></span>
<span id="cb26-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">font-size</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$font-size-monospace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Apply custom font size to monospace elements</span></span>
<span id="cb26-8">}</span>
<span id="cb26-9">=======</span>
<span id="cb26-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.wiki-search-container</span> {</span>
<span id="cb26-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">margin-top</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add vertical space between the tab and the search box</span></span>
<span id="cb26-12">}</span>
<span id="cb26-13"></span>
<span id="cb26-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Override specific elements with monospace font sizes</span></span>
<span id="cb26-15">code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb26-16">kbd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb26-17">samp {</span>
<span id="cb26-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">white-space</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">nowrap</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Prevents text wrapping</span></span>
<span id="cb26-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">font-size</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$font-size-monospace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Apply custom font size to monospace elements</span></span>
<span id="cb26-20">}</span>
<span id="cb26-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>Next, apply this new class to the <code>Container</code> in the <code>Wiki</code> component:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb27-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb27-2">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb27-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb27-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Container className<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wiki-search-container"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb27-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>These changes will add vertical space between the tab and the search box in the <code>Wiki</code> component.</p>
<blockquote class="blockquote">
<p>Tokens: 5.2k sent, 245 received. Cost: $0.02 message, $0.04 session.<br>
Committing src/App.scss before applying edits.<br>
Commit 065db7a feat: Add main stylesheet for the application<br>
Applied edit to src/Wiki.jsx<br>
Applied edit to src/App.scss<br>
Commit ad6f1b5 style: Add vertical spacing between the tab and search box in Wiki component<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="voice-1" class="level4">
<h4 class="anchored" data-anchor-id="voice-1">/voice</h4>
</section>
<section id="when-i-type-into-the-search-box-i-get-the-following-error-in-the-browser-console-dgx1-access-to-fetch-at-httplocalhost4444offsetspytho-from-origin-httpdgx3000-has-been-blocked-by-cors-policy-no-access-control-allow-origin-header-is-present-on-the-requested-resource.-if-an-opaque-response-serves-your-needs-set-the-requests-mode-to-no-cors-to-fetch-the-resource-with-cors-disabled." class="level4">
<h4 class="anchored" data-anchor-id="when-i-type-into-the-search-box-i-get-the-following-error-in-the-browser-console-dgx1-access-to-fetch-at-httplocalhost4444offsetspytho-from-origin-httpdgx3000-has-been-blocked-by-cors-policy-no-access-control-allow-origin-header-is-present-on-the-requested-resource.-if-an-opaque-response-serves-your-needs-set-the-requests-mode-to-no-cors-to-fetch-the-resource-with-cors-disabled.">When I type into the search box, I get the following error in the browser console: dgx/:1 Access to fetch at ‘http://localhost:4444/offsets/Pytho’ from origin ‘http://dgx:3000’ has been blocked by CORS policy: No ‘Access-Control-Allow-Origin’ header is present on the requested resource. If an opaque response serves your needs, set the request’s mode to ‘no-cors’ to fetch the resource with CORS disabled.</h4>
<blockquote class="blockquote">
<p>http://dgx:3000<br>
Add URL to the chat? (Y)es/(N)o/(A)ll/(S)kip all/(D)on’t ask again [Yes]: n<br>
http://localhost:4444/offsets/Pytho<br>
Add URL to the chat? (Y)es/(N)o/(A)ll/(S)kip all/(D)on’t ask again [Yes]: n</p>
</blockquote>
<p>The error you’re encountering is due to the CORS (Cross-Origin Resource Sharing) policy, which restricts web pages from making requests to a different domain than the one that served the web page. To resolve this issue, you can modify the fetch request to include the <code>mode: 'cors'</code> option. However, this alone might not solve the problem if the server at <code>http://localhost:4444</code> is not configured to allow requests from your origin.</p>
<p>Here’s how you can modify the fetch request in <code>src/Wiki.jsx</code>:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb28-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb28-2">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`http://localhost:4444/offsets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb28-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`http://localhost:4444/offsets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb28-5">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">mode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cors'</span></span>
<span id="cb28-6">        })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>If the server is under your control, you will need to configure it to include the <code>Access-Control-Allow-Origin</code> header in its responses. If you don’t have control over the server, you might need to use a proxy or contact the server administrator to enable CORS for your domain.</p>
<blockquote class="blockquote">
<p>Tokens: 6.0k sent, 231 received. Cost: $0.02 message, $0.06 session.<br>
Committing src/Wiki.jsx before applying edits.<br>
Commit 943c680 feat: Implement search functionality with results display in Wiki component<br>
Applied edit to src/Wiki.jsx<br>
Commit 6d699ab fix: Add CORS mode to fetch request in Wiki component<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="ask-tell-me-more-about-access-control-allow-origin-i-presume-i-need-to-have-that-set-on-the-localhost4444-server-i-do-have-control-over-it-so-is-it-just-a-matter-of-adding-that-header-to-the-servers-output" class="level4">
<h4 class="anchored" data-anchor-id="ask-tell-me-more-about-access-control-allow-origin-i-presume-i-need-to-have-that-set-on-the-localhost4444-server-i-do-have-control-over-it-so-is-it-just-a-matter-of-adding-that-header-to-the-servers-output">/ask Tell me more about Access-Control-Allow-Origin… I presume I need to have that set on the <code>localhost:4444</code> server? I do have control over it so is it just a matter of adding that header to the server’s output?</h4>
</section>
<section id="tell-me-more-about-access-control-allow-origin-i-presume-i-need-to-have-that-set-on-the-localhost4444-server-i-do-have-control-over-it-so-is-it-just-a-matter-of-adding-that-header-to-the-servers-output" class="level4">
<h4 class="anchored" data-anchor-id="tell-me-more-about-access-control-allow-origin-i-presume-i-need-to-have-that-set-on-the-localhost4444-server-i-do-have-control-over-it-so-is-it-just-a-matter-of-adding-that-header-to-the-servers-output">Tell me more about Access-Control-Allow-Origin… I presume I need to have that set on the <code>localhost:4444</code> server? I do have control over it so is it just a matter of adding that header to the server’s output?</h4>
<p>Yes, you are correct. The <code>Access-Control-Allow-Origin</code> header is a part of the CORS (Cross-Origin Resource Sharing) mechanism that allows servers to specify which origins are permitted to access their resources. When a web application makes a request to a server that is on a different origin (domain, protocol, or port), the server must include this header in its response to allow the request.</p>
<p>To resolve the CORS issue you’re facing, you need to configure your server running on <code>localhost:4444</code> to include the <code>Access-Control-Allow-Origin</code> header in its responses. Here’s how you can do it, depending on the server technology you’re using:</p>
</section>
<section id="for-express.js-node.js" class="level3">
<h3 class="anchored" data-anchor-id="for-express.js-node.js">For Express.js (Node.js)</h3>
<p>If you’re using Express.js, you can use the <code>cors</code> middleware to handle this:</p>
<ol type="1">
<li><p>Install the <code>cors</code> package:</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb29-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">npm</span> install cors</span></code></pre></div></li>
<li><p>Use the <code>cors</code> middleware in your server setup:</p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb30-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> express <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">require</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'express'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> cors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">require</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cors'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">express</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-4"></span>
<span id="cb30-5">app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cors</span>())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-6"></span>
<span id="cb30-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Your routes here</span></span>
<span id="cb30-8"></span>
<span id="cb30-9">app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">listen</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4444</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb30-10">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Server is running on port 4444'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-11">})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div></li>
</ol>
</section>
<section id="for-other-server-technologies" class="level3">
<h3 class="anchored" data-anchor-id="for-other-server-technologies">For Other Server Technologies</h3>
<ul>
<li><p><strong>Apache</strong>: You can add the following line to your <code>.htaccess</code> file or your server configuration:</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode apache code-with-copy"><code class="sourceCode apache"><span id="cb31-1">Header<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> set Access-Control-Allow-Origin "*"</span></span></code></pre></div></li>
<li><p><strong>Nginx</strong>: Add the following line to your server block configuration:</p>
<pre class="nginx"><code>add_header 'Access-Control-Allow-Origin' '*';</code></pre></li>
</ul>
</section>
<section id="important-note" class="level3">
<h3 class="anchored" data-anchor-id="important-note">Important Note</h3>
<ul>
<li><p>The <code>*</code> wildcard allows any origin to access the resource. This is suitable for development but not recommended for production environments due to security concerns. In production, you should specify the exact origin(s) that are allowed to access your server.</p></li>
<li><p>If your server needs to handle credentials (such as cookies or HTTP authentication), you should set <code>Access-Control-Allow-Origin</code> to a specific origin and also include the <code>Access-Control-Allow-Credentials</code> header set to <code>true</code>.</p></li>
</ul>
<p>By adding the <code>Access-Control-Allow-Origin</code> header to your server’s responses, you should be able to resolve the CORS issue and allow your React application to make requests to the server.</p>
<blockquote class="blockquote">
<p>Tokens: 4.2k sent, 473 received. Cost: $0.02 message, $0.08 session.</p>
</blockquote>
<section id="what-would-exact-origin-look-like-if-both-servers-are-running-on-the-host-dgx-but-listening-on-different-ports" class="level4">
<h4 class="anchored" data-anchor-id="what-would-exact-origin-look-like-if-both-servers-are-running-on-the-host-dgx-but-listening-on-different-ports">What would exact origin look like if both servers are running on the host “dgx” but listening on different ports?</h4>
<p>If both servers are running on the host “dgx” but listening on different ports, you would specify the exact origin by including the protocol, hostname, and port number. For example, if your React application is running on port 3000 and your API server is running on port 4444, you would set the <code>Access-Control-Allow-Origin</code> header to <code>http://dgx:3000</code> on your API server.</p>
<p>Here’s how you can configure it for an Express.js server:</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb33-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> express <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">require</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'express'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb33-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> cors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">require</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cors'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb33-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">express</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb33-4"></span>
<span id="cb33-5">app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cors</span>({</span>
<span id="cb33-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">origin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'http://dgx:3000'</span></span>
<span id="cb33-7">}))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb33-8"></span>
<span id="cb33-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Your routes here</span></span>
<span id="cb33-10"></span>
<span id="cb33-11">app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">listen</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4444</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb33-12">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Server is running on port 4444'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb33-13">})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>This configuration allows requests from <code>http://dgx:3000</code> to access resources on your API server running on <code>http://dgx:4444</code>.</p>
<blockquote class="blockquote">
<p>Tokens: 6.9k sent, 201 received. Cost: $0.02 message, $0.10 session.</p>
</blockquote>
</section>
<section id="ask-what-would-the-raw-http-header-look-like-from-the-server-in-that-case" class="level4">
<h4 class="anchored" data-anchor-id="ask-what-would-the-raw-http-header-look-like-from-the-server-in-that-case">/ask What would the raw HTTP header look like from the server in that case?</h4>
</section>
<section id="what-would-the-raw-http-header-look-like-from-the-server-in-that-case" class="level4">
<h4 class="anchored" data-anchor-id="what-would-the-raw-http-header-look-like-from-the-server-in-that-case">What would the raw HTTP header look like from the server in that case?</h4>
<p>If you configure your server to allow requests from a specific origin, such as <code>http://dgx:3000</code>, the raw HTTP response header from the server would include the <code>Access-Control-Allow-Origin</code> header specifying that origin. Here’s what the relevant part of the HTTP response headers might look like:</p>
<pre><code>HTTP/1.1 200 OK
Content-Type: application/json
Access-Control-Allow-Origin: http://dgx:3000</code></pre>
<p>This header tells the browser that the resource can be accessed by web pages from the specified origin (<code>http://dgx:3000</code>). If you have additional CORS-related headers, such as those for handling credentials or specific HTTP methods, they might look like this:</p>
<pre><code>Access-Control-Allow-Origin: http://dgx:3000
Access-Control-Allow-Credentials: true
Access-Control-Allow-Methods: GET, POST, PUT, DELETE
Access-Control-Allow-Headers: Content-Type, Authorization</code></pre>
<ul>
<li><strong>Access-Control-Allow-Origin</strong>: Specifies the origin that is allowed to access the resource.</li>
<li><strong>Access-Control-Allow-Credentials</strong>: Indicates whether the response to the request can be exposed when the credentials flag is true.</li>
<li><strong>Access-Control-Allow-Methods</strong>: Lists the HTTP methods that are allowed when accessing the resource.</li>
<li><strong>Access-Control-Allow-Headers</strong>: Lists the headers that can be used when making the actual request.</li>
</ul>
<p>These headers are part of the CORS protocol and help manage cross-origin requests securely.</p>
<blockquote class="blockquote">
<p>Tokens: 4.9k sent, 291 received. Cost: $0.02 message, $0.11 session.</p>
</blockquote>
</section>
<section id="change-wiki.jsx-so-that-when-a-search-result-is-clicked-on-all-the-results-are-immediately-hiddendeleted-such-that-the-xml-content-is-the-only-thing-shown." class="level4">
<h4 class="anchored" data-anchor-id="change-wiki.jsx-so-that-when-a-search-result-is-clicked-on-all-the-results-are-immediately-hiddendeleted-such-that-the-xml-content-is-the-only-thing-shown.">Change Wiki.jsx so that when a search result is clicked on, all the results are immediately hidden/deleted, such that the xml content is the only thing shown.</h4>
<p>To modify the <code>Wiki.jsx</code> component so that the search results are hidden when a result is clicked, we need to clear the <code>results</code> state when an item is selected. Here are the changes:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb36-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb36-2">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">catch</span> (error) {</span>
<span id="cb36-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb36-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clear results when an item is clicked</span></span>
<span id="cb36-5">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">catch</span> (error) {</span>
<span id="cb36-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>This change ensures that when a search result is clicked, the <code>results</code> state is cleared, effectively hiding the list of search results and displaying only the XML content.</p>
<blockquote class="blockquote">
<p>Tokens: 7.4k sent, 119 received. Cost: $0.02 message, $0.13 session.<br>
Committing src/Wiki.jsx before applying edits.<br>
Commit f214e0c fix: Update fetch URLs from localhost to dgx in Wiki component<br>
Applied edit to src/Wiki.jsx<br>
Commit 7b60e12 feat: Clear search results when a search result is clicked in Wiki.jsx<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="change-the-search-box-so-that-the-search-request-is-only-dispatched-when-three-or-more-characters-have-been-typed." class="level4">
<h4 class="anchored" data-anchor-id="change-the-search-box-so-that-the-search-request-is-only-dispatched-when-three-or-more-characters-have-been-typed.">Change the search box so that the search request is only dispatched when three or more characters have been typed.</h4>
<p>To ensure that the search request is only dispatched when three or more characters have been typed, we need to modify the condition in the <code>handleSearch</code> function. Here is the change:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb37-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb37-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trim</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) {</span>
<span id="cb37-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb37-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trim</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) {</span>
<span id="cb37-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>This change updates the condition to check if the trimmed input length is three or more before dispatching the search request.</p>
<blockquote class="blockquote">
<p>Tokens: 6.2k sent, 98 received. Cost: $0.02 message, $0.15 session.<br>
Applied edit to src/Wiki.jsx<br>
Commit 7c4a4d3 feat: Dispatch search request only after three or more characters typed<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="change-the-handleresultclick-logic-so-that-when-an-item-is-clicked-the-string-contents-are-placed-into-the-search-bar-but-no-new-search-is-conducted." class="level4">
<h4 class="anchored" data-anchor-id="change-the-handleresultclick-logic-so-that-when-an-item-is-clicked-the-string-contents-are-placed-into-the-search-bar-but-no-new-search-is-conducted.">Change the “handleResultClick” logic so that when an item is clicked, the string contents are placed into the Search bar, but <em>no</em> new search is conducted.</h4>
<p>To modify the <code>handleResultClick</code> function so that the clicked item’s string content is placed into the search bar without conducting a new search, we need to update the logic to set the <code>query</code> state without triggering the search. Here is the change:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb38-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb38-2">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(xmlData)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb38-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(xmlData)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Place the string content into the search bar</span></span>
<span id="cb38-5">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(xmlData)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>This change ensures that when an item is clicked, its content is placed into the search bar, and the search results are cleared without initiating a new search.</p>
<blockquote class="blockquote">
<p>Tokens: 6.4k sent, 128 received. Cost: $0.02 message, $0.16 session.<br>
Applied edit to src/Wiki.jsx<br>
Commit 1feb90d feat: Update handleResultClick to set query without triggering search<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="change-the-wiki-logic-so-that-theres-a-one-second-delay-of-no-typing-before-a-search-is-dispatched.-if-another-key-comes-in-before-1-second-the-timer-is-reset.-only-dispatch-a-search-if-there-has-been-no-typing-for-at-least-a-second." class="level4">
<h4 class="anchored" data-anchor-id="change-the-wiki-logic-so-that-theres-a-one-second-delay-of-no-typing-before-a-search-is-dispatched.-if-another-key-comes-in-before-1-second-the-timer-is-reset.-only-dispatch-a-search-if-there-has-been-no-typing-for-at-least-a-second.">Change the Wiki logic so that there’s a one second delay of no typing before a search is dispatched. If another key comes in before 1 second, the timer is reset. Only dispatch a search if there has been no typing for at least a second.</h4>
<p>To implement a one-second delay before dispatching a search request, we can use a debounce technique. This involves setting a timeout that resets every time a new key is pressed. Here’s how you can modify the <code>Wiki.jsx</code> file:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb39-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb39-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Handle input change and fetch search results</span></span>
<span id="cb39-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> handleSearch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> (e) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb39-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">target</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(value)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-6"></span>
<span id="cb39-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trim</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) {</span>
<span id="cb39-8">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span> {</span>
<span id="cb39-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`http://dgx:4444/offsets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb39-10">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">mode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cors"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb39-11">        })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-12">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-13">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>(data)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-14">      } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">catch</span> (error) {</span>
<span id="cb39-15">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error fetching search results:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> error)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-16">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-17">      }</span>
<span id="cb39-18">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb39-19">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-20">    }</span>
<span id="cb39-21">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb39-23">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Debounce search function</span></span>
<span id="cb39-24">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> searchTimeout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-25"></span>
<span id="cb39-26">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> handleSearch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (e) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb39-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">target</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-28">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(value)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-29"></span>
<span id="cb39-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (searchTimeout) {</span>
<span id="cb39-31">      <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">clearTimeout</span>(searchTimeout)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-32">    }</span>
<span id="cb39-33"></span>
<span id="cb39-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trim</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) {</span>
<span id="cb39-35">      searchTimeout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb39-36">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span> {</span>
<span id="cb39-37">          <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`http://dgx:4444/offsets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb39-38">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">mode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cors"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb39-39">          })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-40">          <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-41">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>(data)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-42">        } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">catch</span> (error) {</span>
<span id="cb39-43">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error fetching search results:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> error)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-44">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-45">        }</span>
<span id="cb39-46">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-47">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb39-48">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-49">    }</span>
<span id="cb39-50">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-51"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>This change introduces a debounce mechanism by using a <code>setTimeout</code> that delays the search request by one second. If another key is pressed before the timeout completes, the timer is reset.</p>
<blockquote class="blockquote">
<p>Tokens: 6.7k sent, 387 received. Cost: $0.02 message, $0.19 session.<br>
Applied edit to src/Wiki.jsx<br>
Commit 65f7959 feat: Implement debounce for search input with one second delay<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="when-a-search-result-is-clicked-on-e.g.-python-programming-language-only-that-text-should-be-placed-in-the-search-box-not-the-results-of-the-search." class="level4">
<h4 class="anchored" data-anchor-id="when-a-search-result-is-clicked-on-e.g.-python-programming-language-only-that-text-should-be-placed-in-the-search-box-not-the-results-of-the-search.">When a search result is clicked on, e.g.&nbsp;“Python (Programming Language)”, only that text should be placed in the search box, not the results of the search.</h4>
<p>To ensure that only the text of the clicked search result is placed in the search box, we need to update the <code>handleResultClick</code> function to set the <code>query</code> state with the result’s name instead of the XML data. Here is the change:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb40-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb40-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> handleResultClick <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> (startByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> endByte) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb40-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb40-4">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> handleResultClick <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> (name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> startByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> endByte) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb40-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb41-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb41-2">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(xmlData)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Place the string content into the search bar</span></span>
<span id="cb41-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb41-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(name)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Place the result's name into the search bar</span></span>
<span id="cb41-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb42-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb42-2">          onClick<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">handleResultClick</span>(startByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> endByte)}</span>
<span id="cb42-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb42-4">          onClick<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">handleResultClick</span>(name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> startByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> endByte)}</span>
<span id="cb42-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>These changes ensure that when a search result is clicked, only the result’s name is placed in the search box, and the XML data is still fetched and displayed.</p>
<blockquote class="blockquote">
<p>Tokens: 6.5k sent, 230 received. Cost: $0.02 message, $0.20 session.<br>
Applied edit to src/Wiki.jsx<br>
Commit 7b93ced fix: Update search result click handler to set query with result name<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="the-search-results-should-take-up-as-much-vertical-space-as-there-is-left-on-the-page.-currently-the-entire-line-is-being-displayed-as-a-single-line-with-a-horizontal-scroll-bar." class="level4">
<h4 class="anchored" data-anchor-id="the-search-results-should-take-up-as-much-vertical-space-as-there-is-left-on-the-page.-currently-the-entire-line-is-being-displayed-as-a-single-line-with-a-horizontal-scroll-bar.">The search results should take up as much vertical space as there is left on the page. Currently the entire line is being displayed as a single line with a horizontal scroll bar.</h4>
<p>To ensure that the search results take up as much vertical space as possible and to prevent horizontal scrolling, we can adjust the CSS styles in <code>App.scss</code> to allow the list to expand and wrap text. Here are the changes:</p>
<p>src/App.scss</p>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode scss code-with-copy"><code class="sourceCode scss"><span id="cb43-1">&lt;&lt;&lt;&lt;&lt;&lt;&lt; SEARCH</span>
<span id="cb43-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.wiki-search-container</span> {</span>
<span id="cb43-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">margin-top</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add vertical space between the tab and the search box</span></span>
<span id="cb43-4">}</span>
<span id="cb43-5">=======</span>
<span id="cb43-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.wiki-search-container</span> {</span>
<span id="cb43-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">margin-top</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add vertical space between the tab and the search box</span></span>
<span id="cb43-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">display</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">flex</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">flex-direction</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">column</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">height</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vh</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-11">}</span>
<span id="cb43-12"></span>
<span id="cb43-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.wiki-search-container</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.list-group</span> {</span>
<span id="cb43-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">flex-grow</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">overflow-y</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">auto</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-16">}</span>
<span id="cb43-17"></span>
<span id="cb43-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.wiki-search-container</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.list-group-item</span> {</span>
<span id="cb43-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">white-space</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">normal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allow text to wrap</span></span>
<span id="cb43-20">}</span>
<span id="cb43-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>These changes will make the search results list take up the remaining vertical space and allow the text to wrap, preventing horizontal scrolling.</p>
<blockquote class="blockquote">
<p>Tokens: 6.8k sent, 201 received. Cost: $0.02 message, $0.22 session.<br>
Applied edit to src/App.scss<br>
Commit aad00d5 style: Adjust search results container for vertical space and text wrapping<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="when-the-search-box-is-cleared-both-the-search-results-and-article-elements-should-be-hiddenremovedcleared." class="level4">
<h4 class="anchored" data-anchor-id="when-the-search-box-is-cleared-both-the-search-results-and-article-elements-should-be-hiddenremovedcleared.">When the search box is cleared, both the search results and article elements should be hidden/removed/cleared.</h4>
<p>To ensure that both the search results and article elements are cleared when the search box is cleared, we need to update the <code>handleSearch</code> function to reset the <code>selectedXml</code> state when the query is empty. Here is the change:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb44-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb44-2">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb44-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb44-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clear selected XML when the search box is cleared</span></span>
<span id="cb44-5">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb44-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>This change will ensure that when the search box is cleared, both the search results and the selected article are hidden/removed.</p>
<blockquote class="blockquote">
<p>Tokens: 6.1k sent, 114 received. Cost: $0.02 message, $0.24 session.<br>
Applied edit to src/Wiki.jsx<br>
Commit 47b425f fix: Clear selected XML when the search box is cleared<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="when-a-new-character-is-typed-all-outstanding-searches-should-be-immediately-cancelled.-if-they-have-results-that-are-received-after-the-cancellation-point-the-results-should-be-discarded-immediately." class="level4">
<h4 class="anchored" data-anchor-id="when-a-new-character-is-typed-all-outstanding-searches-should-be-immediately-cancelled.-if-they-have-results-that-are-received-after-the-cancellation-point-the-results-should-be-discarded-immediately.">When a new character is typed… all outstanding searches should be immediately cancelled. If they have results that are received after the “cancellation point”, the results should be discarded immediately.</h4>
<p>To implement the cancellation of outstanding searches and discard results received after the “cancellation point,” we can use an <code>AbortController</code> to manage the fetch requests. Here’s how you can modify the <code>handleSearch</code> function:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb45-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb45-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Debounce search function</span></span>
<span id="cb45-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb45-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Debounce search function and abort controller for cancelling requests</span></span>
<span id="cb45-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> abortControllerRef <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useRef</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb45-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb46-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb46-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (searchTimeout) {</span>
<span id="cb46-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb46-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span>) {</span>
<span id="cb46-5">      abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abort</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Cancel any ongoing fetch requests</span></span>
<span id="cb46-6">    }</span>
<span id="cb46-7"></span>
<span id="cb46-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (searchTimeout) {</span>
<span id="cb46-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb47-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb47-2">      searchTimeout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb47-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb47-4">      searchTimeout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb47-5">        abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AbortController</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb47-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> { signal } <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb47-7"></span>
<span id="cb47-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb48-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb48-2">          <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`http://dgx:4444/offsets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb48-3">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">mode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cors"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-4">          })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-5">          <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-6">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>(data)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb48-8">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`http://dgx:4444/offsets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb48-9">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">mode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cors"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-10">            signal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-11">          })</span>
<span id="cb48-12">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>((response) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>())</span>
<span id="cb48-13">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>((data) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb48-14">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>(data)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-15">            })</span>
<span id="cb48-16">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">catch</span>((error) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb48-17">              <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (error<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AbortError"</span>) {</span>
<span id="cb48-18">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error fetching search results:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> error)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-19">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-20">              }</span>
<span id="cb48-21">            })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>These changes will ensure that any ongoing search requests are cancelled when a new character is typed, and any results received after the cancellation will be discarded.</p>
<blockquote class="blockquote">
<p>Tokens: 6.3k sent, 381 received. Cost: $0.02 message, $0.26 session.<br>
Applied edit to src/Wiki.jsx<br>
Commit 4277f3d feat: Implement cancellation of outstanding searches on new input<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="multiline-mode" class="level4">
<h4 class="anchored" data-anchor-id="multiline-mode">/multiline-mode</h4>
<blockquote class="blockquote">
<p>Multiline mode: Enabled. Enter inserts newline, Alt-Enter submits text</p>
</blockquote>
</section>
<section id="ask-this-is-a-sample-piece-of-content-returned-by-the-selectedxml-bit" class="level4">
<h4 class="anchored" data-anchor-id="ask-this-is-a-sample-piece-of-content-returned-by-the-selectedxml-bit">/ask This is a sample piece of content returned by the “selectedXml” bit:</h4>
</section>
<section id="section" class="level4">
<h4 class="anchored" data-anchor-id="section"></h4>
#### <page>
<title>
Test (Unix)
</title>
<p><ns>0</ns> <id>2491736</id> <revision> <id>629490168</id> <parentid>629490063</parentid> <timestamp>2014-10-13T21:13:12Z</timestamp> <contributor> <ip>2A02:580:B0ED:E300:9DBB:3B15:8A21:F31E</ip> </contributor> <comment>/* Description <em>/</em></comment><em> <model>wikitext</model> <format>text/x-wiki</format> <text xml:space="preserve">{{lowercase|title= test (Unix)}} ’‘’test’’’ is a [[command line interface|command-line]] utility found in [[Unix-like]] operating systems that evaluates [[Conditional (programming)|conditional expressions]]. ==Syntax== test ‘’expression’’ or [ ‘’expression’’ ] ==Description== The &lt;code&gt;test&lt;/code&gt; command in Unix evaluates the &lt;code&gt;expression&lt;/code&gt; parameter. In some shells such as [[FreeBSD]] &lt;code&gt;sh(1)&lt;/code&gt; it is a [[shell builtin]], even though the external version still exists. In the second form of the command, the &lt;code&gt;[ ]&lt;/code&gt; (brackets) must be surrounded by blank spaces. This is because &lt;code&gt;[&lt;/code&gt; is a program and [[POSIX]] compatible shells require a space between the program name and its arguments. One must test explicitly for file names in the C shell. File-name substitution ([[glob (programming)|globbing]]) causes the shell script to exit. == Arguments == The following arguments are used to construct this parameter: ’’‘-e’’’ FileName - FileName exists All remaining arguments return true if the object (file or string) exists, and the condition specified is true. ’’‘-b’’’ Filename - Returns a True exit value if the specified FileName exists and is a block special file ’’‘-c’’’ FileName - FileName is a [[character special file]] ’’‘-d’’’ FileName - FileName is a [[directory (file systems)|directory]] ’’‘-f’’’ FileName - FileName is a regular file ’’‘-g’’’ FileName - FileName’s Set [[Group identifier (Unix)|Group ID]] bit is set ’’‘-h’’’ FileName - FileName is a [[symbolic link]] ’’‘-k’’’ FileName - FileName’s sticky bit is set ’’‘-L’’’ FileName - FileName is a [[symbolic link]] ’’‘-p’’’ FileName - FileName is a [[named pipe]] (FIFO) ’’‘-r’’’ FileName - FileName is readable by the current process ’’‘-s’’’ FileName - FileName has a size greater than 0 ’’‘-t’’’ FileDescriptor - [[File descriptor|FileDescriptor]] is open and associated with a [[pseudo terminal|terminal]] ’’‘-u’’’ FileName - FileName’s Set [[User identifier (Unix)|User ID]] bit is set ’’‘-w’’’ FileName - FileName’s write flag is on. However, the FileName will not be writable on a read-only file system even if test indicates true ’’‘-x’’’ FileName - FileName’s [[Execution (computers)|execute]] flag is on If the specified file exists and is a directory, the &lt;code&gt;True&lt;/code&gt; exit value indicates that the current process has permission to change &lt;code&gt;cd&lt;/code&gt; into the directory. file1 ’’‘-nt’’’ file2 - file1 is newer than file2 file1 ’’‘-ot’’’ file2 - file1 is older than file2 file1 ’’‘-ef’’’ file2 - file1 is another name for file2 - ([[symbolic link]] or [[hard link]]) === String arguments === In [[Perl]], these sections are reversed: &lt;code&gt;eq&lt;/code&gt; is a string operator and &lt;code&gt;==&lt;/code&gt; is a numerical operator, and so on for the others. ’’‘-n’’’ String1 - the length of the String1 variable is nonzero ’’‘-z’’’ String1 - the length of the String1 variable is 0 (zero) String1 ’’‘=’’’ String2 - String1 and String2 variables are identical String1 ’’‘!=’’’ String2 - String1 and String2 variables are not identical String1 - String1 variable is not a null string === Number arguments === Integer1 ’’‘-eq’’’ Integer2 - Integer1 and Integer2 variables are [[algebra]]ically equal ’’‘-ne’’’ - not equal ’’‘-gt’’’ - greater than ’’‘-ge’’’ - greater or equal ’’‘-lt’’’ - less than ’’‘-le’’’ - less or equal === Operators === &lt;code&gt;test&lt;/code&gt; arguments can be combined with the following operators: ’’‘!’’’ - Unary negation operator ’’‘-a’’’ - Binary AND operator ’’‘-o’’’ - Binary OR operator (the &lt;code&gt;-a&lt;/code&gt; operator has higher precedence than the &lt;code&gt;-o&lt;/code&gt; operator) ’’‘(Expression)’’’ - Parentheses for grouping must be escaped with a backslash &lt;code&gt;&amp;lt;/code&gt; The &lt;code&gt;-a&lt;/code&gt; and &lt;code&gt;-o&lt;/code&gt; operators, along with parentheses for grouping, are XSI extensions&lt;ref&gt;[http://www.opengroup.org/onlinepubs/009695399/utilities/test.html IEEE Std 1003.1, 2004, documentation for &lt;code&gt;test&lt;/code&gt;]&lt;/ref&gt; and are therefore not portable. In portable shell scripts, the same effect may be achieved by connecting multiple invocations of &lt;code&gt;test&lt;/code&gt; together with the &lt;code&gt;&amp;&amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; operators and parentheses. ==Exit Status== This command returns the following exit values: ’‘’0’’’ - The Expression parameter is true ’‘’1’’’ - The Expression parameter is false or missing ’’‘&gt;1’’’ - An error occurred ==Examples== 1. To test whether a file is nonexistent or empty, type:&lt;!– touch(1) -s file True if file exists and has a size greater than zero. –&gt; &lt;source lang="bash"&gt; if test ! -s "$1" then echo $1 does not exist or is empty. fi &lt;/source&gt; If the file specified by the first positional parameter to the shell procedure, $1, does not exist or is of size 0, the test command displays the message. If $1 exists and has a size greater than 0, the test command displays nothing. Note: There must be a space between the -s function and the file name. The quotation marks around $1 ensure that the test works properly even if the value of $1 is a null string. If the quotation marks are omitted and $1 is the empty string, the test command displays the error message: test: argument expected. 2. To do a complex comparison, type: &lt;source lang="bash"&gt; if [ $# -lt 2 -o ! -e "$1" ] then exit fi &lt;/source&gt; If the shell procedure is given fewer than two positional parameters or the file specified by $1 does not exist, then the shell procedure exits. The special shell variable $# represents the number of positional parameters entered on the command line that starts this shell procedure. ==See also== </text></em>[[List of Unix utilities]] * [[Bourne shell]] * [[Korn shell|KornShell]]&lt;!– KornShell is the proper name as written by its author –&gt; * [[Z Shell]] * [[GNU]] &lt;tt&gt;[[Bash (Unix shell)|bash]]&lt;/tt&gt; * [[C shell]] * &lt;tt&gt;[[tcsh]]&lt;/tt&gt; * &lt;tt&gt;[[find]]&lt;/tt&gt; ==References== &lt;!–&lt;nowiki&gt; See http://en.wikipedia.org/wiki/Wikipedia:Footnotes for an explanation of how to generate footnotes using the &lt;ref&gt; and &lt;/ref&gt; tags, and the template below. &lt;/nowiki&gt;–&gt; &lt;references/&gt; {{Unix commands}} [[Category:Unix SUS2008 utilities]] [[Category:Conditional constructs]] <sha1>6brs4q3f4obygm6jejvcafone0ck2k9</sha1> </revision> <br>
####<br>
#### It’s still not displaying as a multiline chunk of text. How can I render it nicely as, let’s say XML output?</p>
</page></section>
<section id="this-is-a-sample-piece-of-content-returned-by-the-selectedxml-bit" class="level4">
<h4 class="anchored" data-anchor-id="this-is-a-sample-piece-of-content-returned-by-the-selectedxml-bit">This is a sample piece of content returned by the “selectedXml” bit:</h4>
</section>
<section id="section-1" class="level4">
<h4 class="anchored" data-anchor-id="section-1"></h4>
#### <page>
<title>
Test (Unix)
</title>
<p><ns>0</ns> <id>2491736</id> <revision> <id>629490168</id> <parentid>629490063</parentid> <timestamp>2014-10-13T21:13:12Z</timestamp> <contributor> <ip>2A02:580:B0ED:E300:9DBB:3B15:8A21:F31E</ip> </contributor> <comment>/* Description <em>/</em></comment><em> <model>wikitext</model> <format>text/x-wiki</format> <text xml:space="preserve">{{lowercase|title= test (Unix)}} ’‘’test’’’ is a [[command line interface|command-line]] utility found in [[Unix-like]] operating systems that evaluates [[Conditional (programming)|conditional expressions]]. ==Syntax== test ‘’expression’’ or [ ‘’expression’’ ] ==Description== The &lt;code&gt;test&lt;/code&gt; command in Unix evaluates the &lt;code&gt;expression&lt;/code&gt; parameter. In some shells such as [[FreeBSD]] &lt;code&gt;sh(1)&lt;/code&gt; it is a [[shell builtin]], even though the external version still exists. In the second form of the command, the &lt;code&gt;[ ]&lt;/code&gt; (brackets) must be surrounded by blank spaces. This is because &lt;code&gt;[&lt;/code&gt; is a program and [[POSIX]] compatible shells require a space between the program name and its arguments. One must test explicitly for file names in the C shell. File-name substitution ([[glob (programming)|globbing]]) causes the shell script to exit. == Arguments == The following arguments are used to construct this parameter: ’’‘-e’’’ FileName - FileName exists All remaining arguments return true if the object (file or string) exists, and the condition specified is true. ’’‘-b’’’ Filename - Returns a True exit value if the specified FileName exists and is a block special file ’’‘-c’’’ FileName - FileName is a [[character special file]] ’’‘-d’’’ FileName - FileName is a [[directory (file systems)|directory]] ’’‘-f’’’ FileName - FileName is a regular file ’’‘-g’’’ FileName - FileName’s Set [[Group identifier (Unix)|Group ID]] bit is set ’’‘-h’’’ FileName - FileName is a [[symbolic link]] ’’‘-k’’’ FileName - FileName’s sticky bit is set ’’‘-L’’’ FileName - FileName is a [[symbolic link]] ’’‘-p’’’ FileName - FileName is a [[named pipe]] (FIFO) ’’‘-r’’’ FileName - FileName is readable by the current process ’’‘-s’’’ FileName - FileName has a size greater than 0 ’’‘-t’’’ FileDescriptor - [[File descriptor|FileDescriptor]] is open and associated with a [[pseudo terminal|terminal]] ’’‘-u’’’ FileName - FileName’s Set [[User identifier (Unix)|User ID]] bit is set ’’‘-w’’’ FileName - FileName’s write flag is on. However, the FileName will not be writable on a read-only file system even if test indicates true ’’‘-x’’’ FileName - FileName’s [[Execution (computers)|execute]] flag is on If the specified file exists and is a directory, the &lt;code&gt;True&lt;/code&gt; exit value indicates that the current process has permission to change &lt;code&gt;cd&lt;/code&gt; into the directory. file1 ’’‘-nt’’’ file2 - file1 is newer than file2 file1 ’’‘-ot’’’ file2 - file1 is older than file2 file1 ’’‘-ef’’’ file2 - file1 is another name for file2 - ([[symbolic link]] or [[hard link]]) === String arguments === In [[Perl]], these sections are reversed: &lt;code&gt;eq&lt;/code&gt; is a string operator and &lt;code&gt;==&lt;/code&gt; is a numerical operator, and so on for the others. ’’‘-n’’’ String1 - the length of the String1 variable is nonzero ’’‘-z’’’ String1 - the length of the String1 variable is 0 (zero) String1 ’’‘=’’’ String2 - String1 and String2 variables are identical String1 ’’‘!=’’’ String2 - String1 and String2 variables are not identical String1 - String1 variable is not a null string === Number arguments === Integer1 ’’‘-eq’’’ Integer2 - Integer1 and Integer2 variables are [[algebra]]ically equal ’’‘-ne’’’ - not equal ’’‘-gt’’’ - greater than ’’‘-ge’’’ - greater or equal ’’‘-lt’’’ - less than ’’‘-le’’’ - less or equal === Operators === &lt;code&gt;test&lt;/code&gt; arguments can be combined with the following operators: ’’‘!’’’ - Unary negation operator ’’‘-a’’’ - Binary AND operator ’’‘-o’’’ - Binary OR operator (the &lt;code&gt;-a&lt;/code&gt; operator has higher precedence than the &lt;code&gt;-o&lt;/code&gt; operator) ’’‘(Expression)’’’ - Parentheses for grouping must be escaped with a backslash &lt;code&gt;&amp;lt;/code&gt; The &lt;code&gt;-a&lt;/code&gt; and &lt;code&gt;-o&lt;/code&gt; operators, along with parentheses for grouping, are XSI extensions&lt;ref&gt;[http://www.opengroup.org/onlinepubs/009695399/utilities/test.html IEEE Std 1003.1, 2004, documentation for &lt;code&gt;test&lt;/code&gt;]&lt;/ref&gt; and are therefore not portable. In portable shell scripts, the same effect may be achieved by connecting multiple invocations of &lt;code&gt;test&lt;/code&gt; together with the &lt;code&gt;&amp;&amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; operators and parentheses. ==Exit Status== This command returns the following exit values: ’‘’0’’’ - The Expression parameter is true ’‘’1’’’ - The Expression parameter is false or missing ’’‘&gt;1’’’ - An error occurred ==Examples== 1. To test whether a file is nonexistent or empty, type:&lt;!– touch(1) -s file True if file exists and has a size greater than zero. –&gt; &lt;source lang="bash"&gt; if test ! -s "$1" then echo $1 does not exist or is empty. fi &lt;/source&gt; If the file specified by the first positional parameter to the shell procedure, $1, does not exist or is of size 0, the test command displays the message. If $1 exists and has a size greater than 0, the test command displays nothing. Note: There must be a space between the -s function and the file name. The quotation marks around $1 ensure that the test works properly even if the value of $1 is a null string. If the quotation marks are omitted and $1 is the empty string, the test command displays the error message: test: argument expected. 2. To do a complex comparison, type: &lt;source lang="bash"&gt; if [ $# -lt 2 -o ! -e "$1" ] then exit fi &lt;/source&gt; If the shell procedure is given fewer than two positional parameters or the file specified by $1 does not exist, then the shell procedure exits. The special shell variable $# represents the number of positional parameters entered on the command line that starts this shell procedure. ==See also== </text></em>[[List of Unix utilities]] * [[Bourne shell]] * [[Korn shell|KornShell]]&lt;!– KornShell is the proper name as written by its author –&gt; * [[Z Shell]] * [[GNU]] &lt;tt&gt;[[Bash (Unix shell)|bash]]&lt;/tt&gt; * [[C shell]] * &lt;tt&gt;[[tcsh]]&lt;/tt&gt; * &lt;tt&gt;[[find]]&lt;/tt&gt; ==References== &lt;!–&lt;nowiki&gt; See http://en.wikipedia.org/wiki/Wikipedia:Footnotes for an explanation of how to generate footnotes using the &lt;ref&gt; and &lt;/ref&gt; tags, and the template below. &lt;/nowiki&gt;–&gt; &lt;references/&gt; {{Unix commands}} [[Category:Unix SUS2008 utilities]] [[Category:Conditional constructs]] <sha1>6brs4q3f4obygm6jejvcafone0ck2k9</sha1> </revision> <br>
####<br>
#### It’s still not displaying as a multiline chunk of text. How can I render it nicely as, let’s say XML output?<br>
&gt; http://www.opengroup.org/onlinepubs/009695399/utilities/test.html<br>
&gt; Add URL to the chat? (Y)es/(N)o/(A)ll/(S)kip all/(D)on’t ask again [Yes]: d<br>
&gt; http://en.wikipedia.org/wiki/Wikipedia:Footnotes<br>
&gt; Add URL to the chat? (Y)es/(N)o/(A)ll/(S)kip all/(D)on’t ask again [Yes]: s</p>
<p>To render the XML content nicely as multiline text with proper formatting, you can use a library like <code>react-syntax-highlighter</code> to display the XML with syntax highlighting. Here’s how you can modify the <code>Wiki.jsx</code> file to achieve this:</p>
<ol type="1">
<li><p>Install the <code>react-syntax-highlighter</code> package if you haven’t already:</p>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb49-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">npm</span> install react-syntax-highlighter</span></code></pre></div></li>
<li><p>Update the <code>Wiki.jsx</code> file to use the syntax highlighter:</p></li>
</ol>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb50-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> React<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> { useState<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> useRef } <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"react"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> { Container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Form<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> FormControl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ListGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Card } <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"react-bootstrap"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> { Prism <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> SyntaxHighlighter } <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"react-syntax-highlighter"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> { solarizedlight } <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"react-syntax-highlighter/dist/esm/styles/prism"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-5"></span>
<span id="cb50-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> Wiki <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb50-7">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> [query<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> setQuery] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useState</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-8">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> [results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> setResults] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useState</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-9">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> [selectedXml<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> setSelectedXml] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useState</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-10"></span>
<span id="cb50-11">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> abortControllerRef <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useRef</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-12">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> searchTimeout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-13"></span>
<span id="cb50-14">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> handleSearch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (e) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb50-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">target</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(value)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-17"></span>
<span id="cb50-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span>) {</span>
<span id="cb50-19">      abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abort</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-20">    }</span>
<span id="cb50-21"></span>
<span id="cb50-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (searchTimeout) {</span>
<span id="cb50-23">      <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">clearTimeout</span>(searchTimeout)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-24">    }</span>
<span id="cb50-25"></span>
<span id="cb50-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trim</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) {</span>
<span id="cb50-27">      searchTimeout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb50-28">        abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AbortController</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-29">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> { signal } <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span> {</span>
<span id="cb50-31">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`http://dgx:4444/offsets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb50-32">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">mode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cors"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb50-33">            signal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb50-34">          })</span>
<span id="cb50-35">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>((response) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>())</span>
<span id="cb50-36">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>((data) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb50-37">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>(data)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-38">            })</span>
<span id="cb50-39">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">catch</span>((error) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb50-40">              <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (error<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AbortError"</span>) {</span>
<span id="cb50-41">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error fetching search results:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> error)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-42">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-43">              }</span>
<span id="cb50-44">            })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-45">        } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">catch</span> (error) {</span>
<span id="cb50-46">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error fetching search results:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> error)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-47">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-48">        }</span>
<span id="cb50-49">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-50">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-51">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb50-52">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-53">    }</span>
<span id="cb50-54">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-55"></span>
<span id="cb50-56">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> handleResultClick <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> (name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> startByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> endByte) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb50-57">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span> {</span>
<span id="cb50-58">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`http://dgx:4444/xml`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb50-59">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">headers</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb50-60">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`bytes=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>startByte<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>endByte<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb50-61">        }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb50-62">      })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-63">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> xmlData <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-64">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(name)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-65">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(xmlData)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-66">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-67">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">catch</span> (error) {</span>
<span id="cb50-68">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error fetching XML data:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> error)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-69">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-70">    }</span>
<span id="cb50-71">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-72"></span>
<span id="cb50-73">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (</span>
<span id="cb50-74">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Container className<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wiki-search-container"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb50-75">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Form<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb50-76">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>FormControl</span>
<span id="cb50-77">          type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"search"</span></span>
<span id="cb50-78">          placeholder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Search"</span></span>
<span id="cb50-79">          className<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"me-2"</span></span>
<span id="cb50-80">          aria<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Search"</span></span>
<span id="cb50-81">          value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{query}</span>
<span id="cb50-82">          onChange<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{handleSearch}</span>
<span id="cb50-83">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/&gt;</span></span>
<span id="cb50-84">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>Form<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb50-85"></span>
<span id="cb50-86">      {results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> (</span>
<span id="cb50-87">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ListGroup className<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mt-3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb50-88">          {results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(([name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> startByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> endByte]) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> (</span>
<span id="cb50-89">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ListGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Item</span></span>
<span id="cb50-90">              key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>startByte<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>}</span>
<span id="cb50-91">              action</span>
<span id="cb50-92">              onClick<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">handleResultClick</span>(name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> startByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> endByte)}</span>
<span id="cb50-93">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb50-94">              {name}</span>
<span id="cb50-95">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>ListGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Item</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb50-96">          ))}</span>
<span id="cb50-97">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>ListGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb50-98">      )}</span>
<span id="cb50-99"></span>
<span id="cb50-100">      {selectedXml <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> (</span>
<span id="cb50-101">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Card className<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mt-3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb50-102">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Card<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Body</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb50-103">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>SyntaxHighlighter language<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xml"</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{solarizedlight}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb50-104">              {selectedXml}</span>
<span id="cb50-105">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>SyntaxHighlighter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb50-106">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>Card<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Body</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb50-107">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>Card<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb50-108">      )}</span>
<span id="cb50-109">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>Container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb50-110">  )<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-111">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-112"></span>
<span id="cb50-113"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">export</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">default</span> Wiki<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>This code uses <code>react-syntax-highlighter</code> to render the XML content with syntax highlighting, making it easier to read and visually appealing. You can choose different styles from the library to match your application’s theme.</p>
<blockquote class="blockquote">
<p>Tokens: 6.6k sent, 823 received. Cost: $0.02 message, $0.28 session.</p>
</blockquote>
</page></section>
<section id="please-make-that-change." class="level4">
<h4 class="anchored" data-anchor-id="please-make-that-change.">Please make that change.</h4>
<p>To render the XML content nicely with syntax highlighting, we will use the <code>react-syntax-highlighter</code> package. Here are the changes needed in <code>src/Wiki.jsx</code>:</p>
<p>First, ensure you have installed the <code>react-syntax-highlighter</code> package:</p>
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb51-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">npm</span> install react-syntax-highlighter</span></code></pre></div>
<p>Now, update the <code>src/Wiki.jsx</code> file:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb52-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb52-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> React<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> { useState<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> useRef } <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"react"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb52-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> React<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> { useState<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> useRef } <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"react"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> { Prism <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> SyntaxHighlighter } <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"react-syntax-highlighter"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> { solarizedlight } <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"react-syntax-highlighter/dist/esm/styles/prism"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb53-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb53-2">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>pre<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>{selectedXml}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>pre<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb53-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb53-4">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>SyntaxHighlighter language<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xml"</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{solarizedlight}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb53-5">              {selectedXml}</span>
<span id="cb53-6">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>SyntaxHighlighter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb53-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>These changes will render the XML content with syntax highlighting, making it more readable and visually appealing.</p>
<blockquote class="blockquote">
<p>Tokens: 9.7k sent, 221 received. Cost: $0.03 message, $0.31 session.<br>
Committing src/Wiki.jsx before applying edits.<br>
Commit 2daa847 feat: Add useRef import to Wiki component for future enhancements<br>
Applied edit to src/Wiki.jsx<br>
Commit 2882b76 feat: Add XML syntax highlighting in Wiki component using react-syntax-highlighter<br>
npm install react-syntax-highlighter<br>
Run shell command? (Y)es/(N)o/(D)on’t ask again [Yes]: n<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="under-the-search-box-add-a-component-of-some-sort-that-will-be-used-to-display-some-information-about-the-search-results-received.-e.g.-if-i-type-in-python-there-should-be-some-light-read-only-text-under-the-search-bar-that-initially-says-searching-for-python-when-results-are-received-the-text-should-say-received-results-for-python-with-n-changing-as-more-results-are-received." class="level4">
<h4 class="anchored" data-anchor-id="under-the-search-box-add-a-component-of-some-sort-that-will-be-used-to-display-some-information-about-the-search-results-received.-e.g.-if-i-type-in-python-there-should-be-some-light-read-only-text-under-the-search-bar-that-initially-says-searching-for-python-when-results-are-received-the-text-should-say-received-results-for-python-with-n-changing-as-more-results-are-received.">Under the search box, add a component of some sort that will be used to display some information about the search results received. E.g. if I type in “Python”, there should be some light read-only text under the search bar that initially says “Searching for ‘Python’…”, when results are received, the text should say “Received <n> results for ‘Python’…”, with N changing as more results are received.</n></h4>
<p>To add a component that displays information about the search results, we will update the <code>src/Wiki.jsx</code> file to include a new state variable for the search status message and update it accordingly during the search process.</p>
<p>Here are the changes:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb54-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb54-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> [selectedXml<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> setSelectedXml] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useState</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb54-4">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> [selectedXml<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> setSelectedXml] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useState</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> [searchStatus<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> setSearchStatus] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useState</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb55-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb55-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span>) {</span>
<span id="cb55-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb55-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Searching for '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'...`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb55-5">    </span>
<span id="cb55-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span>) {</span>
<span id="cb55-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb56-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb56-2">            })</span>
<span id="cb56-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb56-4">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Received </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> results for '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'...`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-5">            })</span>
<span id="cb56-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb57-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb57-2">      {results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> (</span>
<span id="cb57-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb57-4">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div className<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"search-status mt-2 text-muted"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb57-5">        {searchStatus}</span>
<span id="cb57-6">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb57-7"></span>
<span id="cb57-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>These changes will display a message under the search box indicating the current search status, updating as results are received.</p>
<blockquote class="blockquote">
<p>Tokens: 5.9k sent, 257 received. Cost: $0.02 message, $0.33 session.<br>
Applied edit to src/Wiki.jsx<br>
Commit 72544ab feat: Add search status display for user feedback during search process<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="update-the-statusline-to-capture-the-duration-it-took-e.g.-received-203-results-forpython-in-x.y-seconds." class="level4">
<h4 class="anchored" data-anchor-id="update-the-statusline-to-capture-the-duration-it-took-e.g.-received-203-results-forpython-in-x.y-seconds.">Update the statusline to capture the duration it took, e.g.&nbsp;“Received 203 results for”Python” in x.y seconds.”</h4>
<p>To capture the duration it took to receive the search results, we will update the <code>src/Wiki.jsx</code> file to measure the time taken for the fetch operation and include it in the status message.</p>
<p>Here are the changes:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb58-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb58-2">      searchTimeout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb58-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb58-4">      searchTimeout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb58-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> startTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">performance</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">now</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb59-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb59-2">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Received </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> results for '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'...`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb59-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb59-4">              <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> endTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">performance</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">now</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb59-5">              <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> duration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ((endTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> startTime) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toFixed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb59-6">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Received </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> results for '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">' in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>duration<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds.`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb59-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>These changes will update the status line to include the time taken to receive the search results.</p>
<blockquote class="blockquote">
<p>Tokens: 6.3k sent, 181 received. Cost: $0.02 message, $0.35 session.<br>
Applied edit to src/Wiki.jsx<br>
Commit 0487f16 feat: Update statusline to include duration of search results retrieval<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="if-there-is-no-text-in-the-search-box-hide-the-status-line." class="level4">
<h4 class="anchored" data-anchor-id="if-there-is-no-text-in-the-search-box-hide-the-status-line.">If there is no text in the search box, hide the status line.</h4>
<p>To hide the status line when there is no text in the search box, we can conditionally render the status line based on the <code>query</code> state. Here are the changes:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb60-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb60-2">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div className<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"search-status mt-2 text-muted"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb60-3">        {searchStatus}</span>
<span id="cb60-4">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb60-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb60-6">      {query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> (</span>
<span id="cb60-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div className<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"search-status mt-2 text-muted"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb60-8">          {searchStatus}</span>
<span id="cb60-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb60-10">      )}</span>
<span id="cb60-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>This change will ensure that the status line is only displayed when there is text in the search box.</p>
<blockquote class="blockquote">
<p>Tokens: 6.6k sent, 124 received. Cost: $0.02 message, $0.36 session.<br>
Applied edit to src/Wiki.jsx<br>
Commit 460f82b feat: Hide status line when search box is empty<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="review-the-search-bar-logic.-when-im-typing-fast-e.g.-if-i-type-trent-fast-where-each-character-is-definitely-being-typed-well-before-a-second-has-elapsed-the-app-is-still-dispatching-searches-for-each-keystroke.-i.e.-in-the-chrome-dev-console-i-can-see-that-200-fetch-requests-were-dispatched-for-tre-then-tren-then-trent.-we-should-be-waiting-for-at-least-a-second-to-see-if-there-has-been-any-more-typing-before-dispatching-a-fetch." class="level4">
<h4 class="anchored" data-anchor-id="review-the-search-bar-logic.-when-im-typing-fast-e.g.-if-i-type-trent-fast-where-each-character-is-definitely-being-typed-well-before-a-second-has-elapsed-the-app-is-still-dispatching-searches-for-each-keystroke.-i.e.-in-the-chrome-dev-console-i-can-see-that-200-fetch-requests-were-dispatched-for-tre-then-tren-then-trent.-we-should-be-waiting-for-at-least-a-second-to-see-if-there-has-been-any-more-typing-before-dispatching-a-fetch.">Review the search bar logic. When I’m typing fast, e.g.&nbsp;if I type Trent fast, where each character is definitely being typed well before a second has elapsed… the app is still dispatching searches for each keystroke. i.e.&nbsp;in the Chrome dev console I can see that 200 fetch requests were dispatched for ‘Tre’, then ‘Tren’, then ‘Trent’. We should be waiting for at least a second to see if there has been any more typing before dispatching a fetch.</h4>
<p>To ensure that the app waits for at least a second before dispatching a fetch request, we need to adjust the debounce logic in the <code>handleSearch</code> function. Specifically, we should clear the timeout and set a new one only if the user stops typing for a second.</p>
<p>Here are the changes:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb61-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb61-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Searching for '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'...`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-3">    </span>
<span id="cb61-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span>) {</span>
<span id="cb61-5">      abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abort</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Cancel any ongoing fetch requests</span></span>
<span id="cb61-6">    }</span>
<span id="cb61-7"></span>
<span id="cb61-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (searchTimeout) {</span>
<span id="cb61-9">      <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">clearTimeout</span>(searchTimeout)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-10">    }</span>
<span id="cb61-11"></span>
<span id="cb61-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trim</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) {</span>
<span id="cb61-13">      searchTimeout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb61-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> startTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">performance</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">now</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-15">        abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AbortController</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-16">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> { signal } <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span> {</span>
<span id="cb61-18">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`http://dgx:4444/offsets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb61-19">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">mode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cors"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb61-20">            signal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb61-21">          })</span>
<span id="cb61-22">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>((response) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>())</span>
<span id="cb61-23">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>((data) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb61-24">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>(data)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-25">              <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> endTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">performance</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">now</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-26">              <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> duration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ((endTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> startTime) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toFixed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-27">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Received </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> results for '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">' in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>duration<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds.`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-28">            })</span>
<span id="cb61-29">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">catch</span>((error) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb61-30">              <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (error<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AbortError"</span>) {</span>
<span id="cb61-31">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error fetching search results:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> error)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-32">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-33">              }</span>
<span id="cb61-34">            })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-35">        } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">catch</span> (error) {</span>
<span id="cb61-36">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error fetching search results:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> error)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-37">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-38">        }</span>
<span id="cb61-39">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-40">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clear selected XML when the search box is cleared</span></span>
<span id="cb61-41">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb61-42">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-43">    }</span>
<span id="cb61-44"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb61-45">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (searchTimeout) {</span>
<span id="cb61-46">      <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">clearTimeout</span>(searchTimeout)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-47">    }</span>
<span id="cb61-48"></span>
<span id="cb61-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trim</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) {</span>
<span id="cb61-50">      searchTimeout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb61-51">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Searching for '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'...`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-52"></span>
<span id="cb61-53">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span>) {</span>
<span id="cb61-54">          abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abort</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Cancel any ongoing fetch requests</span></span>
<span id="cb61-55">        }</span>
<span id="cb61-56"></span>
<span id="cb61-57">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> startTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">performance</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">now</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-58">        abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AbortController</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-59">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> { signal } <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-60">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span> {</span>
<span id="cb61-61">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`http://dgx:4444/offsets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb61-62">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">mode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cors"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb61-63">            signal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb61-64">          })</span>
<span id="cb61-65">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>((response) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>())</span>
<span id="cb61-66">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>((data) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb61-67">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>(data)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-68">              <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> endTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">performance</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">now</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-69">              <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> duration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ((endTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> startTime) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toFixed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-70">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Received </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> results for '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">' in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>duration<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds.`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-71">            })</span>
<span id="cb61-72">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">catch</span>((error) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb61-73">              <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (error<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AbortError"</span>) {</span>
<span id="cb61-74">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error fetching search results:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> error)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-75">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-76">              }</span>
<span id="cb61-77">            })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-78">        } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">catch</span> (error) {</span>
<span id="cb61-79">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error fetching search results:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> error)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-80">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-81">        }</span>
<span id="cb61-82">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-83">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb61-84">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-85">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb61-86">    }</span>
<span id="cb61-87">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clear selected XML when the search box is cleared</span></span>
<span id="cb61-88"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>This change ensures that the search request is only dispatched if the user stops typing for at least one second, reducing unnecessary fetch requests.</p>
<blockquote class="blockquote">
<p>Tokens: 6.9k sent, 694 received. Cost: $0.02 message, $0.39 session.<br>
Applied edit to src/Wiki.jsx<br>
Commit fb141da fix: Implement debounce logic for search requests to reduce fetch calls<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="ok-that-still-dispatches-calls-for-tre-tren-trent-cancels-all-three-of-them-then-dispatches-a-final-one-presumably-one-second-later-for-trent." class="level4">
<h4 class="anchored" data-anchor-id="ok-that-still-dispatches-calls-for-tre-tren-trent-cancels-all-three-of-them-then-dispatches-a-final-one-presumably-one-second-later-for-trent.">Ok that still dispatches calls for ‘Tre’, ‘Tren’, ‘Trent’, cancels all three of them, then dispatches a final one (presumably one second later) for ‘Trent’.</h4>
<p>To address the issue of multiple fetch requests being dispatched and canceled, we can improve the debounce logic by using a <code>useEffect</code> hook to manage the timeout. This will ensure that the fetch request is only dispatched after the user has stopped typing for a specified duration.</p>
<p>Here’s how you can implement this:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb62-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb62-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> React<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> { useState<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> useRef } <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"react"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb62-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> React<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> { useState<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> useRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> useEffect } <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"react"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb63-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb63-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> searchTimeout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-3"></span>
<span id="cb63-4">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> handleSearch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (e) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb63-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">target</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(value)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-7"></span>
<span id="cb63-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (searchTimeout) {</span>
<span id="cb63-9">      <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">clearTimeout</span>(searchTimeout)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-10">    }</span>
<span id="cb63-11"></span>
<span id="cb63-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trim</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) {</span>
<span id="cb63-13">      searchTimeout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb63-14">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Searching for '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'...`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-15"></span>
<span id="cb63-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span>) {</span>
<span id="cb63-17">          abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abort</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Cancel any ongoing fetch requests</span></span>
<span id="cb63-18">        }</span>
<span id="cb63-19"></span>
<span id="cb63-20">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> startTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">performance</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">now</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-21">        abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AbortController</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-22">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> { signal } <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span> {</span>
<span id="cb63-24">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`http://dgx:4444/offsets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb63-25">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">mode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cors"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb63-26">            signal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb63-27">          })</span>
<span id="cb63-28">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>((response) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>())</span>
<span id="cb63-29">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>((data) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb63-30">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>(data)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-31">              <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> endTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">performance</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">now</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-32">              <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> duration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ((endTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> startTime) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toFixed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-33">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Received </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> results for '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">' in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>duration<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds.`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-34">            })</span>
<span id="cb63-35">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">catch</span>((error) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb63-36">              <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (error<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AbortError"</span>) {</span>
<span id="cb63-37">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error fetching search results:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> error)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-38">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-39">              }</span>
<span id="cb63-40">            })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-41">        } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">catch</span> (error) {</span>
<span id="cb63-42">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error fetching search results:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> error)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-43">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-44">        }</span>
<span id="cb63-45">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-46">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb63-47">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-48">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-49">    }</span>
<span id="cb63-50">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clear selected XML when the search box is cleared</span></span>
<span id="cb63-51">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-52"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb63-53">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> handleSearch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (e) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb63-54">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">target</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-55">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clear selected XML when the search box is cleared</span></span>
<span id="cb63-56">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-57"></span>
<span id="cb63-58">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useEffect</span>(() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb63-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (query<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trim</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) {</span>
<span id="cb63-60">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-61">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-62">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-63">    }</span>
<span id="cb63-64"></span>
<span id="cb63-65">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Searching for '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>query<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'...`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-66"></span>
<span id="cb63-67">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span>) {</span>
<span id="cb63-68">      abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abort</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Cancel any ongoing fetch requests</span></span>
<span id="cb63-69">    }</span>
<span id="cb63-70"></span>
<span id="cb63-71">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> startTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">performance</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">now</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-72">    abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AbortController</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-73">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> { signal } <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> abortControllerRef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">current</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-74"></span>
<span id="cb63-75">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> fetchData <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb63-76">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span> {</span>
<span id="cb63-77">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`http://dgx:4444/offsets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>query<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb63-78">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">mode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cors"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb63-79">          signal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb63-80">        })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-81">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-82">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>(data)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-83">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> endTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">performance</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">now</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-84">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> duration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ((endTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> startTime) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toFixed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-85">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Received </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> results for '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>query<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">' in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>duration<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds.`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-86">      } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">catch</span> (error) {</span>
<span id="cb63-87">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (error<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AbortError"</span>) {</span>
<span id="cb63-88">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error fetching search results:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> error)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-89">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-90">        }</span>
<span id="cb63-91">      }</span>
<span id="cb63-92">    }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-93"></span>
<span id="cb63-94">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> timeoutId <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(fetchData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-95"></span>
<span id="cb63-96">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">clearTimeout</span>(timeoutId)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-97">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> [query])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb63-98"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>This refactoring uses <code>useEffect</code> to handle the debounce logic, ensuring that the fetch request is only dispatched after the user has stopped typing for one second. This should prevent unnecessary fetch requests and improve performance.</p>
<blockquote class="blockquote">
<p>Tokens: 6.9k sent, 787 received. Cost: $0.03 message, $0.41 session.<br>
Applied edit to src/Wiki.jsx<br>
Commit 9289f8d refactor: Improve debounce logic for search requests using useEffect<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="when-a-search-result-is-clicked-on-and-setqueryname-is-called-a-new-offset-search-is-being-dispatched.-this-shouldnt-happen.-the-text-of-the-search-bar-should-be-set-but-no-actual-query-should-be-made.-hopefully-this-could-be-done-by-maybe-something-like-setqueryname-textonlytrue-or-something." class="level4">
<h4 class="anchored" data-anchor-id="when-a-search-result-is-clicked-on-and-setqueryname-is-called-a-new-offset-search-is-being-dispatched.-this-shouldnt-happen.-the-text-of-the-search-bar-should-be-set-but-no-actual-query-should-be-made.-hopefully-this-could-be-done-by-maybe-something-like-setqueryname-textonlytrue-or-something.">When a search result is clicked on and <code>setQuery(name)</code> is called… a new offset search is being dispatched. This shouldn’t happen. The “text” of the search bar should be set, but no actual query should be made. Hopefully this could be done by maybe something like <code>setQuery(name, textOnly=true)</code> or something.</h4>
<p>To prevent a new search from being dispatched when setting the query text from a search result click, we can introduce a new state variable to control whether the search should be triggered. Here’s how you can implement this:</p>
<ol type="1">
<li>Add a new state variable <code>shouldSearch</code> to control when the search should be triggered.</li>
<li>Modify the <code>handleSearch</code> function to set <code>shouldSearch</code> to <code>true</code> when the user types in the search box.</li>
<li>Update the <code>useEffect</code> hook to only perform the search if <code>shouldSearch</code> is <code>true</code>.</li>
<li>Set <code>shouldSearch</code> to <code>false</code> when setting the query from a search result click.</li>
</ol>
<p>Here are the changes:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb64-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb64-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> [selectedXml<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> setSelectedXml] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useState</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb64-4">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> [selectedXml<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> setSelectedXml] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useState</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> [shouldSearch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> setShouldSearch] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useState</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb65-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb65-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">target</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb65-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb65-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">target</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb65-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setShouldSearch</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb65-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb66-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb66-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (query<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trim</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) {</span>
<span id="cb66-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb66-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>shouldSearch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> query<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trim</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) {</span>
<span id="cb66-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb67-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb67-2">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(xmlData)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb67-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb67-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(name)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Place the result's name into the search bar</span></span>
<span id="cb67-5">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setShouldSearch</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">false</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb67-6">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(xmlData)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb67-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>These changes ensure that the search is only triggered when the user types in the search box, and not when the query is set from a search result click.</p>
<blockquote class="blockquote">
<p>Tokens: 7.0k sent, 360 received. Cost: $0.02 message, $0.43 session.<br>
Applied edit to src/Wiki.jsx<br>
Commit 863cc96 feat: Prevent search dispatch when setting query from search result click<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="add-a-radio-button-with-two-states-xml-and-html-with-the-default-being-xml.-the-button-should-come-below-the-search-bar-before-the-status-line.-when-the-radio-button-is-set-to-xml-all-current-behavior-remains-the-same.-when-it-is-set-to-html-we-use-a-new-selectedhtml-component-and-the-url-is-httpdgx4444html-instead-of-httpdgx4444xml.-use-a-new-for-displaying-selectedhtml" class="level4">
<h4 class="anchored" data-anchor-id="add-a-radio-button-with-two-states-xml-and-html-with-the-default-being-xml.-the-button-should-come-below-the-search-bar-before-the-status-line.-when-the-radio-button-is-set-to-xml-all-current-behavior-remains-the-same.-when-it-is-set-to-html-we-use-a-new-selectedhtml-component-and-the-url-is-httpdgx4444html-instead-of-httpdgx4444xml.-use-a-new-for-displaying-selectedhtml">Add a radio button with two states, XML and HTML, with the default being XML. The button should come below the search bar, before the status line. When the radio button is set to XML, all current behavior remains the same. When it is set to HTML, we use a new selectedHtml component, and the URL is <code>http://dgx:4444/html</code> instead of <code>http://dgx:4444/xml</code>. Use a new <card> for displaying {selectedHtml &amp;&amp; …</card></h4>
<blockquote class="blockquote">
<p>http://dgx:4444/html<code>Add URL to the chat? (Y)es/(N)o/(A)ll/(S)kip all/(D)on't ask again [Yes]: n   http://dgx:4444/xml</code><br>
Add URL to the chat? (Y)es/(N)o/(A)ll/(S)kip all/(D)on’t ask again [Yes]: n</p>
</blockquote>
<p>To implement the requested changes, we need to update <code>src/Wiki.jsx</code> to:</p>
<ol type="1">
<li>Add a radio button group to toggle between XML and HTML.</li>
<li>Introduce a new state variable to track the selected format.</li>
<li>Modify the <code>handleResultClick</code> function to fetch data from the appropriate URL based on the selected format.</li>
<li>Render the selected content in a new <code>&lt;Card&gt;</code> for HTML.</li>
</ol>
<p>Here are the <em>SEARCH/REPLACE</em> blocks:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb68-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb68-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> { Container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Form<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> FormControl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ListGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Card } <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"react-bootstrap"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb68-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> { Container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Form<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> FormControl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ListGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Card<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> FormCheck } <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"react-bootstrap"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb69-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb69-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> [shouldSearch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> setShouldSearch] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useState</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb69-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb69-4">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> [format<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> setFormat] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useState</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"XML"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb69-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> [shouldSearch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> setShouldSearch] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useState</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb69-6">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> [selectedHtml<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> setSelectedHtml] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useState</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb69-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb70-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb70-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Handle item click and fetch XML data</span></span>
<span id="cb70-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb70-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Handle item click and fetch data based on selected format</span></span>
<span id="cb70-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb71-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb71-2">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`http://dgx:4444/xml`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb71-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb71-4">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"XML"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://dgx:4444/xml"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://dgx:4444/html"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb71-5">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(url<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb71-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb72-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb72-2">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> xmlData <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-3">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(name)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Place the result's name into the search bar</span></span>
<span id="cb72-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb72-5">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-6">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(name)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Place the result's name into the search bar</span></span>
<span id="cb72-7">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setShouldSearch</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">false</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-8">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"XML"</span>) {</span>
<span id="cb72-9">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(data)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-10">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedHtml</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-11">      } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb72-12">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedHtml</span>(data)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-13">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-14">      }</span>
<span id="cb72-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb73-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb73-2">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Form<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb73-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb73-4">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Form className<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mb-3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb73-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb74-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb74-2">      {query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> (</span>
<span id="cb74-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb74-4">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>FormCheck</span>
<span id="cb74-5">        type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"radio"</span></span>
<span id="cb74-6">        label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"XML"</span></span>
<span id="cb74-7">        name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"format"</span></span>
<span id="cb74-8">        id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xml-radio"</span></span>
<span id="cb74-9">        checked<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"XML"</span>}</span>
<span id="cb74-10">        onChange<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setFormat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"XML"</span>)}</span>
<span id="cb74-11">        className<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mt-2"</span></span>
<span id="cb74-12">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/&gt;</span></span>
<span id="cb74-13">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>FormCheck</span>
<span id="cb74-14">        type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"radio"</span></span>
<span id="cb74-15">        label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HTML"</span></span>
<span id="cb74-16">        name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"format"</span></span>
<span id="cb74-17">        id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"html-radio"</span></span>
<span id="cb74-18">        checked<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HTML"</span>}</span>
<span id="cb74-19">        onChange<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setFormat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HTML"</span>)}</span>
<span id="cb74-20">        className<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mb-2"</span></span>
<span id="cb74-21">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/&gt;</span></span>
<span id="cb74-22"></span>
<span id="cb74-23">      {query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> searchStatus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> (</span>
<span id="cb74-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb75-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb75-2">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>Container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb75-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb75-4">      {selectedHtml <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> (</span>
<span id="cb75-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Card className<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mt-3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb75-6">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Card<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Body</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb75-7">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div dangerouslySetInnerHTML<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{{ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">__html</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> selectedHtml }} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/&gt;</span></span>
<span id="cb75-8">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>Card<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Body</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb75-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>Card<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb75-10">      )}</span>
<span id="cb75-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>Container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb75-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>These changes will add a radio button group to toggle between XML and HTML formats, fetch data from the appropriate URL, and display the content accordingly.</p>
<blockquote class="blockquote">
<p>Tokens: 6.4k sent, 706 received. Cost: $0.02 message, $0.46 session.<br>
Committing src/Wiki.jsx before applying edits.<br>
Commit 2280058 style: Format search status and results list for better readability<br>
Applied edit to src/Wiki.jsx<br>
Commit 850857a feat: Add radio button to toggle between XML and HTML formats<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="make-sure-the-wiki-tab-is-always-activated-whenever-the-page-first-loads-or-reloads.-im-not-sure-if-this-should-be-handled-in-srcapp.jsx." class="level4">
<h4 class="anchored" data-anchor-id="make-sure-the-wiki-tab-is-always-activated-whenever-the-page-first-loads-or-reloads.-im-not-sure-if-this-should-be-handled-in-srcapp.jsx.">Make sure the ‘Wiki’ tab is always “activated” whenever the page first loads (or reloads). I’m not sure if this should be handled in src/App.jsx.</h4>
<p>To ensure the ‘Wiki’ tab is always activated when the page first loads or reloads, we need to set the <code>defaultActiveKey</code> to “wiki” in the <code>Tabs</code> component within <code>src/App.jsx</code>. Here is the necessary change:</p>
<p>src/App.jsx</p>
<div class="sourceCode" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb76-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb76-2">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Tabs defaultActiveKey<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stats"</span> id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"main-tabs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb76-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb76-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Tabs defaultActiveKey<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wiki"</span> id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"main-tabs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb76-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>This change will ensure that the ‘Wiki’ tab is the default active tab whenever the page is loaded.</p>
<blockquote class="blockquote">
<p>Tokens: 7.4k sent, 116 received. Cost: $0.02 message, $0.48 session.<br>
Committing src/App.jsx before applying edits.<br>
Commit 10b02e1 fix: Remove Stats tab from the main application view<br>
Applied edit to src/App.jsx<br>
Commit 61a843b feat: Set ‘Wiki’ tab as default active tab on page load<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="multi" class="level4">
<h4 class="anchored" data-anchor-id="multi">/multi</h4>
<blockquote class="blockquote">
<p>Multiline mode: Enabled. Enter inserts newline, Alt-Enter submits text</p>
</blockquote>
</section>
<section id="add-srcutils.jsx" class="level4">
<h4 class="anchored" data-anchor-id="add-srcutils.jsx">/add src/Utils.jsx</h4>
<blockquote class="blockquote">
<p>Added src/Utils.jsx to the chat</p>
</blockquote>
</section>
<section id="verify-if-srcutils.jsx-is-correct-i-am-using-it-as-a-jsx-module-for-helper-routines." class="level4">
<h4 class="anchored" data-anchor-id="verify-if-srcutils.jsx-is-correct-i-am-using-it-as-a-jsx-module-for-helper-routines.">Verify if src/Utils.jsx is correct; I am using it as a JSX module for helper routines.</h4>
<p>To ensure <code>src/Utils.jsx</code> is correctly set up as a JSX module for helper routines, we need to ensure it exports the <code>bytesToHuman</code> function. Here’s the necessary change:</p>
<p>src/Utils.jsx</p>
<div class="sourceCode" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb77-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb77-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bytesToHuman</span>(bytes) {</span>
<span id="cb77-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb77-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">export</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bytesToHuman</span>(bytes) {</span>
<span id="cb77-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>This change will export the <code>bytesToHuman</code> function, making it available for import in other modules.</p>
<blockquote class="blockquote">
<p>Tokens: 7.7k sent, 93 received. Cost: $0.02 message, $0.50 session.<br>
Committing src/Utils.jsx before applying edits.<br>
Commit 98a54f5 feat: Add Utils component for utility functions<br>
Applied edit to src/Utils.jsx<br>
Commit b7c8aec feat: Export bytesToHuman function from Utils module for usage in other files<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="alter-the-search-results-such-that-after-each-text-component-is-displayed-the-size-of-the-article-is-calculated-via-last-byte---first-byte-and-then-displayed-as-bytestohumansize-e.g.-if-the-search-result-item-ispython-programming-language-it-should-now-displaypython-programming-language-3.8-mb-assuming-3.8-mb-is-returned-by-the-bytestohuman-routine." class="level4">
<h4 class="anchored" data-anchor-id="alter-the-search-results-such-that-after-each-text-component-is-displayed-the-size-of-the-article-is-calculated-via-last-byte---first-byte-and-then-displayed-as-bytestohumansize-e.g.-if-the-search-result-item-ispython-programming-language-it-should-now-displaypython-programming-language-3.8-mb-assuming-3.8-mb-is-returned-by-the-bytestohuman-routine.">Alter the search results such that after each text component is displayed, the size of the article is calculated (via last byte - first byte), and then displayed as ” [{bytesToHuman(size)}]“, e.g.&nbsp;if the search result item is”Python (programming language)“, it should now display”Python (programming language) [3.8 MB]” (assuming “3.8 MB” is returned by the <code>bytesToHuman()</code> routine).</h4>
<p>To display the size of each article in the search results, we need to calculate the size using the difference between <code>endByte</code> and <code>startByte</code>, and then format it using the <code>bytesToHuman</code> function. Here’s how you can implement this:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb78-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb78-2">        {results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(([name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> startByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> endByte]) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> (</span>
<span id="cb78-3">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ListGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Item</span></span>
<span id="cb78-4">            key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>startByte<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>}</span>
<span id="cb78-5">            action</span>
<span id="cb78-6">            onClick<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">handleResultClick</span>(name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> startByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> endByte)}</span>
<span id="cb78-7">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb78-8">            {name}</span>
<span id="cb78-9">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>ListGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Item</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb78-10">        ))}</span>
<span id="cb78-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb78-12">        {results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(([name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> startByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> endByte]) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb78-13">          <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> endByte <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> startByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb78-14">          <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (</span>
<span id="cb78-15">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ListGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Item</span></span>
<span id="cb78-16">              key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>startByte<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>}</span>
<span id="cb78-17">              action</span>
<span id="cb78-18">              onClick<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">handleResultClick</span>(name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> startByte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> endByte)}</span>
<span id="cb78-19">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb78-20">              {name} [{<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bytesToHuman</span>(size)}]</span>
<span id="cb78-21">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;/</span>ListGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Item</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb78-22">          )<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb78-23">        })}</span>
<span id="cb78-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<blockquote class="blockquote">
<p>Tokens: 6.7k sent, 208 received. Cost: $0.02 message, $0.52 session.<br>
Committing src/Wiki.jsx before applying edits.<br>
Commit a64ef15 refactor: Improve code formatting and clean up unused components in Wiki.jsx<br>
Applied edit to src/Wiki.jsx<br>
Commit 2e5d371 feat: Display article size in search results using bytesToHuman function<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="add-additional-code-to-the-status-line-that-displays-the-following-after-an-xml-document-has-been-received-received-bytestohumancontent-length-in-x.yz-seconds.." class="level4">
<h4 class="anchored" data-anchor-id="add-additional-code-to-the-status-line-that-displays-the-following-after-an-xml-document-has-been-received-received-bytestohumancontent-length-in-x.yz-seconds..">Add additional code to the status line that displays the following after an XML document has been received: “Received {bytesToHuman(content-length)} in x.yz seconds.”.</h4>
<p>To display the content length in the status line after receiving an XML document, we need to update the <code>handleResultClick</code> function in <code>src/Wiki.jsx</code>. We’ll calculate the content length from the response headers and update the status message accordingly.</p>
<p>Here’s the necessary change:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb79" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb79-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb79-2">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-3">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setShouldSearch</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">false</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(name)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Place the result's name into the search bar</span></span>
<span id="cb79-5">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//setShouldSearch(true);</span></span>
<span id="cb79-6">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"XML"</span>) {</span>
<span id="cb79-7">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(data)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-8">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedHtml</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-9">      } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb79-10">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedHtml</span>(data)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-11">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-12">      }</span>
<span id="cb79-13">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clear results when an item is clicked</span></span>
<span id="cb79-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb79-15">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-16">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> contentLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">headers</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Content-Length"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-17">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> endTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">performance</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">now</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-18">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> duration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ((endTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> startTime) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toFixed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-19">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setShouldSearch</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">false</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-20">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setQuery</span>(name)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Place the result's name into the search bar</span></span>
<span id="cb79-21">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"XML"</span>) {</span>
<span id="cb79-22">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(data)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-23">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedHtml</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-24">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSearchStatus</span>(</span>
<span id="cb79-25">          <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Received </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bytesToHuman</span>(contentLength)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>duration<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds.`</span></span>
<span id="cb79-26">        )<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-27">      } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb79-28">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedHtml</span>(data)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-29">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setSelectedXml</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">null</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-30">      }</span>
<span id="cb79-31">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setResults</span>([])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clear results when an item is clicked</span></span>
<span id="cb79-32"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<blockquote class="blockquote">
<p>Tokens: 7.0k sent, 297 received. Cost: $0.02 message, $0.54 session.<br>
Applied edit to src/Wiki.jsx<br>
Commit be53a22 feat: Display content length and duration in status line after XML receipt<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="fix-this-error" class="level4">
<h4 class="anchored" data-anchor-id="fix-this-error">Fix this error:</h4>
</section>
<section id="eslint" class="level4">
<h4 class="anchored" data-anchor-id="eslint">[eslint]</h4>
</section>
<section id="srcwiki.jsx" class="level4">
<h4 class="anchored" data-anchor-id="srcwiki.jsx">src/Wiki.jsx</h4>
</section>
<section id="line-8736-starttime-is-not-defined-no-undef" class="level4">
<h4 class="anchored" data-anchor-id="line-8736-starttime-is-not-defined-no-undef">Line 87:36: ‘startTime’ is not defined no-undef</h4>
<p>To fix the error, we need to ensure that <code>startTime</code> is defined within the scope of the <code>handleResultClick</code> function. It seems like <code>startTime</code> was intended to be used to measure the duration of the fetch operation, but it wasn’t defined in the function. We should define <code>startTime</code> at the beginning of the <code>handleResultClick</code> function.</p>
<p>Here’s the change:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb80" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb80-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb80-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span> {</span>
<span id="cb80-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb80-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> startTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">performance</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">now</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb80-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span> {</span>
<span id="cb80-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<blockquote class="blockquote">
<p>Tokens: 7.5k sent, 108 received. Cost: $0.02 message, $0.56 session.<br>
Applied edit to src/Wiki.jsx<br>
Commit 14907ab fix: Define ‘startTime’ in handleResultClick to resolve no-undef error<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="change-the-selectedxml-style-so-that-the-lines-wrap." class="level4">
<h4 class="anchored" data-anchor-id="change-the-selectedxml-style-so-that-the-lines-wrap.">Change the selectedXml style so that the lines wrap.</h4>
<p>To enable line wrapping for the <code>selectedXml</code> content, we need to adjust the <code>SyntaxHighlighter</code> component’s style. We can achieve this by setting the <code>wrapLongLines</code> property to <code>true</code>.</p>
<p>Here’s the change:</p>
<p>src/Wiki.jsx</p>
<div class="sourceCode" id="cb81" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb81-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> SEARCH</span>
<span id="cb81-2">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>SyntaxHighlighter language<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xml"</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{solarizedlight}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb81-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=======</span></span>
<span id="cb81-4">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>SyntaxHighlighter language<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xml"</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{solarizedlight} wrapLongLines<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span>}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb81-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<blockquote class="blockquote">
<p>Tokens: 7.7k sent, 102 received. Cost: $0.02 message, $0.58 session.<br>
Committing src/Wiki.jsx before applying edits.<br>
Commit 083bfad refactor: Improve search status handling and conditionally render results<br>
Applied edit to src/Wiki.jsx<br>
Commit eee4498 feat: Enable line wrapping for selectedXml in SyntaxHighlighter component<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
<section id="that-didnt-appear-to-do-anything.-can-you-review-the-app.scss-or-app.css-and-see-if-anything-can-be-done-there" class="level4">
<h4 class="anchored" data-anchor-id="that-didnt-appear-to-do-anything.-can-you-review-the-app.scss-or-app.css-and-see-if-anything-can-be-done-there">That didn’t appear to do anything. Can you review the App.scss or App.css and see if anything can be done there?</h4>
<p>To improve the styling of the <code>selectedXml</code> content for better readability, we can adjust the CSS in <code>src/App.scss</code> to ensure proper line wrapping and spacing. Let’s add some styles to enhance the display of the XML content.</p>
<p>Here’s the <em>SEARCH/REPLACE</em> block for <code>src/App.scss</code>:</p>
<p>src/App.scss</p>
<div class="sourceCode" id="cb82" style="background: #f1f3f5;"><pre class="sourceCode scss code-with-copy"><code class="sourceCode scss"><span id="cb82-1">&lt;&lt;&lt;&lt;&lt;&lt;&lt; SEARCH</span>
<span id="cb82-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.wiki-search-container</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.list-group-item</span> {</span>
<span id="cb82-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">white-space</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">normal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allow text to wrap</span></span>
<span id="cb82-4">}</span>
<span id="cb82-5">=======</span>
<span id="cb82-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.wiki-search-container</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.list-group-item</span> {</span>
<span id="cb82-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">white-space</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">normal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allow text to wrap</span></span>
<span id="cb82-8">}</span>
<span id="cb82-9"></span>
<span id="cb82-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.wiki-search-container</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.card-body</span> {</span>
<span id="cb82-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">white-space</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">pre-wrap</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Preserve whitespace and wrap lines</span></span>
<span id="cb82-12">    word-wrap: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">break-word</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Break long words</span></span>
<span id="cb82-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">overflow-wrap</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">break-word</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ensure long words break</span></span>
<span id="cb82-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">line-height</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Improve readability with line height</span></span>
<span id="cb82-15">}</span>
<span id="cb82-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> REPLACE</span></code></pre></div>
<p>These changes will ensure that the XML content is displayed with proper line wrapping and spacing, making it easier to read.</p>
<blockquote class="blockquote">
<p>Tokens: 6.5k sent, 212 received. Cost: $0.02 message, $0.59 session.<br>
Applied edit to src/App.scss<br>
Commit 3cef238 style: Improve readability of selected XML content in App.scss<br>
You can use /undo to undo and discard each aider commit.</p>
</blockquote>
</section>
</section>
</section>
</div>
</div>
</div>
</section>
</section>
<section id="pytorch-deep-neural-networks-llms-and-andrej-karpathys-youtube-series" class="level2">
<h2 class="anchored" data-anchor-id="pytorch-deep-neural-networks-llms-and-andrej-karpathys-youtube-series">PyTorch, Deep Neural Networks, LLMs, and Andrej Karpathy’s YouTube Series</h2>
</section>
</section>
<section id="comments" class="level1">
<h1>Comments</h1>
<!-- vim:set ts=8 sw=2 sts=2 expandtab textwidth=79 -->


</section>

 ]]></description>
  <category>Python</category>
  <category>PyParallel</category>
  <category>Free-threading</category>
  <category>No-GIL</category>
  <category>PyTorch</category>
  <category>asyncio</category>
  <guid>https://trent.me/articles/from-pyparallel-to-python-free-threading/</guid>
  <pubDate>Mon, 10 Feb 2025 05:07:49 GMT</pubDate>
  <media:content url="https://trent.me/articles/from-pyparallel-to-python-free-threading/images/python-free-threading.png" medium="image" type="image/png" height="82" width="144"/>
</item>
</channel>
</rss>
